{
  "repo": "duckdb/duckdb",
  "pull_number": 15575,
  "instance_id": "duckdb__duckdb-15575",
  "issue_numbers": [
    "15526",
    "15526"
  ],
  "base_commit": "adc6f607a71b87da2d0a7550e90db623e9bea637",
  "patch": "diff --git a/src/execution/physical_plan/plan_cte.cpp b/src/execution/physical_plan/plan_cte.cpp\nindex 190cb9319bc7..9c6596279ca5 100644\n--- a/src/execution/physical_plan/plan_cte.cpp\n+++ b/src/execution/physical_plan/plan_cte.cpp\n@@ -24,7 +24,7 @@ unique_ptr<PhysicalOperator> PhysicalPlanGenerator::CreatePlan(LogicalMaterializ\n \tauto right = CreatePlan(*op.children[1]);\n \n \tunique_ptr<PhysicalCTE> cte;\n-\tcte = make_uniq<PhysicalCTE>(op.ctename, op.table_index, op.children[1]->types, std::move(left), std::move(right),\n+\tcte = make_uniq<PhysicalCTE>(op.ctename, op.table_index, right->types, std::move(left), std::move(right),\n \t                             op.estimated_cardinality);\n \tcte->working_table = working_table;\n \tcte->cte_scans = materialized_ctes[op.table_index];\n",
  "test_patch": "diff --git a/test/fuzzer/public/lateral_join_subquery.test b/test/fuzzer/public/lateral_join_subquery.test\nindex 30a2ce2f3acc..0c47325298d8 100644\n--- a/test/fuzzer/public/lateral_join_subquery.test\n+++ b/test/fuzzer/public/lateral_join_subquery.test\n@@ -12,3 +12,6 @@ statement error\n FROM t1 INNER JOIN (SELECT t1.c1) ON (SELECT 42);\n ----\n Subqueries are not supported in LATERAL join conditions\n+\n+statement ok\n+SELECT  c01 from values('string') as _(c01), LATERAL ( WITH ta02 AS MATERIALIZED ( SELECT 'string' ) ( SELECT 'string' ) INTERSECT ALL ( SELECT 'string' ) );\n",
  "problem_statement": "DuckDB Internal Error: types == input.GetTypes()\n### What happens?\r\n\r\nThe latest version of the DuckDB (latest main: v1.1.4-dev3916 13ff921d7c and released version v1.1.3 19864453f7) triggers Internal Error when running the following SQL statement: \r\n\r\n```sql\r\nCREATE TABLE v00 AS ( SELECT 'string' ); \r\nSELECT DISTINCT 'string' AS c01 FROM v00, LATERAL ( WITH ta02 AS MATERIALIZED ( SELECT 'string' ) ( SELECT 'string' ) INTERSECT ALL ( SELECT 'string' ) );\r\n```\r\n\r\nHere is the stack trace from (v1.1.4-dev3916 13ff921d7c)\r\n\r\n```\r\nINTERNAL Error: Assertion triggered in file \"/home/duckdb/duckdb/src/common/types/column/column_data_collection.cpp\" on line 794: types == input.GetTypes()\r\n\r\n#0  duckdb::InternalException::InternalException (this=0xffff80002b80, Python Exception <class 'gdb.error'> There is no member named _M_dataplus.:\r\nmsg=) at /home/duckdb/duckdb/src/common/exception.cpp:320\r\n#1  0x00000000004f0950 in duckdb::InternalException::InternalException<unsigned long, unsigned long> (this=0xffff80002b80, Python Exception <class 'gdb.error'> There is no member named _M_dataplus.:\r\nmsg=, params=1, params=1)\r\n    at ../../src/include/duckdb/common/exception.hpp:313\r\n#2  duckdb::vector<duckdb::Vector, true>::AssertIndexInBounds (index=1, size=1) at ../../src/include/duckdb/common/vector.hpp:35\r\n#3  0x0000000000a02f60 in duckdb::vector<duckdb::Vector, true>::get<true> (this=0xffff80000f88, __n=1) at ../../src/include/duckdb/common/vector.hpp:62\r\n#4  duckdb::vector<duckdb::Vector, true>::operator[] (this=0xffff80000f88, __n=1) at ../../src/include/duckdb/common/vector.hpp:76\r\n#5  duckdb::ColumnDataCollection::Append (this=0xffff78000c50, state=..., input=...)\r\n    at /home/duckdb/duckdb/src/common/types/column/column_data_collection.cpp:806\r\n#6  0x000000000454df74 in duckdb::PhysicalCrossProduct::Sink (this=<optimized out>, context=..., chunk=..., input=...)\r\n    at /home/duckdb/duckdb/src/execution/operator/join/physical_cross_product.cpp:38\r\n#7  0x0000000001ac48c8 in duckdb::PipelineExecutor::Sink (this=0xffff80000e60, chunk=..., input=...)\r\n    at /home/duckdb/duckdb/src/parallel/pipeline_executor.cpp:521\r\n#8  duckdb::PipelineExecutor::ExecutePushInternal (this=0xffff80000e60, input=..., chunk_budget=..., initial_idx=1)\r\n    at /home/duckdb/duckdb/src/parallel/pipeline_executor.cpp:332\r\n#9  0x0000000001ac3858 in duckdb::PipelineExecutor::TryFlushCachingOperators (this=0xffff80000e60, chunk_budget=...)\r\n    at /home/duckdb/duckdb/src/parallel/pipeline_executor.cpp:94\r\n#10 0x0000000001ab4710 in duckdb::PipelineExecutor::Execute (this=0xffff80000e60, max_chunks=<optimized out>)\r\n    at /home/duckdb/duckdb/src/parallel/pipeline_executor.cpp:211\r\n#11 0x0000000001ab2994 in duckdb::PipelineExecutor::Execute (this=0xffff80000e60) at /home/duckdb/duckdb/src/parallel/pipeline_executor.cpp:278\r\n#12 duckdb::PipelineTask::ExecuteTask (this=0xffff7c000d90, mode=duckdb::TaskExecutionMode::PROCESS_ALL)\r\n    at /home/duckdb/duckdb/src/parallel/pipeline.cpp:51\r\n#13 0x0000000001a9680c in duckdb::ExecutorTask::Execute (this=0xffff7c000d90, mode=duckdb::TaskExecutionMode::PROCESS_ALL)\r\n    at /home/duckdb/duckdb/src/parallel/executor_task.cpp:49\r\n#14 0x0000000001ad2fd0 in duckdb::TaskScheduler::ExecuteForever (this=0x3a174910, marker=0x3a207060)\r\n    at /home/duckdb/duckdb/src/parallel/task_scheduler.cpp:189\r\n#15 0x0000ffff9b760f9c in ?? () from /lib/aarch64-linux-gnu/libstdc++.so.6\r\n#16 0x0000ffff9b880624 in start_thread (arg=0xffff9b760f80) at pthread_create.c:477\r\n#17 0x0000ffff9b52362c in thread_start () at ../sysdeps/unix/sysv/linux/aarch64/clone.S:78\r\n```\r\n\r\n### To Reproduce\r\n\r\n1. Clone the DuckDB Git from the official repo.\r\n2. Checkout to the latest main (v1.1.4-dev3916 13ff921d7c).\r\n3. Compile the DuckDB binary by using `make debug`.\r\n4. Run the compiled DuckDB and input the following SQL: \r\n\r\n```sql\r\nCREATE TABLE v00 AS ( SELECT 'string' ); \r\nSELECT DISTINCT 'string' AS c01 FROM v00, LATERAL ( WITH ta02 AS MATERIALIZED ( SELECT 'string' ) ( SELECT 'string' ) INTERSECT ALL ( SELECT 'string' ) );\r\n```\r\n\r\n### OS:\r\n\r\nUbuntu 24.04 LTS\r\n\r\n### DuckDB Version:\r\n\r\nv1.1.4-dev3916 13ff921d7c\r\n\r\n### DuckDB Client:\r\n\r\ncli\r\n\r\n### Hardware:\r\n\r\n_No response_\r\n\r\n### Full Name:\r\n\r\nYu Liang\r\n\r\n### Affiliation:\r\n\r\nThe Pennsylvania State University\r\n\r\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\r\n\r\nI have tested with a stable release\r\n\r\n### Did you include all relevant data sets for reproducing the issue?\r\n\r\nYes\r\n\r\n### Did you include all code required to reproduce the issue?\r\n\r\n- [X] Yes, I have\r\n\r\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\r\n\r\n- [X] Yes, I have\nDuckDB Internal Error: types == input.GetTypes()\n### What happens?\r\n\r\nThe latest version of the DuckDB (latest main: v1.1.4-dev3916 13ff921d7c and released version v1.1.3 19864453f7) triggers Internal Error when running the following SQL statement: \r\n\r\n```sql\r\nCREATE TABLE v00 AS ( SELECT 'string' ); \r\nSELECT DISTINCT 'string' AS c01 FROM v00, LATERAL ( WITH ta02 AS MATERIALIZED ( SELECT 'string' ) ( SELECT 'string' ) INTERSECT ALL ( SELECT 'string' ) );\r\n```\r\n\r\nHere is the stack trace from (v1.1.4-dev3916 13ff921d7c)\r\n\r\n```\r\nINTERNAL Error: Assertion triggered in file \"/home/duckdb/duckdb/src/common/types/column/column_data_collection.cpp\" on line 794: types == input.GetTypes()\r\n\r\n#0  duckdb::InternalException::InternalException (this=0xffff80002b80, Python Exception <class 'gdb.error'> There is no member named _M_dataplus.:\r\nmsg=) at /home/duckdb/duckdb/src/common/exception.cpp:320\r\n#1  0x00000000004f0950 in duckdb::InternalException::InternalException<unsigned long, unsigned long> (this=0xffff80002b80, Python Exception <class 'gdb.error'> There is no member named _M_dataplus.:\r\nmsg=, params=1, params=1)\r\n    at ../../src/include/duckdb/common/exception.hpp:313\r\n#2  duckdb::vector<duckdb::Vector, true>::AssertIndexInBounds (index=1, size=1) at ../../src/include/duckdb/common/vector.hpp:35\r\n#3  0x0000000000a02f60 in duckdb::vector<duckdb::Vector, true>::get<true> (this=0xffff80000f88, __n=1) at ../../src/include/duckdb/common/vector.hpp:62\r\n#4  duckdb::vector<duckdb::Vector, true>::operator[] (this=0xffff80000f88, __n=1) at ../../src/include/duckdb/common/vector.hpp:76\r\n#5  duckdb::ColumnDataCollection::Append (this=0xffff78000c50, state=..., input=...)\r\n    at /home/duckdb/duckdb/src/common/types/column/column_data_collection.cpp:806\r\n#6  0x000000000454df74 in duckdb::PhysicalCrossProduct::Sink (this=<optimized out>, context=..., chunk=..., input=...)\r\n    at /home/duckdb/duckdb/src/execution/operator/join/physical_cross_product.cpp:38\r\n#7  0x0000000001ac48c8 in duckdb::PipelineExecutor::Sink (this=0xffff80000e60, chunk=..., input=...)\r\n    at /home/duckdb/duckdb/src/parallel/pipeline_executor.cpp:521\r\n#8  duckdb::PipelineExecutor::ExecutePushInternal (this=0xffff80000e60, input=..., chunk_budget=..., initial_idx=1)\r\n    at /home/duckdb/duckdb/src/parallel/pipeline_executor.cpp:332\r\n#9  0x0000000001ac3858 in duckdb::PipelineExecutor::TryFlushCachingOperators (this=0xffff80000e60, chunk_budget=...)\r\n    at /home/duckdb/duckdb/src/parallel/pipeline_executor.cpp:94\r\n#10 0x0000000001ab4710 in duckdb::PipelineExecutor::Execute (this=0xffff80000e60, max_chunks=<optimized out>)\r\n    at /home/duckdb/duckdb/src/parallel/pipeline_executor.cpp:211\r\n#11 0x0000000001ab2994 in duckdb::PipelineExecutor::Execute (this=0xffff80000e60) at /home/duckdb/duckdb/src/parallel/pipeline_executor.cpp:278\r\n#12 duckdb::PipelineTask::ExecuteTask (this=0xffff7c000d90, mode=duckdb::TaskExecutionMode::PROCESS_ALL)\r\n    at /home/duckdb/duckdb/src/parallel/pipeline.cpp:51\r\n#13 0x0000000001a9680c in duckdb::ExecutorTask::Execute (this=0xffff7c000d90, mode=duckdb::TaskExecutionMode::PROCESS_ALL)\r\n    at /home/duckdb/duckdb/src/parallel/executor_task.cpp:49\r\n#14 0x0000000001ad2fd0 in duckdb::TaskScheduler::ExecuteForever (this=0x3a174910, marker=0x3a207060)\r\n    at /home/duckdb/duckdb/src/parallel/task_scheduler.cpp:189\r\n#15 0x0000ffff9b760f9c in ?? () from /lib/aarch64-linux-gnu/libstdc++.so.6\r\n#16 0x0000ffff9b880624 in start_thread (arg=0xffff9b760f80) at pthread_create.c:477\r\n#17 0x0000ffff9b52362c in thread_start () at ../sysdeps/unix/sysv/linux/aarch64/clone.S:78\r\n```\r\n\r\n### To Reproduce\r\n\r\n1. Clone the DuckDB Git from the official repo.\r\n2. Checkout to the latest main (v1.1.4-dev3916 13ff921d7c).\r\n3. Compile the DuckDB binary by using `make debug`.\r\n4. Run the compiled DuckDB and input the following SQL: \r\n\r\n```sql\r\nCREATE TABLE v00 AS ( SELECT 'string' ); \r\nSELECT DISTINCT 'string' AS c01 FROM v00, LATERAL ( WITH ta02 AS MATERIALIZED ( SELECT 'string' ) ( SELECT 'string' ) INTERSECT ALL ( SELECT 'string' ) );\r\n```\r\n\r\n### OS:\r\n\r\nUbuntu 24.04 LTS\r\n\r\n### DuckDB Version:\r\n\r\nv1.1.4-dev3916 13ff921d7c\r\n\r\n### DuckDB Client:\r\n\r\ncli\r\n\r\n### Hardware:\r\n\r\n_No response_\r\n\r\n### Full Name:\r\n\r\nYu Liang\r\n\r\n### Affiliation:\r\n\r\nThe Pennsylvania State University\r\n\r\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\r\n\r\nI have tested with a stable release\r\n\r\n### Did you include all relevant data sets for reproducing the issue?\r\n\r\nYes\r\n\r\n### Did you include all code required to reproduce the issue?\r\n\r\n- [X] Yes, I have\r\n\r\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\r\n\r\n- [X] Yes, I have\n",
  "hints_text": "\n",
  "created_at": "2025-01-07T08:09:18Z"
}