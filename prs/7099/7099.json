{
  "repo": "duckdb/duckdb",
  "pull_number": 7099,
  "instance_id": "duckdb__duckdb-7099",
  "issue_numbers": [
    "7098"
  ],
  "base_commit": "f429595834151fca0772436720c4cc60ff4af214",
  "patch": "diff --git a/extension/tpch/dbgen/build.cpp b/extension/tpch/dbgen/build.cpp\nindex 330bddf61b8a..8d03b0f362ab 100644\n--- a/extension/tpch/dbgen/build.cpp\n+++ b/extension/tpch/dbgen/build.cpp\n@@ -174,7 +174,8 @@ long mk_order(DSS_HUGE index, order_t *o, DBGenContext *ctx, long upd_num) {\n \t\trprice = rpb_routine(o->l[lcnt].partkey);\n \t\tRANDOM(supp_num, 0, 3, &ctx->Seed[L_SKEY_SD]);\n \t\tPART_SUPP_BRIDGE(o->l[lcnt].suppkey, o->l[lcnt].partkey, supp_num);\n-\t\to->l[lcnt].eprice = rprice * o->l[lcnt].quantity;\n+\t\to->l[lcnt].quantity *= 100;\n+\t\to->l[lcnt].eprice = rprice * o->l[lcnt].quantity / 100;\n \n \t\to->totalprice += ((o->l[lcnt].eprice * ((long)100 - o->l[lcnt].discount)) / (long)PENNIES) *\n \t\t                 ((long)100 + o->l[lcnt].tax) / (long)PENNIES;\ndiff --git a/extension/tpch/dbgen/dbgen.cpp b/extension/tpch/dbgen/dbgen.cpp\nindex e9f52febabc6..86ce9ae936cb 100644\n--- a/extension/tpch/dbgen/dbgen.cpp\n+++ b/extension/tpch/dbgen/dbgen.cpp\n@@ -94,7 +94,7 @@ static void append_line(order_t *o, tpch_append_information *info) {\n \t\t// l_linenumber\n \t\tappend_value(append_info, o->l[i].lcnt);\n \t\t// l_quantity\n-\t\tappend_value(append_info, o->l[i].quantity);\n+\t\tappend_decimal(append_info, o->l[i].quantity);\n \t\t// l_extendedprice\n \t\tappend_decimal(append_info, o->l[i].eprice);\n \t\t// l_discount\n@@ -408,7 +408,7 @@ const char *LineitemInfo::Columns[] = {\"l_orderkey\",    \"l_partkey\",       \"l_su\n                                        \"l_receiptdate\", \"l_shipinstruct\",  \"l_shipmode\", \"l_comment\"};\n const LogicalType LineitemInfo::Types[] = {\n     LogicalType(LogicalTypeId::INTEGER), LogicalType(LogicalTypeId::INTEGER), LogicalType(LogicalTypeId::INTEGER),\n-    LogicalType(LogicalTypeId::INTEGER), LogicalType(LogicalTypeId::INTEGER), LogicalType::DECIMAL(15, 2),\n+    LogicalType(LogicalTypeId::INTEGER), LogicalType::DECIMAL(15, 2),         LogicalType::DECIMAL(15, 2),\n     LogicalType::DECIMAL(15, 2),         LogicalType::DECIMAL(15, 2),         LogicalType(LogicalTypeId::VARCHAR),\n     LogicalType(LogicalTypeId::VARCHAR), LogicalType(LogicalTypeId::DATE),    LogicalType(LogicalTypeId::DATE),\n     LogicalType(LogicalTypeId::DATE),    LogicalType(LogicalTypeId::VARCHAR), LogicalType(LogicalTypeId::VARCHAR),\n",
  "test_patch": "diff --git a/test/api/serialized_plans/serialized_plans.binary b/test/api/serialized_plans/serialized_plans.binary\nindex dd555ec63f7b..a9f14e6fdfb9 100644\nBinary files a/test/api/serialized_plans/serialized_plans.binary and b/test/api/serialized_plans/serialized_plans.binary differ\ndiff --git a/test/sql/json/test_json_tpch_sf001.test_slow b/test/sql/json/test_json_tpch_sf001.test_slow\nindex be27899bcead..21f597447674 100644\n--- a/test/sql/json/test_json_tpch_sf001.test_slow\n+++ b/test/sql/json/test_json_tpch_sf001.test_slow\n@@ -24,12 +24,12 @@ create table lineitem_j as\n query T\n select json_structure(j) from lineitem_j limit 1\n ----\n-{\"l_orderkey\":\"UBIGINT\",\"l_partkey\":\"UBIGINT\",\"l_suppkey\":\"UBIGINT\",\"l_linenumber\":\"UBIGINT\",\"l_quantity\":\"UBIGINT\",\"l_extendedprice\":\"DOUBLE\",\"l_discount\":\"DOUBLE\",\"l_tax\":\"DOUBLE\",\"l_returnflag\":\"VARCHAR\",\"l_linestatus\":\"VARCHAR\",\"l_shipdate\":\"VARCHAR\",\"l_commitdate\":\"VARCHAR\",\"l_receiptdate\":\"VARCHAR\",\"l_shipinstruct\":\"VARCHAR\",\"l_shipmode\":\"VARCHAR\",\"l_comment\":\"VARCHAR\"}\n+{\"l_orderkey\":\"UBIGINT\",\"l_partkey\":\"UBIGINT\",\"l_suppkey\":\"UBIGINT\",\"l_linenumber\":\"UBIGINT\",\"l_quantity\":\"DOUBLE\",\"l_extendedprice\":\"DOUBLE\",\"l_discount\":\"DOUBLE\",\"l_tax\":\"DOUBLE\",\"l_returnflag\":\"VARCHAR\",\"l_linestatus\":\"VARCHAR\",\"l_shipdate\":\"VARCHAR\",\"l_commitdate\":\"VARCHAR\",\"l_receiptdate\":\"VARCHAR\",\"l_shipinstruct\":\"VARCHAR\",\"l_shipmode\":\"VARCHAR\",\"l_comment\":\"VARCHAR\"}\n \n # transform the structure back to what it was and verify it is the same as on the original lineitem table\n query IIIIIIIIIIIII nosort q0\n with transformed as (\n-    select json_transform(j, '{\"l_orderkey\":\"INTEGER\",\"l_partkey\":\"INTEGER\",\"l_suppkey\":\"INTEGER\",\"l_linenumber\":\"INTEGER\",\"l_quantity\":\"INTEGER\",\"l_extendedprice\":\"DECIMAL(15,2)\",\"l_discount\":\"DECIMAL(15,2)\",\"l_tax\":\"DECIMAL(15,2)\",\"l_returnflag\":\"VARCHAR\",\"l_linestatus\":\"VARCHAR\",\"l_shipdate\":\"DATE\",\"l_commitdate\":\"DATE\",\"l_receiptdate\":\"DATE\",\"l_shipinstruct\":\"VARCHAR\",\"l_shipmode\":\"VARCHAR\",\"l_comment\":\"VARCHAR\"}') as j\n+    select json_transform(j, '{\"l_orderkey\":\"INTEGER\",\"l_partkey\":\"INTEGER\",\"l_suppkey\":\"INTEGER\",\"l_linenumber\":\"INTEGER\",\"l_quantity\":\"DECIMAL(15,2)\",\"l_extendedprice\":\"DECIMAL(15,2)\",\"l_discount\":\"DECIMAL(15,2)\",\"l_tax\":\"DECIMAL(15,2)\",\"l_returnflag\":\"VARCHAR\",\"l_linestatus\":\"VARCHAR\",\"l_shipdate\":\"DATE\",\"l_commitdate\":\"DATE\",\"l_receiptdate\":\"DATE\",\"l_shipinstruct\":\"VARCHAR\",\"l_shipmode\":\"VARCHAR\",\"l_comment\":\"VARCHAR\"}') as j\n     from lineitem_j\n )\n select j.l_orderkey,j.l_partkey,j.l_suppkey,j.l_linenumber,j.l_quantity,j.l_extendedprice,j.l_discount,j.l_tax,\n@@ -41,7 +41,7 @@ order by all\n # run TPCH-Q1 straight on JSON\n query IIIIIIIIII\n with transformed as (\n-    select json_transform(j, '{\"l_orderkey\":\"INTEGER\",\"l_partkey\":\"INTEGER\",\"l_suppkey\":\"INTEGER\",\"l_linenumber\":\"INTEGER\",\"l_quantity\":\"INTEGER\",\"l_extendedprice\":\"DECIMAL(15,2)\",\"l_discount\":\"DECIMAL(15,2)\",\"l_tax\":\"DECIMAL(15,2)\",\"l_returnflag\":\"VARCHAR\",\"l_linestatus\":\"VARCHAR\",\"l_shipdate\":\"DATE\",\"l_commitdate\":\"DATE\",\"l_receiptdate\":\"DATE\",\"l_shipinstruct\":\"VARCHAR\",\"l_shipmode\":\"VARCHAR\",\"l_comment\":\"VARCHAR\"}') as j\n+    select json_transform(j, '{\"l_orderkey\":\"INTEGER\",\"l_partkey\":\"INTEGER\",\"l_suppkey\":\"INTEGER\",\"l_linenumber\":\"INTEGER\",\"l_quantity\":\"DECIMAL(15,2)\",\"l_extendedprice\":\"DECIMAL(15,2)\",\"l_discount\":\"DECIMAL(15,2)\",\"l_tax\":\"DECIMAL(15,2)\",\"l_returnflag\":\"VARCHAR\",\"l_linestatus\":\"VARCHAR\",\"l_shipdate\":\"DATE\",\"l_commitdate\":\"DATE\",\"l_receiptdate\":\"DATE\",\"l_shipinstruct\":\"VARCHAR\",\"l_shipmode\":\"VARCHAR\",\"l_comment\":\"VARCHAR\"}') as j\n     from lineitem_j\n )\n SELECT\ndiff --git a/test/sql/json/test_json_tpch_sf01.test_slow b/test/sql/json/test_json_tpch_sf01.test_slow\nindex 5d1ed775e660..5d760c3bb36d 100644\n--- a/test/sql/json/test_json_tpch_sf01.test_slow\n+++ b/test/sql/json/test_json_tpch_sf01.test_slow\n@@ -24,12 +24,12 @@ create table lineitem_j as\n query T\n select json_structure(j) from lineitem_j limit 1\n ----\n-{\"l_orderkey\":\"UBIGINT\",\"l_partkey\":\"UBIGINT\",\"l_suppkey\":\"UBIGINT\",\"l_linenumber\":\"UBIGINT\",\"l_quantity\":\"UBIGINT\",\"l_extendedprice\":\"DOUBLE\",\"l_discount\":\"DOUBLE\",\"l_tax\":\"DOUBLE\",\"l_returnflag\":\"VARCHAR\",\"l_linestatus\":\"VARCHAR\",\"l_shipdate\":\"VARCHAR\",\"l_commitdate\":\"VARCHAR\",\"l_receiptdate\":\"VARCHAR\",\"l_shipinstruct\":\"VARCHAR\",\"l_shipmode\":\"VARCHAR\",\"l_comment\":\"VARCHAR\"}\n+{\"l_orderkey\":\"UBIGINT\",\"l_partkey\":\"UBIGINT\",\"l_suppkey\":\"UBIGINT\",\"l_linenumber\":\"UBIGINT\",\"l_quantity\":\"DOUBLE\",\"l_extendedprice\":\"DOUBLE\",\"l_discount\":\"DOUBLE\",\"l_tax\":\"DOUBLE\",\"l_returnflag\":\"VARCHAR\",\"l_linestatus\":\"VARCHAR\",\"l_shipdate\":\"VARCHAR\",\"l_commitdate\":\"VARCHAR\",\"l_receiptdate\":\"VARCHAR\",\"l_shipinstruct\":\"VARCHAR\",\"l_shipmode\":\"VARCHAR\",\"l_comment\":\"VARCHAR\"}\n \n # transform the structure back to what it was and verify it is the same as on the original lineitem table\n query IIIIIIIIIIIII nosort q0\n with transformed as (\n-    select json_transform(j, '{\"l_orderkey\":\"INTEGER\",\"l_partkey\":\"INTEGER\",\"l_suppkey\":\"INTEGER\",\"l_linenumber\":\"INTEGER\",\"l_quantity\":\"INTEGER\",\"l_extendedprice\":\"DECIMAL(15,2)\",\"l_discount\":\"DECIMAL(15,2)\",\"l_tax\":\"DECIMAL(15,2)\",\"l_returnflag\":\"VARCHAR\",\"l_linestatus\":\"VARCHAR\",\"l_shipdate\":\"DATE\",\"l_commitdate\":\"DATE\",\"l_receiptdate\":\"DATE\",\"l_shipinstruct\":\"VARCHAR\",\"l_shipmode\":\"VARCHAR\",\"l_comment\":\"VARCHAR\"}') as j\n+    select json_transform(j, '{\"l_orderkey\":\"INTEGER\",\"l_partkey\":\"INTEGER\",\"l_suppkey\":\"INTEGER\",\"l_linenumber\":\"INTEGER\",\"l_quantity\":\"DECIMAL(15,2)\",\"l_extendedprice\":\"DECIMAL(15,2)\",\"l_discount\":\"DECIMAL(15,2)\",\"l_tax\":\"DECIMAL(15,2)\",\"l_returnflag\":\"VARCHAR\",\"l_linestatus\":\"VARCHAR\",\"l_shipdate\":\"DATE\",\"l_commitdate\":\"DATE\",\"l_receiptdate\":\"DATE\",\"l_shipinstruct\":\"VARCHAR\",\"l_shipmode\":\"VARCHAR\",\"l_comment\":\"VARCHAR\"}') as j\n     from lineitem_j\n )\n select j.l_orderkey,j.l_partkey,j.l_suppkey,j.l_linenumber,j.l_quantity,j.l_extendedprice,j.l_discount,j.l_tax,\n@@ -41,7 +41,7 @@ order by all\n # run TPCH-Q1 straight on JSON\n query IIIIIIIIII\n with transformed as (\n-    select json_transform(j, '{\"l_orderkey\":\"INTEGER\",\"l_partkey\":\"INTEGER\",\"l_suppkey\":\"INTEGER\",\"l_linenumber\":\"INTEGER\",\"l_quantity\":\"INTEGER\",\"l_extendedprice\":\"DECIMAL(15,2)\",\"l_discount\":\"DECIMAL(15,2)\",\"l_tax\":\"DECIMAL(15,2)\",\"l_returnflag\":\"VARCHAR\",\"l_linestatus\":\"VARCHAR\",\"l_shipdate\":\"DATE\",\"l_commitdate\":\"DATE\",\"l_receiptdate\":\"DATE\",\"l_shipinstruct\":\"VARCHAR\",\"l_shipmode\":\"VARCHAR\",\"l_comment\":\"VARCHAR\"}') as j\n+    select json_transform(j, '{\"l_orderkey\":\"INTEGER\",\"l_partkey\":\"INTEGER\",\"l_suppkey\":\"INTEGER\",\"l_linenumber\":\"INTEGER\",\"l_quantity\":\"DECIMAL(15,2)\",\"l_extendedprice\":\"DECIMAL(15,2)\",\"l_discount\":\"DECIMAL(15,2)\",\"l_tax\":\"DECIMAL(15,2)\",\"l_returnflag\":\"VARCHAR\",\"l_linestatus\":\"VARCHAR\",\"l_shipdate\":\"DATE\",\"l_commitdate\":\"DATE\",\"l_receiptdate\":\"DATE\",\"l_shipinstruct\":\"VARCHAR\",\"l_shipmode\":\"VARCHAR\",\"l_comment\":\"VARCHAR\"}') as j\n     from lineitem_j\n )\n SELECT\n",
  "problem_statement": "TPC-H `lineitem` table schema definition error\n### What happens?\r\n\r\nIn the [TPC-H documentation](https://www.tpc.org/tpc_documents_current_versions/pdf/tpc-h_v2.17.1.pdf), `l_quantity` of `lineitem` table is defined as a `decimal` type.\r\nHowever, duckdb incorrectly defines it as an `INTEGER` type:\r\n```shell\r\n> parquet-schema ./data/tpch_1/lineitem.parquet\r\nMetadata for file: ./data/tpch_1/lineitem.parquet\r\n\r\nversion: 1\r\nnum of rows: 6001215\r\ncreated by: DuckDB\r\nmessage duckdb_schema {\r\n  OPTIONAL INT32 l_orderkey (INT_32);\r\n  OPTIONAL INT32 l_partkey (INT_32);\r\n  OPTIONAL INT32 l_suppkey (INT_32);\r\n  OPTIONAL INT32 l_linenumber (INT_32);\r\n  OPTIONAL INT32 l_quantity (INT_32);  ## <-- this\r\n  OPTIONAL INT64 l_extendedprice (DECIMAL(15,2));\r\n  OPTIONAL INT64 l_discount (DECIMAL(15,2));\r\n  OPTIONAL INT64 l_tax (DECIMAL(15,2));\r\n  OPTIONAL BYTE_ARRAY l_returnflag (UTF8);\r\n  OPTIONAL BYTE_ARRAY l_linestatus (UTF8);\r\n  OPTIONAL INT32 l_shipdate (DATE);\r\n  OPTIONAL INT32 l_commitdate (DATE);\r\n  OPTIONAL INT32 l_receiptdate (DATE);\r\n  OPTIONAL BYTE_ARRAY l_shipinstruct (UTF8);\r\n  OPTIONAL BYTE_ARRAY l_shipmode (UTF8);\r\n  OPTIONAL BYTE_ARRAY l_comment (UTF8);\r\n}\r\n```\r\nRelated issue: https://github.com/apache/arrow-datafusion/issues/5942\r\n\r\n### To Reproduce\r\n\r\nAs can be seen in the duckdb source code: https://github.com/duckdb/duckdb/blob/eaf507009fd06573d74cc5742a8643481883a0ff/extension/tpch/dbgen/dbgen.cpp#L405-L415\r\n\r\n### OS:\r\n\r\nmacOS\r\n\r\n### DuckDB Version:\r\n\r\n0.7.1\r\n\r\n### DuckDB Client:\r\n\r\npython\r\n\r\n### Full Name:\r\n\r\nr.4ntix\r\n\r\n### Affiliation:\r\n\r\nAlibaba Cloud\r\n\r\n### Have you tried this on the latest `master` branch?\r\n\r\n- [X] I agree\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] I agree\n",
  "hints_text": "",
  "created_at": "2023-04-16T08:33:02Z"
}