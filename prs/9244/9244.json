{
  "repo": "duckdb/duckdb",
  "pull_number": 9244,
  "instance_id": "duckdb__duckdb-9244",
  "issue_numbers": [
    "8624",
    "8624"
  ],
  "base_commit": "7a084c953dda994c6a6a9381d41329fd46e301bc",
  "patch": "diff --git a/src/execution/operator/helper/physical_reset.cpp b/src/execution/operator/helper/physical_reset.cpp\nindex 6fd3b9f388bc..916670cf5b6f 100644\n--- a/src/execution/operator/helper/physical_reset.cpp\n+++ b/src/execution/operator/helper/physical_reset.cpp\n@@ -21,10 +21,7 @@ void PhysicalReset::ResetExtensionVariable(ExecutionContext &context, DBConfig &\n \n SourceResultType PhysicalReset::GetData(ExecutionContext &context, DataChunk &chunk, OperatorSourceInput &input) const {\n \tauto &config = DBConfig::GetConfig(context.client);\n-\tif (config.options.lock_configuration) {\n-\t\tthrow InvalidInputException(\"Cannot reset configuration option \\\"%s\\\" - the configuration has been locked\",\n-\t\t                            name);\n-\t}\n+\tconfig.CheckLock(name);\n \tauto option = DBConfig::GetOptionByName(name);\n \tif (!option) {\n \t\t// check if this is an extra extension variable\ndiff --git a/src/execution/operator/helper/physical_set.cpp b/src/execution/operator/helper/physical_set.cpp\nindex 8153ea54ac57..4fe86880e26f 100644\n--- a/src/execution/operator/helper/physical_set.cpp\n+++ b/src/execution/operator/helper/physical_set.cpp\n@@ -24,10 +24,8 @@ void PhysicalSet::SetExtensionVariable(ClientContext &context, ExtensionOption &\n \n SourceResultType PhysicalSet::GetData(ExecutionContext &context, DataChunk &chunk, OperatorSourceInput &input) const {\n \tauto &config = DBConfig::GetConfig(context.client);\n-\tif (config.options.lock_configuration) {\n-\t\tthrow InvalidInputException(\"Cannot change configuration option \\\"%s\\\" - the configuration has been locked\",\n-\t\t                            name);\n-\t}\n+\t// check if we are allowed to change the configuration option\n+\tconfig.CheckLock(name);\n \tauto option = DBConfig::GetOptionByName(name);\n \tif (!option) {\n \t\t// check if this is an extra extension variable\ndiff --git a/src/include/duckdb/main/config.hpp b/src/include/duckdb/main/config.hpp\nindex d9cd3a205f4c..654bc80c7e5f 100644\n--- a/src/include/duckdb/main/config.hpp\n+++ b/src/include/duckdb/main/config.hpp\n@@ -240,6 +240,8 @@ struct DBConfig {\n \tDUCKDB_API void SetOption(const string &name, Value value);\n \tDUCKDB_API void ResetOption(const string &name);\n \n+\tDUCKDB_API void CheckLock(const string &name);\n+\n \tDUCKDB_API static idx_t ParseMemoryLimit(const string &arg);\n \n \t//! Return the list of possible compression functions for the specific physical type\ndiff --git a/src/main/config.cpp b/src/main/config.cpp\nindex 5e934993286c..89d5e1ba4fe2 100644\n--- a/src/main/config.cpp\n+++ b/src/main/config.cpp\n@@ -233,6 +233,20 @@ void DBConfig::SetDefaultMaxMemory() {\n \t}\n }\n \n+void DBConfig::CheckLock(const string &name) {\n+\tif (!options.lock_configuration) {\n+\t\t// not locked\n+\t\treturn;\n+\t}\n+\tcase_insensitive_set_t allowed_settings {\"schema\", \"search_path\"};\n+\tif (allowed_settings.find(name) != allowed_settings.end()) {\n+\t\t// we are always allowed to change these settings\n+\t\treturn;\n+\t}\n+\t// not allowed!\n+\tthrow InvalidInputException(\"Cannot change configuration option \\\"%s\\\" - the configuration has been locked\", name);\n+}\n+\n idx_t CGroupBandwidthQuota(idx_t physical_cores, FileSystem &fs) {\n \tstatic constexpr const char *CPU_MAX = \"/sys/fs/cgroup/cpu.max\";\n \tstatic constexpr const char *CFS_QUOTA = \"/sys/fs/cgroup/cpu/cpu.cfs_quota_us\";\n",
  "test_patch": "diff --git a/test/sql/settings/lock_configuration_schema.test b/test/sql/settings/lock_configuration_schema.test\nnew file mode 100644\nindex 000000000000..bcaa62d4ae6c\n--- /dev/null\n+++ b/test/sql/settings/lock_configuration_schema.test\n@@ -0,0 +1,30 @@\n+# name: test/sql/settings/lock_configuration_schema.test\n+# description: Test lock configuration and schema changes\n+# group: [settings]\n+\n+statement ok\n+PRAGMA enable_verification\n+\n+statement ok\n+create schema s1;\n+\n+statement ok\n+create schema s2;\n+\n+statement ok\n+use s1;\n+\n+statement ok\n+use s2;\n+\n+statement ok\n+SET lock_configuration=true;\n+\n+statement ok\n+use s1;\n+\n+statement ok\n+reset schema;\n+\n+statement ok\n+reset search_path\n",
  "problem_statement": "lock_configuration flag prevents changing schema\n### What happens?\r\n\r\nAn unintended consequence of two reasonable things leads to switching schema not being possible when `lock_configuration` is enabled:\r\n1) `lock_configuration` flag prohibiting `SET` statement\r\n2) `USE` being transformed into `SET schema` \r\n\r\n\r\n### To Reproduce\r\n\r\n\r\n```bash\r\n$ ./duckdb\r\nv0.8.1 6536a77232\r\n```\r\n```sql\r\ncreate schema s1;\r\ncreate schema s2;\r\n \r\nuse s1;\r\nuse s2;\r\n\r\nSET lock_configuration=true;\r\n\r\nuse s1;\r\n```\r\n```text\r\nError: Invalid Input Error: Cannot change configuration option \"schema\" - the configuration has been locked\r\n```\r\n\r\n### OS:\r\n\r\nlinux_amd64\r\n\r\n### DuckDB Version:\r\n\r\n0.8.1\r\n\r\n### DuckDB Client:\r\n\r\nCLI\r\n\r\n### Full Name:\r\n\r\nElena Felder\r\n\r\n### Affiliation:\r\n\r\nMotherDuck\r\n\r\n### Have you tried this on the latest `master` branch?\r\n\r\nI have tested with a master build\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] Yes, I have\nlock_configuration flag prevents changing schema\n### What happens?\r\n\r\nAn unintended consequence of two reasonable things leads to switching schema not being possible when `lock_configuration` is enabled:\r\n1) `lock_configuration` flag prohibiting `SET` statement\r\n2) `USE` being transformed into `SET schema` \r\n\r\n\r\n### To Reproduce\r\n\r\n\r\n```bash\r\n$ ./duckdb\r\nv0.8.1 6536a77232\r\n```\r\n```sql\r\ncreate schema s1;\r\ncreate schema s2;\r\n \r\nuse s1;\r\nuse s2;\r\n\r\nSET lock_configuration=true;\r\n\r\nuse s1;\r\n```\r\n```text\r\nError: Invalid Input Error: Cannot change configuration option \"schema\" - the configuration has been locked\r\n```\r\n\r\n### OS:\r\n\r\nlinux_amd64\r\n\r\n### DuckDB Version:\r\n\r\n0.8.1\r\n\r\n### DuckDB Client:\r\n\r\nCLI\r\n\r\n### Full Name:\r\n\r\nElena Felder\r\n\r\n### Affiliation:\r\n\r\nMotherDuck\r\n\r\n### Have you tried this on the latest `master` branch?\r\n\r\nI have tested with a master build\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] Yes, I have\n",
  "hints_text": "\n",
  "created_at": "2023-10-06T09:23:56Z"
}