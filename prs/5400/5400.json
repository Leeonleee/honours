{
  "repo": "duckdb/duckdb",
  "pull_number": 5400,
  "instance_id": "duckdb__duckdb-5400",
  "issue_numbers": [
    "5390"
  ],
  "base_commit": "7fbaefc8a134adb5d0eed2ad9308d7cf9b40635f",
  "patch": "diff --git a/src/optimizer/filter_pullup.cpp b/src/optimizer/filter_pullup.cpp\nindex 937c2ac124d7..7e097ab4e6f7 100644\n--- a/src/optimizer/filter_pullup.cpp\n+++ b/src/optimizer/filter_pullup.cpp\n@@ -40,7 +40,6 @@ unique_ptr<LogicalOperator> FilterPullup::PullupJoin(unique_ptr<LogicalOperator>\n \tcase JoinType::LEFT:\n \tcase JoinType::ANTI:\n \tcase JoinType::SEMI: {\n-\t\tcan_add_column = true;\n \t\treturn PullupFromLeft(move(op));\n \t}\n \tdefault:\ndiff --git a/src/optimizer/pullup/pullup_both_side.cpp b/src/optimizer/pullup/pullup_both_side.cpp\nindex 9246cf1b7e37..ae8459eb3c7a 100644\n--- a/src/optimizer/pullup/pullup_both_side.cpp\n+++ b/src/optimizer/pullup/pullup_both_side.cpp\n@@ -7,6 +7,8 @@ unique_ptr<LogicalOperator> FilterPullup::PullupBothSide(unique_ptr<LogicalOpera\n \tFilterPullup right_pullup(true, can_add_column);\n \top->children[0] = left_pullup.Rewrite(move(op->children[0]));\n \top->children[1] = right_pullup.Rewrite(move(op->children[1]));\n+\tD_ASSERT(left_pullup.can_add_column == can_add_column);\n+\tD_ASSERT(right_pullup.can_add_column == can_add_column);\n \n \t// merging filter expressions\n \tfor (idx_t i = 0; i < right_pullup.filters_expr_pullup.size(); ++i) {\ndiff --git a/src/optimizer/pushdown/pushdown_set_operation.cpp b/src/optimizer/pushdown/pushdown_set_operation.cpp\nindex 472c0ca113d8..c3a08d6c5734 100644\n--- a/src/optimizer/pushdown/pushdown_set_operation.cpp\n+++ b/src/optimizer/pushdown/pushdown_set_operation.cpp\n@@ -35,6 +35,9 @@ unique_ptr<LogicalOperator> FilterPushdown::PushdownSetOperation(unique_ptr<Logi\n \tD_ASSERT(op->children.size() == 2);\n \tauto left_bindings = op->children[0]->GetColumnBindings();\n \tauto right_bindings = op->children[1]->GetColumnBindings();\n+\tif (left_bindings.size() != right_bindings.size()) {\n+\t\tthrow InternalException(\"Filter pushdown - set operation LHS and RHS have incompatible counts\");\n+\t}\n \n \t// pushdown into set operation, we can duplicate the condition and pushdown the expressions into both sides\n \tFilterPushdown left_pushdown(optimizer), right_pushdown(optimizer);\n",
  "test_patch": "diff --git a/test/issues/general/test_5390.test b/test/issues/general/test_5390.test\nnew file mode 100644\nindex 000000000000..988a62fa3e5a\n--- /dev/null\n+++ b/test/issues/general/test_5390.test\n@@ -0,0 +1,88 @@\n+# name: test/issues/general/test_5390.test\n+# description: Issue 5390: Segmentation fault with ROWID and LEFT/RIGHT JOIN\n+# group: [general]\n+\n+statement ok\n+PRAGMA enable_verification\n+\n+statement ok\n+CREATE TABLE t0(c0 INT);\n+\n+statement ok\n+CREATE TABLE t1(c0 INT);\n+\n+statement ok\n+INSERT INTO t0 values (5);\n+\n+statement ok\n+INSERT INTO t1 values (4);\n+\n+query II\n+SELECT *\n+    FROM t1\n+    LEFT JOIN t0 ON t1.rowid = t0.rowid\n+INTERSECT\n+SELECT *\n+    FROM t1\n+    LEFT JOIN t0 ON t1.rowid = t0.rowid\n+    WHERE\n+        1 BETWEEN -1 AND t1.rowid;\n+----\n+\n+query II\n+SELECT *\n+    FROM t1\n+    LEFT JOIN t0 ON t1.rowid = t0.rowid\n+INTERSECT\n+SELECT *\n+    FROM t1\n+    LEFT JOIN t0 ON t1.rowid = t0.rowid\n+    WHERE\n+        1 BETWEEN -1 AND t1.c0;\n+----\n+4\t5\n+\n+query II\n+SELECT *\n+    FROM t1\n+    LEFT JOIN t0 ON t1.rowid = t0.rowid\n+INTERSECT\n+SELECT *\n+    FROM t1\n+    LEFT JOIN t0 ON t1.rowid = t0.rowid\n+    WHERE 1 BETWEEN +1 AND t1.rowid;\n+----\n+\n+query II\n+SELECT *\n+    FROM t1\n+    LEFT JOIN t0 ON t1.rowid = t0.rowid\n+INTERSECT\n+SELECT *\n+    FROM t1\n+    LEFT JOIN t0 ON t1.rowid = t0.rowid\n+    WHERE 1 BETWEEN 2 AND t1.rowid;\n+----\n+\n+\n+query II\n+SELECT *\n+    FROM t1\n+    LEFT JOIN t0 ON t1.rowid = t0.rowid\n+INTERSECT\n+SELECT *\n+    FROM t1\n+    LEFT JOIN t0 ON t1.rowid = t0.rowid\n+    WHERE 1 = t1.rowid;\n+----\n+\n+query II\n+SELECT *\n+    FROM t1\n+    LEFT JOIN t0 ON t1.rowid = t0.rowid\n+INTERSECT\n+SELECT *\n+    FROM t1\n+    LEFT JOIN t0 ON t1.rowid = t0.rowid\n+    WHERE -1 = t1.rowid;\n+----\n",
  "problem_statement": "Segmentation fault with ROWID and LEFT/RIGHT JOIN\n### What happens?\n\nA segmentation fault occurs when running the attached query. All the offline clients produce a segmentation fault, while https://shell.duckdb.org produces an `index out of bounds` error.\n\n### To Reproduce\n\nRun the following query:\r\n\r\n```sql\r\nCREATE TABLE t0(c0 INT);\r\nCREATE TABLE t1(c0 INT);\r\nINSERT INTO t0 values (5); -- still occurs if there is no data in the table\r\nINSERT INTO t1 values (4);\r\n\r\nSELECT * \r\n    FROM t1 \r\n    LEFT JOIN t0 ON t1.rowid = t0.rowid\r\nINTERSECT\r\nSELECT * \r\n    FROM t1 \r\n    LEFT JOIN t0 ON t1.rowid = t0.rowid\r\n    WHERE\r\n        1 BETWEEN -1 AND t1.rowid;          -- error\r\n        -- 1 BETWEEN -1 AND t1.c0;          -- no error\r\n        -- 1 BETWEEN +1 AND t1.rowid;       -- error\r\n        -- 1 BETWEEN 2 AND t1.rowid;        -- no error\r\n        -- false BETWEEN 2 AND t1.rowid;    -- no error\r\n        -- false BETWEEN -1 AND t1.rowid;   -- error\r\n        --  1 == t1.rowid;                  -- error\r\n        -- -1 == t1.rowid;                  -- error\r\n```\r\n\r\nThe error varies as shown with the `WHERE` clauses. We believe the no error cases are just optimized `BETWEEN`s. Further experimentation from our end:\r\n\r\n- Error occurs regardless of data in the table (tested a few cases).\r\n- Error still occurs on using a `RIGHT JOIN`, but not when using a `JOIN`.\r\n- Error does not occur if we remove the `INTERSECT` (and the first half).\r\n- Error still occurs if you have where clauses in both of the intersection halves.\r\n- Error seems to be focused on `rowid`, since changing the queries to `c0` does not seem to cause an error.\n\n### OS:\n\nLinux x86_64\n\n### DuckDB Version:\n\nv0.5.1 7c111322d (latest release) / v0.6.0 2213f9c946 (preview)\n\n### DuckDB Client:\n\nCLI / JDBC / Python\n\n### Full Name:\n\nSankalp Gambhir\n\n### Affiliation:\n\n\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne\n\n### Have you tried this on the latest `master` branch?\n\n- [X] I agree\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] I agree\n",
  "hints_text": "",
  "created_at": "2022-11-17T18:44:43Z"
}