{
  "repo": "duckdb/duckdb",
  "pull_number": 5804,
  "instance_id": "duckdb__duckdb-5804",
  "issue_numbers": [
    "5717"
  ],
  "base_commit": "e74e2471a57fc30c71382cbf34a26910189bae8a",
  "patch": "diff --git a/tools/odbc/parameter_descriptor.cpp b/tools/odbc/parameter_descriptor.cpp\nindex eeb1f49d85eb..8796f880604f 100644\n--- a/tools/odbc/parameter_descriptor.cpp\n+++ b/tools/odbc/parameter_descriptor.cpp\n@@ -1,4 +1,4 @@\n-#include \"parameter_descriptor.hpp\"\n+#include \"include/parameter_descriptor.hpp\"\n #include \"odbc_utils.hpp\"\n #include \"duckdb/common/types/decimal.hpp\"\n \n@@ -343,6 +343,13 @@ SQLRETURN ParameterDescriptor::SetValue(idx_t rec_idx) {\n \t\t}\n \t\tbreak;\n \t}\n+\tcase SQL_TYPE_TIMESTAMP: {\n+\t\tauto timestamp_struct = Load<SQL_TIMESTAMP_STRUCT>(dataptr);\n+\t\tvalue = Value::TIMESTAMP(timestamp_struct.year, timestamp_struct.month, timestamp_struct.day,\n+\t\t                         timestamp_struct.hour, timestamp_struct.minute, timestamp_struct.second, 0);\n+\t\tbreak;\n+\t}\n+\n \t// TODO more types\n \tdefault:\n \t\t// TODO error message?\n",
  "test_patch": "diff --git a/tools/odbc/test/isql-test.py b/tools/odbc/test/isql-test.py\nindex 921e6f4a460c..23e36c46ed28 100644\n--- a/tools/odbc/test/isql-test.py\n+++ b/tools/odbc/test/isql-test.py\n@@ -171,6 +171,8 @@ def test(cmd, out=None, err=None, extra_commands=None, input_file=None):\n test(\"SELECT TIMESTAMP '-8-01-01 00:00:01.5'::VARCHAR\", out='0009-01-01 (BC) 00:00:01.5')\n test(\"SELECT TIMESTAMP '100000-01-01 00:00:01.5'::VARCHAR\", out='100000-01-01 00:00:01.5')\n \n+test(\"UPDATE timestamp SET t = strptime('20221215101010','%Y%m%d%H%M%S') WHERE t='2008-01-01 00:00:01'::TIMESTAMP\")\n+\n ### FROM test/sql/types/time/test_time.test #################################\n test(\n \"\"\"CREATE TABLE times(i TIME);\n",
  "problem_statement": "ODBC driver: input bind parameters does not support timestamp\n### What happens?\r\n\r\n1\u3001execute sql like \uff1a update test_table set timestamp_column = strptime('20221215101010','%Y%m%d%H%M%S') where ... \r\n2\u3001bind parameter type is SQL_TYPE_TIMESTAMP\r\n3\u3001sql execute error\r\n\r\nin tools/odbc/parameter_descriptor.cpp function ParameterDescriptor::SetValue\r\nswitch sql_desc_type not support SQL_TYPE_TIMESTAMP\r\nI add this code then test was passed\r\n\r\n`case SQL_TYPE_TIMESTAMP: {\r\n    auto timestamp_struct = Load<SQL_TIMESTAMP_STRUCT>(dataptr);\r\n    value = Value::TIMESTAMP(timestamp_struct.year, timestamp_struct.month, timestamp_struct.day,\r\n                             timestamp_struct.hour, timestamp_struct.minute, timestamp_struct.second, 0);\r\n    break;\r\n}`\r\n\r\n### To Reproduce\r\n\r\n1\u3001execute sql like \uff1a update test_table set timestamp_column = strptime('20221215101010','%Y%m%d%H%M%S') where ... \r\n2\u3001bind parameter type is SQL_TYPE_TIMESTAMP\r\n\r\n### OS:\r\n\r\nlinux\r\n\r\n### DuckDB Version:\r\n\r\n0.6.1\r\n\r\n### DuckDB Client:\r\n\r\nodbc\r\n\r\n### Full Name:\r\n\r\nxumaofeng\r\n\r\n### Affiliation:\r\n\r\nhuawei\r\n\r\n### Have you tried this on the latest `master` branch?\r\n\r\n- [X] I agree\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] I agree\n",
  "hints_text": "Thanks for the report! This looks reasonable to me - can you submit a PR?\n@hawkfish Sorry, I'm on the company intranet, for some  security reason\uff0ci can not submit a PR.",
  "created_at": "2022-12-30T16:36:39Z"
}