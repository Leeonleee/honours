{
  "repo": "duckdb/duckdb",
  "pull_number": 1629,
  "instance_id": "duckdb__duckdb-1629",
  "issue_numbers": [
    "1614"
  ],
  "base_commit": "bce2db2ba91d3c1964dff2f0ccc8104298f33302",
  "patch": "diff --git a/src/execution/operator/order/physical_top_n.cpp b/src/execution/operator/order/physical_top_n.cpp\nindex 264fc06b1e1f..e20bd8489801 100644\n--- a/src/execution/operator/order/physical_top_n.cpp\n+++ b/src/execution/operator/order/physical_top_n.cpp\n@@ -14,13 +14,23 @@ namespace duckdb {\n //===--------------------------------------------------------------------===//\n class TopNHeap {\n public:\n+\tstatic OrderByNullType FlipNullOrder(OrderByNullType order) {\n+\t\tif (order == OrderByNullType::NULLS_FIRST) {\n+\t\t\treturn OrderByNullType::NULLS_LAST;\n+\t\t} else if (order == OrderByNullType::NULLS_LAST) {\n+\t\t\treturn OrderByNullType::NULLS_FIRST;\n+\t\t}\n+\t\treturn order;\n+\t}\n+\n \tTopNHeap(const vector<BoundOrderByNode> &orders, idx_t limit, idx_t offset)\n \t    : limit(limit), offset(offset), heap_size(0) {\n \t\tfor (auto &order : orders) {\n \t\t\tauto &expr = order.expression;\n \t\t\tsort_types.push_back(expr->return_type);\n \t\t\torder_types.push_back(order.type);\n-\t\t\tnull_order_types.push_back(order.null_order);\n+\t\t\tnull_order_types.push_back(order.type == OrderType::DESCENDING ? FlipNullOrder(order.null_order)\n+\t\t\t                                                               : order.null_order);\n \t\t\texecutor.AddExpression(*expr);\n \t\t}\n \t\t// preallocate the heap\n",
  "test_patch": "diff --git a/test/sql/order/test_top_n_nulls_first.test b/test/sql/order/test_top_n_nulls_first.test\nnew file mode 100644\nindex 000000000000..fbcaa2fbde69\n--- /dev/null\n+++ b/test/sql/order/test_top_n_nulls_first.test\n@@ -0,0 +1,36 @@\n+# name: test/sql/order/test_top_n_nulls_first.test\n+# description: Test NULLS FIRST/NULLS LAST with top n implementation\n+# group: [order]\n+\n+statement ok\n+PRAGMA enable_verification\n+\n+statement ok\n+CREATE TABLE integers(i INTEGER)\n+\n+statement ok\n+INSERT INTO integers VALUES (1), (NULL)\n+\n+query I\n+SELECT * FROM integers ORDER BY i NULLS FIRST LIMIT 2\n+----\n+NULL\n+1\n+\n+query I\n+SELECT * FROM integers ORDER BY i NULLS LAST LIMIT 2\n+----\n+1\n+NULL\n+\n+query I\n+SELECT * FROM integers ORDER BY i DESC NULLS FIRST LIMIT 2\n+----\n+NULL\n+1\n+\n+query I\n+SELECT * FROM integers ORDER BY i DESC NULLS LAST LIMIT 2\n+----\n+1\n+NULL\n",
  "problem_statement": "NULLS FIRST/NULLS LAST behavior is incorrect in Top-N implementation\n```sql\r\ncreate table integers(i integer);\r\ninsert into integers values (1), (null);\r\nselect * from integers order by i asc nulls last limit 1;\r\n--1, correct\r\nselect * from integers order by i desc nulls last limit 1;\r\n--NULL, incorrect, should be 1\r\n```\r\n\n",
  "hints_text": "CC: @mbasmanova",
  "created_at": "2021-04-16T15:26:55Z"
}