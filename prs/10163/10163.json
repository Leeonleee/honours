{
  "repo": "duckdb/duckdb",
  "pull_number": 10163,
  "instance_id": "duckdb__duckdb-10163",
  "issue_numbers": [
    "10074",
    "10074"
  ],
  "base_commit": "6a1a2d6f8e5365bee7b8c637a26ef69643e84fee",
  "patch": "diff --git a/src/parser/transform/helpers/transform_cte.cpp b/src/parser/transform/helpers/transform_cte.cpp\nindex dded0d7d694a..ca9192412a9a 100644\n--- a/src/parser/transform/helpers/transform_cte.cpp\n+++ b/src/parser/transform/helpers/transform_cte.cpp\n@@ -33,9 +33,9 @@ void Transformer::ExtractCTEsRecursive(CommonTableExpressionMap &cte_map) {\n \n void Transformer::TransformCTE(duckdb_libpgquery::PGWithClause &de_with_clause, CommonTableExpressionMap &cte_map,\n                                vector<unique_ptr<CTENode>> &materialized_ctes) {\n-\t// TODO: might need to update in case of future lawsuit\n \tstored_cte_map.push_back(&cte_map);\n \n+\t// TODO: might need to update in case of future lawsuit\n \tD_ASSERT(de_with_clause.ctes);\n \tfor (auto cte_ele = de_with_clause.ctes->head; cte_ele != nullptr; cte_ele = cte_ele->next) {\n \t\tauto info = make_uniq<CommonTableExpressionInfo>();\ndiff --git a/src/planner/binder/query_node/bind_cte_node.cpp b/src/planner/binder/query_node/bind_cte_node.cpp\nindex 42f14b9604a3..3cbcfc19a171 100644\n--- a/src/planner/binder/query_node/bind_cte_node.cpp\n+++ b/src/planner/binder/query_node/bind_cte_node.cpp\n@@ -49,11 +49,7 @@ unique_ptr<BoundQueryNode> Binder::BindNode(CTENode &statement) {\n \n \t// the result types of the CTE are the types of the LHS\n \tresult->types = result->child->types;\n-\t// names are picked from the LHS, unless aliases are explicitly specified\n \tresult->names = result->child->names;\n-\tfor (idx_t i = 0; i < statement.aliases.size() && i < result->names.size(); i++) {\n-\t\tresult->names[i] = statement.aliases[i];\n-\t}\n \n \tMoveCorrelatedExpressions(*result->query_binder);\n \tMoveCorrelatedExpressions(*result->child_binder);\n",
  "test_patch": "diff --git a/test/sql/cte/cte_colname_issue_10074.test b/test/sql/cte/cte_colname_issue_10074.test\nnew file mode 100644\nindex 000000000000..79e462432557\n--- /dev/null\n+++ b/test/sql/cte/cte_colname_issue_10074.test\n@@ -0,0 +1,16 @@\n+# name: test/sql/cte/cte_colname_issue_10074.test\n+# description: Issue #10074 - CTE returns wrong column name\n+# group: [cte]\n+\n+statement ok\n+pragma enable_verification\n+\n+statement ok\n+create table t as with q(id,s) as (values(1,42)),\n+a(s)as materialized(select 42)\n+select id from q join a on q.s=a.s\n+\n+query I\n+select id from t\n+----\n+1\n",
  "problem_statement": "CTE returns wrong column name\n### What happens?\r\n\r\nfollowing sql should output id ,but output s, and the values  are of column id\r\n\r\n### To Reproduce\r\n\r\n```\r\ncreate schema poker24;\r\ncreate table poker24.cards as (with t as(select i::int i from generate_series(1,10)t(i)) select row_number()over()id, a.i c1,b.i c2,c.i c3,d.i c4 from t a,t b,t c,t d);\r\nwith a1(s) as materialized(select unnest(array[\r\n'1118(1+1+1)*8','1126(1+1+2)*6','1127(1+2)*(1+7)','1128(1*1+2)*8','1129(1+2)*(9-1)','1120(1+1)*(2+0)','1134(1+1)*3*4','78000-(8-0)*7','88808-(8-0)*8'])\r\n),\r\na(s,result)as\r\n(select substr(a1.s,1,4)::int,replace(substr(a1.s,5),'0','10')from a1)\r\n/*\u628a\u6bcf\u7ec4c1-c4\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u62fc\u63a5\u6210\u5b57\u7b26\u4e32*/\r\n,q as(select id,c1,c2,c3,c4,string_agg(case when a=10 then '0' else a::varchar end ,''order by a)::int s from (select id,c1,c2,c3,c4,unnest(array[c1,c2,c3,c4])a from poker24.cards)b group by id,c1,c2,c3,c4)\r\nselect id,c1,c2,c3,c4,result from q left join a on a.s = q.s\r\n;\r\n```\r\n```\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502   s   \u2502  c1   \u2502  c2   \u2502  c3   \u2502  c4   \u2502    result    \u2502\r\n```\r\n\r\n### OS:\r\n\r\nwindows7 \r\n\r\n### DuckDB Version:\r\n\r\n0.9.2\r\n\r\n### DuckDB Client:\r\n\r\nCLI\r\n\r\n### Full Name:\r\n\r\nlutao\r\n\r\n### Affiliation:\r\n\r\nstudy\r\n\r\n### Have you tried this on the latest `main` branch?\r\n\r\nI have tested with a main build\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] Yes, I have\nCTE returns wrong column name\n### What happens?\r\n\r\nfollowing sql should output id ,but output s, and the values  are of column id\r\n\r\n### To Reproduce\r\n\r\n```\r\ncreate schema poker24;\r\ncreate table poker24.cards as (with t as(select i::int i from generate_series(1,10)t(i)) select row_number()over()id, a.i c1,b.i c2,c.i c3,d.i c4 from t a,t b,t c,t d);\r\nwith a1(s) as materialized(select unnest(array[\r\n'1118(1+1+1)*8','1126(1+1+2)*6','1127(1+2)*(1+7)','1128(1*1+2)*8','1129(1+2)*(9-1)','1120(1+1)*(2+0)','1134(1+1)*3*4','78000-(8-0)*7','88808-(8-0)*8'])\r\n),\r\na(s,result)as\r\n(select substr(a1.s,1,4)::int,replace(substr(a1.s,5),'0','10')from a1)\r\n/*\u628a\u6bcf\u7ec4c1-c4\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u62fc\u63a5\u6210\u5b57\u7b26\u4e32*/\r\n,q as(select id,c1,c2,c3,c4,string_agg(case when a=10 then '0' else a::varchar end ,''order by a)::int s from (select id,c1,c2,c3,c4,unnest(array[c1,c2,c3,c4])a from poker24.cards)b group by id,c1,c2,c3,c4)\r\nselect id,c1,c2,c3,c4,result from q left join a on a.s = q.s\r\n;\r\n```\r\n```\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502   s   \u2502  c1   \u2502  c2   \u2502  c3   \u2502  c4   \u2502    result    \u2502\r\n```\r\n\r\n### OS:\r\n\r\nwindows7 \r\n\r\n### DuckDB Version:\r\n\r\n0.9.2\r\n\r\n### DuckDB Client:\r\n\r\nCLI\r\n\r\n### Full Name:\r\n\r\nlutao\r\n\r\n### Affiliation:\r\n\r\nstudy\r\n\r\n### Have you tried this on the latest `main` branch?\r\n\r\nI have tested with a main build\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] Yes, I have\n",
  "hints_text": "BTW postgresql returns correct column name\nHi @l1t1, thanks for reporting this. Could you please provide a [minimal reproducible example](https://en.wikipedia.org/wiki/Minimal_reproducible_example) that demonstrates this issue?\nit is because of ` materialized` ,\r\n```\r\n--right\r\nwith cards(id,c1,c2,c3,c4) as (values(1,1,1,1,8)),\r\na(s,result)as (select 1118,'(1+1+1)*8')\r\n,q as(select id,c1,c2,c3,c4,string_agg(case when a=10 then '0' else a::varchar end ,''order by a)::int s \r\nfrom (select id,c1,c2,c3,c4,unnest(array[c1,c2,c3,c4])a from cards)b group by id,c1,c2,c3,c4)\r\nselect id,c1,c2,c3,c4,result from q left join a on a.s = q.s\r\n;\r\n--wrong\r\nwith cards(id,c1,c2,c3,c4) as (values(1,1,1,1,8)),\r\na(s,result)as materialized(select 1118,'(1+1+1)*8')\r\n,q as(select id,c1,c2,c3,c4,string_agg(case when a=10 then '0' else a::varchar end ,''order by a)::int s \r\nfrom (select id,c1,c2,c3,c4,unnest(array[c1,c2,c3,c4])a from cards)b group by id,c1,c2,c3,c4)\r\nselect id,c1,c2,c3,c4,result from q left join a on a.s = q.s\r\n;\r\n```\nthe minimal reproducible example \r\n```\r\nwith q(id,c1,c2,c3,c4,s) as (values(1,1,1,1,8,1118)),\r\na(s,result)as materialized(select 1118,'(1+1+1)*8')\r\nselect id,c1,c2,c3,c4,result from q left join a on a.s = q.s\r\n;\r\n```\nBTW postgresql returns correct column name\nHi @l1t1, thanks for reporting this. Could you please provide a [minimal reproducible example](https://en.wikipedia.org/wiki/Minimal_reproducible_example) that demonstrates this issue?\nit is because of ` materialized` ,\r\n```\r\n--right\r\nwith cards(id,c1,c2,c3,c4) as (values(1,1,1,1,8)),\r\na(s,result)as (select 1118,'(1+1+1)*8')\r\n,q as(select id,c1,c2,c3,c4,string_agg(case when a=10 then '0' else a::varchar end ,''order by a)::int s \r\nfrom (select id,c1,c2,c3,c4,unnest(array[c1,c2,c3,c4])a from cards)b group by id,c1,c2,c3,c4)\r\nselect id,c1,c2,c3,c4,result from q left join a on a.s = q.s\r\n;\r\n--wrong\r\nwith cards(id,c1,c2,c3,c4) as (values(1,1,1,1,8)),\r\na(s,result)as materialized(select 1118,'(1+1+1)*8')\r\n,q as(select id,c1,c2,c3,c4,string_agg(case when a=10 then '0' else a::varchar end ,''order by a)::int s \r\nfrom (select id,c1,c2,c3,c4,unnest(array[c1,c2,c3,c4])a from cards)b group by id,c1,c2,c3,c4)\r\nselect id,c1,c2,c3,c4,result from q left join a on a.s = q.s\r\n;\r\n```\nthe minimal reproducible example \r\n```\r\nwith q(id,c1,c2,c3,c4,s) as (values(1,1,1,1,8,1118)),\r\na(s,result)as materialized(select 1118,'(1+1+1)*8')\r\nselect id,c1,c2,c3,c4,result from q left join a on a.s = q.s\r\n;\r\n```",
  "created_at": "2024-01-08T14:12:02Z"
}