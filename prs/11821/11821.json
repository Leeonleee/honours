{
  "repo": "duckdb/duckdb",
  "pull_number": 11821,
  "instance_id": "duckdb__duckdb-11821",
  "issue_numbers": [
    "11756"
  ],
  "base_commit": "e356a1a252d1bb3e5b71da635bc9f22732a3dbf0",
  "patch": "diff --git a/src/catalog/catalog_entry/duck_schema_entry.cpp b/src/catalog/catalog_entry/duck_schema_entry.cpp\nindex ccdba5acbd0f..ba54471afeed 100644\n--- a/src/catalog/catalog_entry/duck_schema_entry.cpp\n+++ b/src/catalog/catalog_entry/duck_schema_entry.cpp\n@@ -223,7 +223,8 @@ optional_ptr<CatalogEntry> DuckSchemaEntry::CreateIndex(ClientContext &context,\n \n \t// currently, we can not alter PK/FK/UNIQUE constraints\n \t// concurrency-safe name checks against other INDEX catalog entries happens in the catalog\n-\tif (!table.GetStorage().IndexNameIsUnique(info.index_name)) {\n+\tif (info.on_conflict != OnCreateConflict::IGNORE_ON_CONFLICT &&\n+\t    !table.GetStorage().IndexNameIsUnique(info.index_name)) {\n \t\tthrow CatalogException(\"An index with the name \" + info.index_name + \" already exists!\");\n \t}\n \n",
  "test_patch": "diff --git a/test/sql/catalog/test_catalog_errors.test b/test/sql/catalog/test_catalog_errors.test\nindex 765ccac34203..7afb1790ad36 100644\n--- a/test/sql/catalog/test_catalog_errors.test\n+++ b/test/sql/catalog/test_catalog_errors.test\n@@ -40,6 +40,7 @@ CREATE INDEX i_index ON integers(i);\n statement error\n CREATE INDEX i_index ON integers(i);\n ----\n+already exists\n \n # with IF NOT EXISTS it does not fail!\n statement ok\n@@ -58,9 +59,19 @@ DROP INDEX i_index\n statement ok\n DROP INDEX IF EXISTS i_index\n \n-# create the index again\n+# create the index again, but as unique to exercise special handling due to indexes generated column constraints\n statement ok\n-CREATE INDEX i_index ON integers(i);\n+CREATE UNIQUE INDEX i_index ON integers(i);\n+\n+# cannot create an index that already exists\n+statement error\n+CREATE UNIQUE INDEX i_index ON integers(i);\n+----\n+already exists\n+\n+# with IF NOT EXISTS it does not fail!\n+statement ok\n+CREATE UNIQUE INDEX IF NOT EXISTS i_index ON integers(i);\n \n # dropping the table also drops the index\n statement ok\n",
  "problem_statement": "CREATE UNIQUE INDEX IF NOT EXISTS doesn't work any more\n### What happens?\r\n\r\n`CREATE UNIQUE INDEX IF NOT EXISTS` works as expected on `0.9.2`, but throws `Catalog Error` on `0.10.1`.\r\n\r\nNote: this only occurs with `UNIQUE`, otherwise it's okay \ud83e\udd14 \r\n\r\n---\r\n\r\nI'll concede that `CREATE INDEX IF NOT EXISTS` [it isn't 'explicitly mentioned in the docs](https://duckdb.org/docs/sql/statements/create_index),\r\nbut it is covered by tests (albeit not the failing `UNIQUE` case) \u2b07\ufe0f,\r\nand since it worked as expected in 0.9.2 I'm hoping we can call this a Real Bug \ud83e\udd1e\ud83c\udffb \r\n\r\nhttps://github.com/duckdb/duckdb/blob/4750ce2d7abb05792e34a5c9200af7e60b8ff9a0/test/sql/catalog/test_catalog_errors.test#L36-L46\r\n\r\n### To Reproduce\r\n\r\nNow:\r\n```\r\nv0.10.1 4a89d97db8\r\n```\r\n```sql\r\ncreate table foo(bar int);\r\ncreate unique index foo_bar_unique on foo(bar);\r\ncreate unique index if not exists foo_bar_unique on foo(bar);\r\n```\r\n```\r\nCatalog Error: An index with the name foo_bar_uniquealready exists!\r\n```\r\n\r\nBut previously:\r\n```\r\nv0.9.2 3c695d7ba9\r\n```\r\n```sql\r\ncreate table foo(bar int);\r\ncreate unique index foo_bar_unique on foo(bar);\r\ncreate unique index if not exists foo_bar_unique on foo(bar);\r\n```\r\n\r\n### OS:\r\n\r\nUbuntu\r\n\r\n### DuckDB Version:\r\n\r\n20.04.6\r\n\r\n### DuckDB Client:\r\n\r\nPython and CLI\r\n\r\n### Full Name:\r\n\r\nDave Tapley\r\n\r\n### Affiliation:\r\n\r\nJE Fuller\r\n\r\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\r\n\r\nI have tested with a stable release\r\n\r\n### Did you include all relevant data sets for reproducing the issue?\r\n\r\nNot applicable - the reproduction does not require a data set\r\n\r\n### Did you include all code required to reproduce the issue?\r\n\r\n- [X] Yes, I have\r\n\r\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\r\n\r\n- [X] Yes, I have\n",
  "hints_text": "",
  "created_at": "2024-04-24T23:44:14Z"
}