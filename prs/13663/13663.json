{
  "repo": "duckdb/duckdb",
  "pull_number": 13663,
  "instance_id": "duckdb__duckdb-13663",
  "issue_numbers": [
    "13643"
  ],
  "base_commit": "7691b57aa1ef638c4b825c388b1bd2877a4e8ec4",
  "patch": "diff --git a/src/parser/parsed_data/create_index_info.cpp b/src/parser/parsed_data/create_index_info.cpp\nindex 8f74c05c7086..3d41ea4fea2a 100644\n--- a/src/parser/parsed_data/create_index_info.cpp\n+++ b/src/parser/parsed_data/create_index_info.cpp\n@@ -4,7 +4,7 @@\n \n namespace duckdb {\n \n-CreateIndexInfo::CreateIndexInfo() : CreateInfo(CatalogType::INDEX_ENTRY) {\n+CreateIndexInfo::CreateIndexInfo() : CreateInfo(CatalogType::INDEX_ENTRY, INVALID_SCHEMA) {\n }\n \n CreateIndexInfo::CreateIndexInfo(const duckdb::CreateIndexInfo &info)\n",
  "test_patch": "diff --git a/test/sql/create/create_index_on_issue_13643.test b/test/sql/create/create_index_on_issue_13643.test\nnew file mode 100644\nindex 000000000000..7ae069d66b54\n--- /dev/null\n+++ b/test/sql/create/create_index_on_issue_13643.test\n@@ -0,0 +1,21 @@\n+# name: test/sql/create/create_index_on_issue_13643.test\n+# description: Issue #13643 - USE not affecting tables referenced after the ON keyword in CREATE INDEX\n+# group: [create]\n+\n+statement ok\n+CREATE SCHEMA db0;\n+\n+statement ok\n+USE db0;\n+\n+statement ok\n+CREATE TABLE t0 (a BIGINT PRIMARY KEY, b INT, c INT);\n+\n+statement ok\n+CREATE INDEX t0_idx ON t0 (b);\n+\n+statement ok\n+CREATE UNIQUE INDEX t0_uidx ON t0 (c);\n+\n+statement ok\n+CREATE UNIQUE INDEX t0_uidx2 ON db0.t0 (c);\n",
  "problem_statement": "`USE` does not affect for the table referenced after the keyword ON for the `CREATE UNIQUE INDEX ... ON ...`\n### What happens?\r\n\r\nThe `USE` command does not affect for the table referenced after the keyword ON for the `CREATE UNIQUE INDEX ... ON ...` statement.\r\n\r\n```sql\r\ncreate schema mydb;\r\nuse mydb;\r\ncreate table mytable (i bigint primary key, s varchar(20) NOT NULL);\r\nCREATE UNIQUE INDEX mytable_s ON mytable(s NULLS FIRST);\r\n```\r\n```\r\nCatalog Error: Table with name mytable does not exist!\r\nDid you mean \"memory.mydb.mytable\"?\r\n```\r\n\r\nThis issue occurs in both `duckdb` command line and go-duckdb.\r\n\r\n### To Reproduce\r\n\r\nuse `duckdb` command line\r\n\r\n```sql\r\ncreate schema mydb;\r\nuse mydb;\r\ncreate table mytable (i bigint primary key, s varchar(20) NOT NULL);\r\nCREATE UNIQUE INDEX mytable_s ON mytable(s NULLS FIRST);\r\n```\r\n```\r\nCatalog Error: Table with name mytable does not exist!\r\nDid you mean \"memory.mydb.mytable\"?\r\n```\r\n\r\n### OS:\r\n\r\nmacOS m1 arm\r\n\r\n### DuckDB Version:\r\n\r\nv1.0.0 1f98600c2c\r\n\r\n### DuckDB Client:\r\n\r\nduckdb cli\r\n\r\n### Full Name:\r\n\r\nYusong Gao\r\n\r\n### Affiliation:\r\n\r\nApeCloud\r\n\r\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\r\n\r\nI have not tested with any build\r\n\r\n### Did you include all relevant data sets for reproducing the issue?\r\n\r\nYes\r\n\r\n### Did you include all code required to reproduce the issue?\r\n\r\n- [X] Yes, I have\r\n\r\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\r\n\r\n- [X] Yes, I have\n",
  "hints_text": "I\u2019ve fixed the issue and will submit a PR after `make allunit` completes.",
  "created_at": "2024-08-31T06:17:33Z"
}