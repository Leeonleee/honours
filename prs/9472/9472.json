{
  "repo": "duckdb/duckdb",
  "pull_number": 9472,
  "instance_id": "duckdb__duckdb-9472",
  "issue_numbers": [
    "9459",
    "9459"
  ],
  "base_commit": "10f9bd965753fc1834357c8965b5437c0c7fa576",
  "patch": "diff --git a/src/execution/operator/schema/physical_drop.cpp b/src/execution/operator/schema/physical_drop.cpp\nindex c15eb7c1f0c8..36cc3976cd85 100644\n--- a/src/execution/operator/schema/physical_drop.cpp\n+++ b/src/execution/operator/schema/physical_drop.cpp\n@@ -24,7 +24,6 @@ SourceResultType PhysicalDrop::GetData(ExecutionContext &context, DataChunk &chu\n \tcase CatalogType::SCHEMA_ENTRY: {\n \t\tauto &catalog = Catalog::GetCatalog(context.client, info->catalog);\n \t\tcatalog.DropEntry(context.client, *info);\n-\t\tauto qualified_name = QualifiedName::Parse(info->name);\n \n \t\t// Check if the dropped schema was set as the current schema\n \t\tauto &client_data = ClientData::Get(context.client);\n",
  "test_patch": "diff --git a/test/sql/catalog/issue_9459.test b/test/sql/catalog/issue_9459.test\nnew file mode 100644\nindex 000000000000..964100ee646a\n--- /dev/null\n+++ b/test/sql/catalog/issue_9459.test\n@@ -0,0 +1,12 @@\n+# name: test/sql/catalog/issue_9459.test\n+# description: Issue #9459 - Dropping schema with double quote in name fails\n+# group: [catalog]\n+\n+statement ok\n+PRAGMA enable_verification\n+\n+statement ok\n+create schema \"\"\"cursed_schema\";\n+\n+statement ok\n+drop schema \"\"\"cursed_schema\";\n",
  "problem_statement": "Dropping schema with double quote in name fails\n### What happens?\n\nHowdy folks!\r\n\r\nIf you are (like me) so unwise as to create a cursed-name schema like `\"blah`, then it can only be destroyed if you throw the entire database into the fires of Mt. Doom. (The drop schema command fails.). On the MotherDuck side, you can run a `drop database <database_with_cursed_schema>` command as an alternative.\n\n### To Reproduce\n\n```sql\r\ncreate schema \"\"\"cursed_schema\";\r\ndrop schema \"\"\"cursed_schema\";\r\n\r\nError: Parser Error: Unterminated quote in qualified name!\r\n```\n\n### OS:\n\nMacOS\n\n### DuckDB Version:\n\n0.9.2-dev115, 0.9.1, 0.8.1\n\n### DuckDB Client:\n\nCLI\n\n### Full Name:\n\nAlex Monahan\n\n### Affiliation:\n\nMotherDuck and DuckDB Labs\n\n### Have you tried this on the latest `main` branch?\n\nI have tested with a main build\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] Yes, I have\nDropping schema with double quote in name fails\n### What happens?\n\nHowdy folks!\r\n\r\nIf you are (like me) so unwise as to create a cursed-name schema like `\"blah`, then it can only be destroyed if you throw the entire database into the fires of Mt. Doom. (The drop schema command fails.). On the MotherDuck side, you can run a `drop database <database_with_cursed_schema>` command as an alternative.\n\n### To Reproduce\n\n```sql\r\ncreate schema \"\"\"cursed_schema\";\r\ndrop schema \"\"\"cursed_schema\";\r\n\r\nError: Parser Error: Unterminated quote in qualified name!\r\n```\n\n### OS:\n\nMacOS\n\n### DuckDB Version:\n\n0.9.2-dev115, 0.9.1, 0.8.1\n\n### DuckDB Client:\n\nCLI\n\n### Full Name:\n\nAlex Monahan\n\n### Affiliation:\n\nMotherDuck and DuckDB Labs\n\n### Have you tried this on the latest `main` branch?\n\nI have tested with a main build\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] Yes, I have\n",
  "hints_text": "Another note is that the rename schema command is not supported, so that is not a way out either. \r\n\r\nDon't be like Alex. Don't use double quotes in names of anything.\nAnother note is that the rename schema command is not supported, so that is not a way out either. \r\n\r\nDon't be like Alex. Don't use double quotes in names of anything.",
  "created_at": "2023-10-25T13:39:23Z"
}