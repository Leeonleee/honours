{
  "repo": "duckdb/duckdb",
  "pull_number": 17037,
  "instance_id": "duckdb__duckdb-17037",
  "issue_numbers": [
    "16942",
    "16959",
    "16959"
  ],
  "base_commit": "5141aa45606ea74dd46cc86cbe60a04134037145",
  "patch": "diff --git a/.github/actions/build_extensions/action.yml b/.github/actions/build_extensions/action.yml\nindex 02f82c66e7e0..4b581851954b 100644\n--- a/.github/actions/build_extensions/action.yml\n+++ b/.github/actions/build_extensions/action.yml\n@@ -88,9 +88,6 @@ inputs:\n     description: 'Flags to be passed to cmake'\n     default: ''\n \n-env:\n-  CMAKE_POLICY_VERSION_MINIMUM: 3.5\n-\n runs:\n   using: \"composite\"\n   steps:\ndiff --git a/.github/actions/build_extensions_dockerized/action.yml b/.github/actions/build_extensions_dockerized/action.yml\nindex 9a2b3303a20b..0e0eb7fd54e4 100644\n--- a/.github/actions/build_extensions_dockerized/action.yml\n+++ b/.github/actions/build_extensions_dockerized/action.yml\n@@ -59,7 +59,6 @@ runs:\n           echo \"OPENSSL_DIR=/duckdb_build_dir/build/release/vcpkg_installed/${{ inputs.vcpkg_target_triplet }}\" >> docker_env.txt\n           echo \"OPENSSL_USE_STATIC_LIBS=true\" >> docker_env.txt\n           echo \"DUCKDB_PLATFORM=${{ inputs.duckdb_arch }}\" >> docker_env.txt\n-          echo \"CMAKE_POLICY_VERSION_MINIMUM=3.5\" >> docker_env.txt\n           echo \"OVERRIDE_GIT_DESCRIBE=${{ inputs.override_git_describe }}\" >> docker_env.txt\n           echo \"LINUX_CI_IN_DOCKER=1\" >> docker_env.txt\n           echo \"TOOLCHAIN_FLAGS=${{ inputs.duckdb_arch == 'linux_arm64' && '-DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ -DCMAKE_Fortran_COMPILER=aarch64-linux-gnu-gfortran' || '' }}\" >> docker_env.txt\ndiff --git a/.github/config/out_of_tree_extensions.cmake b/.github/config/out_of_tree_extensions.cmake\nindex 0719c73e0420..62bbac5ed740 100644\n--- a/.github/config/out_of_tree_extensions.cmake\n+++ b/.github/config/out_of_tree_extensions.cmake\n@@ -28,12 +28,24 @@ duckdb_extension_load(httpfs\n     INCLUDE_DIR extension/httpfs/include\n     )\n \n+### Skip due to missing patch\n+if(FALSE)\n+################# AVRO\n+if (NOT MINGW)\n+    duckdb_extension_load(avro\n+            LOAD_TESTS DONT_LINK\n+            GIT_URL https://github.com/duckdb/duckdb-avro\n+            GIT_TAG ed18629fa56a97e0796a3582110b51ddd125159d\n+    )\n+endif()\n+endif()\n+\n ################## AWS\n if (NOT MINGW AND NOT ${WASM_ENABLED})\n     duckdb_extension_load(aws\n-            LOAD_TESTS\n+            ### TODO: re-enable LOAD_TESTS\n             GIT_URL https://github.com/duckdb/duckdb-aws\n-            GIT_TAG b3050f35c6e99fa35465230493eeab14a78a0409\n+            GIT_TAG e92e45b30ba17594b1101db22699a2244adfaeb1\n             APPLY_PATCHES\n             )\n endif()\n@@ -43,7 +55,7 @@ if (NOT MINGW AND NOT ${WASM_ENABLED})\n     duckdb_extension_load(azure\n             LOAD_TESTS\n             GIT_URL https://github.com/duckdb/duckdb-azure\n-            GIT_TAG e707cf361d76358743969cddf3acf97cfc87677b\n+            GIT_TAG 1593cb56745a51eb7d8415c1fd7d11a15f20f413\n             )\n endif()\n \n@@ -54,6 +66,7 @@ if (FALSE)\n if (NOT MINGW AND NOT \"${OS_NAME}\" STREQUAL \"linux\" AND NOT ${WASM_ENABLED})\n     duckdb_extension_load(delta\n             GIT_URL https://github.com/duckdb/duckdb-delta\n+            ## TODO: GIT_TAG 90f244b3d572c1692867950b562df8183957b7a8\n             GIT_TAG 6d626173e9efa6615c25eb08d979d1372100d5db\n             APPLY_PATCHES\n     )\n@@ -64,14 +77,13 @@ endif()\n duckdb_extension_load(excel\n     LOAD_TESTS\n     GIT_URL https://github.com/duckdb/duckdb-excel\n-    GIT_TAG f14e7c3beaf379c54b47b996aa896a1d814e1be8\n+    GIT_TAG b724b308b2b3a3c5644272cc84ec140fbcc7617d\n     INCLUDE_DIR src/excel/include\n     )\n \n ################# ICEBERG\n # Windows tests for iceberg currently not working\n-if(FALSE)\n-if (NOT WIN32)\n+IF (NOT WIN32)\n     set(LOAD_ICEBERG_TESTS \"LOAD_TESTS\")\n else ()\n     set(LOAD_ICEBERG_TESTS \"\")\n@@ -81,10 +93,9 @@ if (NOT MINGW AND NOT ${WASM_ENABLED} AND NOT ${MUSL_ENABLED})\n     duckdb_extension_load(iceberg\n #            ${LOAD_ICEBERG_TESTS} TODO: re-enable once autoloading test is fixed\n             GIT_URL https://github.com/duckdb/duckdb-iceberg\n-            GIT_TAG 43b4e37f6e859d6c1c67b787ac511659e9e0b6fb\n+            GIT_TAG 2db98c685f67373b347c3a8c435ef2e01c509697\n             )\n endif()\n-endif()\n \n ################# INET\n duckdb_extension_load(inet\n@@ -103,7 +114,7 @@ if (NOT MINGW AND NOT ${WASM_ENABLED})\n     duckdb_extension_load(postgres_scanner\n             DONT_LINK\n             GIT_URL https://github.com/duckdb/duckdb-postgres\n-            GIT_TAG 8461ed8b6f726564934e9c831cdc88d431e3148f\n+            GIT_TAG 98482ce5c144287f01e738275892cdb84ea9b5ce\n             APPLY_PATCHES\n             )\n endif()\n@@ -114,10 +125,9 @@ if (NOT MINGW)\n duckdb_extension_load(spatial\n     DONT_LINK LOAD_TESTS\n     GIT_URL https://github.com/duckdb/duckdb-spatial\n-    GIT_TAG 2905968a85703e5ca3698976daafd759554e1744\n+    GIT_TAG 4be6065edc313a53ff2196ff79c11a0d5e249720\n     INCLUDE_DIR spatial/include\n     TEST_DIR test/sql\n-    APPLY_PATCHES\n     )\n endif()\n \n@@ -132,7 +142,7 @@ endif()\n duckdb_extension_load(sqlite_scanner\n         ${STATIC_LINK_SQLITE} LOAD_TESTS\n         GIT_URL https://github.com/duckdb/duckdb-sqlite\n-        GIT_TAG 96e451c043afa40ee39b7581009ba0c72a523a12\n+        GIT_TAG 66a5fa2448398379dc21c18308e3b95d42d84015\n         APPLY_PATCHES\n         )\n \n@@ -147,7 +157,7 @@ duckdb_extension_load(vss\n         LOAD_TESTS\n         DONT_LINK\n         GIT_URL https://github.com/duckdb/duckdb-vss\n-        GIT_TAG 580e8918eb89f478cf2d233ca908ffbd3ec752c5\n+        GIT_TAG ba199a7215b75e83821ece13f6b921ccfcebd6ac\n         TEST_DIR test/sql\n         APPLY_PATCHES\n     )\n@@ -158,7 +168,7 @@ if (NOT MINGW AND NOT ${WASM_ENABLED} AND NOT ${MUSL_ENABLED})\n             DONT_LINK\n             LOAD_TESTS\n             GIT_URL https://github.com/duckdb/duckdb-mysql\n-            GIT_TAG c2a56813a9fe9cb8c24c424be646d41ab2f8e64f\n+            GIT_TAG 93469fc39a317acf916627e0ddc724a076bf7302\n             APPLY_PATCHES\n             )\n endif()\ndiff --git a/.github/patches/extensions/spatial/fix.patch b/.github/patches/extensions/spatial/fix.patch\ndeleted file mode 100644\nindex a81f3b637a89..000000000000\n--- a/.github/patches/extensions/spatial/fix.patch\n+++ /dev/null\n@@ -1,265 +0,0 @@\n-diff --git a/src/spatial/index/rtree/rtree_index.hpp b/src/spatial/index/rtree/rtree_index.hpp\n-index 3462613..126f220 100644\n---- a/src/spatial/index/rtree/rtree_index.hpp\n-+++ b/src/spatial/index/rtree/rtree_index.hpp\n-@@ -34,7 +34,7 @@ public:\n- \t\treturn std::move(res);\n- \t}\n- \n--\tstatic unique_ptr<PhysicalOperator> CreatePlan(PlanIndexInput &input);\n-+\tstatic PhysicalOperator &CreatePlan(PlanIndexInput &input);\n- \n- public:\n- \t//! Called when data is appended to the index. The lock obtained from InitializeLock must be held\n-diff --git a/src/spatial/index/rtree/rtree_index_create_logical.cpp b/src/spatial/index/rtree/rtree_index_create_logical.cpp\n-index 9c891e3..a2f7448 100644\n---- a/src/spatial/index/rtree/rtree_index_create_logical.cpp\n-+++ b/src/spatial/index/rtree/rtree_index_create_logical.cpp\n-@@ -39,8 +39,8 @@ void LogicalCreateRTreeIndex::ResolveColumnBindings(ColumnBindingResolver &res,\n- \t                                             [&](unique_ptr<Expression> *child) { res.VisitExpression(child); });\n- }\n- \n--static unique_ptr<PhysicalOperator> CreateNullFilter(const LogicalOperator &op, const vector<LogicalType> &types,\n--                                                     ClientContext &context) {\n-+static PhysicalOperator &CreateNullFilter(PhysicalPlanGenerator &generator, const LogicalOperator &op,\n-+                                          const vector<LogicalType> &types, ClientContext &context) {\n- \tvector<unique_ptr<Expression>> filter_select_list;\n- \n- \t// Filter NOT NULL on the GEOMETRY column\n-@@ -66,14 +66,13 @@ static unique_ptr<PhysicalOperator> CreateNullFilter(const LogicalOperator &op,\n- \t// Combine into an AND\n- \tauto and_expr = make_uniq_base<Expression, BoundConjunctionExpression>(\n- \t    ExpressionType::CONJUNCTION_AND, std::move(is_not_null_expr), std::move(is_not_empty_expr));\n--\n- \tfilter_select_list.push_back(std::move(and_expr));\n- \n--\treturn make_uniq<PhysicalFilter>(types, std::move(filter_select_list), op.estimated_cardinality);\n-+\treturn generator.Make<PhysicalFilter>(types, std::move(filter_select_list), op.estimated_cardinality);\n- }\n- \n--static unique_ptr<PhysicalOperator>\n--CreateBoundingBoxProjection(const LogicalOperator &op, const vector<LogicalType> &types, ClientContext &context) {\n-+static PhysicalOperator &CreateBoundingBoxProjection(PhysicalPlanGenerator &planner, const LogicalOperator &op,\n-+                                                     const vector<LogicalType> &types, ClientContext &context) {\n- \tauto &catalog = Catalog::GetSystemCatalog(context);\n- \n- \t// Get the bounding box function\n-@@ -96,11 +95,11 @@ CreateBoundingBoxProjection(const LogicalOperator &op, const vector<LogicalType>\n- \tselect_list.push_back(std::move(bbox_expr));\n- \tselect_list.push_back(std::move(rowid_expr));\n- \n--\treturn make_uniq<PhysicalProjection>(types, std::move(select_list), op.estimated_cardinality);\n-+\treturn planner.Make<PhysicalProjection>(types, std::move(select_list), op.estimated_cardinality);\n- }\n- \n--static unique_ptr<PhysicalOperator> CreateOrderByMinX(const LogicalOperator &op, const vector<LogicalType> &types,\n--                                                      ClientContext &context) {\n-+static PhysicalOperator &CreateOrderByMinX(PhysicalPlanGenerator &planner, const LogicalOperator &op,\n-+                                           const vector<LogicalType> &types, ClientContext &context) {\n- \tauto &catalog = Catalog::GetSystemCatalog(context);\n- \n- \t// Get the centroid value function\n-@@ -130,14 +129,15 @@ static unique_ptr<PhysicalOperator> CreateOrderByMinX(const LogicalOperator &op,\n- \tvector<BoundOrderByNode> orders;\n- \torders.emplace_back(OrderType::ASCENDING, OrderByNullType::NULLS_FIRST, std::move(xmin_expr));\n- \tvector<idx_t> projections = {0, 1};\n--\treturn make_uniq<PhysicalOrder>(types, std::move(orders), projections, op.estimated_cardinality);\n-+\treturn planner.Make<PhysicalOrder>(types, std::move(orders), projections, op.estimated_cardinality);\n- }\n- \n--unique_ptr<PhysicalOperator> RTreeIndex::CreatePlan(PlanIndexInput &input) {\n-+PhysicalOperator &RTreeIndex::CreatePlan(PlanIndexInput &input) {\n- \n- \tauto &op = input.op;\n- \tauto &table_scan = input.table_scan;\n- \tauto &context = input.context;\n-+\tauto &planner = input.planner;\n- \n- \t// generate a physical plan for the parallel index creation which consists of the following operators\n- \t// table scan - projection (for expression execution) - filter (NOT NULL) - order - create index\n-@@ -175,38 +175,35 @@ unique_ptr<PhysicalOperator> RTreeIndex::CreatePlan(PlanIndexInput &input) {\n- \tselect_list.push_back(make_uniq<BoundReferenceExpression>(LogicalType::ROW_TYPE, op.info->scan_types.size() - 1));\n- \n- \t// Project the expressions\n--\tauto projection = make_uniq<PhysicalProjection>(new_column_types, std::move(select_list), op.estimated_cardinality);\n--\tprojection->children.push_back(std::move(table_scan));\n-+\tauto &projection =\n-+\t    planner.Make<PhysicalProjection>(new_column_types, std::move(select_list), op.estimated_cardinality);\n-+\tprojection.children.push_back(table_scan);\n- \n- \t// Filter operator for (IS_NOT_NULL) and (NOT ST_IsEmpty) on the geometry column\n--\tauto null_filter = CreateNullFilter(op, new_column_types, context);\n--\tnull_filter->children.push_back(std::move(projection));\n-+\tauto &null_filter = CreateNullFilter(planner, op, new_column_types, context);\n-+\tnull_filter.children.push_back(projection);\n- \n- \t// Project the bounding box and the row ID\n- \tvector<LogicalType> projected_types = {GeoTypes::BOX_2DF(), LogicalType::ROW_TYPE};\n--\tauto bbox_proj = CreateBoundingBoxProjection(op, projected_types, context);\n--\tbbox_proj->children.push_back(std::move(null_filter));\n-+\tauto &bbox_proj = CreateBoundingBoxProjection(planner, op, projected_types, context);\n-+\tbbox_proj.children.push_back(null_filter);\n- \n- \t// Create an ORDER_BY operator to sort the bounding boxes by the xmin value\n--\tauto physical_order = CreateOrderByMinX(op, projected_types, context);\n--\tphysical_order->children.push_back(std::move(bbox_proj));\n-+\tauto &physical_order = CreateOrderByMinX(planner, op, projected_types, context);\n-+\tphysical_order.children.push_back(bbox_proj);\n- \n- \t// Now finally create the actual physical create index operator\n--\tauto physical_create_index =\n--\t    make_uniq<PhysicalCreateRTreeIndex>(op, op.table, op.info->column_ids, std::move(op.info),\n--\t                                        std::move(op.unbound_expressions), op.estimated_cardinality);\n--\n--\tphysical_create_index->children.push_back(std::move(physical_order));\n--\n--\treturn std::move(physical_create_index);\n-+\tauto &physical_create_index =\n-+\t    planner.Make<PhysicalCreateRTreeIndex>(op, op.table, op.info->column_ids, std::move(op.info),\n-+\t                                           std::move(op.unbound_expressions), op.estimated_cardinality);\n-+\tphysical_create_index.children.push_back(physical_order);\n-+\treturn physical_create_index;\n- }\n- \n- // TODO: Remove this\n--unique_ptr<PhysicalOperator> LogicalCreateRTreeIndex::CreatePlan(ClientContext &context,\n--                                                                 PhysicalPlanGenerator &generator) {\n--\n--\tauto table_scan = generator.CreatePlan(std::move(children[0]));\n-+PhysicalOperator &LogicalCreateRTreeIndex::CreatePlan(ClientContext &context, PhysicalPlanGenerator &planner) {\n- \n-+\tauto &table_scan = planner.CreatePlan(*children[0]);\n- \tauto &op = *this;\n- \n- \t// generate a physical plan for the parallel index creation which consists of the following operators\n-@@ -235,7 +232,7 @@ unique_ptr<PhysicalOperator> LogicalCreateRTreeIndex::CreatePlan(ClientContext &\n- \tD_ASSERT(op.info->index_type == RTreeIndex::TYPE_NAME);\n- \n- \t// table scan operator for index key columns and row IDs\n--\tgenerator.dependencies.AddDependency(op.table);\n-+\tplanner.dependencies.AddDependency(op.table);\n- \n- \tD_ASSERT(op.info->scan_types.size() - 1 <= op.info->names.size());\n- \tD_ASSERT(op.info->scan_types.size() - 1 <= op.info->column_ids.size());\n-@@ -255,30 +252,29 @@ unique_ptr<PhysicalOperator> LogicalCreateRTreeIndex::CreatePlan(ClientContext &\n- \tselect_list.push_back(make_uniq<BoundReferenceExpression>(LogicalType::ROW_TYPE, op.info->scan_types.size() - 1));\n- \n- \t// Project the expressions\n--\tauto projection = make_uniq<PhysicalProjection>(new_column_types, std::move(select_list), op.estimated_cardinality);\n--\tprojection->children.push_back(std::move(table_scan));\n-+\tauto &projection =\n-+\t    planner.Make<PhysicalProjection>(new_column_types, std::move(select_list), op.estimated_cardinality);\n-+\tprojection.children.push_back(table_scan);\n- \n- \t// Filter operator for (IS_NOT_NULL) and (NOT ST_IsEmpty) on the geometry column\n--\tauto null_filter = CreateNullFilter(op, new_column_types, context);\n--\tnull_filter->children.push_back(std::move(projection));\n-+\tauto &null_filter = CreateNullFilter(planner, op, new_column_types, context);\n-+\tnull_filter.children.push_back(projection);\n- \n- \t// Project the bounding box and the row ID\n- \tvector<LogicalType> projected_types = {GeoTypes::BOX_2DF(), LogicalType::ROW_TYPE};\n--\tauto bbox_proj = CreateBoundingBoxProjection(op, projected_types, context);\n--\tbbox_proj->children.push_back(std::move(null_filter));\n-+\tauto &bbox_proj = CreateBoundingBoxProjection(planner, op, projected_types, context);\n-+\tbbox_proj.children.push_back(null_filter);\n- \n- \t// Create an ORDER_BY operator to sort the bounding boxes by the xmin value\n--\tauto physical_order = CreateOrderByMinX(op, projected_types, context);\n--\tphysical_order->children.push_back(std::move(bbox_proj));\n-+\tauto &physical_order = CreateOrderByMinX(planner, op, projected_types, context);\n-+\tphysical_order.children.push_back(bbox_proj);\n- \n- \t// Now finally create the actual physical create index operator\n--\tauto physical_create_index =\n--\t    make_uniq<PhysicalCreateRTreeIndex>(op, op.table, op.info->column_ids, std::move(op.info),\n--\t                                        std::move(op.unbound_expressions), op.estimated_cardinality);\n--\n--\tphysical_create_index->children.push_back(std::move(physical_order));\n--\n--\treturn std::move(physical_create_index);\n-+\tauto &physical_create_index =\n-+\t    planner.Make<PhysicalCreateRTreeIndex>(op, op.table, op.info->column_ids, std::move(op.info),\n-+\t                                           std::move(op.unbound_expressions), op.estimated_cardinality);\n-+\tphysical_create_index.children.push_back(physical_order);\n-+\treturn physical_create_index;\n- }\n- \n- } // namespace duckdb\n-diff --git a/src/spatial/index/rtree/rtree_index_create_logical.hpp b/src/spatial/index/rtree/rtree_index_create_logical.hpp\n-index e960069..2b73e36 100644\n---- a/src/spatial/index/rtree/rtree_index_create_logical.hpp\n-+++ b/src/spatial/index/rtree/rtree_index_create_logical.hpp\n-@@ -25,7 +25,7 @@ public:\n- \tvoid ResolveColumnBindings(ColumnBindingResolver &res, vector<ColumnBinding> &bindings) override;\n- \n- \t// Actually create and plan the index creation\n--\tunique_ptr<PhysicalOperator> CreatePlan(ClientContext &context, PhysicalPlanGenerator &generator) override;\n-+\tPhysicalOperator &CreatePlan(ClientContext &context, PhysicalPlanGenerator &planner) override;\n- \n- \tvoid Serialize(Serializer &writer) const override {\n- \t\tLogicalExtensionOperator::Serialize(writer);\n-diff --git a/src/spatial/index/rtree/rtree_index_scan.cpp b/src/spatial/index/rtree/rtree_index_scan.cpp\n-index 2cb8db3..adf0135 100644\n---- a/src/spatial/index/rtree/rtree_index_scan.cpp\n-+++ b/src/spatial/index/rtree/rtree_index_scan.cpp\n-@@ -60,7 +60,7 @@ static unique_ptr<GlobalTableFunctionState> RTreeIndexScanInitGlobal(ClientConte\n- \t}\n- \n- \t// Initialize the storage scan state\n--\tresult->local_storage_state.Initialize(result->column_ids, input.filters.get());\n-+\tresult->local_storage_state.Initialize(result->column_ids, context, input.filters);\n- \tlocal_storage.InitializeScan(bind_data.table.GetStorage(), result->local_storage_state.local_state, input.filters);\n- \n- \t// Initialize the scan state for the index\n-diff --git a/src/spatial/modules/gdal/gdal_module.cpp b/src/spatial/modules/gdal/gdal_module.cpp\n-index b96928d..69307c0 100644\n---- a/src/spatial/modules/gdal/gdal_module.cpp\n-+++ b/src/spatial/modules/gdal/gdal_module.cpp\n-@@ -9,7 +9,7 @@\n- // DuckDB\n- #include \"duckdb/main/database.hpp\"\n- #include \"duckdb/common/enums/file_glob_options.hpp\"\n--#include \"duckdb/common/multi_file_reader.hpp\"\n-+#include \"duckdb/common/multi_file/multi_file_reader.hpp\"\n- #include \"duckdb/function/table/arrow.hpp\"\n- #include \"duckdb/main/extension_util.hpp\"\n- #include \"duckdb/parser/parsed_data/create_table_function_info.hpp\"\n-diff --git a/src/spatial/modules/shapefile/shapefile_module.cpp b/src/spatial/modules/shapefile/shapefile_module.cpp\n-index 5659fc8..4b51d75 100644\n---- a/src/spatial/modules/shapefile/shapefile_module.cpp\n-+++ b/src/spatial/modules/shapefile/shapefile_module.cpp\n-@@ -3,7 +3,7 @@\n- #include \"spatial/geometry/sgl.hpp\"\n- #include \"spatial/spatial_types.hpp\"\n- \n--#include \"duckdb/common/multi_file_reader.hpp\"\n-+#include \"duckdb/common/multi_file/multi_file_reader.hpp\"\n- #include \"duckdb/function/replacement_scan.hpp\"\n- #include \"duckdb/main/extension_util.hpp\"\n- #include \"duckdb/parser/expression/constant_expression.hpp\"\n-diff --git a/test/sql/geometry/st_dump.test b/test/sql/geometry/st_dump.test\n-index 3346f5f..c181720 100644\n---- a/test/sql/geometry/st_dump.test\n-+++ b/test/sql/geometry/st_dump.test\n-@@ -25,7 +25,7 @@ SElECT ST_Dump(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY'));\n- query I\n- SElECT ST_Dump(ST_GeomFromText('GEOMETRYCOLLECTION (POINT (0 0))'));\n- ----\n--[{'geom': POINT (0 0), 'path': [1]}]\n-+[{'geom': 'POINT (0 0)', 'path': [1]}]\n- \n- # Test with multipoint\n- query II\n-@@ -69,9 +69,9 @@ FROM (VALUES\n-     (ST_GeomFromText('GEOMETRYCOLLECTION (POINT (1 1), GEOMETRYCOLLECTION(POINT (3 3)), POINT (2 2))'))\n- ) as t(geom)\n- ----\n--[{'geom': POINT (1 1), 'path': [1]}, {'geom': POINT (2 2), 'path': [2]}, {'geom': POINT (3 3), 'path': [3, 1]}]\n-+[{'geom': 'POINT (1 1)', 'path': [1]}, {'geom': 'POINT (2 2)', 'path': [2]}, {'geom': 'POINT (3 3)', 'path': [3, 1]}]\n- NULL\n--[{'geom': POINT (1 1), 'path': [1]}, {'geom': POINT (3 3), 'path': [2, 1]}, {'geom': POINT (2 2), 'path': [3]}]\n-+[{'geom': 'POINT (1 1)', 'path': [1]}, {'geom': 'POINT (3 3)', 'path': [2, 1]}, {'geom': 'POINT (2 2)', 'path': [3]}]\n- \n- \n- # With Z and M\ndiff --git a/.github/workflows/Wasm.yml b/.github/workflows/Wasm.yml\nindex ad246525e6e2..9fe7d1931d56 100644\n--- a/.github/workflows/Wasm.yml\n+++ b/.github/workflows/Wasm.yml\n@@ -31,7 +31,6 @@ concurrency:\n \n env:\n   GH_TOKEN: ${{ secrets.GH_TOKEN }}\n-  CMAKE_POLICY_VERSION_MINIMUM: 3.5\n \n jobs:\n  wasm-extensions:\ndiff --git a/scripts/generate_extensions_function.py b/scripts/generate_extensions_function.py\nindex d6e861bfc6e9..586a8b87968b 100644\n--- a/scripts/generate_extensions_function.py\n+++ b/scripts/generate_extensions_function.py\n@@ -730,6 +730,7 @@ def write_header(data: ExtensionData):\n                                                                 {\"s3/credential_chain\", \"aws\"},\n                                                                 {\"gcs/credential_chain\", \"aws\"},\n                                                                 {\"r2/credential_chain\", \"aws\"},\n+                                                                {\"aws/credential_chain\", \"aws\"},\n                                                                 {\"azure/access_token\", \"azure\"},\n                                                                 {\"azure/config\", \"azure\"},\n                                                                 {\"azure/credential_chain\", \"azure\"},\ndiff --git a/src/common/exception.cpp b/src/common/exception.cpp\nindex 02b25f02b7cf..99b3d2662dec 100644\n--- a/src/common/exception.cpp\n+++ b/src/common/exception.cpp\n@@ -334,8 +334,7 @@ FatalException::FatalException(ExceptionType type, const string &msg) : Exceptio\n \n InternalException::InternalException(const string &msg) : Exception(ExceptionType::INTERNAL, msg) {\n #ifdef DUCKDB_CRASH_ON_ASSERT\n-\tPrinter::Print(\"ABORT THROWN BY INTERNAL EXCEPTION: \" + msg);\n-\tPrinter::Print(StackTrace::GetStackTrace());\n+\tPrinter::Print(\"ABORT THROWN BY INTERNAL EXCEPTION: \" + msg + \"\\n\" + StackTrace::GetStackTrace());\n \tabort();\n #endif\n }\ndiff --git a/src/common/printer.cpp b/src/common/printer.cpp\nindex 0c704b74d99e..e07d3f8f2bc9 100644\n--- a/src/common/printer.cpp\n+++ b/src/common/printer.cpp\n@@ -30,11 +30,17 @@ void Printer::RawPrint(OutputStream stream, const string &str) {\n #endif\n }\n \n-// LCOV_EXCL_START\n-void Printer::Print(OutputStream stream, const string &str) {\n+void Printer::DefaultLinePrint(OutputStream stream, const string &str) {\n \tPrinter::RawPrint(stream, str);\n \tPrinter::RawPrint(stream, \"\\n\");\n }\n+\n+line_printer_f Printer::line_printer = Printer::DefaultLinePrint;\n+\n+// LCOV_EXCL_START\n+void Printer::Print(OutputStream stream, const string &str) {\n+\tPrinter::line_printer(stream, str);\n+}\n void Printer::Flush(OutputStream stream) {\n #ifndef DUCKDB_DISABLE_PRINT\n \tfflush(stream == OutputStream::STREAM_STDERR ? stderr : stdout);\ndiff --git a/src/execution/operator/persistent/physical_insert.cpp b/src/execution/operator/persistent/physical_insert.cpp\nindex 6e02f0ff5983..0ecec8f10856 100644\n--- a/src/execution/operator/persistent/physical_insert.cpp\n+++ b/src/execution/operator/persistent/physical_insert.cpp\n@@ -276,7 +276,7 @@ static idx_t PerformOnConflictAction(InsertLocalState &lstate, InsertGlobalState\n \t\t}\n \t\tauto &local_storage = LocalStorage::Get(context.client, data_table.db);\n \t\tif (gstate.initialized) {\n-\t\t\t// Flush the data first, it might be referenced by the Update\n+\t\t\t// Flush any local appends that could be referenced by the UPDATE.\n \t\t\tdata_table.FinalizeLocalAppend(gstate.append_state);\n \t\t\tgstate.initialized = false;\n \t\t}\n@@ -289,6 +289,11 @@ static idx_t PerformOnConflictAction(InsertLocalState &lstate, InsertGlobalState\n \t\tdata_table.Delete(delete_state, context.client, row_ids, update_chunk.size());\n \t} else {\n \t\tauto &local_storage = LocalStorage::Get(context.client, data_table.db);\n+\t\tif (gstate.initialized) {\n+\t\t\t// Flush any local appends that could be referenced by the DELETE.\n+\t\t\tdata_table.FinalizeLocalAppend(gstate.append_state);\n+\t\t\tgstate.initialized = false;\n+\t\t}\n \t\tlocal_storage.Delete(data_table, row_ids, update_chunk.size());\n \t}\n \ndiff --git a/src/include/duckdb/common/printer.hpp b/src/include/duckdb/common/printer.hpp\nindex eba11c336b8e..b3cb27e5d730 100644\n--- a/src/include/duckdb/common/printer.hpp\n+++ b/src/include/duckdb/common/printer.hpp\n@@ -15,6 +15,8 @@ namespace duckdb {\n \n enum class OutputStream : uint8_t { STREAM_STDOUT = 1, STREAM_STDERR = 2 };\n \n+typedef void (*line_printer_f)(OutputStream stream, const string &str);\n+\n //! Printer is a static class that allows printing to logs or stdout/stderr\n class Printer {\n public:\n@@ -40,5 +42,11 @@ class Printer {\n \tDUCKDB_API static bool IsTerminal(OutputStream stream);\n \t//! The terminal width\n \tDUCKDB_API static idx_t TerminalWidth();\n+\n+\t// hook to allow capturing the output and routing it somewhere else / reformat it};\n+\tstatic line_printer_f line_printer;\n+\n+private:\n+\tstatic void DefaultLinePrint(OutputStream stream, const string &str);\n };\n } // namespace duckdb\ndiff --git a/src/include/duckdb/main/client_context_state.hpp b/src/include/duckdb/main/client_context_state.hpp\nindex 80cdc8b8f33c..fcedae943dea 100644\n--- a/src/include/duckdb/main/client_context_state.hpp\n+++ b/src/include/duckdb/main/client_context_state.hpp\n@@ -13,6 +13,7 @@\n #include \"duckdb/common/optional_ptr.hpp\"\n #include \"duckdb/main/config.hpp\"\n #include \"duckdb/main/valid_checker.hpp\"\n+#include \"duckdb/planner/expression/bound_parameter_data.hpp\"\n #include \"duckdb/transaction/meta_transaction.hpp\"\n #include \"duckdb/transaction/transaction_manager.hpp\"\n #include \"duckdb/main/database_manager.hpp\"\n@@ -39,6 +40,11 @@ struct PreparedStatementCallbackInfo {\n \tconst PendingQueryParameters &parameters;\n };\n \n+struct BindPreparedStatementCallbackInfo {\n+\tPreparedStatementData &prepared_statement;\n+\toptional_ptr<case_insensitive_map_t<BoundParameterData>> parameters;\n+};\n+\n //! ClientContextState is virtual base class for ClientContext-local (or Query-Local, using QueryEnd callback) state\n //! e.g. caches that need to live as long as a ClientContext or Query.\n class ClientContextState {\n@@ -78,6 +84,10 @@ class ClientContextState {\n \t                                          RebindQueryInfo current_rebind) {\n \t\treturn RebindQueryInfo::DO_NOT_REBIND;\n \t}\n+\tvirtual RebindQueryInfo OnRebindPreparedStatement(ClientContext &context, BindPreparedStatementCallbackInfo &info,\n+\t                                                  RebindQueryInfo current_rebind) {\n+\t\treturn RebindQueryInfo::DO_NOT_REBIND;\n+\t}\n \tvirtual void WriteProfilingInformation(std::ostream &ss) {\n \t}\n \tvirtual void OnTaskStart(ClientContext &context) {\ndiff --git a/src/include/duckdb/main/extension_entries.hpp b/src/include/duckdb/main/extension_entries.hpp\nindex e4a585d59b5b..9e906a2a09c4 100644\n--- a/src/include/duckdb/main/extension_entries.hpp\n+++ b/src/include/duckdb/main/extension_entries.hpp\n@@ -527,6 +527,7 @@ static constexpr ExtensionFunctionEntry EXTENSION_FUNCTIONS[] = {\n     {\"sqlite_scan\", \"sqlite_scanner\", CatalogType::TABLE_FUNCTION_ENTRY},\n     {\"sqlsmith\", \"sqlsmith\", CatalogType::TABLE_FUNCTION_ENTRY},\n     {\"sqrt\", \"core_functions\", CatalogType::SCALAR_FUNCTION_ENTRY},\n+    {\"st_affine\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_area\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_area_spheroid\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_asgeojson\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n@@ -536,6 +537,7 @@ static constexpr ExtensionFunctionEntry EXTENSION_FUNCTIONS[] = {\n     {\"st_aswkb\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_boundary\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_buffer\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n+    {\"st_buildarea\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_centroid\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_collect\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_collectionextract\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n@@ -543,6 +545,12 @@ static constexpr ExtensionFunctionEntry EXTENSION_FUNCTIONS[] = {\n     {\"st_contains\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_containsproperly\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_convexhull\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n+    {\"st_coverageinvalidedges\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n+    {\"st_coverageinvalidedges_agg\", \"spatial\", CatalogType::AGGREGATE_FUNCTION_ENTRY},\n+    {\"st_coveragesimplify\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n+    {\"st_coveragesimplify_agg\", \"spatial\", CatalogType::AGGREGATE_FUNCTION_ENTRY},\n+    {\"st_coverageunion\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n+    {\"st_coverageunion_agg\", \"spatial\", CatalogType::AGGREGATE_FUNCTION_ENTRY},\n     {\"st_coveredby\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_covers\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_crosses\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n@@ -600,12 +608,14 @@ static constexpr ExtensionFunctionEntry EXTENSION_FUNCTIONS[] = {\n     {\"st_makeline\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_makepolygon\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_makevalid\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n+    {\"st_maximuminscribedcircle\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_minimumrotatedrectangle\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_mmax\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_mmin\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_multi\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_ngeometries\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_ninteriorrings\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n+    {\"st_node\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_normalize\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_npoints\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_numgeometries\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n@@ -623,6 +633,7 @@ static constexpr ExtensionFunctionEntry EXTENSION_FUNCTIONS[] = {\n     {\"st_pointonsurface\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_points\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_polygon2dfromwkb\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n+    {\"st_polygonize\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_quadkey\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_read\", \"spatial\", CatalogType::TABLE_FUNCTION_ENTRY},\n     {\"st_read_meta\", \"spatial\", CatalogType::TABLE_FUNCTION_ENTRY},\n@@ -631,12 +642,19 @@ static constexpr ExtensionFunctionEntry EXTENSION_FUNCTIONS[] = {\n     {\"st_reduceprecision\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_removerepeatedpoints\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_reverse\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n+    {\"st_rotate\", \"spatial\", CatalogType::MACRO_ENTRY},\n+    {\"st_rotatex\", \"spatial\", CatalogType::MACRO_ENTRY},\n+    {\"st_rotatey\", \"spatial\", CatalogType::MACRO_ENTRY},\n+    {\"st_rotatez\", \"spatial\", CatalogType::MACRO_ENTRY},\n+    {\"st_scale\", \"spatial\", CatalogType::MACRO_ENTRY},\n     {\"st_shortestline\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_simplify\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_simplifypreservetopology\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_startpoint\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_touches\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_transform\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n+    {\"st_translate\", \"spatial\", CatalogType::MACRO_ENTRY},\n+    {\"st_transscale\", \"spatial\", CatalogType::MACRO_ENTRY},\n     {\"st_union\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n     {\"st_union_agg\", \"spatial\", CatalogType::AGGREGATE_FUNCTION_ENTRY},\n     {\"st_voronoidiagram\", \"spatial\", CatalogType::SCALAR_FUNCTION_ENTRY},\n@@ -1075,6 +1093,7 @@ static constexpr ExtensionEntry EXTENSION_SECRET_PROVIDERS[] = {\n     {\"s3/credential_chain\", \"aws\"},\n     {\"gcs/credential_chain\", \"aws\"},\n     {\"r2/credential_chain\", \"aws\"},\n+    {\"aws/credential_chain\", \"aws\"},\n     {\"azure/access_token\", \"azure\"},\n     {\"azure/config\", \"azure\"},\n     {\"azure/credential_chain\", \"azure\"},\ndiff --git a/src/include/duckdb/parser/constraints/unique_constraint.hpp b/src/include/duckdb/parser/constraints/unique_constraint.hpp\nindex a3811160ae66..ded23b0d3bfd 100644\n--- a/src/include/duckdb/parser/constraints/unique_constraint.hpp\n+++ b/src/include/duckdb/parser/constraints/unique_constraint.hpp\n@@ -22,6 +22,7 @@ class UniqueConstraint : public Constraint {\n \n public:\n \tDUCKDB_API UniqueConstraint(const LogicalIndex index, const bool is_primary_key);\n+\tDUCKDB_API UniqueConstraint(const LogicalIndex index, string column_name, const bool is_primary_key);\n \tDUCKDB_API UniqueConstraint(vector<string> columns, const bool is_primary_key);\n \n public:\n@@ -46,8 +47,6 @@ class UniqueConstraint : public Constraint {\n \tvector<LogicalIndex> GetLogicalIndexes(const ColumnList &columns) const;\n \t//! Get the name of the constraint.\n \tstring GetName(const string &table_name) const;\n-\t//! Sets a single column name. Does nothing, if the name is already set.\n-\tvoid SetColumnName(const string &name);\n \n private:\n \tUniqueConstraint();\ndiff --git a/src/include/duckdb/planner/binder.hpp b/src/include/duckdb/planner/binder.hpp\nindex df08140694bf..d0601ec79282 100644\n--- a/src/include/duckdb/planner/binder.hpp\n+++ b/src/include/duckdb/planner/binder.hpp\n@@ -143,8 +143,9 @@ class Binder : public enable_shared_from_this<Binder> {\n \tvector<unique_ptr<BoundConstraint>> BindConstraints(const TableCatalogEntry &table);\n \tvector<unique_ptr<BoundConstraint>> BindNewConstraints(vector<unique_ptr<Constraint>> &constraints,\n \t                                                       const string &table_name, const ColumnList &columns);\n-\tunique_ptr<BoundConstraint> BindConstraint(Constraint &constraint, const string &table, const ColumnList &columns);\n-\tunique_ptr<BoundConstraint> BindUniqueConstraint(Constraint &constraint, const string &table,\n+\tunique_ptr<BoundConstraint> BindConstraint(const Constraint &constraint, const string &table,\n+\t                                           const ColumnList &columns);\n+\tunique_ptr<BoundConstraint> BindUniqueConstraint(const Constraint &constraint, const string &table,\n \t                                                 const ColumnList &columns);\n \n \tBoundStatement BindAlterAddIndex(BoundStatement &result, CatalogEntry &entry, unique_ptr<AlterInfo> alter_info);\ndiff --git a/src/parser/constraints/unique_constraint.cpp b/src/parser/constraints/unique_constraint.cpp\nindex 51c4631b39c6..d3379be42b91 100644\n--- a/src/parser/constraints/unique_constraint.cpp\n+++ b/src/parser/constraints/unique_constraint.cpp\n@@ -10,6 +10,10 @@ UniqueConstraint::UniqueConstraint() : Constraint(ConstraintType::UNIQUE), index\n UniqueConstraint::UniqueConstraint(const LogicalIndex index, const bool is_primary_key)\n     : Constraint(ConstraintType::UNIQUE), index(index), is_primary_key(is_primary_key) {\n }\n+UniqueConstraint::UniqueConstraint(const LogicalIndex index, string column_name_p, const bool is_primary_key)\n+    : UniqueConstraint(index, is_primary_key) {\n+\tcolumns.push_back(std::move(column_name_p));\n+}\n \n UniqueConstraint::UniqueConstraint(vector<string> columns, const bool is_primary_key)\n     : Constraint(ConstraintType::UNIQUE), index(DConstants::INVALID_INDEX), columns(std::move(columns)),\n@@ -32,10 +36,7 @@ unique_ptr<Constraint> UniqueConstraint::Copy() const {\n \t\treturn make_uniq<UniqueConstraint>(columns, is_primary_key);\n \t}\n \n-\tauto result = make_uniq<UniqueConstraint>(index, is_primary_key);\n-\tif (!columns.empty()) {\n-\t\tresult->columns.push_back(columns[0]);\n-\t}\n+\tauto result = make_uniq<UniqueConstraint>(index, columns.empty() ? string() : columns[0], is_primary_key);\n \treturn std::move(result);\n }\n \n@@ -95,11 +96,4 @@ string UniqueConstraint::GetName(const string &table_name) const {\n \treturn type_name + \"_\" + table_name + name;\n }\n \n-void UniqueConstraint::SetColumnName(const string &column_name) {\n-\tif (!columns.empty()) {\n-\t\treturn;\n-\t}\n-\tcolumns.push_back(column_name);\n-}\n-\n } // namespace duckdb\ndiff --git a/src/parser/transform/constraint/transform_constraint.cpp b/src/parser/transform/constraint/transform_constraint.cpp\nindex 8439fc863258..e73b15cdc47a 100644\n--- a/src/parser/transform/constraint/transform_constraint.cpp\n+++ b/src/parser/transform/constraint/transform_constraint.cpp\n@@ -105,9 +105,9 @@ unique_ptr<Constraint> Transformer::TransformConstraint(duckdb_libpgquery::PGCon\n \tcase duckdb_libpgquery::PG_CONSTR_CHECK:\n \t\treturn TransformConstraint(constraint);\n \tcase duckdb_libpgquery::PG_CONSTR_PRIMARY:\n-\t\treturn make_uniq<UniqueConstraint>(LogicalIndex(index), true);\n+\t\treturn make_uniq<UniqueConstraint>(LogicalIndex(index), column.GetName(), true);\n \tcase duckdb_libpgquery::PG_CONSTR_UNIQUE:\n-\t\treturn make_uniq<UniqueConstraint>(LogicalIndex(index), false);\n+\t\treturn make_uniq<UniqueConstraint>(LogicalIndex(index), column.GetName(), false);\n \tcase duckdb_libpgquery::PG_CONSTR_NULL:\n \t\treturn nullptr;\n \tcase duckdb_libpgquery::PG_CONSTR_GENERATED_VIRTUAL: {\ndiff --git a/src/planner/binder/statement/bind_create_table.cpp b/src/planner/binder/statement/bind_create_table.cpp\nindex 8c7943ff77fc..9a9c16f05712 100644\n--- a/src/planner/binder/statement/bind_create_table.cpp\n+++ b/src/planner/binder/statement/bind_create_table.cpp\n@@ -102,7 +102,7 @@ vector<unique_ptr<BoundConstraint>> Binder::BindNewConstraints(vector<unique_ptr\n \treturn bound_constraints;\n }\n \n-unique_ptr<BoundConstraint> BindCheckConstraint(Binder &binder, Constraint &constraint, const string &table,\n+unique_ptr<BoundConstraint> BindCheckConstraint(Binder &binder, const Constraint &constraint, const string &table,\n                                                 const ColumnList &columns) {\n \tauto bound_constraint = make_uniq<BoundCheckConstraint>();\n \tauto &bound_check = bound_constraint->Cast<BoundCheckConstraint>();\n@@ -112,15 +112,14 @@ unique_ptr<BoundConstraint> BindCheckConstraint(Binder &binder, Constraint &cons\n \tauto &check = constraint.Cast<CheckConstraint>();\n \n \t// Create a copy of the unbound expression because binding can invalidate it.\n-\tauto unbound_expression = check.expression->Copy();\n+\tauto check_copy = check.expression->Copy();\n \n \t// Bind the constraint and reset the original expression.\n-\tbound_check.expression = check_binder.Bind(check.expression);\n-\tcheck.expression = std::move(unbound_expression);\n+\tbound_check.expression = check_binder.Bind(check_copy);\n \treturn std::move(bound_constraint);\n }\n \n-unique_ptr<BoundConstraint> Binder::BindUniqueConstraint(Constraint &constraint, const string &table,\n+unique_ptr<BoundConstraint> Binder::BindUniqueConstraint(const Constraint &constraint, const string &table,\n                                                          const ColumnList &columns) {\n \tauto &unique = constraint.Cast<UniqueConstraint>();\n \n@@ -132,7 +131,6 @@ unique_ptr<BoundConstraint> Binder::BindUniqueConstraint(Constraint &constraint,\n \t// If set, then the UNIQUE constraint is defined on a single column.\n \tif (unique.HasIndex()) {\n \t\tauto &col = columns.GetColumn(unique.GetIndex());\n-\t\tunique.SetColumnName(col.Name());\n \t\tindexes.push_back(col.Physical());\n \t\tindex_set.insert(col.Physical());\n \t\treturn make_uniq<BoundUniqueConstraint>(std::move(indexes), std::move(index_set), unique.IsPrimaryKey());\n@@ -159,7 +157,7 @@ unique_ptr<BoundConstraint> Binder::BindUniqueConstraint(Constraint &constraint,\n \treturn make_uniq<BoundUniqueConstraint>(std::move(indexes), std::move(index_set), unique.IsPrimaryKey());\n }\n \n-unique_ptr<BoundConstraint> BindForeignKey(Constraint &constraint) {\n+unique_ptr<BoundConstraint> BindForeignKey(const Constraint &constraint) {\n \tauto &fk = constraint.Cast<ForeignKeyConstraint>();\n \tD_ASSERT((fk.info.type == ForeignKeyType::FK_TYPE_FOREIGN_KEY_TABLE && !fk.info.pk_keys.empty()) ||\n \t         (fk.info.type == ForeignKeyType::FK_TYPE_PRIMARY_KEY_TABLE && !fk.info.pk_keys.empty()) ||\n@@ -184,7 +182,7 @@ unique_ptr<BoundConstraint> BindForeignKey(Constraint &constraint) {\n \treturn make_uniq<BoundForeignKeyConstraint>(fk.info, std::move(pk_key_set), std::move(fk_key_set));\n }\n \n-unique_ptr<BoundConstraint> Binder::BindConstraint(Constraint &constraint, const string &table,\n+unique_ptr<BoundConstraint> Binder::BindConstraint(const Constraint &constraint, const string &table,\n                                                    const ColumnList &columns) {\n \tswitch (constraint.type) {\n \tcase ConstraintType::CHECK: {\ndiff --git a/src/planner/binder/statement/bind_execute.cpp b/src/planner/binder/statement/bind_execute.cpp\nindex 86799dc9514c..cceb6796cd37 100644\n--- a/src/planner/binder/statement/bind_execute.cpp\n+++ b/src/planner/binder/statement/bind_execute.cpp\n@@ -61,7 +61,18 @@ BoundStatement Binder::Bind(ExecuteStatement &stmt) {\n \t}\n \tunique_ptr<LogicalOperator> rebound_plan;\n \n-\tif (prepared->RequireRebind(context, &bind_values)) {\n+\tRebindQueryInfo rebind = RebindQueryInfo::DO_NOT_REBIND;\n+\tif (prepared->RequireRebind(context, bind_values)) {\n+\t\trebind = RebindQueryInfo::ATTEMPT_TO_REBIND;\n+\t}\n+\tfor (auto &state : context.registered_state->States()) {\n+\t\tBindPreparedStatementCallbackInfo info {*prepared, bind_values};\n+\t\tauto new_rebind = state->OnRebindPreparedStatement(context, info, rebind);\n+\t\tif (new_rebind == RebindQueryInfo::ATTEMPT_TO_REBIND) {\n+\t\t\trebind = RebindQueryInfo::ATTEMPT_TO_REBIND;\n+\t\t}\n+\t}\n+\tif (rebind == RebindQueryInfo::ATTEMPT_TO_REBIND) {\n \t\t// catalog was modified or statement does not have clear types: rebind the statement before running the execute\n \t\tPlanner prepared_planner(context);\n \t\tprepared_planner.parameter_data = bind_values;\ndiff --git a/tools/pythonpkg/src/arrow/arrow_array_stream.cpp b/tools/pythonpkg/src/arrow/arrow_array_stream.cpp\nindex 69cc0a3e87b1..cee4f0b1023d 100644\n--- a/tools/pythonpkg/src/arrow/arrow_array_stream.cpp\n+++ b/tools/pythonpkg/src/arrow/arrow_array_stream.cpp\n@@ -306,6 +306,37 @@ py::object TransformFilterRecursive(TableFilter &filter, vector<string> column_r\n \t\tauto &constant_filter = filter.Cast<ConstantFilter>();\n \t\tauto constant_field = field(py::tuple(py::cast(column_ref)));\n \t\tauto constant_value = GetScalar(constant_filter.constant, timezone_config, type);\n+\n+\t\tbool is_nan = false;\n+\t\tauto &constant = constant_filter.constant;\n+\t\tauto &constant_type = constant.type();\n+\t\tif (constant_type.id() == LogicalTypeId::FLOAT) {\n+\t\t\tis_nan = Value::IsNan(constant.GetValue<float>());\n+\t\t} else if (constant_type.id() == LogicalTypeId::DOUBLE) {\n+\t\t\tis_nan = Value::IsNan(constant.GetValue<double>());\n+\t\t}\n+\n+\t\t// Special handling for NaN comparisons (to explicitly violate IEEE-754)\n+\t\tif (is_nan) {\n+\t\t\tswitch (constant_filter.comparison_type) {\n+\t\t\tcase ExpressionType::COMPARE_EQUAL:\n+\t\t\tcase ExpressionType::COMPARE_GREATERTHANOREQUALTO:\n+\t\t\t\treturn constant_field.attr(\"is_nan\")();\n+\t\t\tcase ExpressionType::COMPARE_LESSTHAN:\n+\t\t\tcase ExpressionType::COMPARE_NOTEQUAL:\n+\t\t\t\treturn constant_field.attr(\"is_nan\")().attr(\"__invert__\")();\n+\t\t\tcase ExpressionType::COMPARE_GREATERTHAN:\n+\t\t\t\t// Nothing is greater than NaN\n+\t\t\t\treturn import_cache.pyarrow.dataset().attr(\"scalar\")(false);\n+\t\t\tcase ExpressionType::COMPARE_LESSTHANOREQUALTO:\n+\t\t\t\t// Everything is less than or equal to NaN\n+\t\t\t\treturn import_cache.pyarrow.dataset().attr(\"scalar\")(true);\n+\t\t\tdefault:\n+\t\t\t\tthrow NotImplementedException(\"Unsupported comparison type (%s) for NaN values\",\n+\t\t\t\t                              EnumUtil::ToString(constant_filter.comparison_type));\n+\t\t\t}\n+\t\t}\n+\n \t\tswitch (constant_filter.comparison_type) {\n \t\tcase ExpressionType::COMPARE_EQUAL:\n \t\t\treturn constant_field.attr(\"__eq__\")(constant_value);\n",
  "test_patch": "diff --git a/test/sql/catalog/table/test_concurrent_constraints.test_slow b/test/sql/catalog/table/test_concurrent_constraints.test_slow\nnew file mode 100644\nindex 000000000000..be716efe456f\n--- /dev/null\n+++ b/test/sql/catalog/table/test_concurrent_constraints.test_slow\n@@ -0,0 +1,15 @@\n+# name: test/sql/catalog/table/test_concurrent_constraints.test_slow\n+# group: [table]\n+\n+statement ok\n+CREATE TABLE tbl_constraints(pk INT PRIMARY KEY, u INT UNIQUE, s INT CHECK (s > 42), d INT CHECK (d + 1 < 42));\n+\n+\n+concurrentloop threadid 0 100\n+\n+statement ok\n+SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n+      FROM pg_catalog.pg_constraint c\n+      INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n+\n+endloop\ndiff --git a/test/sql/index/art/constraints/test_art_upsert_duplicate.test b/test/sql/index/art/constraints/test_art_upsert_duplicate.test\nnew file mode 100644\nindex 000000000000..9cd7161ec307\n--- /dev/null\n+++ b/test/sql/index/art/constraints/test_art_upsert_duplicate.test\n@@ -0,0 +1,28 @@\n+# name: test/sql/index/art/constraints/test_art_upsert_duplicate.test\n+# description: Test an UPSERT with a duplicate in the VALUES list.\n+# group: [constraints]\n+\n+statement ok\n+PRAGMA enable_verification;\n+\n+statement ok\n+CREATE TABLE hero (\n+        name VARCHAR NOT NULL,\n+        secret_name VARCHAR NOT NULL,\n+        age INTEGER,\n+        PRIMARY KEY (name));\n+\n+statement ok\n+CREATE INDEX ix_hero_age ON hero (age);\n+\n+statement ok\n+INSERT INTO hero (name, secret_name, age)\n+VALUES\n+\t('Captain North America', 'Esteban Rogelios', 93),\n+\t('Rusty-Man', 'Tommy Sharp', 48),\n+\t('Tarantula', 'Natalia Roman-on', 32),\n+\t('Spider-Boy', 'Pedro Parqueador', 17),\n+\t('Captain North America', 'Esteban Rogelios', 93)\n+ON CONFLICT (name) DO UPDATE\n+SET\tsecret_name = EXCLUDED.secret_name,\n+\tage = EXCLUDED.age;\n\\ No newline at end of file\ndiff --git a/test/sql/storage/compression/alprd/alprd_tpcds.test_slow b/test/sql/storage/compression/alprd/alprd_tpcds.test_slow\nindex 58a31e21bc39..3007a4927f25 100644\n--- a/test/sql/storage/compression/alprd/alprd_tpcds.test_slow\n+++ b/test/sql/storage/compression/alprd/alprd_tpcds.test_slow\n@@ -656,7 +656,17 @@ PRAGMA tpcds(${i})\n \n endloop\n \n-loop i 50 99\n+# skip tpcds 67 - inconsistent without decimals\n+loop i 50 66\n+\n+query I\n+PRAGMA tpcds(${i})\n+----\n+<FILE>:extension/tpcds/dsdgen/answers/sf1/${i}.csv\n+\n+endloop\n+\n+loop i 68 99\n \n query I\n PRAGMA tpcds(${i})\ndiff --git a/tools/pythonpkg/tests/fast/arrow/test_filter_pushdown.py b/tools/pythonpkg/tests/fast/arrow/test_filter_pushdown.py\nindex 9a8cc743f96d..2d999c5dd584 100644\n--- a/tools/pythonpkg/tests/fast/arrow/test_filter_pushdown.py\n+++ b/tools/pythonpkg/tests/fast/arrow/test_filter_pushdown.py\n@@ -986,3 +986,30 @@ def test_pushdown_of_optional_filter(self, duckdb_cursor):\n             ('product_code', 100),\n             ('price', 100),\n         ]\n+\n+    # DuckDB intentionally violates IEEE-754 when it comes to NaNs, ensuring a total ordering where NaN is the greatest value\n+    def test_nan_filter_pushdown(self, duckdb_cursor):\n+        duckdb_cursor.execute(\n+            \"\"\"\n+            create table test as select a::DOUBLE a from VALUES\n+                ('inf'),\n+                ('nan'),\n+                ('0.34234'),\n+                ('34234234.00005'),\n+                ('-nan')\n+            t(a);\n+        \"\"\"\n+        )\n+\n+        def assert_equal_results(con, arrow_table, query):\n+            duckdb_res = con.sql(query.format(table='test')).fetchall()\n+            arrow_res = con.sql(query.format(table='arrow_table')).fetchall()\n+            assert len(duckdb_res) == len(arrow_res)\n+\n+        arrow_table = duckdb_cursor.table('test').arrow()\n+        assert_equal_results(duckdb_cursor, arrow_table, \"select * from {table} where a > 'NaN'::FLOAT\")\n+        assert_equal_results(duckdb_cursor, arrow_table, \"select * from {table} where a >= 'NaN'::FLOAT\")\n+        assert_equal_results(duckdb_cursor, arrow_table, \"select * from {table} where a < 'NaN'::FLOAT\")\n+        assert_equal_results(duckdb_cursor, arrow_table, \"select * from {table} where a <= 'NaN'::FLOAT\")\n+        assert_equal_results(duckdb_cursor, arrow_table, \"select * from {table} where a = 'NaN'::FLOAT\")\n+        assert_equal_results(duckdb_cursor, arrow_table, \"select * from {table} where a != 'NaN'::FLOAT\")\n",
  "problem_statement": "Can't filter for NaN in polars replacement scan\n### What happens?\n\nDuckDB fails to filter for nan values in polars dataframe, even though it does display them correctly without filter (and it filters correctly on more complicated queries). The same problem happens with parquets (written in C# using ParquetSharp) but it's much harder to produce a MWE for that.\n\n### To Reproduce\n\n```python\nimport duckdb \nimport polars as pl\nimport numpy as np\ndf = pl.DataFrame({'number': [-np.nan, np.nan]})\nduckdb.query(\"\"\"FROM df\"\"\")\n```\n```\n# correct replacement scan\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 number \u2502\n\u2502 double \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   -nan \u2502\n\u2502    nan \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n```\n```python\nduckdb.query(\"\"\"FROM df WHERE number = 'NaN'::FLOAT\"\"\")\n```\n```\n# incorrect, should show two rows because NaNs compare equal to all other NaNs in DuckDB according to https://duckdb.org/docs/stable/sql/dialect/sql_quirks#nan-values\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 number \u2502\n\u2502 double \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 0 rows \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n```\n\n```python\nduckdb.query(\"\"\"SELECT DISTINCT * FROM df\"\"\")\n```\n```\n#correct, shows one rows because all nans are equal to each other\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 number \u2502\n\u2502 double \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502    nan \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n```\n\nIn pure DuckDB, `NaN` always compare equal:\n\n```sql\nCREATE OR REPLACE TABLE tbl AS (SELECT -'NaN'::FLOAT AS number UNION ALL SELECT 'NaN'::FLOAT);\nFROM tbl WHERE number = 'NaN'::FLOAT\n```\n```\n# correct\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 number \u2502\n\u2502 float  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   -nan \u2502\n\u2502    nan \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n```\n\n\n### OS:\n\nLinux\n\n### DuckDB Version:\n\n'1.2.2-dev83'\n\n### DuckDB Client:\n\nPython\n\n### Hardware:\n\n.\n\n### Full Name:\n\nSoeren Wolfers\n\n### Affiliation:\n\nG-Research\n\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\n\nI have not tested with any build\n\n### Did you include all relevant data sets for reproducing the issue?\n\nNo - Other reason (please specify in the issue body)\n\n### Did you include all code required to reproduce the issue?\n\n- [x] Yes, I have\n\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\n\n- [x] Yes, I have\n\"Cannot copy bound expression\" random error\n### What happens?\n\n In the test.ddb database, \n \n ```SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n FROM pg_catalog. pg_constraint c\n INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n```\n \nIf I do this sentence over and over again, I get random errors.\n\nThe test.ddb datafile is available for download below.\nhttps://github.com/goosedb-net/goosedb-download/releases/download/test/test.tgz\n\n\n\n__STAGE__$ cat /etc/os-release \nPRETTY_NAME=\"Ubuntu 24.04.1 LTS\"\nNAME=\"Ubuntu\"\nVERSION_ID=\"24.04\"\nVERSION=\"24.04.1 LTS (Noble Numbat)\"\nVERSION_CODENAME=noble\nID=ubuntu\nID_LIKE=debian\nHOME_URL=\"https://www.ubuntu.com/\"\nSUPPORT_URL=\"https://help.ubuntu.com/\"\nBUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"\nPRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"\nUBUNTU_CODENAME=noble\nLOGO=ubuntu-logo\n(myenv) [goose@tnt-factory:/tmp/test]\n__STAGE__$ \n\n\n```\n#################################################################################################################################\n# case 1\n#################################################################################################################################\n\n__STAGE__$ duckdb test.ddb \nv1.2.1 8e52ec4395\nEnter \".help\" for usage hints.\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n  FROM pg_catalog.pg_constraint c\n  INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    oid    \u2502    oid    \u2502 conname  \u2502 connamespace \u2502 contype \u2502 condeferrable \u2502 condeferred \u2502 \u2026 \u2502 conppeqop \u2502 conffeqop \u2502 conexclop \u2502 conbin  \u2502    tabrelname     \u2502 consrc_copy \u2502\n\u2502   int64   \u2502   int64   \u2502 varchar  \u2502    int64     \u2502 varchar \u2502    boolean    \u2502   boolean   \u2502   \u2502   int32   \u2502   int32   \u2502   int32   \u2502 varchar \u2502      varchar      \u2502   varchar   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 552000002 \u2502 552000002 \u2502 NOT NULL \u2502          550 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 postgres_type     \u2502 NULL        \u2502\n\u2502 763000006 \u2502 763000006 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 example           \u2502 NULL        \u2502\n\u2502 865000010 \u2502 865000010 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts1 \u2502 NULL        \u2502\n\u2502 871000014 \u2502 871000014 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts2 \u2502 NULL        \u2502\n\u2502 877000018 \u2502 877000018 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts3 \u2502 NULL        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5 rows                                                                                                                                                28 columns (13 shown) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n  FROM pg_catalog.pg_constraint c\n  INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    oid    \u2502    oid    \u2502 conname  \u2502 connamespace \u2502 contype \u2502 condeferrable \u2502 condeferred \u2502 \u2026 \u2502 conppeqop \u2502 conffeqop \u2502 conexclop \u2502 conbin  \u2502    tabrelname     \u2502 consrc_copy \u2502\n\u2502   int64   \u2502   int64   \u2502 varchar  \u2502    int64     \u2502 varchar \u2502    boolean    \u2502   boolean   \u2502   \u2502   int32   \u2502   int32   \u2502   int32   \u2502 varchar \u2502      varchar      \u2502   varchar   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 552000002 \u2502 552000002 \u2502 NOT NULL \u2502          550 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 postgres_type     \u2502 NULL        \u2502\n\u2502 763000006 \u2502 763000006 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 example           \u2502 NULL        \u2502\n\u2502 865000010 \u2502 865000010 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts1 \u2502 NULL        \u2502\n\u2502 871000014 \u2502 871000014 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts2 \u2502 NULL        \u2502\n\u2502 877000018 \u2502 877000018 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts3 \u2502 NULL        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5 rows                                                                                                                                                28 columns (13 shown) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n  FROM pg_catalog.pg_constraint c\n  INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    oid    \u2502    oid    \u2502 conname  \u2502 connamespace \u2502 contype \u2502 condeferrable \u2502 condeferred \u2502 \u2026 \u2502 conppeqop \u2502 conffeqop \u2502 conexclop \u2502 conbin  \u2502    tabrelname     \u2502 consrc_copy \u2502\n\u2502   int64   \u2502   int64   \u2502 varchar  \u2502    int64     \u2502 varchar \u2502    boolean    \u2502   boolean   \u2502   \u2502   int32   \u2502   int32   \u2502   int32   \u2502 varchar \u2502      varchar      \u2502   varchar   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 552000002 \u2502 552000002 \u2502 NOT NULL \u2502          550 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 postgres_type     \u2502 NULL        \u2502\n\u2502 763000006 \u2502 763000006 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 example           \u2502 NULL        \u2502\n\u2502 865000010 \u2502 865000010 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts1 \u2502 NULL        \u2502\n\u2502 871000014 \u2502 871000014 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts2 \u2502 NULL        \u2502\n\u2502 877000018 \u2502 877000018 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts3 \u2502 NULL        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5 rows                                                                                                                                                28 columns (13 shown) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n  FROM pg_catalog.pg_constraint c\n  INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\nSegmentation fault (core dumped)\n(myenv) [goose@tnt-factory:/tmp/test]\n__STAGE__$\n\n\n#################################################################################################################################\n# case 2\n#################################################################################################################################\n\n__STAGE__$ duckdb test.ddb \nv1.2.1 8e52ec4395\nEnter \".help\" for usage hints.\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n    FROM pg_catalog.pg_constraint c\n    INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\nSerialization Error:\nCannot copy bound expression\nD \n\n__STAGE__$ \n\n#################################################################################################################################\n# case 3\n#################################################################################################################################\n\n\n__STAGE__$ duckdb test.ddb \nv1.2.1 8e52ec4395\nEnter \".help\" for usage hints.\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n      FROM pg_catalog.pg_constraint c\n      INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    oid    \u2502    oid    \u2502 conname  \u2502 connamespace \u2502 contype \u2502 condeferrable \u2502 condeferred \u2502 convalidated \u2502 \u2026 \u2502 conpfeqop \u2502 conppeqop \u2502 conffeqop \u2502 conexclop \u2502 conbin  \u2502    tabrelname     \u2502 consrc_copy \u2502\n\u2502   int64   \u2502   int64   \u2502 varchar  \u2502    int64     \u2502 varchar \u2502    boolean    \u2502   boolean   \u2502   boolean    \u2502   \u2502   int32   \u2502   int32   \u2502   int32   \u2502   int32   \u2502 varchar \u2502      varchar      \u2502   varchar   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 552000002 \u2502 552000002 \u2502 NOT NULL \u2502          550 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 postgres_type     \u2502 NULL        \u2502\n\u2502 763000006 \u2502 763000006 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 example           \u2502 NULL        \u2502\n\u2502 865000010 \u2502 865000010 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts1 \u2502 NULL        \u2502\n\u2502 871000014 \u2502 871000014 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts2 \u2502 NULL        \u2502\n\u2502 877000018 \u2502 877000018 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts3 \u2502 NULL        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5 rows                                                                                                                                                                           28 columns (15 shown) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n      FROM pg_catalog.pg_constraint c\n      INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    oid    \u2502    oid    \u2502 conname  \u2502 connamespace \u2502 contype \u2502 condeferrable \u2502 condeferred \u2502 convalidated \u2502 \u2026 \u2502 conpfeqop \u2502 conppeqop \u2502 conffeqop \u2502 conexclop \u2502 conbin  \u2502    tabrelname     \u2502 consrc_copy \u2502\n\u2502   int64   \u2502   int64   \u2502 varchar  \u2502    int64     \u2502 varchar \u2502    boolean    \u2502   boolean   \u2502   boolean    \u2502   \u2502   int32   \u2502   int32   \u2502   int32   \u2502   int32   \u2502 varchar \u2502      varchar      \u2502   varchar   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 552000002 \u2502 552000002 \u2502 NOT NULL \u2502          550 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 postgres_type     \u2502 NULL        \u2502\n\u2502 763000006 \u2502 763000006 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 example           \u2502 NULL        \u2502\n\u2502 865000010 \u2502 865000010 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts1 \u2502 NULL        \u2502\n\u2502 871000014 \u2502 871000014 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts2 \u2502 NULL        \u2502\n\u2502 877000018 \u2502 877000018 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts3 \u2502 NULL        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5 rows                                                                                                                                                                           28 columns (15 shown) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n      FROM pg_catalog.pg_constraint c\n      INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    oid    \u2502    oid    \u2502 conname  \u2502 connamespace \u2502 contype \u2502 condeferrable \u2502 condeferred \u2502 convalidated \u2502 \u2026 \u2502 conpfeqop \u2502 conppeqop \u2502 conffeqop \u2502 conexclop \u2502 conbin  \u2502    tabrelname     \u2502 consrc_copy \u2502\n\u2502   int64   \u2502   int64   \u2502 varchar  \u2502    int64     \u2502 varchar \u2502    boolean    \u2502   boolean   \u2502   boolean    \u2502   \u2502   int32   \u2502   int32   \u2502   int32   \u2502   int32   \u2502 varchar \u2502      varchar      \u2502   varchar   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 552000002 \u2502 552000002 \u2502 NOT NULL \u2502          550 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 postgres_type     \u2502 NULL        \u2502\n\u2502 763000006 \u2502 763000006 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 example           \u2502 NULL        \u2502\n\u2502 865000010 \u2502 865000010 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts1 \u2502 NULL        \u2502\n\u2502 871000014 \u2502 871000014 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts2 \u2502 NULL        \u2502\n\u2502 877000018 \u2502 877000018 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts3 \u2502 NULL        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5 rows                                                                                                                                                                           28 columns (15 shown) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n      FROM pg_catalog.pg_constraint c\n      INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    oid    \u2502    oid    \u2502 conname  \u2502 connamespace \u2502 contype \u2502 condeferrable \u2502 condeferred \u2502 convalidated \u2502 \u2026 \u2502 conpfeqop \u2502 conppeqop \u2502 conffeqop \u2502 conexclop \u2502 conbin  \u2502    tabrelname     \u2502 consrc_copy \u2502\n\u2502   int64   \u2502   int64   \u2502 varchar  \u2502    int64     \u2502 varchar \u2502    boolean    \u2502   boolean   \u2502   boolean    \u2502   \u2502   int32   \u2502   int32   \u2502   int32   \u2502   int32   \u2502 varchar \u2502      varchar      \u2502   varchar   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 552000002 \u2502 552000002 \u2502 NOT NULL \u2502          550 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 postgres_type     \u2502 NULL        \u2502\n\u2502 763000006 \u2502 763000006 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 example           \u2502 NULL        \u2502\n\u2502 865000010 \u2502 865000010 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts1 \u2502 NULL        \u2502\n\u2502 871000014 \u2502 871000014 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts2 \u2502 NULL        \u2502\n\u2502 877000018 \u2502 877000018 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts3 \u2502 NULL        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5 rows                                                                                                                                                                           28 columns (15 shown) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n      FROM pg_catalog.pg_constraint c\n      INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    oid    \u2502    oid    \u2502 conname  \u2502 connamespace \u2502 contype \u2502 condeferrable \u2502 condeferred \u2502 convalidated \u2502 \u2026 \u2502 conpfeqop \u2502 conppeqop \u2502 conffeqop \u2502 conexclop \u2502 conbin  \u2502    tabrelname     \u2502 consrc_copy \u2502\n\u2502   int64   \u2502   int64   \u2502 varchar  \u2502    int64     \u2502 varchar \u2502    boolean    \u2502   boolean   \u2502   boolean    \u2502   \u2502   int32   \u2502   int32   \u2502   int32   \u2502   int32   \u2502 varchar \u2502      varchar      \u2502   varchar   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 552000002 \u2502 552000002 \u2502 NOT NULL \u2502          550 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 postgres_type     \u2502 NULL        \u2502\n\u2502 763000006 \u2502 763000006 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 example           \u2502 NULL        \u2502\n\u2502 865000010 \u2502 865000010 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts1 \u2502 NULL        \u2502\n\u2502 871000014 \u2502 871000014 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts2 \u2502 NULL        \u2502\n\u2502 877000018 \u2502 877000018 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts3 \u2502 NULL        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5 rows                                                                                                                                                                           28 columns (15 shown) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n      FROM pg_catalog.pg_constraint c\n      INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    oid    \u2502    oid    \u2502 conname  \u2502 connamespace \u2502 contype \u2502 condeferrable \u2502 condeferred \u2502 convalidated \u2502 \u2026 \u2502 conpfeqop \u2502 conppeqop \u2502 conffeqop \u2502 conexclop \u2502 conbin  \u2502    tabrelname     \u2502 consrc_copy \u2502\n\u2502   int64   \u2502   int64   \u2502 varchar  \u2502    int64     \u2502 varchar \u2502    boolean    \u2502   boolean   \u2502   boolean    \u2502   \u2502   int32   \u2502   int32   \u2502   int32   \u2502   int32   \u2502 varchar \u2502      varchar      \u2502   varchar   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 552000002 \u2502 552000002 \u2502 NOT NULL \u2502          550 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 postgres_type     \u2502 NULL        \u2502\n\u2502 763000006 \u2502 763000006 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 example           \u2502 NULL        \u2502\n\u2502 865000010 \u2502 865000010 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts1 \u2502 NULL        \u2502\n\u2502 871000014 \u2502 871000014 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts2 \u2502 NULL        \u2502\n\u2502 877000018 \u2502 877000018 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts3 \u2502 NULL        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5 rows                                                                                                                                                                           28 columns (15 shown) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n      FROM pg_catalog.pg_constraint c\n      INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\nSerialization Error:\nCannot copy bound expression\nD \n\n\n#################################################################################################################################\n# case 4\n#################################################################################################################################\n\n__STAGE__$ duckdb test.ddb \nv1.2.1 8e52ec4395\nEnter \".help\" for usage hints.\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n    FROM pg_catalog.pg_constraint c\n    INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    oid    \u2502    oid    \u2502 conname  \u2502 connamespace \u2502 contype \u2502 condeferrable \u2502 condeferred \u2502 convalidated \u2502 \u2026 \u2502 conpfeqop \u2502 conppeqop \u2502 conffeqop \u2502 conexclop \u2502 conbin  \u2502    tabrelname     \u2502 consrc_copy \u2502\n\u2502   int64   \u2502   int64   \u2502 varchar  \u2502    int64     \u2502 varchar \u2502    boolean    \u2502   boolean   \u2502   boolean    \u2502   \u2502   int32   \u2502   int32   \u2502   int32   \u2502   int32   \u2502 varchar \u2502      varchar      \u2502   varchar   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 593000003 \u2502 593000003 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 example           \u2502 NULL        \u2502\n\u2502 695000007 \u2502 695000007 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts1 \u2502 NULL        \u2502\n\u2502 701000011 \u2502 701000011 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts2 \u2502 NULL        \u2502\n\u2502 707000015 \u2502 707000015 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts3 \u2502 NULL        \u2502\n\u2502 713000016 \u2502 713000016 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_branches  \u2502 NULL        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5 rows                                                                                                                                                                           28 columns (15 shown) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n    FROM pg_catalog.pg_constraint c\n    INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\nSerialization Error:\nCannot copy bound expression\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n    FROM pg_catalog.pg_constraint c\n    INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\nSerialization Error:\nCannot copy bound expression\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n    FROM pg_catalog.pg_constraint c\n    INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    oid    \u2502    oid    \u2502 conname  \u2502 connamespace \u2502 contype \u2502 condeferrable \u2502 condeferred \u2502 convalidated \u2502 \u2026 \u2502 conpfeqop \u2502 conppeqop \u2502 conffeqop \u2502 conexclop \u2502 conbin  \u2502    tabrelname     \u2502 consrc_copy \u2502\n\u2502   int64   \u2502   int64   \u2502 varchar  \u2502    int64     \u2502 varchar \u2502    boolean    \u2502   boolean   \u2502   boolean    \u2502   \u2502   int32   \u2502   int32   \u2502   int32   \u2502   int32   \u2502 varchar \u2502      varchar      \u2502   varchar   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 593000003 \u2502 593000003 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 example           \u2502 NULL        \u2502\n\u2502 695000007 \u2502 695000007 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts1 \u2502 NULL        \u2502\n\u2502 701000011 \u2502 701000011 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts2 \u2502 NULL        \u2502\n\u2502 707000015 \u2502 707000015 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts3 \u2502 NULL        \u2502\n\u2502 713000016 \u2502 713000016 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_branches  \u2502 NULL        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5 rows                                                                                                                                                                           28 columns (15 shown) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n    FROM pg_catalog.pg_constraint c\n    INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n```\n\n### To Reproduce\n\nin test.ddb database, \n \n \"SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n FROM pg_catalog. pg_constraint c\n INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\" \n \nIf I do this sentence over and over again, I get random errors.\n\n### OS:\n\nUbuntu 24.04.1 LTS\n\n### DuckDB Version:\n\n1.2.1\n\n### DuckDB Client:\n\ncli\n\n### Hardware:\n\n8core 16gb\n\n### Full Name:\n\nSeongSik\n\n### Affiliation:\n\nOraScope\n\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\n\nI have tested with a stable release\n\n### Did you include all relevant data sets for reproducing the issue?\n\nYes\n\n### Did you include all code required to reproduce the issue?\n\n- [x] Yes, I have\n\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\n\n- [x] Yes, I have\n\"Cannot copy bound expression\" random error\n### What happens?\n\n In the test.ddb database, \n \n ```SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n FROM pg_catalog. pg_constraint c\n INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n```\n \nIf I do this sentence over and over again, I get random errors.\n\nThe test.ddb datafile is available for download below.\nhttps://github.com/goosedb-net/goosedb-download/releases/download/test/test.tgz\n\n\n\n__STAGE__$ cat /etc/os-release \nPRETTY_NAME=\"Ubuntu 24.04.1 LTS\"\nNAME=\"Ubuntu\"\nVERSION_ID=\"24.04\"\nVERSION=\"24.04.1 LTS (Noble Numbat)\"\nVERSION_CODENAME=noble\nID=ubuntu\nID_LIKE=debian\nHOME_URL=\"https://www.ubuntu.com/\"\nSUPPORT_URL=\"https://help.ubuntu.com/\"\nBUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"\nPRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"\nUBUNTU_CODENAME=noble\nLOGO=ubuntu-logo\n(myenv) [goose@tnt-factory:/tmp/test]\n__STAGE__$ \n\n\n```\n#################################################################################################################################\n# case 1\n#################################################################################################################################\n\n__STAGE__$ duckdb test.ddb \nv1.2.1 8e52ec4395\nEnter \".help\" for usage hints.\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n  FROM pg_catalog.pg_constraint c\n  INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    oid    \u2502    oid    \u2502 conname  \u2502 connamespace \u2502 contype \u2502 condeferrable \u2502 condeferred \u2502 \u2026 \u2502 conppeqop \u2502 conffeqop \u2502 conexclop \u2502 conbin  \u2502    tabrelname     \u2502 consrc_copy \u2502\n\u2502   int64   \u2502   int64   \u2502 varchar  \u2502    int64     \u2502 varchar \u2502    boolean    \u2502   boolean   \u2502   \u2502   int32   \u2502   int32   \u2502   int32   \u2502 varchar \u2502      varchar      \u2502   varchar   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 552000002 \u2502 552000002 \u2502 NOT NULL \u2502          550 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 postgres_type     \u2502 NULL        \u2502\n\u2502 763000006 \u2502 763000006 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 example           \u2502 NULL        \u2502\n\u2502 865000010 \u2502 865000010 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts1 \u2502 NULL        \u2502\n\u2502 871000014 \u2502 871000014 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts2 \u2502 NULL        \u2502\n\u2502 877000018 \u2502 877000018 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts3 \u2502 NULL        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5 rows                                                                                                                                                28 columns (13 shown) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n  FROM pg_catalog.pg_constraint c\n  INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    oid    \u2502    oid    \u2502 conname  \u2502 connamespace \u2502 contype \u2502 condeferrable \u2502 condeferred \u2502 \u2026 \u2502 conppeqop \u2502 conffeqop \u2502 conexclop \u2502 conbin  \u2502    tabrelname     \u2502 consrc_copy \u2502\n\u2502   int64   \u2502   int64   \u2502 varchar  \u2502    int64     \u2502 varchar \u2502    boolean    \u2502   boolean   \u2502   \u2502   int32   \u2502   int32   \u2502   int32   \u2502 varchar \u2502      varchar      \u2502   varchar   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 552000002 \u2502 552000002 \u2502 NOT NULL \u2502          550 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 postgres_type     \u2502 NULL        \u2502\n\u2502 763000006 \u2502 763000006 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 example           \u2502 NULL        \u2502\n\u2502 865000010 \u2502 865000010 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts1 \u2502 NULL        \u2502\n\u2502 871000014 \u2502 871000014 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts2 \u2502 NULL        \u2502\n\u2502 877000018 \u2502 877000018 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts3 \u2502 NULL        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5 rows                                                                                                                                                28 columns (13 shown) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n  FROM pg_catalog.pg_constraint c\n  INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    oid    \u2502    oid    \u2502 conname  \u2502 connamespace \u2502 contype \u2502 condeferrable \u2502 condeferred \u2502 \u2026 \u2502 conppeqop \u2502 conffeqop \u2502 conexclop \u2502 conbin  \u2502    tabrelname     \u2502 consrc_copy \u2502\n\u2502   int64   \u2502   int64   \u2502 varchar  \u2502    int64     \u2502 varchar \u2502    boolean    \u2502   boolean   \u2502   \u2502   int32   \u2502   int32   \u2502   int32   \u2502 varchar \u2502      varchar      \u2502   varchar   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 552000002 \u2502 552000002 \u2502 NOT NULL \u2502          550 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 postgres_type     \u2502 NULL        \u2502\n\u2502 763000006 \u2502 763000006 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 example           \u2502 NULL        \u2502\n\u2502 865000010 \u2502 865000010 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts1 \u2502 NULL        \u2502\n\u2502 871000014 \u2502 871000014 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts2 \u2502 NULL        \u2502\n\u2502 877000018 \u2502 877000018 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts3 \u2502 NULL        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5 rows                                                                                                                                                28 columns (13 shown) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n  FROM pg_catalog.pg_constraint c\n  INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\nSegmentation fault (core dumped)\n(myenv) [goose@tnt-factory:/tmp/test]\n__STAGE__$\n\n\n#################################################################################################################################\n# case 2\n#################################################################################################################################\n\n__STAGE__$ duckdb test.ddb \nv1.2.1 8e52ec4395\nEnter \".help\" for usage hints.\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n    FROM pg_catalog.pg_constraint c\n    INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\nSerialization Error:\nCannot copy bound expression\nD \n\n__STAGE__$ \n\n#################################################################################################################################\n# case 3\n#################################################################################################################################\n\n\n__STAGE__$ duckdb test.ddb \nv1.2.1 8e52ec4395\nEnter \".help\" for usage hints.\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n      FROM pg_catalog.pg_constraint c\n      INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    oid    \u2502    oid    \u2502 conname  \u2502 connamespace \u2502 contype \u2502 condeferrable \u2502 condeferred \u2502 convalidated \u2502 \u2026 \u2502 conpfeqop \u2502 conppeqop \u2502 conffeqop \u2502 conexclop \u2502 conbin  \u2502    tabrelname     \u2502 consrc_copy \u2502\n\u2502   int64   \u2502   int64   \u2502 varchar  \u2502    int64     \u2502 varchar \u2502    boolean    \u2502   boolean   \u2502   boolean    \u2502   \u2502   int32   \u2502   int32   \u2502   int32   \u2502   int32   \u2502 varchar \u2502      varchar      \u2502   varchar   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 552000002 \u2502 552000002 \u2502 NOT NULL \u2502          550 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 postgres_type     \u2502 NULL        \u2502\n\u2502 763000006 \u2502 763000006 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 example           \u2502 NULL        \u2502\n\u2502 865000010 \u2502 865000010 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts1 \u2502 NULL        \u2502\n\u2502 871000014 \u2502 871000014 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts2 \u2502 NULL        \u2502\n\u2502 877000018 \u2502 877000018 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts3 \u2502 NULL        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5 rows                                                                                                                                                                           28 columns (15 shown) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n      FROM pg_catalog.pg_constraint c\n      INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    oid    \u2502    oid    \u2502 conname  \u2502 connamespace \u2502 contype \u2502 condeferrable \u2502 condeferred \u2502 convalidated \u2502 \u2026 \u2502 conpfeqop \u2502 conppeqop \u2502 conffeqop \u2502 conexclop \u2502 conbin  \u2502    tabrelname     \u2502 consrc_copy \u2502\n\u2502   int64   \u2502   int64   \u2502 varchar  \u2502    int64     \u2502 varchar \u2502    boolean    \u2502   boolean   \u2502   boolean    \u2502   \u2502   int32   \u2502   int32   \u2502   int32   \u2502   int32   \u2502 varchar \u2502      varchar      \u2502   varchar   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 552000002 \u2502 552000002 \u2502 NOT NULL \u2502          550 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 postgres_type     \u2502 NULL        \u2502\n\u2502 763000006 \u2502 763000006 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 example           \u2502 NULL        \u2502\n\u2502 865000010 \u2502 865000010 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts1 \u2502 NULL        \u2502\n\u2502 871000014 \u2502 871000014 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts2 \u2502 NULL        \u2502\n\u2502 877000018 \u2502 877000018 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts3 \u2502 NULL        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5 rows                                                                                                                                                                           28 columns (15 shown) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n      FROM pg_catalog.pg_constraint c\n      INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    oid    \u2502    oid    \u2502 conname  \u2502 connamespace \u2502 contype \u2502 condeferrable \u2502 condeferred \u2502 convalidated \u2502 \u2026 \u2502 conpfeqop \u2502 conppeqop \u2502 conffeqop \u2502 conexclop \u2502 conbin  \u2502    tabrelname     \u2502 consrc_copy \u2502\n\u2502   int64   \u2502   int64   \u2502 varchar  \u2502    int64     \u2502 varchar \u2502    boolean    \u2502   boolean   \u2502   boolean    \u2502   \u2502   int32   \u2502   int32   \u2502   int32   \u2502   int32   \u2502 varchar \u2502      varchar      \u2502   varchar   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 552000002 \u2502 552000002 \u2502 NOT NULL \u2502          550 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 postgres_type     \u2502 NULL        \u2502\n\u2502 763000006 \u2502 763000006 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 example           \u2502 NULL        \u2502\n\u2502 865000010 \u2502 865000010 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts1 \u2502 NULL        \u2502\n\u2502 871000014 \u2502 871000014 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts2 \u2502 NULL        \u2502\n\u2502 877000018 \u2502 877000018 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts3 \u2502 NULL        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5 rows                                                                                                                                                                           28 columns (15 shown) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n      FROM pg_catalog.pg_constraint c\n      INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    oid    \u2502    oid    \u2502 conname  \u2502 connamespace \u2502 contype \u2502 condeferrable \u2502 condeferred \u2502 convalidated \u2502 \u2026 \u2502 conpfeqop \u2502 conppeqop \u2502 conffeqop \u2502 conexclop \u2502 conbin  \u2502    tabrelname     \u2502 consrc_copy \u2502\n\u2502   int64   \u2502   int64   \u2502 varchar  \u2502    int64     \u2502 varchar \u2502    boolean    \u2502   boolean   \u2502   boolean    \u2502   \u2502   int32   \u2502   int32   \u2502   int32   \u2502   int32   \u2502 varchar \u2502      varchar      \u2502   varchar   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 552000002 \u2502 552000002 \u2502 NOT NULL \u2502          550 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 postgres_type     \u2502 NULL        \u2502\n\u2502 763000006 \u2502 763000006 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 example           \u2502 NULL        \u2502\n\u2502 865000010 \u2502 865000010 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts1 \u2502 NULL        \u2502\n\u2502 871000014 \u2502 871000014 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts2 \u2502 NULL        \u2502\n\u2502 877000018 \u2502 877000018 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts3 \u2502 NULL        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5 rows                                                                                                                                                                           28 columns (15 shown) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n      FROM pg_catalog.pg_constraint c\n      INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    oid    \u2502    oid    \u2502 conname  \u2502 connamespace \u2502 contype \u2502 condeferrable \u2502 condeferred \u2502 convalidated \u2502 \u2026 \u2502 conpfeqop \u2502 conppeqop \u2502 conffeqop \u2502 conexclop \u2502 conbin  \u2502    tabrelname     \u2502 consrc_copy \u2502\n\u2502   int64   \u2502   int64   \u2502 varchar  \u2502    int64     \u2502 varchar \u2502    boolean    \u2502   boolean   \u2502   boolean    \u2502   \u2502   int32   \u2502   int32   \u2502   int32   \u2502   int32   \u2502 varchar \u2502      varchar      \u2502   varchar   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 552000002 \u2502 552000002 \u2502 NOT NULL \u2502          550 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 postgres_type     \u2502 NULL        \u2502\n\u2502 763000006 \u2502 763000006 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 example           \u2502 NULL        \u2502\n\u2502 865000010 \u2502 865000010 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts1 \u2502 NULL        \u2502\n\u2502 871000014 \u2502 871000014 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts2 \u2502 NULL        \u2502\n\u2502 877000018 \u2502 877000018 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts3 \u2502 NULL        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5 rows                                                                                                                                                                           28 columns (15 shown) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n      FROM pg_catalog.pg_constraint c\n      INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    oid    \u2502    oid    \u2502 conname  \u2502 connamespace \u2502 contype \u2502 condeferrable \u2502 condeferred \u2502 convalidated \u2502 \u2026 \u2502 conpfeqop \u2502 conppeqop \u2502 conffeqop \u2502 conexclop \u2502 conbin  \u2502    tabrelname     \u2502 consrc_copy \u2502\n\u2502   int64   \u2502   int64   \u2502 varchar  \u2502    int64     \u2502 varchar \u2502    boolean    \u2502   boolean   \u2502   boolean    \u2502   \u2502   int32   \u2502   int32   \u2502   int32   \u2502   int32   \u2502 varchar \u2502      varchar      \u2502   varchar   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 552000002 \u2502 552000002 \u2502 NOT NULL \u2502          550 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 postgres_type     \u2502 NULL        \u2502\n\u2502 763000006 \u2502 763000006 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 example           \u2502 NULL        \u2502\n\u2502 865000010 \u2502 865000010 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts1 \u2502 NULL        \u2502\n\u2502 871000014 \u2502 871000014 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts2 \u2502 NULL        \u2502\n\u2502 877000018 \u2502 877000018 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts3 \u2502 NULL        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5 rows                                                                                                                                                                           28 columns (15 shown) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n      FROM pg_catalog.pg_constraint c\n      INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\nSerialization Error:\nCannot copy bound expression\nD \n\n\n#################################################################################################################################\n# case 4\n#################################################################################################################################\n\n__STAGE__$ duckdb test.ddb \nv1.2.1 8e52ec4395\nEnter \".help\" for usage hints.\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n    FROM pg_catalog.pg_constraint c\n    INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    oid    \u2502    oid    \u2502 conname  \u2502 connamespace \u2502 contype \u2502 condeferrable \u2502 condeferred \u2502 convalidated \u2502 \u2026 \u2502 conpfeqop \u2502 conppeqop \u2502 conffeqop \u2502 conexclop \u2502 conbin  \u2502    tabrelname     \u2502 consrc_copy \u2502\n\u2502   int64   \u2502   int64   \u2502 varchar  \u2502    int64     \u2502 varchar \u2502    boolean    \u2502   boolean   \u2502   boolean    \u2502   \u2502   int32   \u2502   int32   \u2502   int32   \u2502   int32   \u2502 varchar \u2502      varchar      \u2502   varchar   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 593000003 \u2502 593000003 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 example           \u2502 NULL        \u2502\n\u2502 695000007 \u2502 695000007 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts1 \u2502 NULL        \u2502\n\u2502 701000011 \u2502 701000011 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts2 \u2502 NULL        \u2502\n\u2502 707000015 \u2502 707000015 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts3 \u2502 NULL        \u2502\n\u2502 713000016 \u2502 713000016 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_branches  \u2502 NULL        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5 rows                                                                                                                                                                           28 columns (15 shown) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n    FROM pg_catalog.pg_constraint c\n    INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\nSerialization Error:\nCannot copy bound expression\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n    FROM pg_catalog.pg_constraint c\n    INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\nSerialization Error:\nCannot copy bound expression\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n    FROM pg_catalog.pg_constraint c\n    INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    oid    \u2502    oid    \u2502 conname  \u2502 connamespace \u2502 contype \u2502 condeferrable \u2502 condeferred \u2502 convalidated \u2502 \u2026 \u2502 conpfeqop \u2502 conppeqop \u2502 conffeqop \u2502 conexclop \u2502 conbin  \u2502    tabrelname     \u2502 consrc_copy \u2502\n\u2502   int64   \u2502   int64   \u2502 varchar  \u2502    int64     \u2502 varchar \u2502    boolean    \u2502   boolean   \u2502   boolean    \u2502   \u2502   int32   \u2502   int32   \u2502   int32   \u2502   int32   \u2502 varchar \u2502      varchar      \u2502   varchar   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 593000003 \u2502 593000003 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 example           \u2502 NULL        \u2502\n\u2502 695000007 \u2502 695000007 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts1 \u2502 NULL        \u2502\n\u2502 701000011 \u2502 701000011 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts2 \u2502 NULL        \u2502\n\u2502 707000015 \u2502 707000015 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_accounts3 \u2502 NULL        \u2502\n\u2502 713000016 \u2502 713000016 \u2502 NOT NULL \u2502          548 \u2502 x       \u2502 false         \u2502 false       \u2502 true         \u2502 \u2026 \u2502      NULL \u2502      NULL \u2502      NULL \u2502      NULL \u2502 NULL    \u2502 pgbench_branches  \u2502 NULL        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5 rows                                                                                                                                                                           28 columns (15 shown) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nD SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n    FROM pg_catalog.pg_constraint c\n    INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\n```\n\n### To Reproduce\n\nin test.ddb database, \n \n \"SELECT c.oid,c.*,t.relname as tabrelname, case when c.contype='c' then substring(pg_get_constraintdef(c.oid), 7) else null end consrc_copy\n FROM pg_catalog. pg_constraint c\n INNER JOIN pg_catalog.pg_class t ON t.oid=c.conrelid limit 5;\" \n \nIf I do this sentence over and over again, I get random errors.\n\n### OS:\n\nUbuntu 24.04.1 LTS\n\n### DuckDB Version:\n\n1.2.1\n\n### DuckDB Client:\n\ncli\n\n### Hardware:\n\n8core 16gb\n\n### Full Name:\n\nSeongSik\n\n### Affiliation:\n\nOraScope\n\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\n\nI have tested with a stable release\n\n### Did you include all relevant data sets for reproducing the issue?\n\nYes\n\n### Did you include all code required to reproduce the issue?\n\n- [x] Yes, I have\n\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\n\n- [x] Yes, I have\n",
  "hints_text": "\n\n",
  "created_at": "2025-04-08T12:21:39Z"
}