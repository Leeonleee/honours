diff --git a/test/api/capi/capi_table_functions.cpp b/test/api/capi/capi_table_functions.cpp
index e7e865ec0418..42dfb30b20ac 100644
--- a/test/api/capi/capi_table_functions.cpp
+++ b/test/api/capi/capi_table_functions.cpp
@@ -50,11 +50,10 @@ void my_function(duckdb_function_info info, duckdb_data_chunk output) {
 	duckdb_data_chunk_set_size(output, i);
 }
 
-static void capi_register_table_function(duckdb_connection connection, const char *name,
-                                         duckdb_table_function_bind_t bind, duckdb_table_function_init_t init,
-                                         duckdb_table_function_t f) {
+static duckdb_state capi_register_table_function(duckdb_connection connection, const char *name,
+                                                 duckdb_table_function_bind_t bind, duckdb_table_function_init_t init,
+                                                 duckdb_table_function_t f) {
 	duckdb_state status;
-
 	// create a table function
 	auto function = duckdb_create_table_function();
 	duckdb_table_function_set_name(nullptr, name);
@@ -79,11 +78,15 @@ static void capi_register_table_function(duckdb_connection connection, const cha
 
 	// register and cleanup
 	status = duckdb_register_table_function(connection, function);
-	REQUIRE(status == DuckDBSuccess);
+	if (status == DuckDBError) {
+		duckdb_destroy_table_function(&function);
+		return status;
+	}
 
 	duckdb_destroy_table_function(&function);
 	duckdb_destroy_table_function(&function);
 	duckdb_destroy_table_function(nullptr);
+	return status;
 }
 
 TEST_CASE("Test Table Functions C API", "[capi]") {
@@ -153,6 +156,15 @@ TEST_CASE("Test Table Function errors in C API", "[capi]") {
 	REQUIRE(result->HasError());
 }
 
+TEST_CASE("Test Table Function register errors in C API", "[capi]") {
+	CAPITester tester;
+	REQUIRE(tester.OpenDatabase(nullptr));
+
+	REQUIRE(capi_register_table_function(tester.connection, "x", my_error_bind, my_init, my_function) == DuckDBSuccess);
+	// Try to register it again with the same name, name collision
+	REQUIRE(capi_register_table_function(tester.connection, "x", my_error_bind, my_init, my_function) == DuckDBError);
+}
+
 struct my_named_bind_data_struct {
 	int64_t size;
 	int64_t multiplier;
