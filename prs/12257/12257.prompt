You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
[C-API] duckdb_register_table_function terminates with unrecoverable error when registered with a conflicting name
### What happens?

`duckdb_register_table_function` terminates with unrecoverable error when register with a conflicting name
```
libc++abi: terminating with uncaught exception of type duckdb::CatalogException: {"exception_type":"Catalog","exception_message":"Table Function with name \"x\" already exists!","name":"x","type":"Table Function","error_subtype":"ENTRY_ALREADY_EXISTS"}
SIGABRT: abort
PC=0x1856c6d98 m=0 sigcode=0
signal arrived during cgo execution
```



### To Reproduce

Using C-API in go-duckdb 
```
    state := C.duckdb_register_table_function(duckConn.duckdbCon, tableFunction)
    // we never get here
    if state != 0 {
        return invalidTableFunctionError()
    }
```

### OS:

iOS

### DuckDB Version:

0.10.3

### DuckDB Client:

go-duckdb

### Full Name:

Christian Persson

### Affiliation:

Sift Lab / go-duckdb

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [ ] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
