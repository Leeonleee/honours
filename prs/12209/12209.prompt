You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
CREATE OR REPLACE...AS no longer works if there are downstream views that reference the target table
### What happens?

https://github.com/duckdb/duckdb/pull/12159 has introduced the `DROP ... CASCADE` mechanics to drop entities that have downstream dependencies (like views).

Unfortunately this broke the `CREATE OR REPLACE` queries which now fail with:
```
Cannot drop entry... because there are entries that depend on it... Use DROP...CASCADE to drop all dependents.
```
when the target table or a view has a view downstream from it.

This behavior seems weird since the replacement suppose to happen atomically, as a single operation. Doesn't requiring the use of `DROP...CASCADE` defeat the purpose of `CREATE OR REPLACE`?

### To Reproduce

1. Create a table or a view.
2. Create a view which references the table / view created in (1).
3. Run `CREATE OR REPLACE ... AS SELECT ...` targeting the table / view created in (1).

```
In [1]: import duckdb

In [2]: conn = duckdb.connect()

In [3]: conn.execute("CREATE OR REPLACE TABLE tbl_a  AS SELECT 1 AS a")
Out[3]: <duckdb.duckdb.DuckDBPyConnection at 0x102b7a8f0>

In [4]: conn.execute("CREATE OR REPLACE VIEW view_a AS SELECT * FROM tbl_a")
Out[4]: <duckdb.duckdb.DuckDBPyConnection at 0x102b7a8f0>

In [5]: conn.execute("CREATE OR REPLACE TABLE tbl_a  AS SELECT 2 AS a")
---------------------------------------------------------------------------
Error                                     Traceback (most recent call last)
Cell In[5], line 1
----> 1 conn.execute("CREATE OR REPLACE TABLE tbl_a  AS SELECT 2 AS a")

Error: Cannot drop entry "tbl_a" because there are entries that depend on it.
view "view_a" depends on table "tbl_a".
Use DROP...CASCADE to drop all dependents.
```

### OS:

MacOS

### DuckDB Version:

0.10.3

### DuckDB Client:

Python

### Full Name:

Iaroslav Zeigerman

### Affiliation:

TobikoData

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

0.10.3

### Did you include all relevant data sets for reproducing the issue?

No - Other reason (please specify in the issue body)

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
