{
  "repo": "duckdb/duckdb",
  "pull_number": 9411,
  "instance_id": "duckdb__duckdb-9411",
  "issue_numbers": [
    "9399"
  ],
  "base_commit": "812c4a9a94a760cb531b3c66bb9efa8e54d46e8c",
  "patch": "diff --git a/src/execution/radix_partitioned_hashtable.cpp b/src/execution/radix_partitioned_hashtable.cpp\nindex 49d2257c333e..30b6959ee3f1 100644\n--- a/src/execution/radix_partitioned_hashtable.cpp\n+++ b/src/execution/radix_partitioned_hashtable.cpp\n@@ -346,6 +346,11 @@ bool MaybeRepartition(ClientContext &context, RadixHTGlobalSinkState &gstate, Ra\n \t\t}\n \t}\n \n+\t// We can go external when there is only one active thread, but we shouldn't repartition here\n+\tif (gstate.count_before_combining < 2) {\n+\t\treturn false;\n+\t}\n+\n \tconst auto partition_count = partitioned_data->PartitionCount();\n \tconst auto current_radix_bits = RadixPartitioning::RadixBits(partition_count);\n \tD_ASSERT(current_radix_bits <= config.GetRadixBits());\n",
  "test_patch": "diff --git a/test/issues/general/test_9399.test b/test/issues/general/test_9399.test\nnew file mode 100644\nindex 000000000000..b1fb7f95f0d6\n--- /dev/null\n+++ b/test/issues/general/test_9399.test\n@@ -0,0 +1,32 @@\n+# name: test/issues/general/test_9399.test\n+# description: Issue 9399: Incorrect query output from group by query (regression in 0.9.0)\n+# group: [general]\n+\n+require skip_reload\n+\n+# happened with > 8 threads\n+statement ok\n+SET threads=10\n+\n+# seed so it's deterministic\n+statement ok\n+SELECT SETSEED(0.8765309);\n+\n+# create table that's has just one row group, and just a few duplicates\n+statement ok\n+CREATE TABLE test AS\n+SELECT CASE WHEN random() < 0.002 THEN range ELSE 100000 - range END c0,\n+    random() c1,\n+    random() c2\n+FROM range(100000)\n+\n+# should return 99815 rows (was 99870 before)\n+query III\n+WITH cte AS (SELECT c0,\n+avg(c1) AS c1_avg,\n+avg(c2) AS c2_avg\n+FROM test GROUP BY c0)\n+SELECT * FROM cte\n+ORDER BY c0\n+----\n+299445 values hashing to 851e651ae21c938efff67bf148818639\n",
  "problem_statement": "Incorrect query output from group by query (regression in 0.9.0) \n### What happens?\r\n\r\nHi,\r\nI have a query where I group by an integer column and I was expecting that I would only get unique values, however recent versions of duckdb (0.9.0+) return duplicates.\r\n\r\nQuery: \r\n\r\n```sql\r\nwith a as (select label,                                                        \r\n   avg(x) as xx,                                                                \r\n   avg(y) as yy                                                                 \r\nfrom tab group by label)                                                        \r\nselect * from a \r\n```\r\n\r\nFull reproduction is given below. \r\nThe issue does not happen with duckdb 0.8.1\r\n\r\nThanks !\r\n \r\n\r\n\r\n\r\n### To Reproduce\r\n\r\nHere is the code\r\n\r\nIt requires a data-file  ( https://gist.github.com/segasai/36a73d6f3b140e513e1adfc5d05f2c83 )\r\n\r\n```python\r\nimport duckdb\r\nimport numpy as np\r\nimport pandas as pd\r\n\r\npdf = pd.read_csv('aa.csv')\r\nconn1 = duckdb.connect(':memory:')\r\nconn1.register('tab', pdf)\r\nR = conn1.execute('''                                                       \r\nwith a as (select label,\r\n   avg(x) as xx,\r\n   avg(y) as yy\r\nfrom tab group by label)                            \r\nselect * from a \r\n                           \r\n''').fetchnumpy()\r\nprint(len(R['label']), len(np.unique(R['label'])))\r\n```\r\nThe code should print the length of the result and the number of unique values for the column used as a key. They must be equal but they are not. \r\n\r\nFor clarity the underlying query is this \r\n\r\n```sql\r\nwith a as (select label,\r\n   avg(x) as xx,\r\n   avg(y) as yy\r\nfrom tab group by label)                            \r\nselect * from a \r\n```\r\n\r\n\r\n\r\n### OS:\r\n\r\nLinux\r\n\r\n### DuckDB Version:\r\n\r\n0.9.1\r\n\r\n### DuckDB Client:\r\n\r\nPython\r\n\r\n### Full Name:\r\n\r\nSergey Koposov\r\n\r\n### Affiliation:\r\n\r\nUniversity of Edinburgh\r\n\r\n### Have you tried this on the latest `main` branch?\r\n\r\nI have tested with a main build\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] Yes, I have\n",
  "hints_text": "Thanks, I could reproduce the issue",
  "created_at": "2023-10-20T10:54:43Z"
}