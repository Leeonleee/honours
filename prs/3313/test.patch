diff --git a/test/sql/delete/list_delete.test b/test/sql/delete/list_delete.test
new file mode 100644
index 000000000000..388fa7e34f42
--- /dev/null
+++ b/test/sql/delete/list_delete.test
@@ -0,0 +1,28 @@
+# name: test/sql/delete/list_delete.test
+# description: Test list deletions
+# group: [delete]
+
+statement ok
+PRAGMA enable_verification
+
+statement ok
+CREATE TABLE aggr (k int[]);
+
+statement ok
+INSERT INTO aggr VALUES ([0, 1, 1, 1, 4, 0, 3, 3, 2, 2, 4, 4, 2, 4, 0, 0, 0, 1, 2, 3, 4, 2, 3, 3, 1]);
+
+statement ok
+INSERT INTO aggr VALUES ([]), ([NULL]), (NULL), ([0, 1, 1, 1, 4, NULL, 0, 3, 3, 2, NULL, 2, 4, 4, 2, 4, 0, 0, 0, 1, NULL, 2, 3, 4, 2, 3, 3, 1]);
+
+query I
+SELECT COUNT(k) FROM aggr
+----
+4
+
+statement ok
+DELETE FROM aggr;
+
+query I
+SELECT COUNT(k) FROM aggr
+----
+0
diff --git a/test/sql/window/test_streaming_window.test b/test/sql/window/test_streaming_window.test
index 98ddfd3d9244..8d18b37108b6 100644
--- a/test/sql/window/test_streaming_window.test
+++ b/test/sql/window/test_streaming_window.test
@@ -131,3 +131,79 @@ query TT
 explain select last_value(i) over (order by j), first_value(i) over () from integers
 ----
 physical_plan	<REGEX>:.*STREAMING_WINDOW.*WINDOW.*
+
+#
+# Global state tests from #3275
+#
+
+# Original UNION ALL bug
+statement ok
+CREATE TABLE v1(id bigint);
+
+statement ok
+CREATE TABLE v2(id bigint);
+
+statement ok
+INSERT INTO v1 VALUES (11),  (12),  (13);
+
+statement ok
+INSERT INTO v2 VALUES (21),  (22);
+
+statement ok
+CREATE VIEW vertices_view AS
+  SELECT * FROM v1
+  UNION ALL
+  SELECT * FROM v2;
+
+query II
+SELECT id AS sparse_id, row_number() OVER () AS rnum
+FROM vertices_view;
+----
+11	1
+12	2
+13	3
+21	4
+22	5
+
+# Recursive CTE
+query II
+WITH RECURSIVE rte AS (
+	SELECT 1 l, 1::BIGINT r
+	UNION  ALL
+	SELECT l+1, row_number() OVER()
+	FROM rte
+	WHERE l < 3
+)
+SELECT * FROM rte;
+----
+1	1
+2	1
+3	1
+
+# In a prepared statement that is executed multiple times
+statement ok
+PREPARE sw1 AS
+	SELECT i, row_number() OVER() AS row_no
+	FROM range(10, 20) tbl(i)
+	QUALIFY row_no <= ?::BIGINT
+;
+
+query II
+EXECUTE sw1(10);
+----
+10	1
+11	2
+12	3
+13	4
+14	5
+15	6
+16	7
+17	8
+18	9
+19	10
+
+query II
+EXECUTE sw1(2);
+----
+10	1
+11	2
