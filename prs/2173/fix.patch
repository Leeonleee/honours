diff --git a/src/include/duckdb.h b/src/include/duckdb.h
index 360f8fb2e560..4c134157121b 100644
--- a/src/include/duckdb.h
+++ b/src/include/duckdb.h
@@ -826,7 +826,7 @@ DUCKDB_API duckdb_state duckdb_appender_create(duckdb_connection connection, con
 Returns the error message associated with the given appender.
 If the appender has no error message, this returns `nullptr` instead.
 
-The error message should be freed using `duckdb_free`.
+The error message should not be freed. It will be de-allocated when `duckdb_appender_destroy` is called.
 
 * appender: The appender to get the error from.
 * returns: The error message, or `nullptr` if there is none.
@@ -1031,7 +1031,7 @@ DUCKDB_API idx_t duckdb_arrow_rows_changed(duckdb_arrow result);
 Returns the error message contained within the result. The error is only set if `duckdb_query_arrow` returns
 `DuckDBError`.
 
-The result should be freed using `duckdb_free`.
+The error message should not be freed. It will be de-allocated when `duckdb_destroy_arrow` is called.
 
 * result: The result object to fetch the nullmask from.
 * returns: The error of the result.
diff --git a/src/main/capi/appender-c.cpp b/src/main/capi/appender-c.cpp
index 24ecd1777612..f8e55139febd 100644
--- a/src/main/capi/appender-c.cpp
+++ b/src/main/capi/appender-c.cpp
@@ -76,7 +76,7 @@ const char *duckdb_appender_error(duckdb_appender appender) {
 	if (wrapper->error.empty()) {
 		return nullptr;
 	}
-	return strdup(wrapper->error.c_str());
+	return wrapper->error.c_str();
 }
 
 duckdb_state duckdb_appender_begin_row(duckdb_appender appender) {
diff --git a/src/main/capi/arrow-c.cpp b/src/main/capi/arrow-c.cpp
index c2f233dcc249..9de8240f65ca 100644
--- a/src/main/capi/arrow-c.cpp
+++ b/src/main/capi/arrow-c.cpp
@@ -67,7 +67,7 @@ idx_t duckdb_arrow_rows_changed(duckdb_arrow result) {
 
 const char *duckdb_query_arrow_error(duckdb_arrow result) {
 	auto wrapper = (ArrowResultWrapper *)result;
-	return strdup(wrapper->result->error.c_str());
+	return wrapper->result->error.c_str();
 }
 
 void duckdb_destroy_arrow(duckdb_arrow *result) {
