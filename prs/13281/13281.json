{
  "repo": "duckdb/duckdb",
  "pull_number": 13281,
  "instance_id": "duckdb__duckdb-13281",
  "issue_numbers": [
    "13274"
  ],
  "base_commit": "2a452948ed0b0c137c17d4e4f0c481a746304407",
  "patch": "diff --git a/src/storage/local_storage.cpp b/src/storage/local_storage.cpp\nindex f44527e6cd89..224d42a531e9 100644\n--- a/src/storage/local_storage.cpp\n+++ b/src/storage/local_storage.cpp\n@@ -317,7 +317,7 @@ LocalStorage &LocalStorage::Get(ClientContext &context, Catalog &catalog) {\n void LocalStorage::InitializeScan(DataTable &table, CollectionScanState &state,\n                                   optional_ptr<TableFilterSet> table_filters) {\n \tauto storage = table_manager.GetStorage(table);\n-\tif (storage == nullptr) {\n+\tif (storage == nullptr || storage->row_groups->GetTotalRows() == 0) {\n \t\treturn;\n \t}\n \tstorage->InitializeScan(state, table_filters);\n",
  "test_patch": "diff --git a/test/sql/upsert/upsert_local_no_tuples.test b/test/sql/upsert/upsert_local_no_tuples.test\nnew file mode 100644\nindex 000000000000..15b1ed0c9a7c\n--- /dev/null\n+++ b/test/sql/upsert/upsert_local_no_tuples.test\n@@ -0,0 +1,58 @@\n+# name: test/sql/upsert/upsert_local_no_tuples.test\n+# group: [upsert]\n+\n+statement ok\n+pragma enable_verification;\n+\n+# Table with a constraint\n+statement ok\n+create table tbl (\n+\ta short primary key,\n+\tb short\n+);\n+\n+# Populate the table\n+statement ok\n+insert into tbl(a, b) values(1, 2);\n+\n+# Start a transaction, local storage will be created if an INSERT happens\n+statement ok\n+begin transaction;\n+\n+# Create a local storage, appending 0 tuples because of DO NOTHING\n+statement ok\n+insert into tbl(a, b) values(1, 2) on conflict do nothing;\n+\n+# Scan from the table, hitting the local storage\n+query II\n+select * from tbl where a = 1;\n+----\n+1\t2\n+\n+# Do it again to test proper cleanup of state\n+statement ok\n+insert into tbl(a, b) values(1, 2) on conflict do nothing;\n+\n+# Scan from the table, hitting the local storage\n+statement ok\n+select * from tbl where a = 1;\n+\n+statement ok\n+commit;\n+\n+statement ok\n+begin transaction;\n+\n+# Now create a LocalStorage with tuples before doing an append with 0 tuples\n+statement ok\n+insert into tbl (a, b) values (5,4);\n+\n+statement ok\n+insert into tbl(a, b) values(1, 2) on conflict do nothing;\n+\n+# Scan from the table, hitting the local storage\n+query II\n+select * from tbl order by a;\n+----\n+1\t2\n+5\t4\n",
  "problem_statement": "insert into ... on conflict, select fails in transaction\n### What happens?\n\nWhen doing a conflicting INSERT with following SELECT in a transaction block, an internal error is raised.\r\nThis happens when a UNIQUE constraint is violated. The transaction aborts with the following error as soon as the SELECT statement has been read.\r\n\r\n```\r\nINTERNAL Error: No rows in LocalTableStorage row group for scan\r\nThis error signals an assertion failure within DuckDB. This usually occurs due to unexpected conditions or errors in the program's logic.\r\nFor more information, see https://duckdb.org/docs/dev/internal_errors\r\n```\n\n### To Reproduce\n\n```\r\ncreate table tbl (a short primary key, b short, unique(b));\r\ninsert into tbl(a, b) values(1, 2);\r\n\r\nbegin transaction;\r\ninsert into tbl(a, b) values(1, 2) on conflict do nothing;\r\nselect * from tbl where a = 1;\r\n```\r\n\r\nAt this point, the above error is raised and the db, if opened from file, must be reopened.\n\n### OS:\n\nWindows 11, x64\n\n### DuckDB Version:\n\nv1.0.0 1f98600c2c\n\n### DuckDB Client:\n\nduckdb\n\n### Full Name:\n\nPhilipp Kroos\n\n### Affiliation:\n\nApplitec\n\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\n\nI have tested with a stable release\n\n### Did you include all relevant data sets for reproducing the issue?\n\nYes\n\n### Did you include all code required to reproduce the issue?\n\n- [X] Yes, I have\n\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\n\n- [X] Yes, I have\n",
  "hints_text": "",
  "created_at": "2024-08-02T12:01:33Z"
}