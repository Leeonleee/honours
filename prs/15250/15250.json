{
  "repo": "duckdb/duckdb",
  "pull_number": 15250,
  "instance_id": "duckdb__duckdb-15250",
  "issue_numbers": [
    "15075"
  ],
  "base_commit": "82abc6a40de7ed102c86d12ed5ec09bfa207d559",
  "patch": "diff --git a/extension/core_functions/aggregate/nested/binned_histogram.cpp b/extension/core_functions/aggregate/nested/binned_histogram.cpp\nindex eda2a6530ca9..fc184b8bba92 100644\n--- a/extension/core_functions/aggregate/nested/binned_histogram.cpp\n+++ b/extension/core_functions/aggregate/nested/binned_histogram.cpp\n@@ -342,6 +342,9 @@ static AggregateFunction GetHistogramBinFunction(const LogicalType &type) {\n \n template <class HIST>\n AggregateFunction GetHistogramBinFunction(const LogicalType &type) {\n+\tif (type.id() == LogicalTypeId::DECIMAL) {\n+\t\treturn GetHistogramBinFunction<HIST>(LogicalType::DOUBLE);\n+\t}\n \tswitch (type.InternalType()) {\n #ifndef DUCKDB_SMALLER_BINARY\n \tcase PhysicalType::BOOL:\ndiff --git a/src/common/operator/cast_operators.cpp b/src/common/operator/cast_operators.cpp\nindex 5e1dc4423ac9..fe1ce26afaed 100644\n--- a/src/common/operator/cast_operators.cpp\n+++ b/src/common/operator/cast_operators.cpp\n@@ -2298,7 +2298,7 @@ bool DoubleToDecimalCast(SRC input, DST &result, CastParameters &parameters, uin\n \tdouble roundedValue = round(value);\n \tif (roundedValue <= -NumericHelper::DOUBLE_POWERS_OF_TEN[width] ||\n \t    roundedValue >= NumericHelper::DOUBLE_POWERS_OF_TEN[width]) {\n-\t\tstring error = StringUtil::Format(\"Could not cast value %f to DECIMAL(%d,%d)\", value, width, scale);\n+\t\tstring error = StringUtil::Format(\"Could not cast value %f to DECIMAL(%d,%d)\", input, width, scale);\n \t\tHandleCastError::AssignError(error, parameters);\n \t\treturn false;\n \t}\n",
  "test_patch": "diff --git a/test/sql/aggregate/aggregates/histogram_tpch.test_slow b/test/sql/aggregate/aggregates/histogram_tpch.test_slow\nindex 378716388a4a..0fdc234cba1b 100644\n--- a/test/sql/aggregate/aggregates/histogram_tpch.test_slow\n+++ b/test/sql/aggregate/aggregates/histogram_tpch.test_slow\n@@ -55,17 +55,17 @@ ORDER BY l_returnflag\n query II\n SELECT bin, count FROM histogram(lineitem, l_extendedprice)\n ----\n-x <= 10000.00\t773545\n-10000.00 < x <= 20000.00\t831988\n-20000.00 < x <= 30000.00\t833410\n-30000.00 < x <= 40000.00\t835155\n-40000.00 < x <= 50000.00\t829356\n-50000.00 < x <= 60000.00\t724657\n-60000.00 < x <= 70000.00\t528755\n-70000.00 < x <= 80000.00\t358127\n-80000.00 < x <= 90000.00\t207206\n-90000.00 < x <= 100000.00\t74894\n-100000.00 < x <= 110000.00\t4122\n+x <= 10000.0\t773545\n+10000.0 < x <= 20000.0\t831988\n+20000.0 < x <= 30000.0\t833410\n+30000.0 < x <= 40000.0\t835155\n+40000.0 < x <= 50000.0\t829356\n+50000.0 < x <= 60000.0\t724657\n+60000.0 < x <= 70000.0\t528755\n+70000.0 < x <= 80000.0\t358127\n+80000.0 < x <= 90000.0\t207206\n+90000.0 < x <= 100000.0\t74894\n+100000.0 < x <= 110000.0\t4122\n \n # dates\n query II\ndiff --git a/test/sql/function/list/aggregates/histogram_decimal.test b/test/sql/function/list/aggregates/histogram_decimal.test\nnew file mode 100644\nindex 000000000000..bba3a96f772c\n--- /dev/null\n+++ b/test/sql/function/list/aggregates/histogram_decimal.test\n@@ -0,0 +1,20 @@\n+# name: test/sql/function/list/aggregates/histogram_decimal.test\n+# description: Test histogram for decimals\n+# group: [aggregates]\n+\n+statement ok\n+PRAGMA enable_verification\n+\n+query II\n+WITH cte AS (FROM (VALUES (0.0), (9.9)) df(l_orderkey)) SELECT * FROM histogram_values(cte, l_orderkey)\n+----\n+1.0\t1\n+2.0\t0\n+3.0\t0\n+4.0\t0\n+5.0\t0\n+6.0\t0\n+7.0\t0\n+8.0\t0\n+9.0\t0\n+10.0\t1\n",
  "problem_statement": "`histogram` table function throws conversion error\n### What happens?\n\nThe `histogram` table function throws a conversion error on a decimal column.\n\n### To Reproduce\n\n```sql\r\nWITH cte AS (FROM (VALUES (0.0), (9.9)) df(l_orderkey)) SELECT * FROM histogram(cte, l_orderkey)\r\n```\r\n```\r\nConversion Error: Could not cast value 100.000000 to DECIMAL(2,1)\r\n```\n\n### OS:\n\nLinux\n\n### DuckDB Version:\n\n1.1.4\n\n### DuckDB Client:\n\nPython\n\n### Hardware:\n\ni5, AMD64\n\n### Full Name:\n\nSoeren Wolfers\n\n### Affiliation:\n\nG-Research\n\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\n\nI have tested with a nightly build\n\n### Did you include all relevant data sets for reproducing the issue?\n\nNot applicable - the reproduction does not require a data set\n\n### Did you include all code required to reproduce the issue?\n\n- [X] Yes, I have\n\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\n\n- [X] Yes, I have\n",
  "hints_text": "",
  "created_at": "2024-12-10T15:13:50Z"
}