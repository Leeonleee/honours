{
  "repo": "duckdb/duckdb",
  "pull_number": 11072,
  "instance_id": "duckdb__duckdb-11072",
  "issue_numbers": [
    "11071",
    "11071"
  ],
  "base_commit": "48a820f2278c60c5cbd1faf06d1d3c8034eda07c",
  "patch": "diff --git a/extension/parquet/parquet_extension.cpp b/extension/parquet/parquet_extension.cpp\nindex 7a4f97a53984..d75a6a834536 100644\n--- a/extension/parquet/parquet_extension.cpp\n+++ b/extension/parquet/parquet_extension.cpp\n@@ -47,7 +47,6 @@ struct ParquetReadBindData : public TableFunctionData {\n \tshared_ptr<ParquetReader> initial_reader;\n \tvector<string> files;\n \tatomic<idx_t> chunk_count;\n-\tatomic<idx_t> cur_file;\n \tvector<string> names;\n \tvector<LogicalType> types;\n \n@@ -484,15 +483,16 @@ class ParquetScanFunction {\n \tstatic double ParquetProgress(ClientContext &context, const FunctionData *bind_data_p,\n \t                              const GlobalTableFunctionState *global_state) {\n \t\tauto &bind_data = bind_data_p->Cast<ParquetReadBindData>();\n+\t\tauto &gstate = global_state->Cast<ParquetReadGlobalState>();\n \t\tif (bind_data.files.empty()) {\n \t\t\treturn 100.0;\n \t\t}\n \t\tif (bind_data.initial_file_cardinality == 0) {\n-\t\t\treturn (100.0 * (bind_data.cur_file + 1)) / bind_data.files.size();\n+\t\t\treturn (100.0 * (gstate.file_index + 1)) / bind_data.files.size();\n \t\t}\n-\t\tauto percentage = std::min(\n+\t\tauto percentage = MinValue<double>(\n \t\t    100.0, (bind_data.chunk_count * STANDARD_VECTOR_SIZE * 100.0 / bind_data.initial_file_cardinality));\n-\t\treturn (percentage + 100.0 * bind_data.cur_file) / bind_data.files.size();\n+\t\treturn (percentage + 100.0 * gstate.file_index) / bind_data.files.size();\n \t}\n \n \tstatic unique_ptr<LocalTableFunctionState>\n",
  "test_patch": "diff --git a/test/sql/timezone/test_icu_timezone.test b/test/sql/timezone/test_icu_timezone.test\nindex 605c418600af..bc674b868bac 100644\n--- a/test/sql/timezone/test_icu_timezone.test\n+++ b/test/sql/timezone/test_icu_timezone.test\n@@ -92,14 +92,16 @@ SELECT '2001-02-16 20:38:40-05'::TIMESTAMPTZ AT TIME ZONE NULL;\n ----\n NULL\n \n+mode skip\n+\n # Normalise to TZ, add interval, then set offset\n-query I \n+query I\n select '12:15:37.123456-08'::TIMETZ AT TIME ZONE 'America/New_York';\n ----\n 15:15:37.123456-05\n \n query I\n-select timezone('America/New_York', '12:15:37.123456-08'::TIMETZ); \n+select timezone('America/New_York', '12:15:37.123456-08'::TIMETZ);\n ----\n 15:15:37.123456-05\n \n",
  "problem_statement": "Progress bar jumps from 0% to 100% when working with 1K+ local Parquet files\n### What happens?\n\nI have 1,200 Parquet files of roughly equal size that total 56 GB altogether. Pretty much every operation I can run on them will bring up the progress bar where it'll sit at 0% and jump to 100% once the operation is complete. Is there a way to get more granual indication of progress?\n\n### To Reproduce\n\n```sql\r\nselect count(*) from read_parquet('/run/media/deck/Seagate/gis/Global/adsb_lol/traces*.pq');\r\n\r\nselect distinct ownOp from read_parquet('/run/media/deck/Seagate/gis/Global/adsb_lol/traces*.pq') order by 1;\r\n\r\nselect ownOp, COUNT(*)\r\nfrom read_parquet('/run/media/deck/Seagate/gis/Global/adsb_lol/traces*.pq') \r\nWHERE trace.h3_5 = '851f6073fffffff'\r\ngroup by 1\r\norder by 2 DESC;\r\n```\n\n### OS:\n\nArch Linux on Stream Deck\n\n### DuckDB Version:\n\nv0.10.0 20b1486d11\n\n### DuckDB Client:\n\nCLI\n\n### Full Name:\n\nMark Litwintschik\n\n### Affiliation:\n\nGreen Idea\n\n### Have you tried this on the latest [nightly build](https://duckdb.org/docs/installation/?version=main)?\n\nI have tested with a release build (and could not test with a nightly build)\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] Yes, I have\nProgress bar jumps from 0% to 100% when working with 1K+ local Parquet files\n### What happens?\n\nI have 1,200 Parquet files of roughly equal size that total 56 GB altogether. Pretty much every operation I can run on them will bring up the progress bar where it'll sit at 0% and jump to 100% once the operation is complete. Is there a way to get more granual indication of progress?\n\n### To Reproduce\n\n```sql\r\nselect count(*) from read_parquet('/run/media/deck/Seagate/gis/Global/adsb_lol/traces*.pq');\r\n\r\nselect distinct ownOp from read_parquet('/run/media/deck/Seagate/gis/Global/adsb_lol/traces*.pq') order by 1;\r\n\r\nselect ownOp, COUNT(*)\r\nfrom read_parquet('/run/media/deck/Seagate/gis/Global/adsb_lol/traces*.pq') \r\nWHERE trace.h3_5 = '851f6073fffffff'\r\ngroup by 1\r\norder by 2 DESC;\r\n```\n\n### OS:\n\nArch Linux on Stream Deck\n\n### DuckDB Version:\n\nv0.10.0 20b1486d11\n\n### DuckDB Client:\n\nCLI\n\n### Full Name:\n\nMark Litwintschik\n\n### Affiliation:\n\nGreen Idea\n\n### Have you tried this on the latest [nightly build](https://duckdb.org/docs/installation/?version=main)?\n\nI have tested with a release build (and could not test with a nightly build)\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] Yes, I have\n",
  "hints_text": "\n",
  "created_at": "2024-03-10T18:52:30Z"
}