{
  "repo": "duckdb/duckdb",
  "pull_number": 4368,
  "instance_id": "duckdb__duckdb-4368",
  "issue_numbers": [
    "4365"
  ],
  "base_commit": "540eab3cc5ff110d79eaf77df824664211581602",
  "patch": "diff --git a/src/planner/binder/statement/bind_create_table.cpp b/src/planner/binder/statement/bind_create_table.cpp\nindex 12ffbd9be812..06b62bba4241 100644\n--- a/src/planner/binder/statement/bind_create_table.cpp\n+++ b/src/planner/binder/statement/bind_create_table.cpp\n@@ -78,6 +78,7 @@ static void BindConstraints(Binder &binder, BoundCreateTableInfo &info) {\n \tauto &base = (CreateTableInfo &)*info.base;\n \n \tbool has_primary_key = false;\n+\tunordered_set<idx_t> not_null_columns;\n \tvector<idx_t> primary_keys;\n \tfor (idx_t i = 0; i < base.constraints.size(); i++) {\n \t\tauto &cond = base.constraints[i];\n@@ -90,6 +91,7 @@ static void BindConstraints(Binder &binder, BoundCreateTableInfo &info) {\n \t\t\tauto &not_null = (NotNullConstraint &)*cond;\n \t\t\tauto &col = base.columns[not_null.index];\n \t\t\tinfo.bound_constraints.push_back(make_unique<BoundNotNullConstraint>(col.StorageOid()));\n+\t\t\tnot_null_columns.insert(not_null.index);\n \t\t\tbreak;\n \t\t}\n \t\tcase ConstraintType::UNIQUE: {\n@@ -177,6 +179,10 @@ static void BindConstraints(Binder &binder, BoundCreateTableInfo &info) {\n \tif (has_primary_key) {\n \t\t// if there is a primary key index, also create a NOT NULL constraint for each of the columns\n \t\tfor (auto &column_index : primary_keys) {\n+\t\t\tif (not_null_columns.count(column_index)) {\n+\t\t\t\t//! No need to create a NotNullConstraint, it's already present\n+\t\t\t\tcontinue;\n+\t\t\t}\n \t\t\tauto &column = base.columns[column_index];\n \t\t\tbase.constraints.push_back(make_unique<NotNullConstraint>(column_index));\n \t\t\tinfo.bound_constraints.push_back(make_unique<BoundNotNullConstraint>(column.StorageOid()));\n",
  "test_patch": "diff --git a/test/sql/constraints/foreignkey/fk_4365.test b/test/sql/constraints/foreignkey/fk_4365.test\nnew file mode 100644\nindex 000000000000..cf6dc8b218c0\n--- /dev/null\n+++ b/test/sql/constraints/foreignkey/fk_4365.test\n@@ -0,0 +1,15 @@\n+# name: test/sql/constraints/foreignkey/fk_4365.test\n+# description: Issue #4365: Multiple NOT NULL constraints in duckdb_constraints()\n+# group: [foreignkey]\n+\n+statement ok\n+create table x (c1 integer, primary key (c1));\n+\n+# This should not add a second NOT NULL constraint, because it already exists\n+statement ok\n+create table y (c1 integer, foreign key (c1) references x (c1));\n+\n+query I\n+select count(*) from duckdb_constraints() where constraint_type = 'NOT NULL';\n+----\n+1\ndiff --git a/test/sql/table_function/duckdb_constraints.test b/test/sql/table_function/duckdb_constraints.test\nindex 63d6ddcf6ece..9fdffc9b6c65 100644\n--- a/test/sql/table_function/duckdb_constraints.test\n+++ b/test/sql/table_function/duckdb_constraints.test\n@@ -28,7 +28,6 @@ integers\t0\tPRIMARY KEY\ti\n integers\t1\tCHECK\ti\n integers\t2\tNOT NULL\ti\n integers\t3\tFOREIGN KEY\ti\n-integers\t4\tNOT NULL\ti\n test\t0\tUNIQUE\ti\n test\t1\tCHECK\ti\n test\t1\tCHECK\tk\n",
  "problem_statement": "Multiple NOT NULL constraints in `duckdb_constraints()`\n### What happens?\r\n\r\nEach foreign key to a primary key adds an *additional* `NOT NULL` constraint. In the example below, the third row shouldn't be added.\r\n\r\n### To Reproduce\r\n\r\n```sql\r\ncreate table x (c1 integer, primary key (c1));\r\ncreate table y (c1 integer, foreign key (c1) references x (c1));\r\nselect * from duckdb_constraints();\r\n```\r\n\r\n```\r\nschema_name  schema_oid  table_name  table_oid  constraint_index  constraint_type  constraint_text                    expression  constraint_column_indexes  constraint_column_names\r\n-----------  ----------  ----------  ---------  ----------------  ---------------  ---------------------------------  ----------  -------------------------  -----------------------\r\nmain         1           x           1287       0                 PRIMARY KEY      PRIMARY KEY(c1)                                [0]                        [c1]                   \r\nmain         1           x           1287       1                 NOT NULL         NOT NULL                                       [0]                        [c1]                   \r\nmain         1           x           1287       2                 NOT NULL         NOT NULL                                       [0]                        [c1]                   \r\nmain         1           y           1284       0                 FOREIGN KEY      FOREIGN KEY (c1) REFERENCES x(c1)              [0]                        [c1] \r\n```\r\n\r\n### OS:\r\n\r\nmacOS\r\n\r\n### DuckDB Version:\r\n\r\n#4346\r\n\r\n### DuckDB Client:\r\n\r\nCLI\r\n\r\n### Full Name:\r\n\r\nKirill M\u00fcller\r\n\r\n### Affiliation:\r\n\r\ncynkra GmbH\r\n\r\n### Have you tried this on the latest `master` branch?\r\n\r\n- [X] I agree\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] I agree\n",
  "hints_text": "",
  "created_at": "2022-08-12T11:42:15Z"
}