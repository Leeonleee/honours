diff --git a/tools/pythonpkg/tests/fast/test_replacement_scan.py b/tools/pythonpkg/tests/fast/test_replacement_scan.py
index 6a837b363e90..5255c8cac902 100644
--- a/tools/pythonpkg/tests/fast/test_replacement_scan.py
+++ b/tools/pythonpkg/tests/fast/test_replacement_scan.py
@@ -121,10 +121,6 @@ def inner_func(duckdb_cursor):
                 # We set the depth to look for local variables to 0 so it's never found
                 duckdb_cursor.sql("select * from df")
             duckdb_cursor.execute("set python_enable_replacements=true")
-            with pytest.raises(duckdb.CatalogException, match='Table with name df does not exist'):
-                # We set the depth to look for local variables to 1 so it's still not found because it wasn't defined in this function
-                duckdb_cursor.sql("select * from df")
-            duckdb_cursor.execute("set python_enable_replacements=true")
             with pytest.raises(duckdb.CatalogException, match='Table with name df does not exist'):
                 # Here it's still not found, because it's not visible to this frame
                 duckdb_cursor.sql("select * from df")
@@ -138,6 +134,23 @@ def inner_func(duckdb_cursor):
 
         inner_func(duckdb_cursor)
 
+    def test_scan_local_unlimited(self, duckdb_cursor):
+        df = pd.DataFrame({'a': [1, 2, 3]})
+
+        def inner_func(duckdb_cursor):
+            duckdb_cursor.execute("set python_enable_replacements=true")
+            with pytest.raises(duckdb.CatalogException, match='Table with name df does not exist'):
+                # We set the depth to look for local variables to 1 so it's still not found because it wasn't defined in this function
+                duckdb_cursor.sql("select * from df")
+            duckdb_cursor.execute("set python_scan_all_frames=true")
+            # Now we can find 'df' because we also scan the previous frame(s)
+            rel = duckdb_cursor.sql("select * from df")
+
+            res = rel.fetchall()
+            assert res == [(1,), (2,), (3,)]
+
+        inner_func(duckdb_cursor)
+
     def test_replacement_scan_relapi(self):
         con = duckdb.connect()
         pyrel1 = con.query('from (values (42), (84), (120)) t(i)')
