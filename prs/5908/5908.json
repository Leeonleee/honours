{
  "repo": "duckdb/duckdb",
  "pull_number": 5908,
  "instance_id": "duckdb__duckdb-5908",
  "issue_numbers": [
    "5903",
    "5903"
  ],
  "base_commit": "fc2ef0355aeefb34e7f93ab331a289bca7acf352",
  "patch": "diff --git a/extension/icu/icu-dateadd.cpp b/extension/icu/icu-dateadd.cpp\nindex fd3ddea4e61d..9709d4dfa9bb 100644\n--- a/extension/icu/icu-dateadd.cpp\n+++ b/extension/icu/icu-dateadd.cpp\n@@ -31,6 +31,26 @@ struct ICUCalendarAge : public ICUDateFunc {\n \t}\n };\n \n+static inline void CalendarAddHour(icu::Calendar *calendar, int64_t interval_hour, UErrorCode &status) {\n+\tif (interval_hour >= 0) {\n+\t\twhile (interval_hour > 0) {\n+\t\t\tcalendar->add(UCAL_HOUR,\n+\t\t\t              interval_hour > NumericLimits<int32_t>::Maximum() ? NumericLimits<int32_t>::Maximum()\n+\t\t\t                                                                : interval_hour,\n+\t\t\t              status);\n+\t\t\tinterval_hour -= NumericLimits<int32_t>::Maximum();\n+\t\t}\n+\t} else {\n+\t\twhile (interval_hour < 0) {\n+\t\t\tcalendar->add(UCAL_HOUR,\n+\t\t\t              interval_hour < NumericLimits<int32_t>::Minimum() ? NumericLimits<int32_t>::Minimum()\n+\t\t\t                                                                : interval_hour,\n+\t\t\t              status);\n+\t\t\tinterval_hour -= NumericLimits<int32_t>::Minimum();\n+\t\t}\n+\t}\n+}\n+\n template <>\n timestamp_t ICUCalendarAdd::Operation(timestamp_t timestamp, interval_t interval, icu::Calendar *calendar) {\n \tint64_t millis = timestamp.value / Interval::MICROS_PER_MSEC;\n@@ -74,7 +94,7 @@ timestamp_t ICUCalendarAdd::Operation(timestamp_t timestamp, interval_t interval\n \t\tcalendar->add(UCAL_MILLISECOND, interval_ms, status);\n \t\tcalendar->add(UCAL_SECOND, interval_s, status);\n \t\tcalendar->add(UCAL_MINUTE, interval_m, status);\n-\t\tcalendar->add(UCAL_HOUR, interval_h, status);\n+\t\tCalendarAddHour(calendar, interval_h, status);\n \n \t\tcalendar->add(UCAL_DATE, interval.days, status);\n \t\tcalendar->add(UCAL_MONTH, interval.months, status);\n@@ -83,7 +103,7 @@ timestamp_t ICUCalendarAdd::Operation(timestamp_t timestamp, interval_t interval\n \t\tcalendar->add(UCAL_MONTH, interval.months, status);\n \t\tcalendar->add(UCAL_DATE, interval.days, status);\n \n-\t\tcalendar->add(UCAL_HOUR, interval_h, status);\n+\t\tCalendarAddHour(calendar, interval_h, status);\n \t\tcalendar->add(UCAL_MINUTE, interval_m, status);\n \t\tcalendar->add(UCAL_SECOND, interval_s, status);\n \t\tcalendar->add(UCAL_MILLISECOND, interval_ms, status);\n",
  "test_patch": "diff --git a/test/sql/function/timestamp/test_icu_dateadd.test b/test/sql/function/timestamp/test_icu_dateadd.test\nindex 42d9f5acc535..1f4a6c4a368b 100644\n--- a/test/sql/function/timestamp/test_icu_dateadd.test\n+++ b/test/sql/function/timestamp/test_icu_dateadd.test\n@@ -93,6 +93,22 @@ select '1999-12-31 16:00:00-08'::timestamptz + interval 2400 hours\n ----\n 2000-04-09 17:00:00-07\n \n+statement error\n+select 'epoch'::timestamptz + '9223372036854775000 microseconds'::interval\n+\n+query I\n+select 'epoch'::timestamptz + '9223372036854774999 microseconds'::interval\n+----\n+294247-01-09 20:00:54.774999-08\n+\n+statement error\n+select 'epoch'::timestamptz + '-9223372022400001001 microseconds'::interval\n+\n+query I\n+select 'epoch'::timestamptz + '-9223372022400001000 microseconds'::interval\n+----\n+290303-12-10 (BC) 16:07:02-07:52\n+\n #  interval + timestamp\n query II\n SELECT iv, iv + '2021-12-01 13:54:48.123456Z'::TIMESTAMPTZ FROM intervals;\n@@ -134,6 +150,22 @@ select interval 2400 hours + '1999-12-31 16:00:00-08'::timestamptz\n ----\n 2000-04-09 17:00:00-07\n \n+statement error\n+select '9223372036854775000 microseconds'::interval + 'epoch'::timestamptz\n+\n+query I\n+select '9223372036854774999 microseconds'::interval + 'epoch'::timestamptz\n+----\n+294247-01-09 20:00:54.774999-08\n+\n+statement error\n+select '-9223372022400001001 microseconds'::interval + 'epoch'::timestamptz\n+\n+query I\n+select  '-9223372022400001000 microseconds'::interval + 'epoch'::timestamptz\n+----\n+290303-12-10 (BC) 16:07:02-07:52\n+\n # timestamp - interval\n query II\n SELECT iv, '2021-12-01 13:54:48.123456Z'::TIMESTAMPTZ - iv FROM intervals;\n@@ -175,6 +207,14 @@ select '2000-04-09 17:00:00-07'::timestamptz - interval 2400 hours\n ----\n 1999-12-31 16:00:00-08\n \n+statement error\n+select 'epoch'::timestamptz - '9223372022400001001 microseconds'::interval\n+\n+query I\n+select 'epoch'::timestamptz - '9223372022400001000 microseconds'::interval\n+----\n+290303-12-10 (BC) 16:07:02-07:52\n+\n # Before the epoch\n query II\n SELECT iv, '1962-07-31 12:20:48.123456Z'::TIMESTAMPTZ + iv FROM intervals;\n@@ -378,8 +418,8 @@ set timezone = 'Europe/London';\n \n statement ok\n CREATE TABLE london AS (\n-\tSELECT * \n-\tFROM (VALUES \n+\tSELECT *\n+\tFROM (VALUES\n \t\t('2000-10-29 03:00:00+00'::TIMESTAMPTZ, '2000-03-26 03:00:00+01'::TIMESTAMPTZ, '2000-01-03 00:00:00+00'::TIMESTAMPTZ)\n \t\t) tbl(dst2, dst1, origin)\n \t);\n",
  "problem_statement": "TIMESTAMPTZ + INTERVAL overflows when INTERVAL is close to int64_t limit\n### What happens?\n\n`ICUCalendarAdd` overflows when interval's microseconds value is close to int64_t limit.\n\n### To Reproduce\n\n```sql\r\nD select 'epoch'::timestamptz + '9223372036854774999 microseconds'::interval;\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 (CAST('epoch' AS TIMESTAMP WITH TIME ZONE) + CAST('9223372036854774999 microseconds' AS INTERVAL)) \u2502\r\n\u2502                                      timestamp with time zone                                      \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 195718-07-04 (BC) 21:19:53.774999+09:18                                                            \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\n\n### OS:\n\nUbuntu 22.04 on WSL2 of Windows 11 Home\n\n### DuckDB Version:\n\nv0.6.2-dev1114 51945c68c0\n\n### DuckDB Client:\n\nCLI\n\n### Full Name:\n\nKoki Ueha\n\n### Affiliation:\n\nNone\n\n### Have you tried this on the latest `master` branch?\n\n- [X] I agree\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] I agree\nTIMESTAMPTZ + INTERVAL overflows when INTERVAL is close to int64_t limit\n### What happens?\n\n`ICUCalendarAdd` overflows when interval's microseconds value is close to int64_t limit.\n\n### To Reproduce\n\n```sql\r\nD select 'epoch'::timestamptz + '9223372036854774999 microseconds'::interval;\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 (CAST('epoch' AS TIMESTAMP WITH TIME ZONE) + CAST('9223372036854774999 microseconds' AS INTERVAL)) \u2502\r\n\u2502                                      timestamp with time zone                                      \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 195718-07-04 (BC) 21:19:53.774999+09:18                                                            \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\n\n### OS:\n\nUbuntu 22.04 on WSL2 of Windows 11 Home\n\n### DuckDB Version:\n\nv0.6.2-dev1114 51945c68c0\n\n### DuckDB Client:\n\nCLI\n\n### Full Name:\n\nKoki Ueha\n\n### Affiliation:\n\nNone\n\n### Have you tried this on the latest `master` branch?\n\n- [X] I agree\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] I agree\n",
  "hints_text": "I will submit PR later.\nI will submit PR later.",
  "created_at": "2023-01-13T15:46:36Z"
}