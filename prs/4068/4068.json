{
  "repo": "duckdb/duckdb",
  "pull_number": 4068,
  "instance_id": "duckdb__duckdb-4068",
  "issue_numbers": [
    "4063",
    "4063"
  ],
  "base_commit": "84e6de02a7209a9ba12ede0d85fa62ce20d0c98d",
  "patch": "diff --git a/src/execution/operator/aggregate/physical_streaming_window.cpp b/src/execution/operator/aggregate/physical_streaming_window.cpp\nindex ac5a5fd1cd17..1ee94798f071 100644\n--- a/src/execution/operator/aggregate/physical_streaming_window.cpp\n+++ b/src/execution/operator/aggregate/physical_streaming_window.cpp\n@@ -26,14 +26,21 @@ class StreamingWindowState : public OperatorState {\n \tStreamingWindowState() : initialized(false) {\n \t}\n \n-\tvoid Initialize(DataChunk &input, const vector<unique_ptr<Expression>> &expressions) {\n+\tvoid Initialize(Allocator &allocator, DataChunk &input, const vector<unique_ptr<Expression>> &expressions) {\n \t\tfor (idx_t expr_idx = 0; expr_idx < expressions.size(); expr_idx++) {\n \t\t\tauto &expr = *expressions[expr_idx];\n \t\t\tswitch (expr.GetExpressionType()) {\n \t\t\tcase ExpressionType::WINDOW_FIRST_VALUE: {\n \t\t\t\tauto &wexpr = (BoundWindowExpression &)expr;\n-\t\t\t\tauto &ref = (BoundReferenceExpression &)*wexpr.children[0];\n-\t\t\t\tconst_vectors.push_back(make_unique<Vector>(input.data[ref.index].GetValue(0)));\n+\n+\t\t\t\t// Just execute the expression once\n+\t\t\t\tExpressionExecutor executor(allocator);\n+\t\t\t\texecutor.AddExpression(*wexpr.children[0]);\n+\t\t\t\tDataChunk result;\n+\t\t\t\tresult.Initialize(allocator, {wexpr.children[0]->return_type});\n+\t\t\t\texecutor.Execute(input, result);\n+\n+\t\t\t\tconst_vectors.push_back(make_unique<Vector>(result.GetValue(0, 0)));\n \t\t\t\tbreak;\n \t\t\t}\n \t\t\tcase ExpressionType::WINDOW_PERCENT_RANK: {\n@@ -70,7 +77,8 @@ OperatorResultType PhysicalStreamingWindow::Execute(ExecutionContext &context, D\n \tauto &gstate = (StreamingWindowGlobalState &)gstate_p;\n \tauto &state = (StreamingWindowState &)state_p;\n \tif (!state.initialized) {\n-\t\tstate.Initialize(input, select_list);\n+\t\tauto &allocator = Allocator::Get(context.client);\n+\t\tstate.Initialize(allocator, input, select_list);\n \t}\n \t// Put payload columns in place\n \tfor (idx_t col_idx = 0; col_idx < input.data.size(); col_idx++) {\n",
  "test_patch": "diff --git a/test/issues/general/test_4063.test b/test/issues/general/test_4063.test\nnew file mode 100644\nindex 000000000000..e829aeb1f636\n--- /dev/null\n+++ b/test/issues/general/test_4063.test\n@@ -0,0 +1,8 @@\n+# name: test/issues/general/test_4063.test\n+# description: Issue 4063: First_value window function sanitizer issue\n+# group: [general]\n+\n+query T\n+SELECT first_value(1) OVER ()\n+----\n+1\n\\ No newline at end of file\n",
  "problem_statement": "First_value window function sanitizer issue\n#### What happens?\r\nThe following query: `SELECT first_value(1) OVER ();` triggers an undefined behavior issue:\r\n\r\nsrc/execution/operator/aggregate/physical_streaming_window.cpp:35:17: runtime error: downcast of address 0x611000021380 which does not point to an object of type 'duckdb::BoundReferenceExpression'\r\n\r\n#### Environment (please complete the following information):\r\n - OS: Linux\r\n - DuckDB Version: latest from development sources\r\n - DuckDB Client: Shell\r\n\r\n#### Identity Disclosure:\r\n - Full Name: Pedro Ferreira\r\n - Affiliation: Huawei\r\n\r\n#### Before Submitting\r\n\r\n- [x] **Have you tried this on the latest `master` branch?**\r\n* **Python**: `pip install duckdb --upgrade --pre`\r\n* **R**: `install.packages(\"https://github.com/duckdb/duckdb/releases/download/master-builds/duckdb_r_src.tar.gz\", repos = NULL)`\r\n* **Other Platforms**: You can find binaries [here](https://github.com/duckdb/duckdb/releases/tag/master-builds) or compile from source.\r\n\r\n- [x] **Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?**\r\n\nFirst_value window function sanitizer issue\n#### What happens?\r\nThe following query: `SELECT first_value(1) OVER ();` triggers an undefined behavior issue:\r\n\r\nsrc/execution/operator/aggregate/physical_streaming_window.cpp:35:17: runtime error: downcast of address 0x611000021380 which does not point to an object of type 'duckdb::BoundReferenceExpression'\r\n\r\n#### Environment (please complete the following information):\r\n - OS: Linux\r\n - DuckDB Version: latest from development sources\r\n - DuckDB Client: Shell\r\n\r\n#### Identity Disclosure:\r\n - Full Name: Pedro Ferreira\r\n - Affiliation: Huawei\r\n\r\n#### Before Submitting\r\n\r\n- [x] **Have you tried this on the latest `master` branch?**\r\n* **Python**: `pip install duckdb --upgrade --pre`\r\n* **R**: `install.packages(\"https://github.com/duckdb/duckdb/releases/download/master-builds/duckdb_r_src.tar.gz\", repos = NULL)`\r\n* **Other Platforms**: You can find binaries [here](https://github.com/duckdb/duckdb/releases/tag/master-builds) or compile from source.\r\n\r\n- [x] **Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?**\r\n\n",
  "hints_text": "Continues on #4067.\nContinues on #4067.",
  "created_at": "2022-07-08T14:35:24Z"
}