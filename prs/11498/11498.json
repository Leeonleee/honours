{
  "repo": "duckdb/duckdb",
  "pull_number": 11498,
  "instance_id": "duckdb__duckdb-11498",
  "issue_numbers": [
    "11444",
    "11444"
  ],
  "base_commit": "dfaac6862994c4775369f1472cf748ff139ad5ee",
  "patch": "diff --git a/src/function/cast/vector_cast_helpers.cpp b/src/function/cast/vector_cast_helpers.cpp\nindex 34b0e34df44c..a064b4aca3ec 100644\n--- a/src/function/cast/vector_cast_helpers.cpp\n+++ b/src/function/cast/vector_cast_helpers.cpp\n@@ -39,25 +39,26 @@ static bool SkipToCloseQuotes(idx_t &pos, const char *buf, idx_t &len) {\n static bool SkipToClose(idx_t &idx, const char *buf, idx_t &len, idx_t &lvl, char close_bracket) {\n \tidx++;\n \n+\tvector<char> brackets;\n+\tbrackets.push_back(close_bracket);\n \twhile (idx < len) {\n \t\tif (buf[idx] == '\"' || buf[idx] == '\\'') {\n \t\t\tif (!SkipToCloseQuotes(idx, buf, len)) {\n \t\t\t\treturn false;\n \t\t\t}\n \t\t} else if (buf[idx] == '{') {\n-\t\t\tif (!SkipToClose(idx, buf, len, lvl, '}')) {\n-\t\t\t\treturn false;\n-\t\t\t}\n+\t\t\tbrackets.push_back('}');\n \t\t} else if (buf[idx] == '[') {\n-\t\t\tif (!SkipToClose(idx, buf, len, lvl, ']')) {\n-\t\t\t\treturn false;\n-\t\t\t}\n+\t\t\tbrackets.push_back(']');\n \t\t\tlvl++;\n-\t\t} else if (buf[idx] == close_bracket) {\n-\t\t\tif (close_bracket == ']') {\n+\t\t} else if (buf[idx] == brackets.back()) {\n+\t\t\tif (buf[idx] == ']') {\n \t\t\t\tlvl--;\n \t\t\t}\n-\t\t\treturn true;\n+\t\t\tbrackets.pop_back();\n+\t\t\tif (brackets.empty()) {\n+\t\t\t\treturn true;\n+\t\t\t}\n \t\t}\n \t\tidx++;\n \t}\n",
  "test_patch": "diff --git a/test/sql/types/list/list_parse_recursion.test b/test/sql/types/list/list_parse_recursion.test\nnew file mode 100644\nindex 000000000000..f3eb4da9ba8c\n--- /dev/null\n+++ b/test/sql/types/list/list_parse_recursion.test\n@@ -0,0 +1,11 @@\n+# name: test/sql/types/list/list_parse_recursion.test\n+# description: Test string -> list conversion of very deeply nested lists\n+# group: [list]\n+\n+statement ok\n+PRAGMA enable_verification\n+\n+statement error\n+SELECT REPEAT ( '[{\"a\":' , 100000 )::INT[]\n+----\n+can't be cast to the destination type\n",
  "problem_statement": "DuckDB crashes with the union operation of a long string and an array\n### What happens?\r\n\r\nDuckDB crashes with the union operation of a long string and an array\r\n\r\n### To Reproduce\r\n\r\nPoC:\r\n\r\n```sql\r\nSELECT REPEAT ( '[{\"a\":' , 100000 ) UNION ( SELECT [ ] );\r\n```\r\n\r\nBacktrace:\r\n```\r\n#0 0xe779e5 (_ZN6duckdbL11SkipToCloseERmPKcS0_S0_c+0x5)\r\n#1 0xe77b07 (_ZN6duckdbL11SkipToCloseERmPKcS0_S0_c+0x127)\r\n#2 0xe77ad7 (_ZN6duckdbL11SkipToCloseERmPKcS0_S0_c+0xf7)\r\n#3 0xe77b07 (_ZN6duckdbL11SkipToCloseERmPKcS0_S0_c+0x127)\r\n#4 0xe77ad7 (_ZN6duckdbL11SkipToCloseERmPKcS0_S0_c+0xf7)\r\n#5 0xe77b07 (_ZN6duckdbL11SkipToCloseERmPKcS0_S0_c+0x127)\r\n#6 0xe77ad7 (_ZN6duckdbL11SkipToCloseERmPKcS0_S0_c+0xf7)\r\n...\r\n#130758 0xe77ad7 (_ZN6duckdbL11SkipToCloseERmPKcS0_S0_c+0xf7)\r\n#130759 0xe77b07 (_ZN6duckdbL11SkipToCloseERmPKcS0_S0_c+0x127)\r\n```\r\n\r\n### OS:\r\n\r\nUbuntu 20.04\r\n\r\n### DuckDB Version:\r\n\r\nv0.10.1\r\n\r\n### DuckDB Client:\r\n\r\nbinary (/usr/local/bin/duckdb)\r\n\r\n### Full Name:\r\n\r\nZongrui Peng\r\n\r\n### Affiliation:\r\n\r\nWingtecher Lab of Tsinghua University\r\n\r\n### Have you tried this on the latest [nightly build](https://duckdb.org/docs/installation/?version=main)?\r\n\r\nI have tested with a nightly build\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] Yes, I have\nDuckDB crashes with the union operation of a long string and an array\n### What happens?\r\n\r\nDuckDB crashes with the union operation of a long string and an array\r\n\r\n### To Reproduce\r\n\r\nPoC:\r\n\r\n```sql\r\nSELECT REPEAT ( '[{\"a\":' , 100000 ) UNION ( SELECT [ ] );\r\n```\r\n\r\nBacktrace:\r\n```\r\n#0 0xe779e5 (_ZN6duckdbL11SkipToCloseERmPKcS0_S0_c+0x5)\r\n#1 0xe77b07 (_ZN6duckdbL11SkipToCloseERmPKcS0_S0_c+0x127)\r\n#2 0xe77ad7 (_ZN6duckdbL11SkipToCloseERmPKcS0_S0_c+0xf7)\r\n#3 0xe77b07 (_ZN6duckdbL11SkipToCloseERmPKcS0_S0_c+0x127)\r\n#4 0xe77ad7 (_ZN6duckdbL11SkipToCloseERmPKcS0_S0_c+0xf7)\r\n#5 0xe77b07 (_ZN6duckdbL11SkipToCloseERmPKcS0_S0_c+0x127)\r\n#6 0xe77ad7 (_ZN6duckdbL11SkipToCloseERmPKcS0_S0_c+0xf7)\r\n...\r\n#130758 0xe77ad7 (_ZN6duckdbL11SkipToCloseERmPKcS0_S0_c+0xf7)\r\n#130759 0xe77b07 (_ZN6duckdbL11SkipToCloseERmPKcS0_S0_c+0x127)\r\n```\r\n\r\n### OS:\r\n\r\nUbuntu 20.04\r\n\r\n### DuckDB Version:\r\n\r\nv0.10.1\r\n\r\n### DuckDB Client:\r\n\r\nbinary (/usr/local/bin/duckdb)\r\n\r\n### Full Name:\r\n\r\nZongrui Peng\r\n\r\n### Affiliation:\r\n\r\nWingtecher Lab of Tsinghua University\r\n\r\n### Have you tried this on the latest [nightly build](https://duckdb.org/docs/installation/?version=main)?\r\n\r\nI have tested with a nightly build\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] Yes, I have\n",
  "hints_text": "\n",
  "created_at": "2024-04-03T19:10:27Z"
}