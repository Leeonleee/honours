{
  "repo": "duckdb/duckdb",
  "pull_number": 2585,
  "instance_id": "duckdb__duckdb-2585",
  "issue_numbers": [
    "2584",
    "2584"
  ],
  "base_commit": "3dd419bfbb56e7728afe1e433a8d1197bc15b4ec",
  "patch": "diff --git a/src/common/vector_operations/generators.cpp b/src/common/vector_operations/generators.cpp\nindex 84f68ec8bee4..77dd5f9ced32 100644\n--- a/src/common/vector_operations/generators.cpp\n+++ b/src/common/vector_operations/generators.cpp\n@@ -19,8 +19,10 @@ void TemplatedGenerateSequence(Vector &result, idx_t count, int64_t start, int64\n \tauto result_data = FlatVector::GetData<T>(result);\n \tauto value = (T)start;\n \tfor (idx_t i = 0; i < count; i++) {\n+\t\tif (i > 0) {\n+\t\t\tvalue += increment;\n+\t\t}\n \t\tresult_data[i] = value;\n-\t\tvalue += increment;\n \t}\n }\n \ndiff --git a/src/function/table/range.cpp b/src/function/table/range.cpp\nindex 0b37fcafa52b..c465830c0437 100644\n--- a/src/function/table/range.cpp\n+++ b/src/function/table/range.cpp\n@@ -11,9 +11,9 @@ namespace duckdb {\n // Range (integers)\n //===--------------------------------------------------------------------===//\n struct RangeFunctionBindData : public TableFunctionData {\n-\tint64_t start;\n-\tint64_t end;\n-\tint64_t increment;\n+\thugeint_t start;\n+\thugeint_t end;\n+\thugeint_t increment;\n };\n \n template <bool GENERATE_SERIES>\n@@ -79,10 +79,16 @@ static void RangeFunction(ClientContext &context, const FunctionData *bind_data_\n \n \tauto increment = bind_data.increment;\n \tauto end = bind_data.end;\n-\tint64_t current_value = bind_data.start + (int64_t)increment * state.current_idx;\n+\thugeint_t current_value = bind_data.start + increment * state.current_idx;\n+\tint64_t current_value_i64;\n+\tif (!Hugeint::TryCast<int64_t>(current_value, current_value_i64)) {\n+\t\treturn;\n+\t}\n \t// set the result vector as a sequence vector\n-\toutput.data[0].Sequence(current_value, increment);\n-\tidx_t remaining = MinValue<idx_t>((end - current_value) / increment, STANDARD_VECTOR_SIZE);\n+\toutput.data[0].Sequence(current_value_i64, Hugeint::Cast<int64_t>(increment));\n+\tint64_t offset = increment < 0 ? 1 : -1;\n+\tidx_t remaining = MinValue<idx_t>(Hugeint::Cast<idx_t>((end - current_value + (increment + offset)) / increment),\n+\t                                  STANDARD_VECTOR_SIZE);\n \t// increment the index pointer by the remaining count\n \tstate.current_idx += remaining;\n \toutput.SetCardinality(remaining);\n@@ -90,7 +96,7 @@ static void RangeFunction(ClientContext &context, const FunctionData *bind_data_\n \n unique_ptr<NodeStatistics> RangeCardinality(ClientContext &context, const FunctionData *bind_data_p) {\n \tauto &bind_data = (RangeFunctionBindData &)*bind_data_p;\n-\tidx_t cardinality = (bind_data.end - bind_data.start) / bind_data.increment;\n+\tidx_t cardinality = Hugeint::Cast<idx_t>((bind_data.end - bind_data.start) / bind_data.increment);\n \treturn make_unique<NodeStatistics>(cardinality, cardinality);\n }\n \n",
  "test_patch": "diff --git a/test/sql/table_function/range_function_different_iterators.test b/test/sql/table_function/range_function_different_iterators.test\nnew file mode 100644\nindex 000000000000..45fa65bc7454\n--- /dev/null\n+++ b/test/sql/table_function/range_function_different_iterators.test\n@@ -0,0 +1,68 @@\n+# name: test/sql/table_function/range_function_different_iterators.test\n+# description: Issue #2584: select * from range(4,15,6) miss one value 10\n+# group: [table_function]\n+\n+query I\n+select * from range(4,15,6);\n+----\n+4\n+10\n+\n+query I\n+select * from range(-4,-15,-6);\n+----\n+-4\n+-10\n+\n+query I\n+select * from range(4,15);\n+----\n+4\n+5\n+6\n+7\n+8\n+9\n+10\n+11\n+12\n+13\n+14\n+\n+query I\n+select * from range(4,15,3)a;\n+----\n+4\n+7\n+10\n+13\n+\n+query I\n+select * from range(-4,-15,-3)a;\n+----\n+-4\n+-7\n+-10\n+-13\n+\n+query I\n+select * from range(4,15,5)a;\n+----\n+4\n+9\n+14\n+\n+query I\n+select * from range(4,19,5)a;\n+----\n+4\n+9\n+14\n+\n+query I\n+select * from generate_series(4,19,5)a;\n+----\n+4\n+9\n+14\n+19\ndiff --git a/test/sql/table_function/test_range_function.test b/test/sql/table_function/test_range_function.test\nindex 4989576d4b5d..28628eafbf14 100644\n--- a/test/sql/table_function/test_range_function.test\n+++ b/test/sql/table_function/test_range_function.test\n@@ -133,3 +133,72 @@ SELECT * FROM range(10, 'hello')\n \n statement error\n SELECT * FROM range(10, 10, 'hello')\n+\n+# range with big numbers\n+query I\n+select * from generate_series(-2305843009213693951, 2305843009213693951, 2305843009213693951)\n+----\n+-2305843009213693951\n+0\n+2305843009213693951\n+\n+query I\n+select * from generate_series(2305843009213693951, -2305843009213693951, -2305843009213693951)\n+----\n+2305843009213693951\n+0\n+-2305843009213693951\n+\n+query I\n+select * from generate_series(0, 10, 9223372036854775807);\n+----\n+0\n+\n+query I\n+select * from generate_series(0, 9223372036854775807, 9223372036854775807);\n+----\n+0\n+9223372036854775807\n+\n+query I\n+select * from generate_series(0, -9223372036854775807, -9223372036854775807);\n+----\n+0\n+-9223372036854775807\n+\n+query I\n+select * from generate_series(-9223372036854775808, 9223372036854775807, 9223372036854775807);\n+----\n+-9223372036854775808\n+-1\n+9223372036854775806\n+\n+query I\n+select * from generate_series(-9223372036854775807, -9223372036854775808, -1);\n+----\n+-9223372036854775807\n+-9223372036854775808\n+\n+query I\n+select * from generate_series(-9223372036854775808, 9223372036854775807, 9223372036854775807);\n+----\n+-9223372036854775808\n+-1\n+9223372036854775806\n+\n+query I\n+select * from generate_series(0, -9223372036854775808, -9223372036854775808);\n+----\n+0\n+-9223372036854775808\n+\n+query I\n+select * from generate_series(0, 9223372036854775807, 9223372036854775807);\n+----\n+0\n+9223372036854775807\n+\n+query I\n+select * from generate_series(0, 10, 9223372036854775807);\n+----\n+0\n",
  "problem_statement": "select * from range(4,15,6) miss one value 10\n```\r\nD select range(4,15,6)a;\r\n|    a    |\r\n|---------|\r\n| [4, 10] |\r\nRun Time: real 0.000 user 0.000000 sys 0.000000\r\nD select * from range(4,15,6)a;\r\n| range |\r\n|-------|\r\n| 4     |\r\nRun Time: real 0.000 user 0.000000 sys 0.000000\r\nD select * from range(4,15)a;\r\n| range |\r\n|-------|\r\n| 4     |\r\n| 5     |\r\n| 6     |\r\n| 7     |\r\n| 8     |\r\n| 9     |\r\n| 10    |\r\n| 11    |\r\n| 12    |\r\n| 13    |\r\n| 14    |\r\nRun Time: real 0.310 user 0.000000 sys 0.000000\r\nD select * from range(4,15,3)a;\r\n| range |\r\n|-------|\r\n| 4     |\r\n| 7     |\r\n| 10    |\r\nRun Time: real 0.080 user 0.000000 sys 0.000000\r\nD select * from range(4,15,5)a;\r\n| range |\r\n|-------|\r\n| 4     |\r\n| 9     |\r\nRun Time: real 0.000 user 0.000000 sys 0.000000\r\n```\r\ntested on\r\nDuckDB Web Shell\r\nDatabase: v0.3.1-dev535\r\nsame problem. \r\n\r\nSELECT * FROM range(4,16,7) also miss 11\r\n\nselect * from range(4,15,6) miss one value 10\n```\r\nD select range(4,15,6)a;\r\n|    a    |\r\n|---------|\r\n| [4, 10] |\r\nRun Time: real 0.000 user 0.000000 sys 0.000000\r\nD select * from range(4,15,6)a;\r\n| range |\r\n|-------|\r\n| 4     |\r\nRun Time: real 0.000 user 0.000000 sys 0.000000\r\nD select * from range(4,15)a;\r\n| range |\r\n|-------|\r\n| 4     |\r\n| 5     |\r\n| 6     |\r\n| 7     |\r\n| 8     |\r\n| 9     |\r\n| 10    |\r\n| 11    |\r\n| 12    |\r\n| 13    |\r\n| 14    |\r\nRun Time: real 0.310 user 0.000000 sys 0.000000\r\nD select * from range(4,15,3)a;\r\n| range |\r\n|-------|\r\n| 4     |\r\n| 7     |\r\n| 10    |\r\nRun Time: real 0.080 user 0.000000 sys 0.000000\r\nD select * from range(4,15,5)a;\r\n| range |\r\n|-------|\r\n| 4     |\r\n| 9     |\r\nRun Time: real 0.000 user 0.000000 sys 0.000000\r\n```\r\ntested on\r\nDuckDB Web Shell\r\nDatabase: v0.3.1-dev535\r\nsame problem. \r\n\r\nSELECT * FROM range(4,16,7) also miss 11\r\n\n",
  "hints_text": "Thanks for the report! I will have a look.\nThanks for the report! I will have a look.",
  "created_at": "2021-11-12T14:14:00Z"
}