diff --git a/tools/shell/tests/test_errors.py b/tools/shell/tests/test_errors.py
index e0bbdf142950..378302826c02 100644
--- a/tools/shell/tests/test_errors.py
+++ b/tools/shell/tests/test_errors.py
@@ -63,3 +63,33 @@ def test_long_error(shell):
     result = test.run()
     result.check_stderr('\x1b[33m+(DATE, TIMESTAMP)\x1b[0m')
     result.check_stderr('\x1b[32mCAST\x1b[0m')
+
+@pytest.mark.skipif(os.name == 'nt', reason="Windows highlighting does not use shell escapes")
+def test_single_quotes_in_error(shell):
+    test = (
+        ShellTest(shell)
+        .statement(".highlight_errors on")
+        .statement("select \"I'm an error\"")
+    )
+    result = test.run()
+    result.check_stderr('"\x1b[33mI\'m an error\x1b[0m')
+
+@pytest.mark.skipif(os.name == 'nt', reason="Windows highlighting does not use shell escapes")
+def test_double_quotes_in_error(shell):
+    test = (
+        ShellTest(shell)
+        .statement(".highlight_errors on")
+        .statement("select error('''I\"m an error''')")
+    )
+    result = test.run()
+    result.check_stderr('\x1b[33mI"m an error\x1b[0m')
+
+@pytest.mark.skipif(os.name == 'nt', reason="Windows highlighting does not use shell escapes")
+def test_unterminated_quote(shell):
+    test = (
+        ShellTest(shell)
+        .statement(".highlight_errors on")
+        .statement("select error('I''m an error')")
+    )
+    result = test.run()
+    result.check_stderr('I\'m an error')
diff --git a/tools/shell/tests/test_explain.py b/tools/shell/tests/test_explain.py
new file mode 100644
index 000000000000..2f2826069fdd
--- /dev/null
+++ b/tools/shell/tests/test_explain.py
@@ -0,0 +1,15 @@
+# fmt: off
+
+import pytest
+import subprocess
+import sys
+from typing import List
+from conftest import ShellTest
+import os
+
+def test_invalid_explain(shell):
+    test = (
+        ShellTest(shell)
+        .statement("EXPLAIN SELECT 'any_string' IN ?;")
+    )
+    result = test.run()
