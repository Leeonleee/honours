{
  "repo": "duckdb/duckdb",
  "pull_number": 7461,
  "instance_id": "duckdb__duckdb-7461",
  "issue_numbers": [
    "7460"
  ],
  "base_commit": "fe3c4cb141d55182fb37621b098b28df7f586abc",
  "patch": "diff --git a/src/execution/expression_executor/execute_between.cpp b/src/execution/expression_executor/execute_between.cpp\nindex ea832b2347b8..1fc618fe7409 100644\n--- a/src/execution/expression_executor/execute_between.cpp\n+++ b/src/execution/expression_executor/execute_between.cpp\n@@ -74,6 +74,9 @@ static idx_t BetweenLoopTypeSwitch(Vector &input, Vector &lower, Vector &upper,\n \tcase PhysicalType::VARCHAR:\n \t\treturn TernaryExecutor::Select<string_t, string_t, string_t, OP>(input, lower, upper, sel, count, true_sel,\n \t\t                                                                 false_sel);\n+\tcase PhysicalType::INTERVAL:\n+\t\treturn TernaryExecutor::Select<interval_t, interval_t, interval_t, OP>(input, lower, upper, sel, count,\n+\t\t                                                                       true_sel, false_sel);\n \tdefault:\n \t\tthrow InvalidTypeException(input.GetType(), \"Invalid type for BETWEEN\");\n \t}\n",
  "test_patch": "diff --git a/test/sql/types/interval/test_interval_between.test b/test/sql/types/interval/test_interval_between.test\nnew file mode 100644\nindex 000000000000..3c0a967038eb\n--- /dev/null\n+++ b/test/sql/types/interval/test_interval_between.test\n@@ -0,0 +1,35 @@\n+# name: test/sql/types/interval/test_interval_between.test\n+# group: [interval]\n+\n+query I nosort q1\n+WITH d(y) AS (\n+\tSELECT UNNEST(range(\n+\t\t'2023-05-11 4:00:00'::TIMESTAMP,\n+\t\t'2023-05-11 4:00:00'::TIMESTAMP + TO_DAYS(7),\n+\t\tTO_HOURS(6)\n+\t))\n+)\n+SELECT\n+\ty,\n+\ty - ('2023-05-11 4:00:00'::TIMESTAMP) AS x\n+FROM d\n+WHERE\n+\tx BETWEEN TO_HOURS(-44) AND TO_HOURS(44)\n+----\n+\n+# Verify that `x BETWEEN lhs AND rhs` is equivalent to `x >= lhs AND x <= rhs`\n+query I nosort q1\n+WITH d(y) AS (\n+\tSELECT UNNEST(range(\n+\t\t'2023-05-11 4:00:00'::TIMESTAMP,\n+\t\t'2023-05-11 4:00:00'::TIMESTAMP + TO_DAYS(7),\n+\t\tTO_HOURS(6)\n+\t))\n+)\n+SELECT\n+\ty,\n+\ty - ('2023-05-11 4:00:00'::TIMESTAMP) AS x\n+FROM d\n+WHERE\n+\tx >= TO_HOURS(-44) AND x <= TO_HOURS(44)\n+----\n",
  "problem_statement": "INTERVAL values cannot be used in BETWEEN clauses\n### What happens?\n\nAttempting to use `INTERVAL` values in a `BETWEEN` clause results in the following error message:\r\n\r\n`Invalid type Error: Invalid Type [INTERVAL]: Invalid type for BETWEEN`\n\n### To Reproduce\n\n```sql\r\nWITH d(y) AS (SELECT UNNEST(\r\n    range(TIMEZONE('UTC', current_timestamp), \r\n          TIMEZONE('UTC', current_timestamp) + TO_DAYS(7), \r\n          TO_HOURS(6))\r\n        )\r\n    )\r\nSELECT y, y-TIMEZONE('UTC', current_timestamp) AS x\r\nFROM d\r\nWHERE x BETWEEN TO_HOURS(-44) AND TO_HOURS(44) \r\n```\r\n\r\nwhile both `x >= TO_HOURS(-44)` and `x <= TO_HOURS(44)` work and produce correct results.\n\n### OS:\n\nmacOS 13.3.1\n\n### DuckDB Version:\n\n0.7.1\n\n### DuckDB Client:\n\nPython\n\n### Full Name:\n\nVladimir Dzyuba\n\n### Affiliation:\n\nFaktion (Belgium)\n\n### Have you tried this on the latest `master` branch?\n\n- [X] I agree\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] I agree\n",
  "hints_text": "",
  "created_at": "2023-05-11T13:07:23Z"
}