{
  "repo": "duckdb/duckdb",
  "pull_number": 7587,
  "instance_id": "duckdb__duckdb-7587",
  "issue_numbers": [
    "7551"
  ],
  "base_commit": "1d304769a4451e69f2cf4c376dad498226615c2c",
  "patch": "diff --git a/src/common/types/vector.cpp b/src/common/types/vector.cpp\nindex 03345c03cfe4..29ad3d5d9dbd 100644\n--- a/src/common/types/vector.cpp\n+++ b/src/common/types/vector.cpp\n@@ -100,6 +100,9 @@ void Vector::Reference(const Value &value) {\n }\n \n void Vector::Reference(Vector &other) {\n+\tif (other.GetType().id() != GetType().id()) {\n+\t\tthrow InternalException(\"Vector::Reference used on vector of different type\");\n+\t}\n \tD_ASSERT(other.GetType() == GetType());\n \tReinterpret(other);\n }\ndiff --git a/src/execution/expression_executor.cpp b/src/execution/expression_executor.cpp\nindex 04932265a8cc..24a6b976a2a7 100644\n--- a/src/execution/expression_executor.cpp\n+++ b/src/execution/expression_executor.cpp\n@@ -180,6 +180,11 @@ void ExpressionExecutor::Execute(const Expression &expr, ExpressionState *state,\n \tif (count == 0) {\n \t\treturn;\n \t}\n+\tif (result.GetType().id() != expr.return_type.id()) {\n+\t\tthrow InternalException(\n+\t\t    \"ExpressionExecutor::Execute called with a result vector of type %s that does not match expression type %s\",\n+\t\t    result.GetType(), expr.return_type);\n+\t}\n \tswitch (expr.expression_class) {\n \tcase ExpressionClass::BOUND_BETWEEN:\n \t\tExecute((const BoundBetweenExpression &)expr, state, sel, count, result);\n",
  "test_patch": "diff --git a/test/fuzzer/afl/issue_7551.test b/test/fuzzer/afl/issue_7551.test\nnew file mode 100644\nindex 000000000000..ff7a51c69ecd\n--- /dev/null\n+++ b/test/fuzzer/afl/issue_7551.test\n@@ -0,0 +1,27 @@\n+# name: test/fuzzer/afl/issue_7551.test\n+# description: Issue #7551 - Segmentation fault on SELECT\n+# group: [afl]\n+\n+statement ok\n+PRAGMA enable_verification\n+\n+# FIXME - internal exception is thrown\n+mode skip\n+\n+statement ok\n+CREATE TABLE t0(c0 VARCHAR);\n+\n+statement ok\n+CREATE TABLE t1(c0 DATE);\n+\n+statement ok\n+INSERT INTO t1(c0) VALUES ((TIMESTAMP '1970-01-25 15:59:18'));\n+\n+statement ok\n+INSERT INTO t0(c0) VALUES ((DATE '1969-12-20')), ((TIMESTAMP '1970-01-11 21:25:45')), (DEFAULT), (('1')), (('')), ((TIMESTAMP '1969-12-15 21:35:22'));\n+\n+statement ok\n+CREATE VIEW v0(c0) AS SELECT t1.c0 FROM t1, t0;\n+\n+statement ok\n+SELECT t0.rowid FROM t0, t1 LEFT JOIN v0 ON (1) WHERE t0.c0 >= v0.c0 AND t0.c0 <= v0.c0;\n",
  "problem_statement": "Segmentation fault on `SELECT`\n### What happens?\n\nThe following program triggers a segmentation fault:\r\n```\r\nCREATE TABLE t0(c0 VARCHAR);\r\nCREATE TABLE t1(c0 DATE);\r\n\r\nINSERT INTO t1(c0) VALUES ((TIMESTAMP '1970-01-25 15:59:18'));\r\n\r\nINSERT INTO t0(c0) VALUES ((DATE '1969-12-20')), ((TIMESTAMP '1970-01-11 21:25:45')), (DEFAULT), (('1')), (('')), ((TIMESTAMP '1969-12-15 21:35:22'));\r\n\r\nCREATE VIEW v0(c0) AS SELECT t1.c0 FROM t1, t0;\r\n\r\nSELECT t0.rowid FROM t0, t1 LEFT JOIN v0 ON (1) WHERE t0.c0 >= v0.c0 AND t0.c0 <= v0.c0;\r\n```\r\nIf I remove any value of `t0.c0`, then can not reproduce this segmentation fault.\r\nAnd the `BETWEEN` can also trigger this bug like `SELECT t0.rowid FROM t0, t1 LEFT  JOIN v0 ON (1) WHERE (t0.c0 BETWEEN v0.c0 AND v0.c0);`\n\n### To Reproduce\n\nI can reproduce this on the latest commit version https://github.com/duckdb/duckdb/commit/6e908cfc55a42d27e2dcbdaf84ce99d8cd6fe2fd\n\n### OS:\n\nubuntu 22.04\n\n### DuckDB Version:\n\nhttps://github.com/duckdb/duckdb/commit/6e908cfc55a42d27e2dcbdaf84ce99d8cd6fe2fd\n\n### DuckDB Client:\n\nCLI\n\n### Full Name:\n\nChi Zhang\n\n### Affiliation:\n\nNanjing University, National University of Singapore\n\n### Have you tried this on the latest `master` branch?\n\n- [X] I agree\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] I agree\n",
  "hints_text": "This is a type mismatch in the internals of `IEJoin` so I'll deal with it.\nAfter looking into it, it's a compilation error. IEJoin is being told to compare strings, but the appropriate casts have not been injected.",
  "created_at": "2023-05-19T08:05:07Z"
}