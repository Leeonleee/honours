diff --git a/src/execution/operator/projection/physical_unnest.cpp b/src/execution/operator/projection/physical_unnest.cpp
index 5ab4c758bc1c..654958c1fc46 100644
--- a/src/execution/operator/projection/physical_unnest.cpp
+++ b/src/execution/operator/projection/physical_unnest.cpp
@@ -201,7 +201,7 @@ void PhysicalUnnest::GetChunkInternal(ExecutionContext &context, DataChunk &chun
 				int64_t list_length;
 				// deal with NULL values
 				if (!vdata.validity.RowIsValid(current_idx)) {
-					list_length = 1;
+					list_length = 0;
 				} else {
 					auto list_data = (list_entry_t *)vdata.data;
 					auto list_entry = list_data[current_idx];
diff --git a/src/main/query_profiler.cpp b/src/main/query_profiler.cpp
index dda657b80128..945dbe09b316 100644
--- a/src/main/query_profiler.cpp
+++ b/src/main/query_profiler.cpp
@@ -241,10 +241,11 @@ void QueryProfiler::Flush(OperatorProfiler &profiler) {
 			if (!info) {
 				continue;
 			}
-			if (int(entry->second->info.executors_info.size()) <= info->id) {
-				entry->second->info.executors_info.resize(info->id + 1);
+			auto info_id = info->id;
+			if (int(entry->second->info.executors_info.size()) <= info_id) {
+				entry->second->info.executors_info.resize(info_id + 1);
 			}
-			entry->second->info.executors_info[info->id] = move(info);
+			entry->second->info.executors_info[info_id] = move(info);
 		}
 	}
 }
diff --git a/src/storage/table/row_group.cpp b/src/storage/table/row_group.cpp
index 996fc18d460f..bfb028909363 100644
--- a/src/storage/table/row_group.cpp
+++ b/src/storage/table/row_group.cpp
@@ -39,7 +39,8 @@ RowGroup::RowGroup(DatabaseInstance &db, DataTableInfo &table_info, const vector
 
 	// set up the statistics
 	for (auto &stats : pointer.statistics) {
-		this->stats.push_back(make_shared<SegmentStatistics>(stats->type, move(stats)));
+		auto stats_type = stats->type;
+		this->stats.push_back(make_shared<SegmentStatistics>(stats_type, move(stats)));
 	}
 	this->version_info = move(pointer.versions);
 
