diff --git a/test/sql/function/string/test_string_split.test b/test/sql/function/string/test_string_split.test
index b487d3d4acb3..56da14e61499 100644
--- a/test/sql/function/string/test_string_split.test
+++ b/test/sql/function/string/test_string_split.test
@@ -7,7 +7,7 @@ PRAGMA enable_verification
 
 # test unnesting of null values a bit
 query T
-SELECT UNNEST(string_split(NULL, NULL))
+SELECT string_split(NULL, NULL)
 ----
 NULL
 
@@ -30,7 +30,6 @@ SELECT UNNEST(string_split(s, 'b')) FROM strings_with_null
 ----
 a
 a
-NULL
 a
 a
 a
@@ -38,7 +37,6 @@ a
 query T
 SELECT UNNEST(string_split(NULL, ' ')) IS NULL LIMIT 5
 ----
-1
 
 query T
 SELECT UNNEST(string_split('üüüüü', '◌̈'))
diff --git a/test/sql/order/test_order_variable_size_payload.test_coverage b/test/sql/order/test_order_variable_size_payload.test_coverage
index 6bd2a526d21d..f3554bac5f34 100644
--- a/test/sql/order/test_order_variable_size_payload.test_coverage
+++ b/test/sql/order/test_order_variable_size_payload.test_coverage
@@ -189,7 +189,6 @@ NULL	{'i': NULL, 's': }
 1	{'i': 1, 's': a}
 1	{'i': 1, 's': a}
 1	{'i': 1, 's': }
-2	{'i': 2, 's': NULL}
 3	{'i': 3, 's': a}
 3	{'i': 3, 's': a}
 3	{'i': 3, 's': a}
diff --git a/test/sql/types/list/large_list_storage.test_slow b/test/sql/types/list/large_list_storage.test_slow
index bef42e57a608..ab059fd86898 100644
--- a/test/sql/types/list/large_list_storage.test_slow
+++ b/test/sql/types/list/large_list_storage.test_slow
@@ -40,7 +40,7 @@ SELECT COUNT(*) FROM a
 query IIII
 SELECT COUNT(*), MIN(i), MAX(i), COUNT(i) FROM (SELECT UNNEST(b) FROM a) tbl(i)
 ----
-30008	0	99999999	30007
+30007	0	99999999	30007
 
 # bigly list that spans multiple pages
 statement ok
@@ -49,7 +49,7 @@ INSERT INTO a SELECT LIST(i) FROM range(200000) tbl(i)
 query IIII
 SELECT COUNT(*), MIN(i), MAX(i), COUNT(i) FROM (SELECT UNNEST(b) FROM a) tbl(i)
 ----
-230008	0	99999999	230007
+230007	0	99999999	230007
 
 # several bigly lists with null values
 statement ok
diff --git a/test/sql/types/list/list_of_struct.test b/test/sql/types/list/list_of_struct.test
index bee650e5e213..371f3e3092a3 100644
--- a/test/sql/types/list/list_of_struct.test
+++ b/test/sql/types/list/list_of_struct.test
@@ -38,7 +38,6 @@ SELECT UNNEST(l) FROM a
 {'a': 3, 'b': hello}
 NULL
 {'a': NULL, 'b': thisisalongstring}
-NULL
 {'a': 17, 'b': world}
 
 # list of nested structs with lists
@@ -104,7 +103,6 @@ NULL
 {'a': {'a1': [NULL, 4, 5], 'a2': NULL}, 'b': thisisalongstring}
 {'a': {'a1': NULL, 'a2': 22}, 'b': NULL}
 {'a': NULL, 'b': aaaaaaaaaaaaaaaaaaaaaaaa}
-NULL
 {'a': {'a1': [6, 7, 8, 9], 'a2': 17}, 'b': world1}
 NULL
 {'a': {'a1': [10, 11, 12], 'a2': 22}, 'b': world2}
@@ -117,7 +115,6 @@ NULL
 {'a1': [NULL, 4, 5], 'a2': NULL}
 {'a1': NULL, 'a2': 22}
 NULL
-NULL
 {'a1': [6, 7, 8, 9], 'a2': 17}
 NULL
 {'a1': [10, 11, 12], 'a2': 22}
@@ -130,7 +127,6 @@ NULL
 [NULL, 4, 5]
 NULL
 NULL
-NULL
 [6, 7, 8, 9]
 NULL
 [10, 11, 12]
diff --git a/test/sql/types/list/unnest_complex_types.test b/test/sql/types/list/unnest_complex_types.test
index 616343e051d7..397a9159a2a1 100644
--- a/test/sql/types/list/unnest_complex_types.test
+++ b/test/sql/types/list/unnest_complex_types.test
@@ -35,7 +35,6 @@ SELECT UNNEST(i) FROM (VALUES ([[1, 2, 3], [4, 5]]), (NULL), ([[6, 7], NULL, [8,
 ----
 [1, 2, 3]
 [4, 5]
-NULL
 [6, 7]
 NULL
 [8, 9, NULL]
@@ -60,7 +59,6 @@ SELECT UNNEST(i) FROM (VALUES ([{'a': 10, 'b': 1}, {'a': 11, 'b': 2}]), (NULL),
 ----
 {'a': 10, 'b': 1}
 {'a': 11, 'b': 2}
-NULL
 {'a': 12, 'b': 3}
 NULL
 {'a': NULL, 'b': NULL}
@@ -71,7 +69,6 @@ SELECT UNNEST(i) FROM (VALUES ([{'a': {'a1': 7, 'a2': NULL}, 'b': 1}, {'a': {'a1
 ----
 {'a': {'a1': 7, 'a2': NULL}, 'b': 1}
 {'a': {'a1': 9, 'a2': 10}, 'b': 2}
-NULL
 {'a': {'a1': 11, 'a2': 12}, 'b': 3}
 NULL
 {'a': NULL, 'b': NULL}
diff --git a/test/sql/types/list/unnest_null_empty.test b/test/sql/types/list/unnest_null_empty.test
new file mode 100644
index 000000000000..477a1e16bf4a
--- /dev/null
+++ b/test/sql/types/list/unnest_null_empty.test
@@ -0,0 +1,47 @@
+# name: test/sql/types/list/unnest_null_empty.test
+# description: Test unnest semantics with NULL and empty lists
+# group: [list]
+
+statement ok
+PRAGMA enable_verification
+
+statement ok
+CREATE TABLE people(id INTEGER, name VARCHAR, address VARCHAR[]);
+
+statement ok
+insert into people values (1, 'Zuckerberg', ARRAY['New York']);
+
+statement ok
+insert into people values (2, 'Bezos', ARRAY['Washington', 'Space']);
+
+statement ok
+insert into people values (3, 'Tim', NULL);
+
+statement ok
+insert into people values (4, 'Elvis', ARRAY[NULL, NULL, NULL]);
+
+statement ok
+insert into people values (5, 'Mark', ARRAY[]::VARCHAR[]);
+
+query II
+SELECT name, UNNEST(address) FROM people;
+----
+Zuckerberg	New York
+Bezos	Washington
+Bezos	Space
+Elvis	NULL
+Elvis	NULL
+Elvis	NULL
+
+# and with multiple unnests
+query III
+SELECT name, UNNEST(address), UNNEST([1]) FROM people;
+----
+Zuckerberg	New York	1
+Bezos	Washington	1
+Bezos	Space	NULL
+Tim	NULL	1
+Elvis	NULL	1
+Elvis	NULL	NULL
+Elvis	NULL	NULL
+Mark	NULL	1
