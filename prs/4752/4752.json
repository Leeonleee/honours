{
  "repo": "duckdb/duckdb",
  "pull_number": 4752,
  "instance_id": "duckdb__duckdb-4752",
  "issue_numbers": [
    "4753"
  ],
  "base_commit": "13101593fb8032547a98de6e2e3f550696200f18",
  "patch": "diff --git a/src/planner/binder/query_node/plan_subquery.cpp b/src/planner/binder/query_node/plan_subquery.cpp\nindex c96a30119fa2..c111bfd18990 100644\n--- a/src/planner/binder/query_node/plan_subquery.cpp\n+++ b/src/planner/binder/query_node/plan_subquery.cpp\n@@ -1,3 +1,5 @@\n+#include \"duckdb/function/aggregate/distributive_functions.hpp\"\n+#include \"duckdb/main/client_config.hpp\"\n #include \"duckdb/planner/binder.hpp\"\n #include \"duckdb/planner/expression/bound_aggregate_expression.hpp\"\n #include \"duckdb/planner/expression/bound_cast_expression.hpp\"\n@@ -6,13 +8,11 @@\n #include \"duckdb/planner/expression/bound_constant_expression.hpp\"\n #include \"duckdb/planner/expression/bound_reference_expression.hpp\"\n #include \"duckdb/planner/expression/bound_subquery_expression.hpp\"\n+#include \"duckdb/planner/expression/bound_window_expression.hpp\"\n #include \"duckdb/planner/expression_iterator.hpp\"\n #include \"duckdb/planner/operator/list.hpp\"\n-#include \"duckdb/planner/subquery/flatten_dependent_join.hpp\"\n-#include \"duckdb/function/aggregate/distributive_functions.hpp\"\n #include \"duckdb/planner/operator/logical_window.hpp\"\n-#include \"duckdb/planner/expression/bound_window_expression.hpp\"\n-#include \"duckdb/main/client_config.hpp\"\n+#include \"duckdb/planner/subquery/flatten_dependent_join.hpp\"\n \n namespace duckdb {\n \n@@ -265,7 +265,7 @@ static unique_ptr<Expression> PlanCorrelatedSubquery(Binder &binder, BoundSubque\n \t\tauto delim_join = CreateDuplicateEliminatedJoin(correlated_columns, JoinType::MARK, move(root), perform_delim);\n \t\tdelim_join->mark_index = mark_index;\n \t\t// RHS\n-\t\tFlattenDependentJoins flatten(binder, correlated_columns, perform_delim);\n+\t\tFlattenDependentJoins flatten(binder, correlated_columns, perform_delim, true);\n \t\tflatten.DetectCorrelatedExpressions(plan.get());\n \t\tauto dependent_join = flatten.PushDownDependentJoin(move(plan));\n \n@@ -292,7 +292,7 @@ static unique_ptr<Expression> PlanCorrelatedSubquery(Binder &binder, BoundSubque\n \t\tauto delim_join = CreateDuplicateEliminatedJoin(correlated_columns, JoinType::MARK, move(root), perform_delim);\n \t\tdelim_join->mark_index = mark_index;\n \t\t// RHS\n-\t\tFlattenDependentJoins flatten(binder, correlated_columns, true);\n+\t\tFlattenDependentJoins flatten(binder, correlated_columns, true, true);\n \t\tflatten.DetectCorrelatedExpressions(plan.get());\n \t\tauto dependent_join = flatten.PushDownDependentJoin(move(plan));\n \n",
  "test_patch": "diff --git a/test/issues/general/test_4753.test b/test/issues/general/test_4753.test\nnew file mode 100644\nindex 000000000000..a96659d4b777\n--- /dev/null\n+++ b/test/issues/general/test_4753.test\n@@ -0,0 +1,25 @@\n+# name: test/issues/general/test_4753.test\n+# description: Issue 4753: Exists and ANY correlated subquery produce incorrect result\n+# group: [general]\n+\n+statement ok\n+pragma enable_verification\n+\n+statement ok\n+CREATE TABLE t (x INT);\n+\n+statement ok\n+INSERT INTO t VALUES (1), (2);\n+\n+query I\n+SELECT NULL = ANY(SELECT sum(x) FROM t t2 WHERE t1.x > 2) FROM t t1;\n+----\n+NULL\n+NULL\n+\n+query I\n+SELECT EXISTS(SELECT sum(x) FROM t t2 WHERE t1.x > 2) FROM t t1;\n+----\n+true\n+true\n+\n",
  "problem_statement": "Exists and ANY correlated subquery produce incorrect result\n### What happens?\n\nSELECT NULL = ANY(SELECT sum(x) FROM t t2 WHERE t1.x > 2) FROM t t1;\r\nShould return NULL.\r\nSELECT EXISTS(SELECT sum(x) FROM t t2 WHERE t1.x > 2) FROM t t1;\r\nShould return true.\n\n### To Reproduce\n\n```sql\r\nCREATE TABLE t (x INT);\r\nINSERT INTO t VALUES (1), (2);\r\n\r\nSELECT NULL = ANY(SELECT sum(x) FROM t t2 WHERE t1.x > 2) FROM t t1;\r\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 NULL = ANY(SELECT sum(x) FROM t AS t2 WHERE t1.x > 2) \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 false                                                 \u2502\r\n\u2502 false                                                 \u2502\r\n\r\nSELECT EXISTS(SELECT sum(x) FROM t t2 WHERE t1.x > 2) FROM t t1;\r\n EXISTS(SELECT sum(x) FROM t AS t2 WHERE t1.x > 2) \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 false                                             \u2502\r\n\u2502 false                                             \u2502\r\n```\n\n### OS:\n\nwindows\n\n### DuckDB Version:\n\n0.5.0\n\n### DuckDB Client:\n\nduckdb-cli\n\n### Full Name:\n\nlokax\n\n### Affiliation:\n\nnone\n\n### Have you tried this on the latest `master` branch?\n\n- [X] I agree\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] I agree\n",
  "hints_text": "",
  "created_at": "2022-09-19T12:27:18Z"
}