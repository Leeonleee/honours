{
  "repo": "duckdb/duckdb",
  "pull_number": 11982,
  "instance_id": "duckdb__duckdb-11982",
  "issue_numbers": [
    "11946"
  ],
  "base_commit": "86fffb43168674c6fd7b52f1f4439bb7cfc597a6",
  "patch": "diff --git a/src/function/table/arrow.cpp b/src/function/table/arrow.cpp\nindex f7fe3c481446..cefff8e0638f 100644\n--- a/src/function/table/arrow.cpp\n+++ b/src/function/table/arrow.cpp\n@@ -269,6 +269,9 @@ unique_ptr<FunctionData> ArrowTableFunction::ArrowScanBind(ClientContext &contex\n \tPopulateArrowTableType(res->arrow_table, data.schema_root, names, return_types);\n \tQueryResult::DeduplicateColumns(names);\n \tres->all_types = return_types;\n+\tif (return_types.empty()) {\n+\t\tthrow InvalidInputException(\"Provided table/dataframe must have at least one column\");\n+\t}\n \treturn std::move(res);\n }\n \n",
  "test_patch": "diff --git a/tools/pythonpkg/tests/fast/arrow/test_polars.py b/tools/pythonpkg/tests/fast/arrow/test_polars.py\nindex 9dc86de43d2a..78c74564e091 100644\n--- a/tools/pythonpkg/tests/fast/arrow/test_polars.py\n+++ b/tools/pythonpkg/tests/fast/arrow/test_polars.py\n@@ -50,3 +50,10 @@ def test_register_polars(self, duckdb_cursor):\n         con.register('polars_df', df.lazy())\n         polars_result = con.execute('select * from polars_df').pl()\n         pl_testing.assert_frame_equal(df, polars_result)\n+\n+    def test_empty_polars_dataframe(self, duckdb_cursor):\n+        polars_empty_df = pl.DataFrame()\n+        with pytest.raises(\n+            duckdb.InvalidInputException, match='Provided table/dataframe must have at least one column'\n+        ):\n+            duckdb_cursor.sql(\"from polars_empty_df\")\n",
  "problem_statement": "Querying empty Polars dataframe produces internal error\n### What happens?\r\n\r\nWhen querying an empty Polars dataframe, an INTERNAL Error: Failed to bind \"arrow_scan\" is produced. A following query against a populated Polars dataframe produces a FATAL Error: Failed: database has been invalidated because of a previous fatal error. The database must be restarted prior to being used again.\r\n\r\n### To Reproduce\r\n\r\n```\r\npython\r\nPython 3.12.3 (main, Apr  9 2024, 08:09:14) [Clang 15.0.0 (clang-1500.3.9.4)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n```\r\n```python\r\nimport polars as pl\r\nimport duckdb\r\n\r\npolars_empty_df = pl.DataFrame()\r\npolars_df = pl.DataFrame({\"a\":[1,2,3]})\r\n\r\nduckdb.sql(\"from polars_empty_df\")\r\n```\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/davidbrennan/venv/lib/python3.12/site-packages/duckdb/__init__.py\", line 455, in sql\r\n    return conn.sql(query, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\r\nduckdb.duckdb.InternalException: INTERNAL Error: Failed to bind \"arrow_scan\": Table function must return at least one column\r\nThis error signals an assertion failure within DuckDB. This usually occurs due to unexpected conditions or errors in the program's logic.\r\nFor more information, see https://duckdb.org/docs/dev/internal_errors\r\n```\r\nA following query against a populated Polars dataframe produces the following:\r\n```python\r\nduckdb.sql(\"from polars_df\")\r\n```\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nduckdb.duckdb.InvalidInputException: Invalid Input Error: Attempting to execute an unsuccessful or closed pending query result\r\nError: FATAL Error: Failed: database has been invalidated because of a previous fatal error. The database must be restarted prior to being used again.\r\nOriginal error: \"Failed to bind \"arrow_scan\": Table function must return at least one column\"\r\n```\r\n\r\n\r\n### OS:\r\n\r\nMacOS Sonama 14.4.1 (silicon)\r\n\r\n### DuckDB Version:\r\n\r\n0.10.3-dev777\r\n\r\n### DuckDB Client:\r\n\r\nPython 3.12.3\r\n\r\n### Full Name:\r\n\r\nDavid Brennan\r\n\r\n### Affiliation:\r\n\r\nNone\r\n\r\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\r\n\r\nI have tested with a nightly build\r\n\r\n### Did you include all relevant data sets for reproducing the issue?\r\n\r\nYes\r\n\r\n### Did you include all code required to reproduce the issue?\r\n\r\n- [X] Yes, I have\r\n\r\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\r\n\r\n- [X] Yes, I have\n",
  "hints_text": "",
  "created_at": "2024-05-08T12:41:06Z"
}