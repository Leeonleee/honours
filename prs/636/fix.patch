diff --git a/.travis.yml b/.travis.yml
index 47cc2849bcfe..006023575cd5 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -39,14 +39,16 @@ matrix:
         - (cd build/release && cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_ICU_EXTENSION=1 -DJDBC_DRIVER=1 ../.. && cmake --build .)
         - build/release/test/unittest "*"
         - python3.7 tools/shell/shell-test.py build/release/duckdb_cli
+        - build/release/extension/icu/test/icu_test
+        - python3.7 tools/rest/test_the_rest.py build/release/tools/rest
+        - java -cp build/release/tools/jdbc/duckdb_jdbc.jar nl.cwi.da.duckdb.test.TestDuckDBJDBC
         - (cd examples/embedded-c; make)
         - (cd examples/embedded-c++; make)
         - (cd examples/programmatic-querying; make)
-        - java -cp build/release/tools/jdbc/duckdb_jdbc.jar nl.cwi.da.duckdb.test.TestDuckDBJDBC
-        - build/release/extension/icu/test/icu_test
+        - (cd examples/jdbc; make)
 
       after_success:
-        - python tools/upload-s3.py lib-linux-amd64 build/release/src/libduckdb*.so build/release/src/libduckdb*.a build/release/duckdb_cli build/release/tools/jdbc/duckdb_jdbc.jar
+        #- python tools/upload-s3.py lib-linux-amd64 build/release/src/libduckdb*.so build/release/src/libduckdb*.a build/release/duckdb_cli build/release/tools/jdbc/duckdb_jdbc.jar
         - python3 scripts/asset-upload.py libduckdb-linux-amd64.so=build/release/src/libduckdb*.so duckdb_cli-linux-amd64=build/release/duckdb_cli duckdb_jdbc-linux-amd64.jar=build/release/tools/jdbc/duckdb_jdbc.jar
 
 
@@ -68,7 +70,7 @@ matrix:
         - build/release/extension/icu/test/icu_test
 
       after_success:
-        - python3 tools/upload-s3.py lib-osx build/release/src/libduckdb.dylib build/release/src/libduckdb_static.a build/release/duckdb_cli build/release/tools/jdbc/duckdb_jdbc.jar
+        #- python3 tools/upload-s3.py lib-osx build/release/src/libduckdb.dylib build/release/src/libduckdb_static.a build/release/duckdb_cli build/release/tools/jdbc/duckdb_jdbc.jar
         - python3 scripts/asset-upload.py libduckdb-osx-amd64.dylib=build/release/src/libduckdb*.dylib duckdb_cli-osx-amd64=build/release/duckdb_cli duckdb_jdbc-osx-amd64.jar=build/release/tools/jdbc/duckdb_jdbc.jar
 
 
@@ -96,7 +98,7 @@ matrix:
         - extension/icu/test/Release/icu_test.exe
 
       after_success:
-        - C:/Python37-x64/python.exe tools/upload-s3.py lib-windows-amd64 src/Release/duckdb.dll Release/duckdb_cli.exe tools/jdbc/duckdb_jdbc.jar
+        #- C:/Python37-x64/python.exe tools/upload-s3.py lib-windows-amd64 src/Release/duckdb.dll Release/duckdb_cli.exe tools/jdbc/duckdb_jdbc.jar
         - C:/Python37-x64/python.exe scripts/asset-upload.py libduckdb-windows-amd64.dll=src/Release/duckdb.dll duckdb_cli-windows-amd64.exe=Release/duckdb_cli.exe duckdb_jdbc-windows-amd64.jar=tools/jdbc/duckdb_jdbc.jar
 
 
@@ -237,7 +239,7 @@ matrix:
 
       after_success:
         - (cd src/amalgamation; zip ../../build/duckdb.zip duckdb.*)
-        - python tools/upload-s3.py src-amalgamation build/duckdb.zip
+        # - python tools/upload-s3.py src-amalgamation build/duckdb.zip
         - python3 scripts/asset-upload.py duckdb_amalgamation.zip=build/duckdb.zip
 
 
@@ -294,7 +296,7 @@ matrix:
         - build/release/test/unittest "*"
 
       after_success:
-        - python tools/upload-s3.py lib-linux-i386 build/release/src/libduckdb*.so build/release/src/libduckdb*.a build/release/duckdb_cli
+        #- python tools/upload-s3.py lib-linux-i386 build/release/src/libduckdb*.so build/release/src/libduckdb*.a build/release/duckdb_cli
         - python3 scripts/asset-upload.py libduckdb-linux-i386.so=build/release/src/libduckdb.so duckdb_cli-linux-i386=build/release/duckdb_cli
 
 
@@ -319,7 +321,7 @@ matrix:
         - C:/Python37-x64/python.exe tools/shell/shell-test.py Release/duckdb_cli.exe
 
       after_success:
-        - C:/Python37-x64/python.exe tools/upload-s3.py lib-windows-i386 src/Release/duckdb.dll Release/duckdb_cli.exe
+        #- C:/Python37-x64/python.exe tools/upload-s3.py lib-windows-i386 src/Release/duckdb.dll Release/duckdb_cli.exe
         - C:/Python37-x64/python.exe scripts/asset-upload.py libduckdb-windows-i386.dll=src/Release/duckdb.dll duckdb_cli-windows-i386.exe=Release/duckdb_cli.exe duckdb_jdbc-windows-i386.jar=tools/jdbc/duckdb_jdbc.jar
 
 
@@ -398,24 +400,7 @@ matrix:
     #     - $SCMD /home/duckdb/build/test/unittest "~[copy]~[sqlitelogic]~[sqlserver]~[parquet]~[.]"
 
 
-# APIs: REST, r / python packages
-
-
-    - os: linux
-      dist: xenial
-      name: REST Server
-      if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
-
-      before_install:
-        - pip install --user boto3
-
-      script:
-        - cd tools/rest
-        - python3 test_the_rest.py
-
-      # after_success:
-      #   - python tools/upload-s3.py lib-linux-amd64 build/release/src/libduckdb*.so build/release/src/libduckdb*.a
-
+# APIs: jdbc/ r / python packages
 
     - os: linux
       dist: xenial
diff --git a/Makefile b/Makefile
index 893d03a71254..822bb948e549 100644
--- a/Makefile
+++ b/Makefile
@@ -64,11 +64,12 @@ amaldebug:
 	cmake --build .
 
 jdbc:
-	mkdir -p build/jdbc && \
-	cd build/jdbc && \
-	cmake $(GENERATOR) $(FORCE_COLOR) -DJDBC_DRIVER=1 -DCMAKE_BUILD_TYPE=Release ../.. && \
+	mkdir -p build/release && \
+	cd build/release && \
+	cmake $(GENERATOR) $(FORCE_COLOR) ${WARNINGS_AS_ERRORS} ${DISABLE_UNITY_FLAG} -DJDBC_DRIVER=1 -DCMAKE_BUILD_TYPE=Release ../.. && \
 	cmake --build .
 
+
 jdbcdebug:
 	mkdir -p build/jdbcdebug && \
 	cd build/jdbcdebug && \
diff --git a/examples/jdbc/DuckDBExample.java b/examples/jdbc/DuckDBExample.java
new file mode 100644
index 000000000000..d74dccca3b32
--- /dev/null
+++ b/examples/jdbc/DuckDBExample.java
@@ -0,0 +1,47 @@
+import java.sql.Connection;
+import java.sql.DriverManager;
+import java.sql.PreparedStatement;
+import java.sql.ResultSet;
+import java.sql.ResultSetMetaData;
+import java.sql.SQLException;
+import java.sql.Statement;
+
+public class DuckDBExample {
+	public static void main(String[] args) throws SQLException, ClassNotFoundException {
+		Class.forName("nl.cwi.da.duckdb.DuckDBDriver");
+
+		// this JDBC url creates a temporary in-memory database. If you want to use a
+		// persistent DB, append its file name
+		Connection conn = DriverManager.getConnection("jdbc:duckdb:");
+
+		Statement stmt = conn.createStatement();
+		stmt.execute("CREATE TABLE test (a INTEGER, b VARCHAR)");
+
+		PreparedStatement p_stmt = conn.prepareStatement("INSERT INTO test VALUES (?, ?);");
+
+		p_stmt.setInt(1, 42);
+		p_stmt.setString(2, "Hello");
+		p_stmt.execute();
+
+		p_stmt.setInt(1, 43);
+		p_stmt.setString(2, "World");
+		p_stmt.execute();
+
+		p_stmt.close();
+
+		ResultSet rs = stmt.executeQuery("SELECT * FROM test");
+		ResultSetMetaData md = rs.getMetaData();
+		int row = 1;
+		while (rs.next()) {
+			for (int col = 1; col <= md.getColumnCount(); col++) {
+				System.out.println(md.getColumnName(col) + "[" + row + "]=" + rs.getString(col) + " ("
+						+ md.getColumnTypeName(col) + ")");
+			}
+			row++;
+		}
+
+		rs.close();
+		stmt.close();
+		conn.close();
+	}
+}
diff --git a/examples/jdbc/Makefile b/examples/jdbc/Makefile
new file mode 100644
index 000000000000..ab4a567c15b4
--- /dev/null
+++ b/examples/jdbc/Makefile
@@ -0,0 +1,14 @@
+.PHONY: duckdb clean main
+
+all: duckdb main
+
+clean:
+	rm *.class
+
+duckdb:
+	make -C ../.. jdbc
+
+main:
+	javac DuckDBExample.java
+	java -cp .:../../build/release/tools/jdbc/duckdb_jdbc.jar DuckDBExample
+
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index e4e7b652af0e..f2f58a0032eb 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -7,6 +7,11 @@ if(NOT MSVC)
     )
 endif()
 
+# clang-tidy config from presto-cpp
+# set(CMAKE_CXX_CLANG_TIDY clang-tidy --checks=*,-abseil-*,-android-*,-cert-err58-cpp,-clang-analyzer-osx-*,-cppcoreguidelines-avoid-c-arrays,-cppcoreguidelines-avoid-magic-numbers,-cppcoreguidelines-pro-bounds-array-to-pointer-decay,-cppcoreguidelines-pro-bounds-pointer-arithmetic,-cppcoreguidelines-pro-type-reinterpret-cast,-cppcoreguidelines-pro-type-vararg,-fuchsia-*,-google-*,-hicpp-avoid-c-arrays,-hicpp-deprecated-headers,-hicpp-no-array-decay,-hicpp-use-equals-default,-hicpp-vararg,-llvmlibc-*,-llvm-header-guard,-llvm-include-order,-mpi-*,-misc-non-private-member-variables-in-classes,-misc-no-recursion,-misc-unused-parameters,-modernize-avoid-c-arrays,-modernize-deprecated-headers,-modernize-use-nodiscard,-modernize-use-trailing-return-type,-objc-*,-openmp-*,-readability-avoid-const-params-in-decls,-readability-convert-member-functions-to-static,-readability-magic-numbers,-zircon-*)
+
+
+
 if(AMALGAMATION_BUILD)
 
   if(WIN32)
