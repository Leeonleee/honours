diff --git a/test/issues/fuzz/bitwise_shift_overflow.test b/test/issues/fuzz/bitwise_shift_overflow.test
new file mode 100644
index 000000000000..6990f12893e7
--- /dev/null
+++ b/test/issues/fuzz/bitwise_shift_overflow.test
@@ -0,0 +1,79 @@
+# name: test/issues/fuzz/bitwise_shift_overflow.test
+# description: Issue #3365: Undefined behavior at bitwise.cpp:148:38
+# group: [fuzz]
+
+statement ok
+PRAGMA enable_verification
+
+# issue tests
+statement error
+SELECT 1000::bigint<<55;
+
+statement error
+SELECT 256::bigint<<55;
+
+query I
+SELECT 255::bigint<<55;
+----
+9187343239835811840
+
+query I
+SELECT 0::bigint<<999;
+----
+0
+
+# all integer types
+# tinyint
+statement error
+SELECT 10::tinyint<<4::tinyint;
+
+query I
+SELECT 10::tinyint<<3::tinyint;
+----
+80
+
+# cannot left shift negative numbers
+statement error
+SELECT (-128)::tinyint<<0::tinyint;
+
+statement error
+SELECT (-10)::tinyint<<4::tinyint;
+
+statement error
+SELECT (-10)::tinyint<<3::tinyint;
+
+# smallint
+statement error
+SELECT 1000::smallint<<6::smallint;
+
+query I
+SELECT 1000::smallint<<5::smallint;
+----
+32000
+
+# integer
+statement error
+SELECT 1000::integer<<22::integer;
+
+query I
+SELECT 1000::integer<<21::integer;
+----
+2097152000
+
+# bigint
+statement error
+SELECT 1000::bigint<<54::bigint;
+
+query I
+SELECT 1000::bigint<<53::bigint;
+----
+9007199254740992000
+
+# hugeint
+statement error
+SELECT 1000::hugeint<<118::hugeint;
+
+query I
+SELECT 1000::hugeint<<117::hugeint;
+----
+166153499473114484112975882535043072000
diff --git a/test/issues/rigger/test_515.test b/test/issues/rigger/test_515.test
index 3c295379f06a..b5202897fdfd 100644
--- a/test/issues/rigger/test_515.test
+++ b/test/issues/rigger/test_515.test
@@ -21,18 +21,11 @@ INSERT INTO t1(c1, c0) VALUES (1, 1);
 statement ok
 INSERT INTO t0 VALUES (0);
 
-query IRI
+statement error
 SELECT * FROM t1 JOIN t0 ON t1.c1 WHERE NOT (t1.c0<<-1);
-----
-1	1.000000	0
 
-query IRI
+statement error
 SELECT * FROM t1 JOIN t0 ON t1.c1 WHERE (t1.c0<<-1);
-----
 
-query T
+statement error
 SELECT NOT (t1.c0<<-1) FROM t1;
-----
-1
-1
-
diff --git a/test/issues/rigger/test_538.test b/test/issues/rigger/test_538.test
index 2c78e5098f5b..c4b2610ac55b 100644
--- a/test/issues/rigger/test_538.test
+++ b/test/issues/rigger/test_538.test
@@ -15,13 +15,8 @@ INSERT INTO t0(c0) VALUES (-1);
 statement ok
 INSERT INTO t0(c0) VALUES (0);
 
-query T
+statement error
 SELECT t0.c0 AND (t0.c0<<64) FROM t0;
-----
-0
-0
 
-query I
+statement error
 SELECT * FROM t0 WHERE t0.c0 AND (t0.c0<<64);
-----
-
diff --git a/test/sql/function/operator/test_bitwise_ops.test b/test/sql/function/operator/test_bitwise_ops.test
index 13e4fe636adc..9f121ebf1652 100644
--- a/test/sql/function/operator/test_bitwise_ops.test
+++ b/test/sql/function/operator/test_bitwise_ops.test
@@ -35,26 +35,18 @@ SELECT xor(1, 1), xor(1, 0), xor(0, 0), xor(NULL, 1), xor(1, NULL)
 ----
 0	1	0	NULL	NULL
 
-# out of range shifts return 0
-query IIII
+# out of range shifts throw an error
+statement error
 SELECT 1::TINYINT << -1::TINYINT, 1::TINYINT >> -1::TINYINT, 1::TINYINT << 12::TINYINT, 1::TINYINT >> 12::TINYINT
-----
-0	0	0	0
 
-query IIII
+statement error
 SELECT 1::SMALLINT << -1::SMALLINT, 1::SMALLINT >> -1::SMALLINT, 1::SMALLINT << 20::SMALLINT, 1::SMALLINT >> 20::SMALLINT
-----
-0	0	0	0
 
-query IIII
+statement error
 SELECT 1::INT << -1::INT, 1::INT >> -1::INT, 1::INT << 40::INT, 1::INT >> 40::INT
-----
-0	0	0	0
 
-query IIII
+statement error
 SELECT 1::BIGINT << -1::BIGINT, 1::BIGINT >> -1::BIGINT, 1::BIGINT << 1000::BIGINT, 1::BIGINT >> 1000::BIGINT
-----
-0	0	0	0
 
 # test invalid bitwise ops
 statement error
diff --git a/test/sql/types/hugeint/test_hugeint_bitwise.test b/test/sql/types/hugeint/test_hugeint_bitwise.test
index c163323cf9a8..f21fd3d856a8 100644
--- a/test/sql/types/hugeint/test_hugeint_bitwise.test
+++ b/test/sql/types/hugeint/test_hugeint_bitwise.test
@@ -16,10 +16,8 @@ SELECT 27::HUGEINT << 0
 ----
 27
 
-query I
+statement error
 SELECT -27::HUGEINT << 1
-----
-0
 
 # large shifts
 query II
@@ -40,15 +38,17 @@ select 1::HUGEINT << 64;
 
 
 # out of bounds shifts
-query II
-select 1::HUGEINT << 200, '1329227995784915872903807060280344576'::HUGEINT << 50;
-----
-0	0
+statement error
+select 1::HUGEINT << 200
 
-query II
-SELECT 27::HUGEINT << -1, 100::HUGEINT << '1329227995784915872903807060280344576'::HUGEINT
-----
-0	0
+statement error
+SELECT '1329227995784915872903807060280344576'::HUGEINT << 50;
+
+statement error
+SELECT 27::HUGEINT << -1
+
+statement error
+SELECT 100::HUGEINT << '1329227995784915872903807060280344576'::HUGEINT
 
 # right-shift
 query I
@@ -147,12 +147,8 @@ select 1 >> 170141183460469231731687303715884105727::hugeint;
 ----
 0
 
-query I
+statement error
 select 1::hugeint << 1000;
-----
-0
 
-query I
+statement error
 select 1 << 170141183460469231731687303715884105727::hugeint;
-----
-0
