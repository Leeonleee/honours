{
  "repo": "duckdb/duckdb",
  "pull_number": 15956,
  "instance_id": "duckdb__duckdb-15956",
  "issue_numbers": [
    "15664",
    "15664"
  ],
  "base_commit": "837cbce93f4ac1778b26ca0bd23ed2a1d9b7eff7",
  "patch": "diff --git a/src/parser/transform/expression/transform_columnref.cpp b/src/parser/transform/expression/transform_columnref.cpp\nindex a232219fa14c..dfbbc6f121fc 100644\n--- a/src/parser/transform/expression/transform_columnref.cpp\n+++ b/src/parser/transform/expression/transform_columnref.cpp\n@@ -96,6 +96,7 @@ unique_ptr<ParsedExpression> Transformer::TransformStarExpression(duckdb_libpgqu\n \t\t\tresult->relation_name = child_star.relation_name;\n \t\t\tresult->exclude_list = std::move(child_star.exclude_list);\n \t\t\tresult->replace_list = std::move(child_star.replace_list);\n+\t\t\tresult->rename_list = std::move(child_star.rename_list);\n \t\t\tresult->expr.reset();\n \t\t} else if (result->expr->GetExpressionType() == ExpressionType::LAMBDA) {\n \t\t\tvector<unique_ptr<ParsedExpression>> children;\n",
  "test_patch": "diff --git a/test/sql/projection/select_star_rename.test b/test/sql/projection/select_star_rename.test\nindex f52f4a9e7b2a..7f3be601c2e0 100644\n--- a/test/sql/projection/select_star_rename.test\n+++ b/test/sql/projection/select_star_rename.test\n@@ -17,6 +17,12 @@ SELECT renamed_col FROM (SELECT * RENAME i AS renamed_col FROM integers)\n ----\n 1\n \n+# rename with COLUMNS\n+query I\n+SELECT renamed_col FROM (SELECT COLUMNS(* RENAME i AS renamed_col) FROM integers)\n+----\n+1\n+\n # qualified\n query I\n SELECT renamed_col FROM (SELECT * RENAME integers.i AS renamed_col FROM integers)\n",
  "problem_statement": "COLUMNS(* RENAME \"x\" AS \"y\") doesn't work\n### What happens?\r\n\r\n```sql\r\nFROM range(1)\r\nSELECT COLUMNS(* RENAME \"range\" AS \"x\")\r\n```\r\n```\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 range \u2502\r\n\u2502 int64 \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502     0 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n```sql\r\nFROM range(1)\r\nSELECT * RENAME \"range\" AS \"x\"\r\n```\r\n```\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502   x   \u2502\r\n\u2502 int64 \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502     0 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n### To Reproduce\r\n\r\n.\r\n\r\n### OS:\r\n\r\nLinux\r\n\r\n### DuckDB Version:\r\n\r\n'1.1.4-dev3961' (what `pip install --upgrade --pre` gives me )\r\n\r\n### DuckDB Client:\r\n\r\nPython\r\n\r\n### Hardware:\r\n\r\n.\r\n\r\n### Full Name:\r\n\r\nSoeren Wolfers\r\n\r\n### Affiliation:\r\n\r\nG-Research\r\n\r\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\r\n\r\nI have tested with a nightly build\r\n\r\n### Did you include all relevant data sets for reproducing the issue?\r\n\r\nNot applicable - the reproduction does not require a data set\r\n\r\n### Did you include all code required to reproduce the issue?\r\n\r\n- [X] Yes, I have\r\n\r\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\r\n\r\n- [X] Yes, I have\nCOLUMNS(* RENAME \"x\" AS \"y\") doesn't work\n### What happens?\r\n\r\n```sql\r\nFROM range(1)\r\nSELECT COLUMNS(* RENAME \"range\" AS \"x\")\r\n```\r\n```\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 range \u2502\r\n\u2502 int64 \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502     0 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n```sql\r\nFROM range(1)\r\nSELECT * RENAME \"range\" AS \"x\"\r\n```\r\n```\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502   x   \u2502\r\n\u2502 int64 \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502     0 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n### To Reproduce\r\n\r\n.\r\n\r\n### OS:\r\n\r\nLinux\r\n\r\n### DuckDB Version:\r\n\r\n'1.1.4-dev3961' (what `pip install --upgrade --pre` gives me )\r\n\r\n### DuckDB Client:\r\n\r\nPython\r\n\r\n### Hardware:\r\n\r\n.\r\n\r\n### Full Name:\r\n\r\nSoeren Wolfers\r\n\r\n### Affiliation:\r\n\r\nG-Research\r\n\r\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\r\n\r\nI have tested with a nightly build\r\n\r\n### Did you include all relevant data sets for reproducing the issue?\r\n\r\nNot applicable - the reproduction does not require a data set\r\n\r\n### Did you include all code required to reproduce the issue?\r\n\r\n- [X] Yes, I have\r\n\r\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\r\n\r\n- [X] Yes, I have\n",
  "hints_text": "\n",
  "created_at": "2025-01-28T10:34:56Z"
}