{
  "repo": "duckdb/duckdb",
  "pull_number": 7603,
  "instance_id": "duckdb__duckdb-7603",
  "issue_numbers": [
    "7599",
    "7599"
  ],
  "base_commit": "950d3d9532dd1ef389dab591e696473215dc2189",
  "patch": "diff --git a/src/planner/binder/tableref/bind_table_function.cpp b/src/planner/binder/tableref/bind_table_function.cpp\nindex bdd3d4f9e7a7..3db477cafeae 100644\n--- a/src/planner/binder/tableref/bind_table_function.cpp\n+++ b/src/planner/binder/tableref/bind_table_function.cpp\n@@ -78,6 +78,15 @@ bool Binder::BindTableFunctionParameters(TableFunctionCatalogEntry &table_functi\n \t\t\t}\n \t\t}\n \t\tif (child->type == ExpressionType::SUBQUERY) {\n+\t\t\tauto fun = table_function.functions.GetFunctionByOffset(0);\n+\t\t\tif (table_function.functions.Size() != 1 || fun.arguments.empty() ||\n+\t\t\t    fun.arguments[0].id() != LogicalTypeId::TABLE) {\n+\t\t\t\tthrow BinderException(\n+\t\t\t\t    \"Only table-in-out functions can have subquery parameters - %s only accepts constant parameters\",\n+\t\t\t\t    fun.name);\n+\t\t\t}\n+\t\t\t// this separate subquery binding path is only used by python_map\n+\t\t\t// FIXME: this should be unified with `BindTableInTableOutFunction` above\n \t\t\tif (seen_subquery) {\n \t\t\t\terror = \"Table function can have at most one subquery parameter \";\n \t\t\t\treturn false;\n@@ -98,8 +107,8 @@ bool Binder::BindTableFunctionParameters(TableFunctionCatalogEntry &table_functi\n \t\t\tthrow ParameterNotResolvedException();\n \t\t}\n \t\tif (!expr->IsScalar()) {\n-\t\t\terror = \"Table function requires a constant parameter\";\n-\t\t\treturn false;\n+\t\t\t// should have been eliminated before\n+\t\t\tthrow InternalException(\"Table function requires a constant parameter\");\n \t\t}\n \t\tauto constant = ExpressionExecutor::EvaluateScalar(context, *expr, true);\n \t\tif (parameter_name.empty()) {\n@@ -154,9 +163,7 @@ Binder::BindTableFunctionInternal(TableFunction &table_function, const string &f\n \t\t}\n \t}\n \tif (return_types.size() != return_names.size()) {\n-\t\tthrow InternalException(\n-\t\t    \"Failed to bind \\\"%s\\\": Table function return_types and return_names must be of the same size\",\n-\t\t    table_function.name);\n+\t\tthrow InternalException(\"Failed to bind \\\"%s\\\": return_types/names must have same size\", table_function.name);\n \t}\n \tif (return_types.empty()) {\n \t\tthrow InternalException(\"Failed to bind \\\"%s\\\": Table function must return at least one column\",\n",
  "test_patch": "diff --git a/test/sql/copy/csv/read_csv_subquery.test b/test/sql/copy/csv/read_csv_subquery.test\nnew file mode 100644\nindex 000000000000..fada62f69345\n--- /dev/null\n+++ b/test/sql/copy/csv/read_csv_subquery.test\n@@ -0,0 +1,35 @@\n+# name: test/sql/copy/csv/read_csv_subquery.test\n+# description: Issue #7599 - read_json/auto with SELECT output as source parameter raises INTERNAL Error\n+# group: [csv]\n+\n+statement ok\n+PRAGMA enable_verification\n+\n+statement error\n+WITH urls AS (\n+\tSELECT 'a.csv' AS url UNION ALL SELECT 'b.csv'\n+)\n+SELECT *\n+FROM read_csv_auto((SELECT url FROM urls LIMIT 3), delimiter=',')\n+WHERE properties.height > -1.0\n+LIMIT 10\n+----\n+Only table-in-out functions can have subquery parameters\n+\n+statement error\n+SELECT *\n+FROM read_csv_auto(sum(a) over ())\n+----\n+Table function cannot contain window functions\n+\n+statement error\n+SELECT *\n+FROM read_csv_auto(sum(a))\n+----\n+Table function cannot contain aggregates\n+\n+statement error\n+SELECT *\n+FROM read_csv_auto('a.csv', delimiter=',', 42)\n+----\n+Unnamed parameters cannot come after named parameters\n",
  "problem_statement": "read_json/auto with SELECT output as source parameter raises INTERNAL Error: Attempted to access index 0 within vector of size 0\n### What happens?\r\n\r\nWhen `read_json` or `read_json_auto` takes a SELECT output as its source parameter raises `INTERNAL Error: Attempted to access index 0 within vector of size 0`\r\n\r\n### To Reproduce\r\n\r\nUsing a CTE:\r\n\r\n```sql\r\nWITH urls AS (\r\n    SELECT url\r\n    FROM read_csv_auto('https://minedbuildings.blob.core.windows.net/global-buildings/dataset-links.csv', header=True)\r\n    WHERE location IN ('Canada', 'UnitedStates')\r\n)\r\nSELECT *\r\nFROM read_json_auto((SELECT url FROM urls LIMIT 3), format=newline_delimited)\r\nWHERE properties.height > -1.0\r\nLIMIT 10\r\n```\r\n\r\nWhich would yield `Error: INTERNAL Error: Attempted to access index 0 within vector of size 0`\r\n\r\nA dedicated table:\r\n\r\n```sql\r\nCREATE TABLE urls\r\nAS SELECT url\r\nFROM read_csv_auto('https://minedbuildings.blob.core.windows.net/global-buildings/dataset-links.csv', header=True)\r\nWHERE location IN ('Canada', 'UnitedStates');\r\n\r\nSELECT *\r\nFROM read_json_auto((SELECT url FROM urls LIMIT 3), format=newline_delimited)\r\nWHERE properties.height > -1.0\r\nLIMIT 10;\r\n```\r\n\r\nor subquery would be the same:\r\n\r\n```sql\r\nSELECT *\r\nFROM read_json_auto((\r\n    SELECT url\r\n    FROM read_csv_auto('https://minedbuildings.blob.core.windows.net/global-buildings/dataset-links.csv', header=True)\r\n    WHERE location IN ('Canada', 'UnitedStates')\r\n    LIMIT 3\r\n), format=newline_delimited)\r\nWHERE properties.height > -1.0\r\nLIMIT 10;\r\n```\r\n\r\n### OS:\r\n\r\nmacOS\r\n\r\n### DuckDB Version:\r\n\r\nv0.8.0 e8e4cea5ec\r\n\r\n### DuckDB Client:\r\n\r\nCLI\r\n\r\n### Full Name:\r\n\r\nRunzhou Li\r\n\r\n### Affiliation:\r\n\r\nmation\r\n\r\n### Have you tried this on the latest `master` branch?\r\n\r\n- [ ] I agree\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] I agree\nread_json/auto with SELECT output as source parameter raises INTERNAL Error: Attempted to access index 0 within vector of size 0\n### What happens?\r\n\r\nWhen `read_json` or `read_json_auto` takes a SELECT output as its source parameter raises `INTERNAL Error: Attempted to access index 0 within vector of size 0`\r\n\r\n### To Reproduce\r\n\r\nUsing a CTE:\r\n\r\n```sql\r\nWITH urls AS (\r\n    SELECT url\r\n    FROM read_csv_auto('https://minedbuildings.blob.core.windows.net/global-buildings/dataset-links.csv', header=True)\r\n    WHERE location IN ('Canada', 'UnitedStates')\r\n)\r\nSELECT *\r\nFROM read_json_auto((SELECT url FROM urls LIMIT 3), format=newline_delimited)\r\nWHERE properties.height > -1.0\r\nLIMIT 10\r\n```\r\n\r\nWhich would yield `Error: INTERNAL Error: Attempted to access index 0 within vector of size 0`\r\n\r\nA dedicated table:\r\n\r\n```sql\r\nCREATE TABLE urls\r\nAS SELECT url\r\nFROM read_csv_auto('https://minedbuildings.blob.core.windows.net/global-buildings/dataset-links.csv', header=True)\r\nWHERE location IN ('Canada', 'UnitedStates');\r\n\r\nSELECT *\r\nFROM read_json_auto((SELECT url FROM urls LIMIT 3), format=newline_delimited)\r\nWHERE properties.height > -1.0\r\nLIMIT 10;\r\n```\r\n\r\nor subquery would be the same:\r\n\r\n```sql\r\nSELECT *\r\nFROM read_json_auto((\r\n    SELECT url\r\n    FROM read_csv_auto('https://minedbuildings.blob.core.windows.net/global-buildings/dataset-links.csv', header=True)\r\n    WHERE location IN ('Canada', 'UnitedStates')\r\n    LIMIT 3\r\n), format=newline_delimited)\r\nWHERE properties.height > -1.0\r\nLIMIT 10;\r\n```\r\n\r\n### OS:\r\n\r\nmacOS\r\n\r\n### DuckDB Version:\r\n\r\nv0.8.0 e8e4cea5ec\r\n\r\n### DuckDB Client:\r\n\r\nCLI\r\n\r\n### Full Name:\r\n\r\nRunzhou Li\r\n\r\n### Affiliation:\r\n\r\nmation\r\n\r\n### Have you tried this on the latest `master` branch?\r\n\r\n- [ ] I agree\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] I agree\n",
  "hints_text": "\n",
  "created_at": "2023-05-20T09:59:27Z"
}