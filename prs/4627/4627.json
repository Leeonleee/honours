{
  "repo": "duckdb/duckdb",
  "pull_number": 4627,
  "instance_id": "duckdb__duckdb-4627",
  "issue_numbers": [
    "4626"
  ],
  "base_commit": "cf4b8dceed5b3ceb3b4a690367b6dc63228307e3",
  "patch": "diff --git a/src/parser/transform/helpers/transform_typename.cpp b/src/parser/transform/helpers/transform_typename.cpp\nindex d5f4b224b808..ae86e7c39bd6 100644\n--- a/src/parser/transform/helpers/transform_typename.cpp\n+++ b/src/parser/transform/helpers/transform_typename.cpp\n@@ -68,7 +68,7 @@ LogicalType Transformer::TransformTypeName(duckdb_libpgquery::PGTypeName *type_n\n \n \t\tresult_type = LogicalType::MAP(move(children));\n \t} else {\n-\t\tint8_t width, scale;\n+\t\tint64_t width, scale;\n \t\tif (base_type == LogicalTypeId::DECIMAL) {\n \t\t\t// default decimal width/scale\n \t\t\twidth = 18;\n",
  "test_patch": "diff --git a/test/fuzzer/pedro/decimal_with_invalid_scale.test b/test/fuzzer/pedro/decimal_with_invalid_scale.test\nnew file mode 100644\nindex 000000000000..05720915171e\n--- /dev/null\n+++ b/test/fuzzer/pedro/decimal_with_invalid_scale.test\n@@ -0,0 +1,6 @@\n+# name: test/fuzzer/pedro/decimal_with_invalid_scale.test\n+# group: [pedro]\n+\n+# scale is bigger than width, and both these numbers are ginormous\n+statement error\n+CREATE TABLE x(x DECIMAL(38763269, 77914819));\n",
  "problem_statement": "[Fuzzer] Invalid decimal definition\n### What happens?\n\n```\r\nCREATE TABLE x(x DECIMAL(38763269, 77914819));\r\n```\r\n\r\nTriggers assertion error: src/common/types.cpp:881: duckdb::DecimalTypeInfo::DecimalTypeInfo(uint8_t, uint8_t): Assertion `width_p >= scale_p' failed.\r\n\r\nAn error about either too large precision or scale values, or scale larger than precision should be thrown.\n\n### To Reproduce\n\nRun the statement above.\n\n### OS:\n\nLinux\n\n### DuckDB Version:\n\nlatest from sources\n\n### DuckDB Client:\n\nShell\n\n### Full Name:\n\nPedro Ferreira\n\n### Affiliation:\n\nHuawei\n\n### Have you tried this on the latest `master` branch?\n\n- [X] I agree\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] I agree\n",
  "hints_text": "Euhm, it would, if you didn't overflow the width/scale values\r\n```c++\r\n\t\t\tif (scale > width) {\r\n\t\t\t\tthrow ParserException(\"Scale cannot be bigger than width\");\r\n\t\t\t}\r\n```\r\n`\t\tint8_t width, scale;`\nNice point ;)\nI guess it might be worth changing it to int64_t, just so we can handle cases like these ;)",
  "created_at": "2022-09-06T13:30:10Z"
}