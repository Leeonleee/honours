{
  "repo": "duckdb/duckdb",
  "pull_number": 16040,
  "instance_id": "duckdb__duckdb-16040",
  "issue_numbers": [
    "16026",
    "16026"
  ],
  "base_commit": "e235e48e6dfe9242deb11b882ac5548a6abc627b",
  "patch": "diff --git a/src/optimizer/remove_unused_columns.cpp b/src/optimizer/remove_unused_columns.cpp\nindex b197a4f5f986..48ea7cbffe83 100644\n--- a/src/optimizer/remove_unused_columns.cpp\n+++ b/src/optimizer/remove_unused_columns.cpp\n@@ -261,9 +261,6 @@ void RemoveUnusedColumns::VisitOperator(LogicalOperator &op) {\n \t\t\t\tif (entry == column_references.end()) {\n \t\t\t\t\tthrow InternalException(\"RemoveUnusedColumns - could not find referenced column\");\n \t\t\t\t}\n-\t\t\t\tif (final_column_ids[col_sel_idx].HasChildren()) {\n-\t\t\t\t\tthrow InternalException(\"RemoveUnusedColumns - LogicalGet::column_ids already has children\");\n-\t\t\t\t}\n \t\t\t\tColumnIndex new_index(final_column_ids[col_sel_idx].GetPrimaryIndex(), entry->second.child_columns);\n \t\t\t\tcolumn_ids.emplace_back(new_index);\n \t\t\t}\n",
  "test_patch": "diff --git a/test/sql/topn/test_top_n_nested_struct.test b/test/sql/topn/test_top_n_nested_struct.test\nnew file mode 100644\nindex 000000000000..beaad014bf82\n--- /dev/null\n+++ b/test/sql/topn/test_top_n_nested_struct.test\n@@ -0,0 +1,28 @@\n+# name: test/sql/topn/test_top_n_nested_struct.test\n+# description: Test Top-N on nested structs\n+# group: [topn]\n+\n+statement ok\n+PRAGMA enable_verification\n+\n+statement ok\n+CREATE TABLE nested_struct(cik BIGINT, entityName VARCHAR, a STRUCT(b STRUCT(c INT, d INT), c STRUCT(e INT, f INT)));\n+\n+statement ok\n+INSERT INTO nested_struct VALUES (42, 'entity', {'b': {'c': 42, 'd': 43}, 'c': {'e': 44, 'f': 45}}),\n+                                 (142, 'entity2', {'b': {'c': 142, 'd': 143}, 'c': {'e': 144, 'f': 145}});\n+\n+query IIII\n+select unnest(a, recursive:=true) from nested_struct limit 1\n+----\n+42\t43\t44\t45\n+\n+query IIII\n+SELECT unnest(a, recursive := true) FROM nested_struct ORDER BY a.b.c LIMIT 1\n+----\n+42\t43\t44\t45\n+\n+query IIII\n+SELECT unnest(a, recursive := true) FROM nested_struct ORDER BY a.b.c DESC LIMIT 1\n+----\n+142\t143\t144\t145\ndiff --git a/test/sql/types/nested/struct/lineitem_struct.test_slow b/test/sql/types/nested/struct/lineitem_struct.test_slow\nindex 14b515071c10..9dd375bc3df8 100644\n--- a/test/sql/types/nested/struct/lineitem_struct.test_slow\n+++ b/test/sql/types/nested/struct/lineitem_struct.test_slow\n@@ -36,3 +36,22 @@ query I\n PRAGMA tpch(1)\n ----\n <FILE>:extension/tpch/dbgen/answers/sf0.01/q01.csv\n+\n+# top-n\n+query IIIIIIIIIIIIIII\n+SELECT l_orderkey, l_partkey, l_suppkey, l_linenumber, l_quantity, l_extendedprice, l_discount, l_tax, l_returnflag, l_linestatus, l_shipdate, l_commitdate, l_receiptdate, l_shipinstruct, l_shipmode FROM lineitem ORDER BY l_shipdate, l_orderkey LIMIT 5;\n+----\n+27137\t1673\t56\t3\t24.00\t37792.08\t0.06\t0.03\tR\tF\t1992-01-04\t1992-02-18\t1992-01-22\tDELIVER IN PERSON\tRAIL\n+27137\t590\t51\t5\t37.00\t55151.83\t0.03\t0.03\tA\tF\t1992-01-06\t1992-02-24\t1992-01-13\tDELIVER IN PERSON\tMAIL\n+47591\t676\t39\t1\t38.00\t59913.46\t0.05\t0.04\tA\tF\t1992-01-06\t1992-03-19\t1992-01-11\tCOLLECT COD\tREG AIR\n+5601\t723\t24\t3\t38.00\t61701.36\t0.07\t0.00\tA\tF\t1992-01-08\t1992-03-01\t1992-01-09\tTAKE BACK RETURN\tREG AIR\n+9379\t556\t57\t4\t13.00\t18935.15\t0.00\t0.01\tA\tF\t1992-01-09\t1992-03-20\t1992-01-12\tCOLLECT COD\tTRUCK\n+\n+query IIIIIIIIIIIIIII\n+SELECT l_orderkey,l_partkey,l_suppkey,l_linenumber,l_quantity,l_extendedprice,l_discount,l_tax,l_returnflag,l_linestatus,l_shipdate,l_commitdate,l_receiptdate,l_shipinstruct,l_shipmode FROM lineitem ORDER BY l_orderkey DESC, l_shipdate DESC LIMIT 5;\n+----\n+60000\t1843\t44\t2\t23.00\t40131.32\t0.05\t0.03\tN\tO\t1995-08-09\t1995-06-08\t1995-08-23\tCOLLECT COD\tFOB\n+60000\t585\t16\t5\t31.00\t46052.98\t0.00\t0.05\tN\tO\t1995-08-06\t1995-07-18\t1995-08-19\tTAKE BACK RETURN\tTRUCK\n+60000\t271\t53\t4\t29.00\t33966.83\t0.02\t0.01\tN\tO\t1995-07-25\t1995-06-07\t1995-08-17\tCOLLECT COD\tSHIP\n+60000\t836\t3\t6\t45.00\t78157.35\t0.04\t0.08\tN\tO\t1995-07-23\t1995-07-17\t1995-07-24\tDELIVER IN PERSON\tTRUCK\n+60000\t292\t93\t1\t45.00\t53653.05\t0.05\t0.06\tN\tO\t1995-07-13\t1995-05-29\t1995-08-10\tTAKE BACK RETURN\tMAIL\n",
  "problem_statement": "INTERNAL error on 1.1.4.dev5147 (regression)\n### What happens?\n\nThe following code works fine on 1.1.3 (release), but fails on duckdb-1.1.4.dev5147. Also works if you remove \"limit 1\". \n\nInput File attached.\n[CIK0000001750scratch.json](https://github.com/user-attachments/files/18632812/CIK0000001750scratch.json)\n\n**Error**:\n> InternalException: INTERNAL Error: RemoveUnusedColumns - LogicalGet::column_ids already has children\n> This error signals an assertion failure within DuckDB. This usually occurs due to unexpected conditions or errors in the program's logic.\n> For more information, see https://duckdb.org/docs/dev/internal_errors\n\n### To Reproduce\n\n```py\nimport duckdb\n\nwith duckdb.connect() as con: \n    con.execute(\"\"\"\n    CREATE or replace TABLE jsondata AS\n        SELECT *\n        FROM 'CIK0000001750scratch.json';\n    \"\"\")\n\n    con.execute(\"select unnest(facts, recursive:=true) from jsondata limit 1\").df()\n\n```\n\n### OS:\n\nWindows\n\n### DuckDB Version:\n\nduckdb-1.1.4.dev5147\n\n### DuckDB Client:\n\nPython - Windows - VScode Notebook\n\n### Hardware:\n\n_No response_\n\n### Full Name:\n\nPaul T\n\n### Affiliation:\n\nIqmo\n\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\n\nI have tested with a nightly build\n\n### Did you include all relevant data sets for reproducing the issue?\n\nYes\n\n### Did you include all code required to reproduce the issue?\n\n- [x] Yes, I have\n\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\n\n- [x] Yes, I have\nINTERNAL error on 1.1.4.dev5147 (regression)\n### What happens?\n\nThe following code works fine on 1.1.3 (release), but fails on duckdb-1.1.4.dev5147. Also works if you remove \"limit 1\". \n\nInput File attached.\n[CIK0000001750scratch.json](https://github.com/user-attachments/files/18632812/CIK0000001750scratch.json)\n\n**Error**:\n> InternalException: INTERNAL Error: RemoveUnusedColumns - LogicalGet::column_ids already has children\n> This error signals an assertion failure within DuckDB. This usually occurs due to unexpected conditions or errors in the program's logic.\n> For more information, see https://duckdb.org/docs/dev/internal_errors\n\n### To Reproduce\n\n```py\nimport duckdb\n\nwith duckdb.connect() as con: \n    con.execute(\"\"\"\n    CREATE or replace TABLE jsondata AS\n        SELECT *\n        FROM 'CIK0000001750scratch.json';\n    \"\"\")\n\n    con.execute(\"select unnest(facts, recursive:=true) from jsondata limit 1\").df()\n\n```\n\n### OS:\n\nWindows\n\n### DuckDB Version:\n\nduckdb-1.1.4.dev5147\n\n### DuckDB Client:\n\nPython - Windows - VScode Notebook\n\n### Hardware:\n\n_No response_\n\n### Full Name:\n\nPaul T\n\n### Affiliation:\n\nIqmo\n\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\n\nI have tested with a nightly build\n\n### Did you include all relevant data sets for reproducing the issue?\n\nYes\n\n### Did you include all code required to reproduce the issue?\n\n- [x] Yes, I have\n\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\n\n- [x] Yes, I have\n",
  "hints_text": "\n",
  "created_at": "2025-02-03T12:56:52Z"
}