diff --git a/src/planner/binder/statement/bind_copy.cpp b/src/planner/binder/statement/bind_copy.cpp
index 1ef05bc2447b..86f7b788fe97 100644
--- a/src/planner/binder/statement/bind_copy.cpp
+++ b/src/planner/binder/statement/bind_copy.cpp
@@ -126,6 +126,7 @@ BoundStatement Binder::Bind(CopyStatement &stmt) {
 		}
 		stmt.select_statement = move(statement);
 	}
+	this->allow_stream_result = false;
 	if (stmt.info->is_from) {
 		return BindCopyFrom(stmt);
 	} else {
diff --git a/src/planner/binder/statement/bind_create_table.cpp b/src/planner/binder/statement/bind_create_table.cpp
index 65f98745fa1c..7db13a88bca0 100644
--- a/src/planner/binder/statement/bind_create_table.cpp
+++ b/src/planner/binder/statement/bind_create_table.cpp
@@ -156,6 +156,7 @@ unique_ptr<BoundCreateTableInfo> Binder::BindCreateTableInfo(unique_ptr<CreateIn
 	for (auto &column : base.columns) {
 		ExpressionBinder::TestCollation(context, StringType::GetCollation(column.type));
 	}
+	this->allow_stream_result = false;
 	return result;
 }
 
diff --git a/src/planner/binder/statement/bind_delete.cpp b/src/planner/binder/statement/bind_delete.cpp
index 382088bac8a9..6e41bcca42a2 100644
--- a/src/planner/binder/statement/bind_delete.cpp
+++ b/src/planner/binder/statement/bind_delete.cpp
@@ -78,6 +78,7 @@ BoundStatement Binder::Bind(DeleteStatement &stmt) {
 	result.plan = move(del);
 	result.names = {"Count"};
 	result.types = {LogicalType::BIGINT};
+	this->allow_stream_result = false;
 	return result;
 }
 
diff --git a/src/planner/binder/statement/bind_drop.cpp b/src/planner/binder/statement/bind_drop.cpp
index 6307771846f3..6df2d1367db5 100644
--- a/src/planner/binder/statement/bind_drop.cpp
+++ b/src/planner/binder/statement/bind_drop.cpp
@@ -43,6 +43,7 @@ BoundStatement Binder::Bind(DropStatement &stmt) {
 	result.plan = make_unique<LogicalSimple>(LogicalOperatorType::LOGICAL_DROP, move(stmt.info));
 	result.names = {"Success"};
 	result.types = {LogicalType::BOOLEAN};
+	this->allow_stream_result = false;
 	return result;
 }
 
diff --git a/src/planner/binder/statement/bind_export.cpp b/src/planner/binder/statement/bind_export.cpp
index 89c22d8644f5..257999e49a59 100644
--- a/src/planner/binder/statement/bind_export.cpp
+++ b/src/planner/binder/statement/bind_export.cpp
@@ -135,6 +135,7 @@ BoundStatement Binder::Bind(ExportStatement &stmt) {
 	}
 
 	result.plan = move(export_node);
+	this->allow_stream_result = false;
 	return result;
 }
 
diff --git a/src/planner/binder/statement/bind_insert.cpp b/src/planner/binder/statement/bind_insert.cpp
index 2de3e3f8ddd4..09d42e241475 100644
--- a/src/planner/binder/statement/bind_insert.cpp
+++ b/src/planner/binder/statement/bind_insert.cpp
@@ -125,6 +125,7 @@ BoundStatement Binder::Bind(InsertStatement &stmt) {
 	insert->AddChild(move(root));
 
 	result.plan = move(insert);
+	this->allow_stream_result = false;
 	return result;
 }
 
diff --git a/src/planner/binder/statement/bind_load.cpp b/src/planner/binder/statement/bind_load.cpp
index 7ca567e83dc8..6f24cc3bc78d 100644
--- a/src/planner/binder/statement/bind_load.cpp
+++ b/src/planner/binder/statement/bind_load.cpp
@@ -11,6 +11,7 @@ BoundStatement Binder::Bind(LoadStatement &stmt) {
 	result.names = {"Success"};
 
 	result.plan = make_unique<LogicalSimple>(LogicalOperatorType::LOGICAL_LOAD, move(stmt.info));
+	this->allow_stream_result = false;
 	return result;
 }
 
diff --git a/src/planner/binder/statement/bind_update.cpp b/src/planner/binder/statement/bind_update.cpp
index 55d2aec65cfe..5a1450e51d7c 100644
--- a/src/planner/binder/statement/bind_update.cpp
+++ b/src/planner/binder/statement/bind_update.cpp
@@ -205,6 +205,7 @@ BoundStatement Binder::Bind(UpdateStatement &stmt) {
 	result.names = {"Count"};
 	result.types = {LogicalType::BIGINT};
 	result.plan = move(update);
+	this->allow_stream_result = false;
 	return result;
 }
 
