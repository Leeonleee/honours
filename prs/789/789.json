{
  "repo": "duckdb/duckdb",
  "pull_number": 789,
  "instance_id": "duckdb__duckdb-789",
  "issue_numbers": [
    "788"
  ],
  "base_commit": "73f7041914851ef3b0464687d8431326bf5b11c3",
  "patch": "diff --git a/tools/rpkg/DESCRIPTION b/tools/rpkg/DESCRIPTION\nindex 20e1ce6d4005..cc16c972fd58 100644\n--- a/tools/rpkg/DESCRIPTION\n+++ b/tools/rpkg/DESCRIPTION\n@@ -24,12 +24,12 @@ Depends:\n     DBI,\n     R (>= 3.5.0)\n Imports:\n-    dbplyr,\n     methods,\n     utils\n Suggests: \n     callr,\n     DBItest,\n+    dbplyr,\n     nycflights13,\n     testthat\n Encoding: UTF-8\ndiff --git a/tools/rpkg/NAMESPACE b/tools/rpkg/NAMESPACE\nindex e4db36722b86..1c48e08e5fdf 100644\n--- a/tools/rpkg/NAMESPACE\n+++ b/tools/rpkg/NAMESPACE\n@@ -35,6 +35,5 @@ exportMethods(show)\n import(DBI)\n import(methods)\n importFrom(DBI,dbConnect)\n-importFrom(dbplyr,src_dbi)\n importFrom(utils,head)\n useDynLib(duckdb, .registration = TRUE)\ndiff --git a/tools/rpkg/R/Driver.R b/tools/rpkg/R/Driver.R\nindex b6e80cfb267f..71a4a342ea08 100644\n--- a/tools/rpkg/R/Driver.R\n+++ b/tools/rpkg/R/Driver.R\n@@ -167,15 +167,12 @@ is_installed <- function(pkg) {\n \n \n #' @importFrom DBI dbConnect\n-#' @importFrom dbplyr src_dbi\n #' @param path The file in which the DuckDB database should be stored\n #' @param create Create a new database if none is present in `path`\n #' @rdname duckdb_driver\n #' @export\n src_duckdb <- function(path = \":memory:\", create = FALSE, read_only = FALSE) {\n-  if (!is_installed(\"dbplyr\")) {\n-    stop(\"Need package `dbplyr` installed.\")\n-  }\n+  requireNamespace(\"dbplyr\", quietly = TRUE)\n   if (path != \":memory:\" && !create && !file.exists(path)) {\n     stop(\"`path` '\", path, \"' must already exist, unless `create` = TRUE\")\n   }\n",
  "test_patch": "diff --git a/tools/rpkg/tests/testthat.R b/tools/rpkg/tests/testthat.R\nindex 4eca55582d09..bcd6da66d8da 100644\n--- a/tools/rpkg/tests/testthat.R\n+++ b/tools/rpkg/tests/testthat.R\n@@ -13,7 +13,9 @@ dbplyr_tests <- function() {\n \n   # pull dbplyr sources to harvest test cases\n   zipfile <- tempfile()\n-  url <- \"https://github.com/tidyverse/dbplyr/archive/v1.4.2.zip\"\n+  all_pkgs <- available.packages()\n+  version_latest <- all_pkgs[all_pkgs[, \"Package\"] == \"dbplyr\", \"Version\"]\n+  url <- sprintf(\"https://github.com/tidyverse/dbplyr/archive/v%s.zip\", version_latest)\n   download.file(url, zipfile)\n   dbplyr_src <- tempdir()\n   unzip(zipfile, exdir = dbplyr_src)\n",
  "problem_statement": "Move dbplyr from Imports to Suggests\n\n",
  "hints_text": "",
  "created_at": "2020-07-27T09:25:39Z"
}