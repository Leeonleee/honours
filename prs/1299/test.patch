diff --git a/test/issues/general/test_1290.test b/test/issues/general/test_1290.test
new file mode 100644
index 000000000000..df790b07193f
--- /dev/null
+++ b/test/issues/general/test_1290.test
@@ -0,0 +1,123 @@
+# name: test/issues/general/test_1248.test
+# description: Issue 1290: FULL JOIN reports missing values for join key
+# group: [general]
+
+statement ok
+PRAGMA enable_verification
+
+statement ok
+create table a as select 42 as i, 80 as j;
+
+statement ok
+create table b as select 43 as i, 84 as k;
+
+statement ok
+create table c as select 44 as i, 84 as l;
+
+query III
+select i, a.i, b.i from a inner join b using (i);
+----
+
+query III
+select i, a.i, b.i from a left outer join b using (i);
+----
+42	42	NULL
+
+query III
+select i, a.i, b.i from a right outer join b using (i);
+----
+43	NULL	43
+
+query III
+select i, a.i, b.i from a natural full outer join b order by 1;
+----
+42	42	NULL
+43	NULL	43
+
+query III
+select i, a.i, b.i from a full outer join b using (i) order by 1;
+----
+42	42	NULL
+43	NULL	43
+
+query III
+select * from a full outer join b using (i) order by 1;
+----
+42	80	NULL
+43	NULL	84
+
+query IIII
+select i, a.i, b.i, c.i from a full outer join b using (i) full outer join c using (i) order by 1;
+----
+42	42	NULL	NULL
+43	NULL	43	NULL
+44	NULL	NULL	44
+
+query IIII
+select * from a full outer join b using (i) full outer join c using (i) order by 1;
+----
+42	80	NULL	NULL
+43	NULL	84	NULL
+44	NULL	NULL	84
+
+query IIII
+select i, a.i, b.i, c.i from a natural full outer join b natural full outer join (values (42)) c(i) order by 1;
+----
+42	42	NULL	42
+43	NULL	43	NULL
+
+query IIII
+select i, a.i, b.i, c.i from a natural full outer join b natural full outer join (values (43)) c(i) order by 1;
+----
+42	42	NULL	NULL
+43	NULL	43	43
+
+query IIII
+select i, a.i, b.i, c.i from a natural full outer join b natural full outer join (values (44)) c(i) order by 1;
+----
+42	42	NULL	NULL
+43	NULL	43	NULL
+44	NULL	NULL	44
+
+query IIII
+select i, a.i, b.i, c.i from a natural full outer join b natural full outer join c order by 1;
+----
+42	42	NULL	NULL
+43	NULL	43	NULL
+44	NULL	NULL	44
+
+query IIII
+select * from a natural full outer join b natural full outer join c order by 1;
+----
+42	80	NULL	NULL
+43	NULL	84	NULL
+44	NULL	NULL	84
+
+# right join
+query III
+select * from a natural right outer join b order by 1;
+----
+43	NULL	84
+
+query IIIII
+select * from a, b natural right outer join c;
+----
+42	80	44	NULL	84
+
+query IIIIIIIIII
+select *, * from a, b natural right outer join c;
+----
+42	80	44	NULL	84	42	80	44	NULL	84
+
+query IIIIII
+select a.*, b.*, c.* from a, b natural right outer join c;
+----
+42	80	NULL	NULL	44	84
+
+query IIIIII
+select * from a natural full outer join b, a a1 natural full outer join c;
+----
+42	80	NULL	42	80	NULL
+42	80	NULL	44	NULL	84
+43	NULL	84	42	80	NULL
+43	NULL	84	44	NULL	84
diff --git a/test/optimizer/using_optimizer.test b/test/optimizer/using_optimizer.test
new file mode 100644
index 000000000000..3b3ce5d93655
--- /dev/null
+++ b/test/optimizer/using_optimizer.test
@@ -0,0 +1,131 @@
+# name: test/optimizer/using_optimizer.test
+# description: Test optimization of USING columns
+# group: [optimizer]
+
+statement ok
+PRAGMA explain_output='optimized_only';
+
+statement ok
+create table a as select 42 as i, 80 as j;
+
+statement ok
+create table b as select 43 as i, 84 as k;
+
+statement ok
+create table c as select 44 as i, 84 as l;
+
+# inner join
+query II nosort inner
+explain select i from a inner join b using (i);
+----
+
+query II nosort inner
+explain select a.i from a, b where a.i=b.i;
+----
+
+query II nosort inner
+explain select a.i from a natural join b;
+----
+
+# left join
+query II nosort left
+explain select i from a left outer join b using (i);
+----
+
+query II nosort left
+explain select a.i from a left outer join b using (i);
+----
+
+query II nosort left
+explain select a.i from a left outer join b on (a.i=b.i);
+----
+
+# right join
+query II nosort right
+explain select i from a right outer join b using (i);
+----
+
+query II nosort right
+explain select b.i from a right outer join b using (i);
+----
+
+query II nosort right
+explain select b.i from a right outer join b on (a.i=b.i);
+----
+
+# left join followed by inner join
+query I
+select i from a left outer join b using (i) inner join c using (i);
+----
+
+query I
+select a.i from a left outer join b on (a.i=b.i) inner join c on (a.i=c.i);
+----
+
+query II nosort leftinner
+explain select i from a left outer join b using (i) inner join c using (i);
+----
+
+query II nosort leftinner
+explain select a.i from a left outer join b on (a.i=b.i) inner join c on (a.i=c.i);
+----
+
+# left join followed by left join
+query I
+select i from a left outer join b using (i) left outer join c using (i);
+----
+42
+
+query I
+select a.i from a left outer join b on (a.i=b.i) left outer join c on (a.i=c.i);
+----
+42
+
+query II nosort leftleft
+explain select i from a left outer join b using (i) left outer join c using (i);
+----
+
+query II nosort leftleft
+explain select a.i from a left outer join b on (a.i=b.i) left outer join c on (a.i=c.i);
+----
+
+# left join followed by right join
+query I
+select i from a left outer join b using (i) right join c using (i);
+----
+44
+
+query I
+select c.i from a left outer join b on (a.i=b.i) right join c on (a.i=c.i);
+----
+44
+
+query II nosort leftright
+explain select i from a left outer join b using (i) right join c using (i);
+----
+
+query II nosort leftright
+explain select a.i from a left outer join b on (a.i=b.i) right join c on (a.i=c.i);
+----
+
+# full outer join
+# need to use a case expression here
+query I
+select i from a full outer join b using (i);
+----
+42
+43
+
+query I
+select case when(a.i is not null) then a.i else b.i end from a full outer join b on (a.i=b.i);
+----
+42
+43
+
+query II nosort fullouter
+explain select i from a full outer join b using (i);
+----
+
+query II nosort fullouter
+explain select case when(a.i is not null) then a.i else b.i end from a full outer join b on (a.i=b.i);
+----
