diff --git a/test/sql/parallelism/modify_thread_settings.test b/test/sql/parallelism/modify_thread_settings.test
new file mode 100644
index 000000000000..ac0560ab54d1
--- /dev/null
+++ b/test/sql/parallelism/modify_thread_settings.test
@@ -0,0 +1,19 @@
+# name: test/sql/parallelism/modify_thread_settings.test
+# description: Test modifying the number of threads repeatedly
+# group: [parallelism]
+
+loop i 0 10
+
+statement ok
+SET threads=8
+
+statement ok
+SET threads=4
+
+statement ok
+SET threads=4
+
+statement ok
+SET threads=1
+
+endloop
diff --git a/tools/juliapkg/test.sh b/tools/juliapkg/test.sh
index dc05bf5c876f..dfdd45611934 100755
--- a/tools/juliapkg/test.sh
+++ b/tools/juliapkg/test.sh
@@ -5,4 +5,5 @@ set -e
 export JULIA_DUCKDB_LIBRARY="`pwd`/../../build/debug/src/libduckdb.dylib"
 #export JULIA_DUCKDB_LIBRARY="/Users/myth/Programs/duckdb-bugfix/build/release/src/libduckdb.dylib"
 
+export JULIA_NUM_THREADS=4
 julia -e "import Pkg; Pkg.activate(\".\"); include(\"test/runtests.jl\")" $1
diff --git a/tools/juliapkg/test/runtests.jl b/tools/juliapkg/test/runtests.jl
index 1c3ad894445b..3cd403faa26a 100644
--- a/tools/juliapkg/test/runtests.jl
+++ b/tools/juliapkg/test/runtests.jl
@@ -18,7 +18,8 @@ test_files = [
     "test_table_function.jl",
     "test_old_interface.jl",
     "test_all_types.jl",
-    "test_decimals.jl"
+    "test_decimals.jl",
+    "test_threading.jl"
 ]
 
 if size(ARGS)[1] > 0
diff --git a/tools/juliapkg/test/test_threading.jl b/tools/juliapkg/test/test_threading.jl
new file mode 100644
index 000000000000..d9519b80fa88
--- /dev/null
+++ b/tools/juliapkg/test/test_threading.jl
@@ -0,0 +1,12 @@
+# test_threading.jl
+
+@testset "Test threading" begin
+    con = DBInterface.connect(DuckDB.DB)
+
+    DBInterface.execute(con, "CREATE TABLE integers AS SELECT * FROM range(100000000) t(i)")
+    results = DBInterface.execute(con, "SELECT SUM(i) sum FROM integers")
+    df = DataFrame(results)
+    @test df.sum == [4999999950000000]
+
+    DBInterface.close!(con)
+end
