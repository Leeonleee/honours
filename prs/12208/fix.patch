diff --git a/tools/pythonpkg/scripts/cache_data.json b/tools/pythonpkg/scripts/cache_data.json
index edcbac28bd63..fb0a6b674967 100644
--- a/tools/pythonpkg/scripts/cache_data.json
+++ b/tools/pythonpkg/scripts/cache_data.json
@@ -502,7 +502,8 @@
         "name": "types",
         "children": [
             "types.UnionType",
-            "types.GenericAlias"
+            "types.GenericAlias",
+            "types.BuiltinFunctionType"
         ]
     },
     "types.UnionType": {
@@ -517,6 +518,12 @@
         "name": "GenericAlias",
         "children": []
     },
+    "types.BuiltinFunctionType": {
+        "type": "attribute",
+        "full_path": "types.BuiltinFunctionType",
+        "name": "BuiltinFunctionType",
+        "children": []
+    },
     "typing": {
         "type": "module",
         "full_path": "typing",
diff --git a/tools/pythonpkg/scripts/imports.py b/tools/pythonpkg/scripts/imports.py
index 2e371c97ee2d..d597ab1ed6b3 100644
--- a/tools/pythonpkg/scripts/imports.py
+++ b/tools/pythonpkg/scripts/imports.py
@@ -92,6 +92,7 @@
 
 types.UnionType
 types.GenericAlias
+types.BuiltinFunctionType
 
 import typing
 
diff --git a/tools/pythonpkg/src/include/duckdb_python/import_cache/modules/types_module.hpp b/tools/pythonpkg/src/include/duckdb_python/import_cache/modules/types_module.hpp
index 4d4698061378..58f0be007c1f 100644
--- a/tools/pythonpkg/src/include/duckdb_python/import_cache/modules/types_module.hpp
+++ b/tools/pythonpkg/src/include/duckdb_python/import_cache/modules/types_module.hpp
@@ -20,13 +20,15 @@ struct TypesCacheItem : public PythonImportCacheItem {
 
 public:
 	TypesCacheItem()
-	    : PythonImportCacheItem("types"), UnionType("UnionType", this), GenericAlias("GenericAlias", this) {
+	    : PythonImportCacheItem("types"), UnionType("UnionType", this), GenericAlias("GenericAlias", this),
+	      BuiltinFunctionType("BuiltinFunctionType", this) {
 	}
 	~TypesCacheItem() override {
 	}
 
 	PythonImportCacheItem UnionType;
 	PythonImportCacheItem GenericAlias;
+	PythonImportCacheItem BuiltinFunctionType;
 };
 
 } // namespace duckdb
diff --git a/tools/pythonpkg/src/python_replacement_scan.cpp b/tools/pythonpkg/src/python_replacement_scan.cpp
index 37eebd943dcb..a5a61fe81995 100644
--- a/tools/pythonpkg/src/python_replacement_scan.cpp
+++ b/tools/pythonpkg/src/python_replacement_scan.cpp
@@ -117,6 +117,11 @@ static unique_ptr<TableRef> TryReplacementObject(const py::object &entry, const
 	return std::move(table_function);
 }
 
+static bool IsBuiltinFunction(const py::object &object) {
+	auto &import_cache_py = *DuckDBPyConnection::ImportCache();
+	return py::isinstance(object, import_cache_py.types.BuiltinFunctionType());
+}
+
 static unique_ptr<TableRef> TryReplacement(py::dict &dict, const string &name, ClientContext &context,
                                            py::object &current_frame) {
 	auto table_name = py::str(name);
@@ -125,6 +130,11 @@ static unique_ptr<TableRef> TryReplacement(py::dict &dict, const string &name, C
 		return nullptr;
 	}
 	const py::object &entry = dict[table_name];
+
+	if (IsBuiltinFunction(entry)) {
+		return nullptr;
+	}
+
 	auto result = TryReplacementObject(entry, name, context);
 	if (!result) {
 		std::string location = py::cast<py::str>(current_frame.attr("f_code").attr("co_filename"));
