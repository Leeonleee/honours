{
  "repo": "duckdb/duckdb",
  "pull_number": 3360,
  "instance_id": "duckdb__duckdb-3360",
  "issue_numbers": [
    "3354",
    "3354"
  ],
  "base_commit": "7c5ba6c0e1521a76a6644a4525dd6f393215baed",
  "patch": "diff --git a/src/planner/expression_iterator.cpp b/src/planner/expression_iterator.cpp\nindex 17cce4b6a819..bf09942f96bd 100644\n--- a/src/planner/expression_iterator.cpp\n+++ b/src/planner/expression_iterator.cpp\n@@ -4,6 +4,7 @@\n #include \"duckdb/planner/expression/list.hpp\"\n #include \"duckdb/planner/query_node/bound_select_node.hpp\"\n #include \"duckdb/planner/query_node/bound_set_operation_node.hpp\"\n+#include \"duckdb/planner/query_node/bound_recursive_cte_node.hpp\"\n #include \"duckdb/planner/tableref/list.hpp\"\n \n namespace duckdb {\n@@ -167,10 +168,13 @@ void ExpressionIterator::EnumerateTableRefChildren(BoundTableRef &ref,\n \t\tEnumerateQueryNodeChildren(*bound_subquery.subquery, callback);\n \t\tbreak;\n \t}\n-\tdefault:\n-\t\tD_ASSERT(ref.type == TableReferenceType::TABLE_FUNCTION || ref.type == TableReferenceType::BASE_TABLE ||\n-\t\t         ref.type == TableReferenceType::EMPTY);\n+\tcase TableReferenceType::TABLE_FUNCTION:\n+\tcase TableReferenceType::EMPTY:\n+\tcase TableReferenceType::BASE_TABLE:\n+\tcase TableReferenceType::CTE:\n \t\tbreak;\n+\tdefault:\n+\t\tthrow NotImplementedException(\"Unimplemented table reference type in ExpressionIterator\");\n \t}\n }\n \n@@ -183,8 +187,13 @@ void ExpressionIterator::EnumerateQueryNodeChildren(BoundQueryNode &node,\n \t\tEnumerateQueryNodeChildren(*bound_setop.right, callback);\n \t\tbreak;\n \t}\n-\tdefault:\n-\t\tD_ASSERT(node.type == QueryNodeType::SELECT_NODE);\n+\tcase QueryNodeType::RECURSIVE_CTE_NODE: {\n+\t\tauto &cte_node = (BoundRecursiveCTENode &)node;\n+\t\tEnumerateQueryNodeChildren(*cte_node.left, callback);\n+\t\tEnumerateQueryNodeChildren(*cte_node.right, callback);\n+\t\tbreak;\n+\t}\n+\tcase QueryNodeType::SELECT_NODE: {\n \t\tauto &bound_select = (BoundSelectNode &)node;\n \t\tfor (idx_t i = 0; i < bound_select.select_list.size(); i++) {\n \t\t\tEnumerateExpression(bound_select.select_list[i], callback);\n@@ -208,6 +217,9 @@ void ExpressionIterator::EnumerateQueryNodeChildren(BoundQueryNode &node,\n \t\t}\n \t\tbreak;\n \t}\n+\tdefault:\n+\t\tthrow NotImplementedException(\"Unimplemented query node in ExpressionIterator\");\n+\t}\n \tfor (idx_t i = 0; i < node.modifiers.size(); i++) {\n \t\tswitch (node.modifiers[i]->type) {\n \t\tcase ResultModifierType::DISTINCT_MODIFIER:\n",
  "test_patch": "diff --git a/test/issues/fuzz/recursive_view_expression_assertion.test b/test/issues/fuzz/recursive_view_expression_assertion.test\nnew file mode 100644\nindex 000000000000..ce0f69029e5a\n--- /dev/null\n+++ b/test/issues/fuzz/recursive_view_expression_assertion.test\n@@ -0,0 +1,12 @@\n+# name: test/issues/fuzz/recursive_view_expression_assertion.test\n+# description: Issue #3354: Assertion Failed at expression_iterator.cpp:187\n+# group: [fuzz]\n+\n+statement ok\n+PRAGMA enable_verification\n+\n+statement ok\n+create view strings as (with recursive t(a) as (select 1 union select a+1 from t where a < 3) select * from t order by a);\n+\n+statement ok\n+SELECT a, (SELECT a FROM strings i2 WHERE a=(SELECT SUM(a) FROM strings i2 WHERE i2.a>i1.a)) FROM strings i1 ORDER BY 1;\n",
  "problem_statement": "Assertion Failed at expression_iterator.cpp:187\n#### What happens?\r\nINTERNAL Error: Assertion triggered in file \"/root/duckdb/src/planner/expression_iterator.cpp\" on line 187: node.type == QueryNodeType::SELECT_NODE\r\n\r\n#### To Reproduce\r\n```sql\r\ncreate view strings as (with recursive t(a) as (select 1 union select a+1 from t where a < 3) select * from t order by a);\r\nSELECT a, (SELECT a FROM strings i2 WHERE a=(SELECT SUM(a) FROM strings i2 WHERE i2.a>i1.a)) FROM strings i1 ORDER BY 1;\r\n```\r\n\r\n#### Environment (please complete the following information):\r\n - OS: linux\r\n - DuckDB Version: v0.3.3-dev1395 80ae1e12d\r\n - DuckDB Client: /usr/local/bin/duckdb\r\n\r\n#### Before Submitting\r\n\r\n- [x] **Have you tried this on the latest `master` branch?**\r\n* **Python**: `pip install duckdb --upgrade --pre`\r\n* **R**: `install.packages(\"https://github.com/duckdb/duckdb/releases/download/master-builds/duckdb_r_src.tar.gz\", repos = NULL)`\r\n* **Other Platforms**: You can find binaries [here](https://github.com/duckdb/duckdb/releases/tag/master-builds) or compile from source.\r\n\r\n- [x] **Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?**\r\n\nAssertion Failed at expression_iterator.cpp:187\n#### What happens?\r\nINTERNAL Error: Assertion triggered in file \"/root/duckdb/src/planner/expression_iterator.cpp\" on line 187: node.type == QueryNodeType::SELECT_NODE\r\n\r\n#### To Reproduce\r\n```sql\r\ncreate view strings as (with recursive t(a) as (select 1 union select a+1 from t where a < 3) select * from t order by a);\r\nSELECT a, (SELECT a FROM strings i2 WHERE a=(SELECT SUM(a) FROM strings i2 WHERE i2.a>i1.a)) FROM strings i1 ORDER BY 1;\r\n```\r\n\r\n#### Environment (please complete the following information):\r\n - OS: linux\r\n - DuckDB Version: v0.3.3-dev1395 80ae1e12d\r\n - DuckDB Client: /usr/local/bin/duckdb\r\n\r\n#### Before Submitting\r\n\r\n- [x] **Have you tried this on the latest `master` branch?**\r\n* **Python**: `pip install duckdb --upgrade --pre`\r\n* **R**: `install.packages(\"https://github.com/duckdb/duckdb/releases/download/master-builds/duckdb_r_src.tar.gz\", repos = NULL)`\r\n* **Other Platforms**: You can find binaries [here](https://github.com/duckdb/duckdb/releases/tag/master-builds) or compile from source.\r\n\r\n- [x] **Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?**\r\n\n",
  "hints_text": "\n",
  "created_at": "2022-04-02T13:06:23Z"
}