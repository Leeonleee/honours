{
  "repo": "duckdb/duckdb",
  "pull_number": 3408,
  "instance_id": "duckdb__duckdb-3408",
  "issue_numbers": [
    "3404"
  ],
  "base_commit": "fe9ba80039e4a0f20eb8d7fb7d6d9a4984156cbd",
  "patch": "diff --git a/src/catalog/catalog_entry/index_catalog_entry.cpp b/src/catalog/catalog_entry/index_catalog_entry.cpp\nindex d1090d552d5c..e5e48153b554 100644\n--- a/src/catalog/catalog_entry/index_catalog_entry.cpp\n+++ b/src/catalog/catalog_entry/index_catalog_entry.cpp\n@@ -19,6 +19,9 @@ string IndexCatalogEntry::ToSQL() {\n \tif (sql.empty()) {\n \t\tthrow InternalException(\"Cannot convert INDEX to SQL because it was not created with a SQL statement\");\n \t}\n+\tif (sql[sql.size() - 1] != ';') {\n+\t\tsql += \";\";\n+\t}\n \treturn sql;\n }\n \n",
  "test_patch": "diff --git a/test/sql/index/test_index_import.test b/test/sql/index/test_index_import.test\nnew file mode 100644\nindex 000000000000..426d129a5a33\n--- /dev/null\n+++ b/test/sql/index/test_index_import.test\n@@ -0,0 +1,30 @@\n+# name: test/sql/index/test_index_import.test\n+# description: Test if indexes are properly created when importing\n+# group: [index]\n+\n+statement ok\n+PRAGMA enable_verification\n+\n+statement ok\n+BEGIN TRANSACTION\n+\n+statement ok\n+CREATE TABLE tracking(\"nflId\" VARCHAR , \"frameId\" INTEGER, \"gameId\" INTEGER, \"playId\" INTEGER);\n+\n+statement ok\n+INSERT INTO tracking values ('a', 0,0,0);\n+\n+statement ok\n+create index nflid_idx on tracking (nflid)\n+\n+statement ok\n+create unique index tracking_key_idx on tracking (gameId, playId, frameId, nflId)\n+\n+statement ok\n+EXPORT DATABASE '__TEST_DIR__/index';\n+\n+statement ok\n+ROLLBACK\n+\n+statement ok\n+IMPORT DATABASE '__TEST_DIR__/index'\n\\ No newline at end of file\n",
  "problem_statement": "Importing Exported Database with Indexes Fails with Syntax Error (Missing Semicolons)\n#### What happens?\r\nIf you create a database with indexes in it, export it, and then try to import it, the import statement will fail with a sytax error.\r\n\r\n#### To Reproduce\r\n\r\nI used the Kaggle Big Data Bowl 2022 dataset.  I'm able to import it just fine.  However after creating some indexes and export, I end up with exported schema SQL which looks like this (notice no semicolons at the end of the create index statements):\r\n\r\n\r\n\r\n```\r\nCREATE TABLE games(\"gameId\" INTEGER, season INTEGER, week INTEGER, \"gameDate\" DATE, \"gameTimeEastern\" TIME, \"homeTeamAbbr\" VARCHAR, \"visitorTeamAbbr\" VARCHAR);\r\nCREATE TABLE \"PFFScoutingData\"(\"gameId\" INTEGER, \"playId\" INTEGER, \"snapDetail\" VARCHAR, \"snapTime\" VARCHAR, \"operationTime\" VARCHAR, \"hangTime\" VARCHAR, \"kickType\" VARCHAR, \"kickDirectionIntended\" VARCHAR, \"kickDirectionActual\" VARCHAR, \"returnDirectionIntended\" VARCHAR, \"returnDirectionActual\" VARCHAR, \"missedTackler\" VARCHAR, \"assistTackler\" VARCHAR, tackler VARCHAR, \"kickoffReturnFormation\" VARCHAR, gunners VARCHAR, \"puntRushers\" VARCHAR, \"specialTeamsSafeties\" VARCHAR, vises VARCHAR, \"kickContactType\" VARCHAR);\r\nCREATE TABLE players(\"nflId\" INTEGER, height VARCHAR, weight INTEGER, \"birthDate\" VARCHAR, \"collegeName\" VARCHAR, \"Position\" VARCHAR, \"displayName\" VARCHAR);\r\nCREATE TABLE plays(\"gameId\" INTEGER, \"playId\" INTEGER, \"playDescription\" VARCHAR, quarter INTEGER, down INTEGER, \"yardsToGo\" INTEGER, \"possessionTeam\" VARCHAR, \"specialTeamsPlayType\" VARCHAR, \"specialTeamsResult\" VARCHAR, \"kickerId\" VARCHAR, \"returnerId\" VARCHAR, \"kickBlockerId\" VARCHAR, \"yardlineSide\" VARCHAR, \"yardlineNumber\" INTEGER, \"gameClock\" TIME, \"penaltyCodes\" VARCHAR, \"penaltyJerseyNumbers\" VARCHAR, \"penaltyYards\" VARCHAR, \"preSnapHomeScore\" INTEGER, \"preSnapVisitorScore\" INTEGER, \"passResult\" VARCHAR, \"kickLength\" VARCHAR, \"kickReturnYardage\" VARCHAR, \"playResult\" INTEGER, \"absoluteYardlineNumber\" INTEGER);\r\nCREATE TABLE tracking(\"time\" TIMESTAMP, x DOUBLE, y DOUBLE, s DOUBLE, a DOUBLE, dis DOUBLE, o VARCHAR, dir VARCHAR, \"event\" VARCHAR, \"nflId\" VARCHAR, \"displayName\" VARCHAR, \"jerseyNumber\" VARCHAR, \"position\" VARCHAR, team VARCHAR, \"frameId\" INTEGER, \"gameId\" INTEGER, \"playId\" INTEGER, \"playDirection\" VARCHAR);\r\n\r\n\r\ncreate index nflid_idx on tracking (nflid)\r\ncreate unique index tracking_key_idx on tracking (gameId, playId, frameId, nflId)\r\n\r\n```\r\nAdding semicolons manually fixes my ability to import from the exported data.\r\n\r\n#### Environment (please complete the following information):\r\n - OS: Windows 11\r\n - DuckDB Version: 0.3.2\r\n - DuckDB Client: Python\r\n\r\n#### Before Submitting\r\n\r\n- [ No] **Have you tried this on the latest `master` branch?**\r\n* **Python**: `pip install duckdb --upgrade --pre`\r\n* **R**: `install.packages(\"https://github.com/duckdb/duckdb/releases/download/master-builds/duckdb_r_src.tar.gz\", repos = NULL)`\r\n* **Other Platforms**: You can find binaries [here](https://github.com/duckdb/duckdb/releases/tag/master-builds) or compile from source.\r\n\r\n- [ ] **Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?**\r\n\n",
  "hints_text": "",
  "created_at": "2022-04-11T15:05:28Z"
}