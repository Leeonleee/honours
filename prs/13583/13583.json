{
  "repo": "duckdb/duckdb",
  "pull_number": 13583,
  "instance_id": "duckdb__duckdb-13583",
  "issue_numbers": [
    "13537",
    "13537"
  ],
  "base_commit": "69afac464d1f0de4dedab96e26fec05d5b8118c8",
  "patch": "diff --git a/src/main/client_context.cpp b/src/main/client_context.cpp\nindex d7dc9a9a1525..31389c69fbfc 100644\n--- a/src/main/client_context.cpp\n+++ b/src/main/client_context.cpp\n@@ -450,6 +450,7 @@ void ClientContext::RebindPreparedStatement(ClientContextLock &lock, const strin\n \tauto new_prepared =\n \t    CreatePreparedStatement(lock, query, prepared->unbound_statement->Copy(), parameters.parameters);\n \tD_ASSERT(new_prepared->properties.bound_all_parameters);\n+\tnew_prepared->properties.parameter_count = prepared->properties.parameter_count;\n \tprepared = std::move(new_prepared);\n \tprepared->properties.bound_all_parameters = false;\n }\n",
  "test_patch": "diff --git a/test/api/test_prepared_api.cpp b/test/api/test_prepared_api.cpp\nindex 98724ca4ab30..1d8c45b6dc91 100644\n--- a/test/api/test_prepared_api.cpp\n+++ b/test/api/test_prepared_api.cpp\n@@ -476,3 +476,23 @@ TEST_CASE(\"Test ambiguous prepared statement parameter types\", \"[api]\") {\n \tresult = prep->Execute(\"hello\");\n \tREQUIRE(CHECK_COLUMN(result, 0, {\"hello\"}));\n }\n+\n+TEST_CASE(\"Test prepared statements with SET\", \"[api]\") {\n+\tduckdb::unique_ptr<QueryResult> result;\n+\tDuckDB db(nullptr);\n+\tConnection con(db);\n+\tcon.EnableQueryVerification();\n+\n+\t// create a prepared statement and use it to query\n+\tauto prepare = con.Prepare(\"SET default_null_order=$1\");\n+\tREQUIRE(prepare->success);\n+\n+\t// too many parameters\n+\tREQUIRE_FAIL(prepare->Execute(\"xxx\", \"yyy\"));\n+\t// too few parameters\n+\tREQUIRE_FAIL(prepare->Execute());\n+\t// unsupported setting\n+\tREQUIRE_FAIL(prepare->Execute(\"unsupported_mode\"));\n+\t// this works\n+\tREQUIRE_NO_FAIL(prepare->Execute(\"NULLS FIRST\"));\n+}\n",
  "problem_statement": "SET/RESET not able to be used in prepared statements\n### What happens?\r\n\r\n```python\r\nimport duckdb\r\nduckdb.execute(\"SET s3_region=?\",[\"us-west-1\"])\r\n```\r\n\r\ndoesn't work\r\n\r\n### To Reproduce\r\n\r\n^^\r\n\r\n### OS:\r\n\r\nmac\r\n\r\n### DuckDB Version:\r\n\r\n1\r\n\r\n### DuckDB Client:\r\n\r\npython\r\n\r\n### Full Name:\r\n\r\nAndrew Grosser\r\n\r\n### Affiliation:\r\n\r\nSourcetable\r\n\r\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\r\n\r\nI have not tested with any build\r\n\r\n### Did you include all relevant data sets for reproducing the issue?\r\n\r\nNo - Other reason (please specify in the issue body)\r\n\r\n### Did you include all code required to reproduce the issue?\r\n\r\n- [X] Yes, I have\r\n\r\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\r\n\r\n- [X] Yes, I have\nSET/RESET not able to be used in prepared statements\n### What happens?\r\n\r\n```python\r\nimport duckdb\r\nduckdb.execute(\"SET s3_region=?\",[\"us-west-1\"])\r\n```\r\n\r\ndoesn't work\r\n\r\n### To Reproduce\r\n\r\n^^\r\n\r\n### OS:\r\n\r\nmac\r\n\r\n### DuckDB Version:\r\n\r\n1\r\n\r\n### DuckDB Client:\r\n\r\npython\r\n\r\n### Full Name:\r\n\r\nAndrew Grosser\r\n\r\n### Affiliation:\r\n\r\nSourcetable\r\n\r\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\r\n\r\nI have not tested with any build\r\n\r\n### Did you include all relevant data sets for reproducing the issue?\r\n\r\nNo - Other reason (please specify in the issue body)\r\n\r\n### Did you include all code required to reproduce the issue?\r\n\r\n- [X] Yes, I have\r\n\r\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\r\n\r\n- [X] Yes, I have\n",
  "hints_text": "\n",
  "created_at": "2024-08-27T08:38:55Z"
}