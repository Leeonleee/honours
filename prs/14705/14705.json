{
  "repo": "duckdb/duckdb",
  "pull_number": 14705,
  "instance_id": "duckdb__duckdb-14705",
  "issue_numbers": [
    "14699"
  ],
  "base_commit": "059ac75f6225fde78b686bc85f23d2e70af1dbe0",
  "patch": "diff --git a/src/parser/transform/statement/transform_create_view.cpp b/src/parser/transform/statement/transform_create_view.cpp\nindex 8504ecfc9a91..24a26c022d0d 100644\n--- a/src/parser/transform/statement/transform_create_view.cpp\n+++ b/src/parser/transform/statement/transform_create_view.cpp\n@@ -21,7 +21,7 @@ unique_ptr<CreateStatement> Transformer::TransformCreateView(duckdb_libpgquery::\n \t}\n \tinfo->on_conflict = TransformOnConflict(stmt.onconflict);\n \n-\tinfo->query = TransformSelectStmt(*PGPointerCast<duckdb_libpgquery::PGSelectStmt>(stmt.query), false);\n+\tinfo->query = TransformSelectStmt(*stmt.query, false);\n \n \tPivotEntryCheck(\"view\");\n \n",
  "test_patch": "diff --git a/test/sql/pragma/test_show_tables.test b/test/sql/pragma/test_show_tables.test\nindex f8b01c5c1f4d..47bc30910fe5 100644\n--- a/test/sql/pragma/test_show_tables.test\n+++ b/test/sql/pragma/test_show_tables.test\n@@ -120,3 +120,17 @@ query TTTITI\n DESCRIBE v1\n ----\n k\tDATE\tYES\tNULL\tNULL\tNULL\n+\n+# view over show tables\n+statement ok\n+CREATE VIEW show_tables_view AS ( SHOW TABLES );\n+\n+query T\n+SELECT * FROM show_tables_view ORDER BY ALL\n+----\n+integers\n+select\n+show_tables_view\n+t2\n+tbl\n+v1\n",
  "problem_statement": "DuckDB SEGV when running ill-formed CREATE VIEW statement\n### What happens?\n\nThe latest version of the DuckDB (v1.1.3 19864453f7 and latest main: v1.1.3-dev165 19864453f7) crashes when running the following SQL statement: \r\n\r\n```sql\r\nCREATE VIEW any_view_name AS ( SHOW ALL TABLES );\r\n```\r\n\r\nHere is the stack trace from v1.1.3-dev165 19864453f7:\r\n\r\n```\r\n(gdb) bt\r\n#0  0x0000aaaadba322f0 in duckdb::Transformer::TransformPivotStatement (this=0xffffe4d4e090, select=...) at /home/duckdb/duckdb/src/parser/transform/statement/transform_pivot_stmt.cpp:138\r\n#1  0x0000aaaadba37da4 in duckdb::Transformer::TransformSelectNodeInternal (this=this@entry=0xffffe4d4e090, select=..., is_select=is_select@entry=false) at /home/duckdb/duckdb/src/parser/transform/statement/transform_select.cpp:31\r\n#2  0x0000aaaadba39e4c in duckdb::Transformer::TransformSelectStmt (this=this@entry=0xffffe4d4e090, select=..., is_select=is_select@entry=false) at ../../src/include/duckdb/common/unique_ptr.hpp:39\r\n#3  0x0000aaaadba3a018 in duckdb::Transformer::TransformCreateView (this=this@entry=0xffffe4d4e090, stmt=...) at ../../src/include/duckdb/common/optional_ptr.hpp:42\r\n#4  0x0000aaaadb210e8c in duckdb::Transformer::TransformStatementInternal (this=this@entry=0xffffe4d4e090, stmt=...) at /home/duckdb/duckdb/src/parser/transformer.cpp:153\r\n#5  0x0000aaaadb211130 in duckdb::Transformer::TransformStatement (this=this@entry=0xffffe4d4e090, stmt=...) at /home/duckdb/duckdb/src/parser/transformer.cpp:59\r\n#6  0x0000aaaadb211038 in duckdb::Transformer::TransformStatementInternal (this=this@entry=0xffffe4d4e090, stmt=...) at /home/duckdb/duckdb/src/parser/transformer.cpp:139\r\n#7  0x0000aaaadb211130 in duckdb::Transformer::TransformStatement (this=this@entry=0xffffe4d4e090, stmt=...) at /home/duckdb/duckdb/src/parser/transformer.cpp:59\r\n#8  0x0000aaaadb211224 in duckdb::Transformer::TransformParseTree (this=this@entry=0xffffe4d4e090, tree=<optimized out>, statements=...) at ../../src/include/duckdb/common/optional_ptr.hpp:42\r\n#9  0x0000aaaadb215648 in duckdb::Parser::ParseQuery (this=this@entry=0xffffe4d4e3f8, query=\"CREATE VIEW any_view_name AS ( SHOW ALL TABLES );\") at /home/duckdb/duckdb/src/parser/parser.cpp:219\r\n#10 0x0000aaaadb1f4ecc in duckdb_shell_sqlite3_prepare_v2 (db=0xaaaae503c8c0, zSql=0xaaaae503a290 \"CREATE VIEW any_view_name AS ( SHOW ALL TABLES );\", nByte=<optimized out>, ppStmt=0xffffe4d4e620, pzTail=0xffffe4d4e628)\r\n    at ../../tools/sqlite3_api_wrapper/sqlite3_api_wrapper.cpp:176\r\n#11 0x0000aaaadb1e0f68 in shell_exec (pArg=0xffffe4d4e8b0, zSql=0xaaaae503a290 \"CREATE VIEW any_view_name AS ( SHOW ALL TABLES );\", pzErrMsg=<optimized out>) at ../../tools/shell/shell.c:12993\r\n#12 0x0000aaaadb1e2a28 in runOneSqlLine (p=0xffffe4d4e8b0, zSql=0xaaaae503a290 \"CREATE VIEW any_view_name AS ( SHOW ALL TABLES );\", startline=<optimized out>, in=<optimized out>) at ../../tools/shell/shell.c:19273\r\n#13 0x0000aaaadb1e9bc0 in process_input (p=0xffffe4d4e8b0) at ../../tools/shell/shell.c:19384\r\n#14 0x0000aaaadb1bfb90 in main (argc=<optimized out>, argv=0xffffe4d4fc18) at ../../tools/shell/shell.c:20206\r\n```\n\n### To Reproduce\n\n1. Clone the DuckDB Git from the official repo.\r\n2. Checkout to either the latest main (19864453f7) or release version: 1.1.3 (19864453f7).\r\n3. Compile the DuckDB binary by using either `make reldebug` or `make debug`.\r\n4. Run the compiled DuckDB and input the following SQL:\r\n\r\n```\r\nCREATE VIEW any_view_name AS ( SHOW ALL TABLES );\r\n```\n\n### OS:\n\nUbuntu 20.04 LTS\n\n### DuckDB Version:\n\n1.1.3\n\n### DuckDB Client:\n\ncli\n\n### Hardware:\n\n_No response_\n\n### Full Name:\n\nYu Liang\n\n### Affiliation:\n\nPennsylvania State University\n\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\n\nI have tested with a stable release\n\n### Did you include all relevant data sets for reproducing the issue?\n\nYes\n\n### Did you include all code required to reproduce the issue?\n\n- [X] Yes, I have\n\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\n\n- [X] Yes, I have\n",
  "hints_text": "",
  "created_at": "2024-11-05T08:38:54Z"
}