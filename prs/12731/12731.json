{
  "repo": "duckdb/duckdb",
  "pull_number": 12731,
  "instance_id": "duckdb__duckdb-12731",
  "issue_numbers": [
    "12729",
    "12729"
  ],
  "base_commit": "78b7d98b698254cf1dc805155ca6b6521ad0cece",
  "patch": "diff --git a/src/execution/physical_plan/plan_comparison_join.cpp b/src/execution/physical_plan/plan_comparison_join.cpp\nindex 3f843120db58..9984b909eb7f 100644\n--- a/src/execution/physical_plan/plan_comparison_join.cpp\n+++ b/src/execution/physical_plan/plan_comparison_join.cpp\n@@ -91,6 +91,10 @@ void CheckForPerfectJoinOpt(LogicalComparisonJoin &op, PerfectHashJoinStats &joi\n \t    !ExtractNumericValue(NumericStats::Max(stats_build), max_value)) {\n \t\treturn;\n \t}\n+\tif (max_value < min_value) {\n+\t\t// empty table\n+\t\treturn;\n+\t}\n \tint64_t build_range;\n \tif (!TrySubtractOperator::Operation(max_value, min_value, build_range)) {\n \t\treturn;\n",
  "test_patch": "diff --git a/test/sql/join/inner/empty_tinyint_column.test b/test/sql/join/inner/empty_tinyint_column.test\nnew file mode 100644\nindex 000000000000..2ba61bc237d3\n--- /dev/null\n+++ b/test/sql/join/inner/empty_tinyint_column.test\n@@ -0,0 +1,22 @@\n+# name: test/sql/join/inner/empty_tinyint_column.test\n+# description: Internal error on join of empty tinyint column\n+# group: [inner]\n+\n+statement ok\n+PRAGMA enable_verification\n+\n+statement ok\n+CREATE TABLE t1(c0 INT4, c1 VARCHAR);\n+\n+statement ok\n+CREATE TABLE t2(c0 TINYINT, PRIMARY KEY(c0));\n+\n+statement ok\n+INSERT INTO t1(c0) VALUES (14161972);\n+\n+statement ok\n+INSERT INTO t1(c0, c1) VALUES (-1.438515327E9, 4.43806148E8);\n+\n+query III\n+SELECT * FROM t1 INNER JOIN t2 ON t1.c0 = t2.c0;\n+----\n",
  "problem_statement": "INTERNAL Error caused by INNER JOIN\n### What happens?\n\nWhen I try to perform an inner join on two tables using DuckDB, I encounter an INTERNAL Error.\n\n### To Reproduce\n\n``` sql\r\nCREATE TABLE t1(c0 INT4, c1 VARCHAR);\r\nCREATE TABLE t2(c0 TINYINT, PRIMARY KEY(c0));\r\nINSERT INTO t1(c0) VALUES (14161972);\r\nINSERT INTO t1(c0, c1) VALUES (-1.438515327E9, 4.43806148E8); \r\nSELECT * FROM t1 INNER JOIN t2 ON t1.c0 = t2.c0;\r\n```\r\n```\r\nINTERNAL Error: Information loss on integer cast: value -255 outside of target range [0, -1]\r\nThis error signals an assertion failure within DuckDB. This usually occurs due to unexpected conditions or errors in the program's logic.\r\nFor more information, see https://duckdb.org/docs/dev/internal_errors\r\n```\n\n### OS:\n\nUbuntu 20.04.6 x64\n\n### DuckDB Version:\n\nv1.0.0 (1f98600)\n\n### DuckDB Client:\n\nCli\n\n### Full Name:\n\nPersonal\n\n### Affiliation:\n\nPersonal\n\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\n\nI have tested with a stable release\n\n### Did you include all relevant data sets for reproducing the issue?\n\nYes\n\n### Did you include all code required to reproduce the issue?\n\n- [X] Yes, I have\n\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\n\n- [X] Yes, I have\nINTERNAL Error caused by INNER JOIN\n### What happens?\n\nWhen I try to perform an inner join on two tables using DuckDB, I encounter an INTERNAL Error.\n\n### To Reproduce\n\n``` sql\r\nCREATE TABLE t1(c0 INT4, c1 VARCHAR);\r\nCREATE TABLE t2(c0 TINYINT, PRIMARY KEY(c0));\r\nINSERT INTO t1(c0) VALUES (14161972);\r\nINSERT INTO t1(c0, c1) VALUES (-1.438515327E9, 4.43806148E8); \r\nSELECT * FROM t1 INNER JOIN t2 ON t1.c0 = t2.c0;\r\n```\r\n```\r\nINTERNAL Error: Information loss on integer cast: value -255 outside of target range [0, -1]\r\nThis error signals an assertion failure within DuckDB. This usually occurs due to unexpected conditions or errors in the program's logic.\r\nFor more information, see https://duckdb.org/docs/dev/internal_errors\r\n```\n\n### OS:\n\nUbuntu 20.04.6 x64\n\n### DuckDB Version:\n\nv1.0.0 (1f98600)\n\n### DuckDB Client:\n\nCli\n\n### Full Name:\n\nPersonal\n\n### Affiliation:\n\nPersonal\n\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\n\nI have tested with a stable release\n\n### Did you include all relevant data sets for reproducing the issue?\n\nYes\n\n### Did you include all code required to reproduce the issue?\n\n- [X] Yes, I have\n\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\n\n- [X] Yes, I have\n",
  "hints_text": "\n",
  "created_at": "2024-06-27T11:52:28Z"
}