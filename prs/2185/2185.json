{
  "repo": "duckdb/duckdb",
  "pull_number": 2185,
  "instance_id": "duckdb__duckdb-2185",
  "issue_numbers": [
    "1637"
  ],
  "base_commit": "c64754297d17ee686d756a77acd0463d327795f5",
  "patch": "diff --git a/extension/parquet/parquet_writer.cpp b/extension/parquet/parquet_writer.cpp\nindex 103191e2b4ec..eeaa286c18d1 100644\n--- a/extension/parquet/parquet_writer.cpp\n+++ b/extension/parquet/parquet_writer.cpp\n@@ -253,7 +253,6 @@ void ParquetWriter::Flush(ChunkCollection &buffer) {\n \t\t\t\t\t\tbyte |= (ptr[r] & 1) << byte_pos;\n \t\t\t\t\t\tbyte_pos++;\n \n-\t\t\t\t\t\ttemp_writer.Write<uint8_t>(byte);\n \t\t\t\t\t\tif (byte_pos == 8) {\n \t\t\t\t\t\t\ttemp_writer.Write<uint8_t>(byte);\n \t\t\t\t\t\t\tbyte = 0;\n",
  "test_patch": "diff --git a/test/sql/copy/parquet/test_parquet_write_complex.test b/test/sql/copy/parquet/test_parquet_write_complex.test\nindex 520b25d6ad2e..26f77396994f 100644\n--- a/test/sql/copy/parquet/test_parquet_write_complex.test\n+++ b/test/sql/copy/parquet/test_parquet_write_complex.test\n@@ -33,6 +33,16 @@ query I nosort bug687_nulls\n SELECT * FROM parquet_scan('__TEST_DIR__/bug687_nulls.parquet') LIMIT 10;\n ----\n \n+# Issue #1637: booleans encoded incorrectly\n+statement ok\n+COPY (SELECT true as x UNION ALL SELECT true) TO '__TEST_DIR__/bug1637_booleans.parquet' (FORMAT 'PARQUET');\n+\n+# Prior to the #1637 fix, duckdb wrote a parquet file containing true, false\n+query I\n+SELECT COUNT(*) FROM parquet_scan('__TEST_DIR__/bug1637_booleans.parquet') WHERE x;\n+----\n+2\n+\n # userdata1.parquet\n query I nosort userdata1.parquet\n SELECT * FROM parquet_scan('data/parquet-testing/userdata1.parquet') ORDER BY 1 LIMIT 10;\n",
  "problem_statement": "Parquet export of booleans sometimes exports wrong values\nThis is the final one for now, promise :)\r\n\r\nBooleans get mangled when exporting from duckdb. 0.2.5.\r\nEDIT: made the repro less convoluted.\r\n\r\n```py\r\nimport duckdb\r\nimport pandas as pd\r\nddb = duckdb.connect(':memory:')\r\n\r\n# create data\r\nddb.execute('''\r\ncreate table source as\r\nvalues (true), (false), (true), (false)\r\n''')\r\n\r\n# export\r\nddb.execute(\"copy source to 'bool_export_bug.parquet' (format parquet)\")\r\n\r\n# uh oh\r\ndisplay(ddb.execute('select * from source').fetch_df()) # 1 0 1 0\r\ndisplay(pd.read_parquet('bool_export_bug.parquet'))     # 1 0 0 0\r\n```\n",
  "hints_text": "still happens in master.\nI have a pretty good idea what causes this\nReproduced in v0.2.7 8bc050d05\n@hannesmuehleisen \u2014\u00a0this bug just bit us in production. Can I help fix this in any way? As always, happy to contribute code!\nI'm pretty new to the codebase, but is there any chance https://github.com/duckdb/duckdb/blob/06df6c285865d94ec367dadcc5a9103f0fbf71ab/extension/parquet/parquet_writer.cpp#L256 is the bug, and that we should delete that line? The code seems to be packing bits into bytes, but seems to write out a byte in every loop iteration, which doesn't seem right to me.\r\n\r\nIf this is in fact the issue, I'm happy to submit a PR tomorrow!\n> I'm pretty new to the codebase, but is there any chance\r\n> \r\n> https://github.com/duckdb/duckdb/blob/06df6c285865d94ec367dadcc5a9103f0fbf71ab/extension/parquet/parquet_writer.cpp#L256\r\n> \r\n> is the bug, and that we should delete that line? The code seems to be packing bits into bytes, but seems to write out a byte in every loop iteration, which doesn't seem right to me.\r\n> If this is in fact the issue, I'm happy to submit a PR tomorrow!\r\n\r\nThat indeed looks like the problem to me! If you could submit a PR with a test case that would be excellent.",
  "created_at": "2021-08-26T17:53:16Z"
}