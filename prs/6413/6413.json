{
  "repo": "duckdb/duckdb",
  "pull_number": 6413,
  "instance_id": "duckdb__duckdb-6413",
  "issue_numbers": [
    "6235",
    "6235"
  ],
  "base_commit": "666d2a612508bd033261113b0af32c62b6ac2b64",
  "patch": "diff --git a/src/catalog/default/default_views.cpp b/src/catalog/default/default_views.cpp\nindex fb26060073ef..0fa1d07dc73f 100644\n--- a/src/catalog/default/default_views.cpp\n+++ b/src/catalog/default/default_views.cpp\n@@ -48,7 +48,7 @@ static DefaultView internal_views[] = {\n     {\"pg_catalog\", \"pg_views\", \"SELECT schema_name schemaname, view_name viewname, 'duckdb' viewowner, sql definition FROM duckdb_views()\"},\n     {\"information_schema\", \"columns\", \"SELECT database_name table_catalog, schema_name table_schema, table_name, column_name, column_index ordinal_position, column_default, CASE WHEN is_nullable THEN 'YES' ELSE 'NO' END is_nullable, data_type, character_maximum_length, NULL character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, NULL datetime_precision, NULL interval_type, NULL interval_precision, NULL character_set_catalog, NULL character_set_schema, NULL character_set_name, NULL collation_catalog, NULL collation_schema, NULL collation_name, NULL domain_catalog, NULL domain_schema, NULL domain_name, NULL udt_catalog, NULL udt_schema, NULL udt_name, NULL scope_catalog, NULL scope_schema, NULL scope_name, NULL maximum_cardinality, NULL dtd_identifier, NULL is_self_referencing, NULL is_identity, NULL identity_generation, NULL identity_start, NULL identity_increment, NULL identity_maximum, NULL identity_minimum, NULL identity_cycle, NULL is_generated, NULL generation_expression, NULL is_updatable FROM duckdb_columns;\"},\n     {\"information_schema\", \"schemata\", \"SELECT database_name catalog_name, schema_name, 'duckdb' schema_owner, NULL default_character_set_catalog, NULL default_character_set_schema, NULL default_character_set_name, sql sql_path FROM duckdb_schemas()\"},\n-    {\"information_schema\", \"tables\", \"SELECT database_name table_catalog, schema_name table_schema, table_name, CASE WHEN temporary THEN 'LOCAL TEMPORARY' ELSE 'BASE TABLE' END table_type, NULL self_referencing_column_name, NULL reference_generation, NULL user_defined_type_catalog, NULL user_defined_type_schema, NULL user_defined_type_name, 'YES' is_insertable_into, 'NO' is_typed, CASE WHEN temporary THEN 'PRESERVE' ELSE NULL END commit_action FROM duckdb_tables() UNION ALL SELECT NULL table_catalog, schema_name table_schema, view_name table_name, 'VIEW' table_type, NULL self_referencing_column_name, NULL reference_generation, NULL user_defined_type_catalog, NULL user_defined_type_schema, NULL user_defined_type_name, 'NO' is_insertable_into, 'NO' is_typed, NULL commit_action FROM duckdb_views;\"},\n+    {\"information_schema\", \"tables\", \"SELECT database_name table_catalog, schema_name table_schema, table_name, CASE WHEN temporary THEN 'LOCAL TEMPORARY' ELSE 'BASE TABLE' END table_type, NULL self_referencing_column_name, NULL reference_generation, NULL user_defined_type_catalog, NULL user_defined_type_schema, NULL user_defined_type_name, 'YES' is_insertable_into, 'NO' is_typed, CASE WHEN temporary THEN 'PRESERVE' ELSE NULL END commit_action FROM duckdb_tables() UNION ALL SELECT database_name table_catalog, schema_name table_schema, view_name table_name, 'VIEW' table_type, NULL self_referencing_column_name, NULL reference_generation, NULL user_defined_type_catalog, NULL user_defined_type_schema, NULL user_defined_type_name, 'NO' is_insertable_into, 'NO' is_typed, NULL commit_action FROM duckdb_views;\"},\n     {nullptr, nullptr, nullptr}};\n \n static unique_ptr<CreateViewInfo> GetDefaultView(ClientContext &context, const string &input_schema, const string &input_name) {\n",
  "test_patch": "diff --git a/test/sql/table_function/information_schema.test b/test/sql/table_function/information_schema.test\nindex 7a443dc505ca..a2301a6484a7 100644\n--- a/test/sql/table_function/information_schema.test\n+++ b/test/sql/table_function/information_schema.test\n@@ -23,7 +23,7 @@ statement ok\n CREATE TABLE scheme.integers (i INTEGER);\n \n query T\n-SELECT table_type FROM information_schema.tables WHERE table_schema='scheme' AND table_name='integers'\n+SELECT table_type FROM information_schema.tables WHERE table_schema='scheme' AND table_name='integers' AND table_catalog IS NOT NULL\n ----\n BASE TABLE\n \n@@ -69,7 +69,7 @@ SELECT table_type FROM information_schema.tables WHERE table_schema='scheme' AND\n VIEW\n \n query ITT\n-SELECT ordinal_position, column_name, data_type FROM information_schema.columns WHERE table_schema='scheme' AND table_name='vintegers'\n+SELECT ordinal_position, column_name, data_type FROM information_schema.columns WHERE table_schema='scheme' AND table_name='vintegers' AND table_catalog IS NOT NULL\n ----\n 1\ti\tINTEGER\n \ndiff --git a/tools/jdbc/src/test/java/org/duckdb/test/TestDuckDBJDBC.java b/tools/jdbc/src/test/java/org/duckdb/test/TestDuckDBJDBC.java\nindex 4a28fff6ad8d..86a5958445c3 100644\n--- a/tools/jdbc/src/test/java/org/duckdb/test/TestDuckDBJDBC.java\n+++ b/tools/jdbc/src/test/java/org/duckdb/test/TestDuckDBJDBC.java\n@@ -1695,8 +1695,7 @@ public static void test_schema_reflection() throws Exception {\n \t\tassertNull(rs.getObject(10));\n \n \t\tassertTrue(rs.next());\n-\t\tassertNull(rs.getObject(\"TABLE_CAT\"));\n-\t\tassertNull(rs.getObject(1));\n+\t\tassertTrue(rs.getObject(\"TABLE_CAT\") != null);\n \t\tassertEquals(rs.getString(\"TABLE_SCHEM\"), DuckDBDatabase.DEFAULT_SCHEMA);\n \t\tassertEquals(rs.getString(2), DuckDBDatabase.DEFAULT_SCHEMA);\n \t\tassertEquals(rs.getString(\"TABLE_NAME\"), \"b\");\n",
  "problem_statement": "information_schema.tables does not populate table_catalog for views\n### What happens?\n\nWhen we create a view, the information_schema.tables system view does not populate table_catalog for the view entry (table_catalog is null).\r\nThis applies too for attached databases, so if an attached database has a view with an identical name, they cannot be distinguished from each other in information_schema.tables.\n\n### To Reproduce\n\n```\r\nPS C:\\roland\\projects\\duckdb\\Release> .\\duckdb.exe\r\nv0.6.2-dev2485 5eb6aa91fb\r\nEnter \".help\" for usage hints.\r\nConnected to a transient in-memory database.\r\nUse \".open FILENAME\" to reopen on a persistent database.\r\nD create table t1(c int);\r\nD create view v1 as select * from t1;\r\nD select table_catalog, table_schema, table_name, table_type from information_schema.tables;\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 table_catalog \u2502 table_schema \u2502 table_name \u2502 table_type \u2502\r\n\u2502    varchar    \u2502   varchar    \u2502  varchar   \u2502  varchar   \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 memory        \u2502 main         \u2502 t1         \u2502 BASE TABLE \u2502\r\n\u2502               \u2502 main         \u2502 v1         \u2502 VIEW       \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\n\n### OS:\n\nWindows 10 Pro\n\n### DuckDB Version:\n\nv0.6.2-dev2485 5eb6aa91fb\n\n### DuckDB Client:\n\nCLI (any)\n\n### Full Name:\n\nRoland Bouman\n\n### Affiliation:\n\nJust-Bi.nl (an EPAM company) \n\n### Have you tried this on the latest `master` branch?\n\n- [X] I agree\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] I agree\ninformation_schema.tables does not populate table_catalog for views\n### What happens?\n\nWhen we create a view, the information_schema.tables system view does not populate table_catalog for the view entry (table_catalog is null).\r\nThis applies too for attached databases, so if an attached database has a view with an identical name, they cannot be distinguished from each other in information_schema.tables.\n\n### To Reproduce\n\n```\r\nPS C:\\roland\\projects\\duckdb\\Release> .\\duckdb.exe\r\nv0.6.2-dev2485 5eb6aa91fb\r\nEnter \".help\" for usage hints.\r\nConnected to a transient in-memory database.\r\nUse \".open FILENAME\" to reopen on a persistent database.\r\nD create table t1(c int);\r\nD create view v1 as select * from t1;\r\nD select table_catalog, table_schema, table_name, table_type from information_schema.tables;\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 table_catalog \u2502 table_schema \u2502 table_name \u2502 table_type \u2502\r\n\u2502    varchar    \u2502   varchar    \u2502  varchar   \u2502  varchar   \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 memory        \u2502 main         \u2502 t1         \u2502 BASE TABLE \u2502\r\n\u2502               \u2502 main         \u2502 v1         \u2502 VIEW       \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\n\n### OS:\n\nWindows 10 Pro\n\n### DuckDB Version:\n\nv0.6.2-dev2485 5eb6aa91fb\n\n### DuckDB Client:\n\nCLI (any)\n\n### Full Name:\n\nRoland Bouman\n\n### Affiliation:\n\nJust-Bi.nl (an EPAM company) \n\n### Have you tried this on the latest `master` branch?\n\n- [X] I agree\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] I agree\n",
  "hints_text": "\n",
  "created_at": "2023-02-22T09:09:52Z"
}