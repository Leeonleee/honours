diff --git a/src/function/scalar/math/numeric.cpp b/src/function/scalar/math/numeric.cpp
index eb43e9e4a5ae..9b6214c71f4a 100644
--- a/src/function/scalar/math/numeric.cpp
+++ b/src/function/scalar/math/numeric.cpp
@@ -910,4 +910,32 @@ void FactorialFun::RegisterFunction(BuiltinFunctions &set) {
 	set.AddFunction({"factorial", "!__postfix"}, fun);
 }
 
+//===--------------------------------------------------------------------===//
+// even
+//===--------------------------------------------------------------------===//
+struct EvenOperator {
+	template <class TA, class TR>
+	static inline TR Operation(TA left) {
+		double value;
+		if (left >= 0) {
+			value = std::ceil(left);
+		} else {
+			value = std::ceil(-left);
+			value = -value;
+		}
+		if (std::floor(value / 2) * 2 != value) {
+			if (left >= 0) {
+				return value += 1;
+			}
+			return value -= 1;
+		}
+		return value;
+	}
+};
+
+void EvenFun::RegisterFunction(BuiltinFunctions &set) {
+	set.AddFunction(ScalarFunction("even", {LogicalType::DOUBLE}, LogicalType::DOUBLE,
+	                               UnaryDoubleFunctionWrapper<double, EvenOperator>));
+}
+
 } // namespace duckdb
diff --git a/src/function/scalar/math_functions.cpp b/src/function/scalar/math_functions.cpp
index 5c1abc57f7fa..dc0bbb899314 100644
--- a/src/function/scalar/math_functions.cpp
+++ b/src/function/scalar/math_functions.cpp
@@ -34,6 +34,8 @@ void BuiltinFunctions::RegisterMathFunctions() {
 	Register<FactorialFun>();
 
 	Register<NextAfterFun>();
+
+	Register<EvenFun>();
 }
 
 } // namespace duckdb
diff --git a/src/include/duckdb/function/scalar/math_functions.hpp b/src/include/duckdb/function/scalar/math_functions.hpp
index fa01ace3b8a6..e75785c75b84 100644
--- a/src/include/duckdb/function/scalar/math_functions.hpp
+++ b/src/include/duckdb/function/scalar/math_functions.hpp
@@ -101,4 +101,8 @@ struct NextAfterFun {
 	static void RegisterFunction(BuiltinFunctions &set);
 };
 
+struct EvenFun {
+	static void RegisterFunction(BuiltinFunctions &set);
+};
+
 } // namespace duckdb
