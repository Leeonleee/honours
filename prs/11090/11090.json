{
  "repo": "duckdb/duckdb",
  "pull_number": 11090,
  "instance_id": "duckdb__duckdb-11090",
  "issue_numbers": [
    "11063",
    "11063"
  ],
  "base_commit": "5a59c56acf2cf8eb1948e9045796019f781b317b",
  "patch": "diff --git a/src/optimizer/in_clause_rewriter.cpp b/src/optimizer/in_clause_rewriter.cpp\nindex 3670a572b6b6..36ddb11b03b5 100644\n--- a/src/optimizer/in_clause_rewriter.cpp\n+++ b/src/optimizer/in_clause_rewriter.cpp\n@@ -72,7 +72,11 @@ unique_ptr<Expression> InClauseRewriter::VisitReplace(BoundOperatorExpression &e\n \tchunk.Initialize(context, types);\n \tfor (idx_t i = 1; i < expr.children.size(); i++) {\n \t\t// resolve this expression to a constant\n-\t\tauto value = ExpressionExecutor::EvaluateScalar(context, *expr.children[i]);\n+\t\tValue value;\n+\t\tif (!ExpressionExecutor::TryEvaluateScalar(context, *expr.children[i], value)) {\n+\t\t\t// error while evaluating scalar\n+\t\t\treturn nullptr;\n+\t\t}\n \t\tidx_t index = chunk.size();\n \t\tchunk.SetCardinality(chunk.size() + 1);\n \t\tchunk.SetValue(0, index, value);\n",
  "test_patch": "diff --git a/test/sql/function/operator/test_in_empty_table.test b/test/sql/function/operator/test_in_empty_table.test\nnew file mode 100644\nindex 000000000000..57ad3e9aff5d\n--- /dev/null\n+++ b/test/sql/function/operator/test_in_empty_table.test\n@@ -0,0 +1,21 @@\n+# name: test/sql/function/operator/test_in_empty_table.test\n+# description: Issue #11063 - IN operator throws a Conversion Error when checking INTEGER column for 5 or more VARCHAR elements\n+# group: [operator]\n+\n+statement ok\n+PRAGMA enable_verification\n+\n+statement ok\n+CREATE OR REPLACE TABLE test (a INTEGER)\n+\n+query I\n+SELECT * FROM test WHERE a IN ('a', 'b', 'c', 'd', 'e')\n+----\n+\n+statement ok\n+INSERT INTO test VALUES (42)\n+\n+statement error\n+SELECT * FROM test WHERE a IN ('a', 'b', 'c', 'd', 'e')\n+----\n+Could not convert string\n",
  "problem_statement": "IN operator throws a Conversion Error when checking INTEGER column for 5 or more VARCHAR elements\n### What happens?\n\nWhen running an `IN` operator with an INTEGER column in LHS and 5 or more VARCHAR elements in the RHS DuckDB would throw a conversion error. If there're less than 5 VARCHAR elements in the RHS, no error is thrown\r\n\r\nThe behavior is the same no matter if `old_implicit_casting` flag is set to true or false\r\n\n\n### To Reproduce\n\n```python\r\nimport duckdb\r\n\r\nconn = duckdb.connect()\r\nconn.execute(\"CREATE OR REPLACE TABLE test (a INTEGER)\")\r\nconn.execute(\"SELECT * FROM test WHERE a IN ('a', 'b', 'c', 'd', 'e')\")\r\n```\r\nOn 0.10.0 and nightly build:\r\n```duckdb.duckdb.ConversionException: Conversion Error: Could not convert string 'a' to INT32```\r\n\r\n\r\n\n\n### OS:\n\nLinux x86_64\n\n### DuckDB Version:\n\n0.10.0\n\n### DuckDB Client:\n\nPython\n\n### Full Name:\n\nAlexandr Chebatarev\n\n### Affiliation:\n\nBloomberg L.P.\n\n### Have you tried this on the latest [nightly build](https://duckdb.org/docs/installation/?version=main)?\n\nI have tested with a nightly build\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] Yes, I have\nIN operator throws a Conversion Error when checking INTEGER column for 5 or more VARCHAR elements\n### What happens?\n\nWhen running an `IN` operator with an INTEGER column in LHS and 5 or more VARCHAR elements in the RHS DuckDB would throw a conversion error. If there're less than 5 VARCHAR elements in the RHS, no error is thrown\r\n\r\nThe behavior is the same no matter if `old_implicit_casting` flag is set to true or false\r\n\n\n### To Reproduce\n\n```python\r\nimport duckdb\r\n\r\nconn = duckdb.connect()\r\nconn.execute(\"CREATE OR REPLACE TABLE test (a INTEGER)\")\r\nconn.execute(\"SELECT * FROM test WHERE a IN ('a', 'b', 'c', 'd', 'e')\")\r\n```\r\nOn 0.10.0 and nightly build:\r\n```duckdb.duckdb.ConversionException: Conversion Error: Could not convert string 'a' to INT32```\r\n\r\n\r\n\n\n### OS:\n\nLinux x86_64\n\n### DuckDB Version:\n\n0.10.0\n\n### DuckDB Client:\n\nPython\n\n### Full Name:\n\nAlexandr Chebatarev\n\n### Affiliation:\n\nBloomberg L.P.\n\n### Have you tried this on the latest [nightly build](https://duckdb.org/docs/installation/?version=main)?\n\nI have tested with a nightly build\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] Yes, I have\n",
  "hints_text": "\n",
  "created_at": "2024-03-11T13:29:25Z"
}