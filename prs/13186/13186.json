{
  "repo": "duckdb/duckdb",
  "pull_number": 13186,
  "instance_id": "duckdb__duckdb-13186",
  "issue_numbers": [
    "13128"
  ],
  "base_commit": "8858700d2a80bbff42757cda645cc9cc7b936043",
  "patch": "diff --git a/src/include/duckdb.h b/src/include/duckdb.h\nindex 4e315b56f43a..a3683f51e0d8 100644\n--- a/src/include/duckdb.h\n+++ b/src/include/duckdb.h\n@@ -2396,6 +2396,14 @@ Sets the NULL handling of the scalar function to SPECIAL_HANDLING.\n */\n DUCKDB_API void duckdb_scalar_function_set_special_handling(duckdb_scalar_function scalar_function);\n \n+/*!\n+Sets the Function Stability of the scalar function to VOLATILE, indicating the function should be re-run for every row.\n+This limits optimization that can be performed for the function.\n+\n+* scalar_function: The scalar function\n+*/\n+DUCKDB_API void duckdb_scalar_function_set_volatile(duckdb_scalar_function function);\n+\n /*!\n Adds a parameter to the scalar function.\n \ndiff --git a/src/main/capi/scalar_function-c.cpp b/src/main/capi/scalar_function-c.cpp\nindex a38b4f310b94..dca7d8f17edf 100644\n--- a/src/main/capi/scalar_function-c.cpp\n+++ b/src/main/capi/scalar_function-c.cpp\n@@ -113,6 +113,14 @@ void duckdb_scalar_function_set_special_handling(duckdb_scalar_function function\n \tscalar_function.null_handling = duckdb::FunctionNullHandling::SPECIAL_HANDLING;\n }\n \n+void duckdb_scalar_function_set_volatile(duckdb_scalar_function function) {\n+\tif (!function) {\n+\t\treturn;\n+\t}\n+\tauto &scalar_function = GetCScalarFunction(function);\n+\tscalar_function.stability = duckdb::FunctionStability::VOLATILE;\n+}\n+\n void duckdb_scalar_function_add_parameter(duckdb_scalar_function function, duckdb_logical_type type) {\n \tif (!function || !type) {\n \t\treturn;\n",
  "test_patch": "diff --git a/test/api/capi/capi_scalar_functions.cpp b/test/api/capi/capi_scalar_functions.cpp\nindex 079cf32365f7..dc1b704c97dd 100644\n--- a/test/api/capi/capi_scalar_functions.cpp\n+++ b/test/api/capi/capi_scalar_functions.cpp\n@@ -296,6 +296,9 @@ static void CAPIRegisterANYFun(duckdb_connection connection, const char *name, d\n \n \t// Set special null handling.\n \tduckdb_scalar_function_set_special_handling(function);\n+\tduckdb_scalar_function_set_volatile(function);\n+\tduckdb_scalar_function_set_special_handling(nullptr);\n+\tduckdb_scalar_function_set_volatile(nullptr);\n \n \t// set the return type uto bigint\n \tauto return_type = duckdb_create_logical_type(DUCKDB_TYPE_UBIGINT);\n",
  "problem_statement": "Scalar function without input parameters\n### What happens?\n\nWhen I register a scalar function without any parameters, the chunk that I get in the callback has size 1 no matter how many rows there are in the table.\n\n### To Reproduce\n\n```c\r\nint main()\r\n{\r\n\tduckdb_database db;\r\n\tduckdb_connection con;\r\n\tduckdb_state state;\r\n\tduckdb_result result;\r\n\tduckdb_prepared_statement preparedStatement;\r\n\r\n\tduckdb_open(NULL, &db);\r\n\tduckdb_connect(db, &con);\r\n\r\n\tstd::cout << duckdb_library_version();\r\n\tstate = duckdb_query(con, \"CREATE TABLE big_table_1 AS SELECT (greatest(random(), 0.1) * 1000)::BIGINT i FROM range(1000) t(i);\", &result);\r\n\r\n\tauto scalar_function = duckdb_create_scalar_function();\r\n\tduckdb_scalar_function_set_name(scalar_function, \"my_random\");\r\n\r\n\t//duckdb_scalar_function_add_parameter(scalar_function, duckdb_create_logical_type(DUCKDB_TYPE_BIGINT));\r\n\r\n\tduckdb_scalar_function_set_return_type(scalar_function, duckdb_create_logical_type(DUCKDB_TYPE_INTEGER));\r\n\tduckdb_scalar_function_set_function(scalar_function, my_random);\r\n\r\n\tstate = duckdb_register_scalar_function(con, scalar_function);\r\n\r\n\tstate = duckdb_query(con, \"select my_random() from big_table_1;\", &result);\r\n\t//state = duckdb_query(con, \"select my_random(i) from big_table_1;\", &result);\r\n\r\n\tduckdb_disconnect(&con);\r\n\tduckdb_close(&db);\r\n}\r\n\r\nvoid my_random(duckdb_function_info, duckdb_data_chunk input, duckdb_vector output) {\r\n\tauto size = duckdb_data_chunk_get_size(input);  --Size is 1 after this call\r\n}\r\n```\r\n\r\nIf you uncomment the commented lines, `size` will be 1000 in the `my_random` calllback\n\n### OS:\n\nWindows 11 x64\n\n### DuckDB Version:\n\n1.0.1-dev3196\n\n### DuckDB Client:\n\nC Api\n\n### Full Name:\n\nGiorgi Dalakishvili\n\n### Affiliation:\n\nSpace International\n\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\n\nI have tested with a nightly build\n\n### Did you include all relevant data sets for reproducing the issue?\n\nNot applicable - the reproduction does not require a data set\n\n### Did you include all code required to reproduce the issue?\n\n- [X] Yes, I have\n\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\n\n- [X] Yes, I have\n",
  "hints_text": "",
  "created_at": "2024-07-29T10:58:15Z"
}