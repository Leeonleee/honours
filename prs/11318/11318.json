{
  "repo": "duckdb/duckdb",
  "pull_number": 11318,
  "instance_id": "duckdb__duckdb-11318",
  "issue_numbers": [
    "11283",
    "11283"
  ],
  "base_commit": "8d6803604ed3857311428ca51ff7bf876c214d63",
  "patch": "diff --git a/src/catalog/default/default_views.cpp b/src/catalog/default/default_views.cpp\nindex db3d647f00bb..0fe673e805d9 100644\n--- a/src/catalog/default/default_views.cpp\n+++ b/src/catalog/default/default_views.cpp\n@@ -50,7 +50,7 @@ static DefaultView internal_views[] = {\n     {\"information_schema\", \"schemata\", \"SELECT database_name catalog_name, schema_name, 'duckdb' schema_owner, NULL::VARCHAR default_character_set_catalog, NULL::VARCHAR default_character_set_schema, NULL::VARCHAR default_character_set_name, sql sql_path FROM duckdb_schemas()\"},\n     {\"information_schema\", \"tables\", \"SELECT database_name table_catalog, schema_name table_schema, table_name, CASE WHEN temporary THEN 'LOCAL TEMPORARY' ELSE 'BASE TABLE' END table_type, NULL::VARCHAR self_referencing_column_name, NULL::VARCHAR reference_generation, NULL::VARCHAR user_defined_type_catalog, NULL::VARCHAR user_defined_type_schema, NULL::VARCHAR user_defined_type_name, 'YES' is_insertable_into, 'NO' is_typed, CASE WHEN temporary THEN 'PRESERVE' ELSE NULL END commit_action, comment AS TABLE_COMMENT FROM duckdb_tables() UNION ALL SELECT database_name table_catalog, schema_name table_schema, view_name table_name, 'VIEW' table_type, NULL self_referencing_column_name, NULL reference_generation, NULL user_defined_type_catalog, NULL user_defined_type_schema, NULL user_defined_type_name, 'NO' is_insertable_into, 'NO' is_typed, NULL commit_action, comment AS TABLE_COMMENT FROM duckdb_views;\"},\n \t{\"information_schema\", \"character_sets\", \"SELECT NULL::VARCHAR character_set_catalog, NULL::VARCHAR character_set_schema, 'UTF8' character_set_name, 'UCS' character_repertoire, 'UTF8' form_of_use, current_database() default_collate_catalog, 'pg_catalog' default_collate_schema, 'ucs_basic' default_collate_name;\"},\n-\t{\"information_schema\", \"referential_constraints\", \"SELECT f.database_name constraint_catalog, f.schema_name constraint_schema, concat(f.source, '_', f.target, '_', f.target_column, '_fkey') constraint_name, current_database() unique_constraint_catalog, c.schema_name unique_constraint_schema, concat(c.table_name, '_', f.target_column, '_', CASE WHEN c.constraint_type == 'UNIQUE' THEN 'key' ELSE 'pkey' END) unique_constraint_name, 'NONE' match_option, 'NO ACTION' update_rule, 'NO ACTION' delete_rule FROM duckdb_constraints() c JOIN (SELECT *, name_extract['source'] as source, name_extract['target'] as target, name_extract['target_column'] as target_column FROM (SELECT *, regexp_extract(constraint_text, 'FOREIGN KEY \\\\(([a-zA-Z_0-9]+)\\\\) REFERENCES ([a-zA-Z_0-9]+)\\\\(([a-zA-Z_0-9]+)\\\\)', ['source', 'target', 'target_column']) name_extract FROM duckdb_constraints() WHERE constraint_type = 'FOREIGN KEY')) f ON name_extract['target'] = c.table_name AND (c.constraint_type = 'UNIQUE' OR c.constraint_type = 'PRIMARY KEY')\"},\n+\t{\"information_schema\", \"referential_constraints\", \"SELECT f.database_name constraint_catalog, f.schema_name constraint_schema, concat(f.table_name, '_', f.source, '_fkey') constraint_name, current_database() unique_constraint_catalog, c.schema_name unique_constraint_schema, concat(c.table_name, '_', f.target_column, '_', CASE WHEN c.constraint_type == 'UNIQUE' THEN 'key' ELSE 'pkey' END) unique_constraint_name, 'NONE' match_option, 'NO ACTION' update_rule, 'NO ACTION' delete_rule FROM duckdb_constraints() c JOIN (SELECT *, name_extract['source'] as source, name_extract['target'] as target, name_extract['target_column'] as target_column FROM (SELECT *, regexp_extract(constraint_text, 'FOREIGN KEY \\\\(([a-zA-Z_0-9]+)\\\\) REFERENCES ([a-zA-Z_0-9]+)\\\\(([a-zA-Z_0-9]+)\\\\)', ['source', 'target', 'target_column']) name_extract FROM duckdb_constraints() WHERE constraint_type = 'FOREIGN KEY')) f ON name_extract['target'] = c.table_name AND (c.constraint_type = 'UNIQUE' OR c.constraint_type = 'PRIMARY KEY')\"},\n \t{\"information_schema\", \"key_column_usage\", \"SELECT current_database() constraint_catalog, schema_name constraint_schema, concat(table_name, '_', constraint_column_names[1], CASE constraint_type WHEN 'FOREIGN KEY' THEN '_fkey' WHEN 'PRIMARY KEY' THEN '_pkey' ELSE '_key' END) constraint_name, current_database() table_catalog, schema_name table_schema, table_name, constraint_column_names[1] column_name, 1 ordinal_position, CASE constraint_type WHEN 'FOREIGN KEY' THEN 1 ELSE NULL END position_in_unique_constraint FROM duckdb_constraints() WHERE constraint_type = 'FOREIGN KEY' OR constraint_type = 'PRIMARY KEY' OR constraint_type = 'UNIQUE';\"},\n \t{\"information_schema\", \"table_constraints\", \"SELECT current_database() constraint_catalog, schema_name constraint_schema, concat(table_name, '_', CASE WHEN length(constraint_column_names) > 1 THEN NULL ELSE constraint_column_names[1] || '_' END, CASE constraint_type WHEN 'FOREIGN KEY' THEN 'fkey' WHEN 'PRIMARY KEY' THEN 'pkey' WHEN 'UNIQUE' THEN 'key' WHEN 'CHECK' THEN 'check' WHEN 'NOT NULL' THEN 'not_null'  END) constraint_name, current_database() table_catalog, schema_name table_schema, table_name, CASE constraint_type WHEN 'NOT NULL' THEN 'CHECK' ELSE constraint_type END constraint_type, 'NO' is_deferrable, 'NO' initially_deferred, 'YES' enforced, 'YES' nulls_distinct FROM duckdb_constraints() WHERE constraint_type = 'PRIMARY KEY' OR constraint_type = 'FOREIGN KEY' OR constraint_type = 'UNIQUE' OR constraint_type = 'CHECK' OR constraint_type = 'NOT NULL';\"},\n     {nullptr, nullptr, nullptr}};\n",
  "test_patch": "diff --git a/test/sql/table_function/duckdb_constraints.test b/test/sql/table_function/duckdb_constraints.test\nindex e09d8f8a5df4..1c65c3f45ad3 100644\n--- a/test/sql/table_function/duckdb_constraints.test\n+++ b/test/sql/table_function/duckdb_constraints.test\n@@ -38,8 +38,8 @@ test\t4\tCHECK\tk\n query II\n SELECT constraint_name, unique_constraint_name FROM information_schema.referential_constraints ORDER BY constraint_name\n ----\n-j_integers_i_fkey\tintegers_i_pkey\n-k_integers_i_fkey\tintegers_i_pkey\n+fk_integers_2_k_fkey\tintegers_i_pkey\n+fk_integers_j_fkey\tintegers_i_pkey\n \n query IIII\n SELECT column_name, constraint_name, table_name, position_in_unique_constraint FROM information_schema.key_column_usage ORDER BY constraint_name\ndiff --git a/test/sql/table_function/information_schema_fkey_constraint_names.test b/test/sql/table_function/information_schema_fkey_constraint_names.test\nnew file mode 100644\nindex 000000000000..c46c660baeb6\n--- /dev/null\n+++ b/test/sql/table_function/information_schema_fkey_constraint_names.test\n@@ -0,0 +1,67 @@\n+# name: test/sql/table_function/information_schema_fkey_constraint_names.test\n+# description: Test foreign key constraint names in information_schema\n+# group: [table_function]\n+\n+statement ok\n+create table t (i int primary key);\n+\n+statement ok\n+create table u (i int references t);\n+\n+query I\n+select constraint_name\n+from information_schema.table_constraints\n+where constraint_type like '%KEY'\n+order by 1\n+----\n+t_i_pkey\n+u_i_fkey\n+\n+query I\n+select constraint_name\n+from information_schema.key_column_usage\n+order by 1\n+----\n+t_i_pkey\n+u_i_fkey\n+\n+query II\n+select constraint_name, unique_constraint_name\n+from information_schema.referential_constraints;\n+----\n+u_i_fkey\tt_i_pkey\n+\n+statement ok\n+drop table u\n+\n+statement ok\n+drop table t\n+\n+statement ok\n+create table target_tbl (target_col int primary key);\n+\n+statement ok\n+create table source_tbl(source_col int references target_tbl(target_col));\n+\n+query I\n+select constraint_name\n+from information_schema.table_constraints\n+where constraint_type like '%KEY'\n+order by 1\n+----\n+source_tbl_source_col_fkey\n+target_tbl_target_col_pkey\n+\n+query I\n+select constraint_name\n+from information_schema.key_column_usage\n+order by 1\n+----\n+source_tbl_source_col_fkey\n+target_tbl_target_col_pkey\n+\n+query II\n+select constraint_name, unique_constraint_name\n+from information_schema.referential_constraints;\n+----\n+source_tbl_source_col_fkey\ttarget_tbl_target_col_pkey\n",
  "problem_statement": "INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS reports wrong CONSTRAINT_NAME\n### What happens?\n\nThe `INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.CONSTRAINT_NAME` column contains wrong names\n\n### To Reproduce\n\n```sql\r\ncreate table t (i int primary key);\r\ncreate table u (i int references t);\r\n  \r\nselect constraint_name \r\nfrom information_schema.table_constraints\r\nwhere constraint_type like '%KEY';\r\n```\r\n\r\nThis shows:\r\n\r\n```\r\n|constraint_name|\r\n|---------------|\r\n|t_i_pkey       |\r\n|u_i_fkey       |\r\n```\r\n\r\nAnd:\r\n\r\n```sql\r\nselect constraint_name \r\nfrom information_schema.key_column_usage;\r\n```\r\n\r\nProduces:\r\n\r\n```\r\n|constraint_name|\r\n|---------------|\r\n|t_i_pkey       |\r\n|u_i_fkey       |\r\n```\r\n\r\nBut:\r\n\r\n```sql\r\nselect constraint_name, unique_constraint_name \r\nfrom information_schema.referential_constraints;\r\n```\r\n\r\nProduces a wrong foreign key name:\r\n\r\n```\r\n|constraint_name|unique_constraint_name|\r\n|---------------|----------------------|\r\n|i_t_i_fkey     |t_i_pkey              |\r\n```\r\n\r\nNote, I couldn't test the latest snapshots because of:\r\n\r\n- https://github.com/duckdb/duckdb/issues/11244\n\n### OS:\n\nMicrosoft Windows [Version 10.0.22631.3296]\n\n### DuckDB Version:\n\n0.10.0\n\n### DuckDB Client:\n\nJDBC\n\n### Full Name:\n\nLukas Eder\n\n### Affiliation:\n\nData Geekery\n\n### Have you tried this on the latest [nightly build](https://duckdb.org/docs/installation/?version=main)?\n\nI have tested with a release build (and could not test with a nightly build)\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] Yes, I have\nINFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS reports wrong CONSTRAINT_NAME\n### What happens?\n\nThe `INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.CONSTRAINT_NAME` column contains wrong names\n\n### To Reproduce\n\n```sql\r\ncreate table t (i int primary key);\r\ncreate table u (i int references t);\r\n  \r\nselect constraint_name \r\nfrom information_schema.table_constraints\r\nwhere constraint_type like '%KEY';\r\n```\r\n\r\nThis shows:\r\n\r\n```\r\n|constraint_name|\r\n|---------------|\r\n|t_i_pkey       |\r\n|u_i_fkey       |\r\n```\r\n\r\nAnd:\r\n\r\n```sql\r\nselect constraint_name \r\nfrom information_schema.key_column_usage;\r\n```\r\n\r\nProduces:\r\n\r\n```\r\n|constraint_name|\r\n|---------------|\r\n|t_i_pkey       |\r\n|u_i_fkey       |\r\n```\r\n\r\nBut:\r\n\r\n```sql\r\nselect constraint_name, unique_constraint_name \r\nfrom information_schema.referential_constraints;\r\n```\r\n\r\nProduces a wrong foreign key name:\r\n\r\n```\r\n|constraint_name|unique_constraint_name|\r\n|---------------|----------------------|\r\n|i_t_i_fkey     |t_i_pkey              |\r\n```\r\n\r\nNote, I couldn't test the latest snapshots because of:\r\n\r\n- https://github.com/duckdb/duckdb/issues/11244\n\n### OS:\n\nMicrosoft Windows [Version 10.0.22631.3296]\n\n### DuckDB Version:\n\n0.10.0\n\n### DuckDB Client:\n\nJDBC\n\n### Full Name:\n\nLukas Eder\n\n### Affiliation:\n\nData Geekery\n\n### Have you tried this on the latest [nightly build](https://duckdb.org/docs/installation/?version=main)?\n\nI have tested with a release build (and could not test with a nightly build)\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] Yes, I have\n",
  "hints_text": "\n",
  "created_at": "2024-03-22T18:37:11Z"
}