{
  "repo": "duckdb/duckdb",
  "pull_number": 8548,
  "instance_id": "duckdb__duckdb-8548",
  "issue_numbers": [
    "8547"
  ],
  "base_commit": "a8ce02cc2e740d8973d26ccdb77d0068c69c9124",
  "patch": "diff --git a/tools/rpkg/R/Result.R b/tools/rpkg/R/Result.R\nindex c1b53898a7d2..4b5756af9b6a 100644\n--- a/tools/rpkg/R/Result.R\n+++ b/tools/rpkg/R/Result.R\n@@ -112,8 +112,8 @@ tz_convert <- function(x, timezone) {\n }\n \n tz_force <- function(x, timezone) {\n-  # convert to character, stripping the timezone\n-  ct <- as.character(x, usetz = FALSE)\n+  # convert to character in ISO format, stripping the timezone\n+  ct <- format(x, format = \"%Y-%m-%d %H:%M:%OS\", usetz = FALSE)\n   # recreate the POSIXct with specified timezone\n   as.POSIXct(ct, tz = timezone)\n }\n",
  "test_patch": "diff --git a/tools/rpkg/tests/testthat/test_timezone.R b/tools/rpkg/tests/testthat/test_timezone.R\nindex 179d1620f3e9..345ab3d576b3 100644\n--- a/tools/rpkg/tests/testthat/test_timezone.R\n+++ b/tools/rpkg/tests/testthat/test_timezone.R\n@@ -105,3 +105,23 @@ test_that(\"dbConnect fails when tz_out_convert is misspecified\", {\n \n   expect_error(dbConnect(drv, tz_out_convert = \"nope\"))\n })\n+\n+test_that(\"timezone_out and tz_out_convert = force with midnight times (#8547)\", {\n+  con <- dbConnect(duckdb(), timezone_out = \"Etc/GMT+8\", tz_out_convert = \"force\")\n+  on.exit(dbDisconnect(con, shutdown = TRUE))\n+\n+  dbExecute(\n+    con,\n+    \"CREATE TABLE IF NOT EXISTS test( DATE_TIME TIMESTAMP );\"\n+  )\n+\n+  dbExecute(\n+    con,\n+    \"INSERT INTO test(DATE_TIME) VALUES ('1975-01-01 00:00:00'),('1975-01-01 15:27:00');\"\n+  )\n+\n+  res <- dbGetQuery(con, \"SELECT * FROM test;\")\n+  expect_equal(res[[1]],\n+               as.POSIXct(c(\"1975-01-01 00:00:00\", \"1975-01-01 15:27:00\"),\n+                          tz = \"Etc/GMT+8\"))\n+})\n",
  "problem_statement": "[R] In R 4.3, `tz_out_convert` results in loss of time component of TIMESTAMPS when some records have a time of `00:00:00`\n### What happens?\r\n\r\nThe `timezone_out` and `tz_out_convert` arguments in `dbConnect` allow retrieval of data from the database into R in the users desired timezone. In R 4.3, setting `timezone_out` to a non-UTC timezone, and `tz_out_convert = \"force\"` results in all values in a TIMESTAMP column being returned to the user with the time component stripped off, if any of the records have a time component of `00:00:00` (i.e., midnight).\r\n\r\n### To Reproduce\r\n\r\n``` r\r\nlibrary(duckdb)\r\n#> Loading required package: DBI\r\n\r\ncon <- dbConnect(duckdb(), timezone_out = \"Etc/GMT+8\", tz_out_convert = \"force\")\r\n\r\ndbExecute(\r\n  con,\r\n  \"CREATE TABLE IF NOT EXISTS test( DATE_TIME TIMESTAMP );\"\r\n)\r\n#> [1] 0\r\n\r\ndbExecute(\r\n  con,\r\n  \"INSERT INTO test(DATE_TIME) VALUES ('1975-01-01 00:00:00'),('1975-01-01 15:27:00');\"\r\n)\r\n#> [1] 2\r\n\r\ndbGetQuery(con, \"SELECT * FROM test;\")\r\n#>    DATE_TIME\r\n#> 1 1975-01-01\r\n#> 2 1975-01-01\r\n```\r\n\r\nI've tracked this down to a change (possible bug?) in R 4.3 where the behaviour of `as.character.POSIXt` has changed since R 4.2. This is used [here](https://github.com/duckdb/duckdb/blob/a8ce02cc2e740d8973d26ccdb77d0068c69c9124/tools/rpkg/R/Result.R#L114-L119) to convert/force a timezone.\r\n\r\nIn R 4.2.3:\r\n\r\n```r\r\n(t <- as.POSIXct(c(\"1975-01-01 00:00:00\", \"1975-01-01 15:27:00\")))\r\n#> [1] \"1975-01-01 00:00:00 PST\" \"1975-01-01 15:27:00 PST\"\r\n(tc <- as.character(t))\r\n#> [1] \"1975-01-01 00:00:00\" \"1975-01-01 15:27:00\"\r\nas.POSIXct(tc)\r\n#> [1] \"1975-01-01 00:00:00 PST\" \"1975-01-01 15:27:00 PST\"\r\n```\r\n\r\nIn R 4.3.1:\r\n```r\r\n(t <- as.POSIXct(c(\"1975-01-01 00:00:00\", \"1975-01-01 15:27:00\")))\r\n#> [1] \"1975-01-01 00:00:00 PST\" \"1975-01-01 15:27:00 PST\"\r\n(tc <- as.character(t))\r\n#> [1] \"1975-01-01\"          \"1975-01-01 15:27:00\"\r\nas.POSIXct(tc)\r\n#> [1] \"1975-01-01 PST\" \"1975-01-01 PST\"\r\n```\r\n\r\nI've written a (currently failing) test for this and a potential fix (using `format()` instead of `as.character()` which I will submit as a PR for review.\r\n\r\n### OS:\r\n\r\nmacOS Ventura, aarch64 (M1 Pro)\r\n\r\n### DuckDB Version:\r\n\r\n0.8.1\r\n\r\n### DuckDB Client:\r\n\r\nR\r\n\r\n### Full Name:\r\n\r\nAndy Teucher\r\n\r\n### Affiliation:\r\n\r\nindependent\r\n\r\n### Have you tried this on the latest `master` branch?\r\n\r\nI have tested with a master build\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] Yes, I have\n",
  "hints_text": "",
  "created_at": "2023-08-11T20:31:51Z"
}