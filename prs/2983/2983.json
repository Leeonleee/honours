{
  "repo": "duckdb/duckdb",
  "pull_number": 2983,
  "instance_id": "duckdb__duckdb-2983",
  "issue_numbers": [
    "2975",
    "2975"
  ],
  "base_commit": "686499d78aced1c3357b7825379b929a7cf834bd",
  "patch": "diff --git a/src/parser/transform/expression/transform_constant.cpp b/src/parser/transform/expression/transform_constant.cpp\nindex 6b8b407740b1..be3c73329f4f 100644\n--- a/src/parser/transform/expression/transform_constant.cpp\n+++ b/src/parser/transform/expression/transform_constant.cpp\n@@ -45,7 +45,9 @@ unique_ptr<ConstantExpression> Transformer::TransformValue(duckdb_libpgquery::PG\n \t\t\t\treturn make_unique<ConstantExpression>(Value::HUGEINT(hugeint_value));\n \t\t\t}\n \t\t}\n-\t\tif (try_cast_as_decimal && decimal_position >= 0 && str_val.GetSize() < Decimal::MAX_WIDTH_DECIMAL + 2) {\n+\t\tidx_t decimal_offset = val.val.str[0] == '-' ? 3 : 2;\n+\t\tif (try_cast_as_decimal && decimal_position >= 0 &&\n+\t\t    str_val.GetSize() < Decimal::MAX_WIDTH_DECIMAL + decimal_offset) {\n \t\t\t// figure out the width/scale based on the decimal position\n \t\t\tauto width = uint8_t(str_val.GetSize() - 1);\n \t\t\tauto scale = uint8_t(width - decimal_position);\n",
  "test_patch": "diff --git a/test/sql/types/decimal/test_decimal_2975.test b/test/sql/types/decimal/test_decimal_2975.test\nnew file mode 100644\nindex 000000000000..dbb2816f8179\n--- /dev/null\n+++ b/test/sql/types/decimal/test_decimal_2975.test\n@@ -0,0 +1,21 @@\n+# name: test/sql/types/decimal/test_decimal_2975.test\n+# description: Test #2975: Insert with large decimal fails\n+# group: [decimal]\n+\n+statement ok\n+PRAGMA enable_verification\n+\n+statement ok\n+create table q (big decimal (38,10))\n+\n+statement ok\n+insert into q (big ) values (9999999999999999899999999999.9999999999);\n+\n+statement ok\n+insert into q (big ) values (-9999999999999999899999999999.9999999999);\n+\n+query I\n+SELECT * FROM q\n+----\n+9999999999999999899999999999.9999999999\n+-9999999999999999899999999999.9999999999\n",
  "problem_statement": "Insert with large decimal fails\n#### What happens?\r\nAn insert statement with a decimal close to the minimum fails.\r\n\r\n#### To Reproduce\r\nv0.3.2-dev1136 0a6525655\r\nEnter \".help\" for usage hints.\r\nConnected to a transient in-memory database.\r\nUse \".open FILENAME\" to reopen on a persistent database.\r\nD create table q  (big decimal (38,10));\r\nD insert into q  (big ) values  (-9999999999999999899999999999.9999999999);\r\nError: Conversion Error: Could not cast value -99999999999999997748809823456034029568.000000 to DECIMAL(38,10)\r\n\r\nBefore you start counting: Yes these are 38 numbers in the insert statement.\r\n\r\nIt appears that the number was cast to a double as the error message comes from cast_operators.cpp line 1971. \r\n\r\n#### Environment (please complete the following information):\r\n - OS: Linux\r\n - DuckDB Client: CLI, Java, WASM\r\n\r\n#### Before Submitting\r\n- [x] **Have you tried this on the latest `master` branch?**\r\n- [x] **Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?**\r\n\nInsert with large decimal fails\n#### What happens?\r\nAn insert statement with a decimal close to the minimum fails.\r\n\r\n#### To Reproduce\r\nv0.3.2-dev1136 0a6525655\r\nEnter \".help\" for usage hints.\r\nConnected to a transient in-memory database.\r\nUse \".open FILENAME\" to reopen on a persistent database.\r\nD create table q  (big decimal (38,10));\r\nD insert into q  (big ) values  (-9999999999999999899999999999.9999999999);\r\nError: Conversion Error: Could not cast value -99999999999999997748809823456034029568.000000 to DECIMAL(38,10)\r\n\r\nBefore you start counting: Yes these are 38 numbers in the insert statement.\r\n\r\nIt appears that the number was cast to a double as the error message comes from cast_operators.cpp line 1971. \r\n\r\n#### Environment (please complete the following information):\r\n - OS: Linux\r\n - DuckDB Client: CLI, Java, WASM\r\n\r\n#### Before Submitting\r\n- [x] **Have you tried this on the latest `master` branch?**\r\n- [x] **Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?**\r\n\n",
  "hints_text": "\n",
  "created_at": "2022-01-25T00:13:18Z"
}