{
  "repo": "duckdb/duckdb",
  "pull_number": 6221,
  "instance_id": "duckdb__duckdb-6221",
  "issue_numbers": [
    "6184",
    "6184"
  ],
  "base_commit": "fc11c159caf616ee0ab86efe900be1c287aeac0a",
  "patch": "diff --git a/src/optimizer/remove_unused_columns.cpp b/src/optimizer/remove_unused_columns.cpp\nindex e53db87f27e3..b30326f1da98 100644\n--- a/src/optimizer/remove_unused_columns.cpp\n+++ b/src/optimizer/remove_unused_columns.cpp\n@@ -281,6 +281,15 @@ void RemoveUnusedColumns::VisitOperator(LogicalOperator &op) {\n \t\t\t}\n \t\t}\n \t\treturn;\n+\tcase LogicalOperatorType::LOGICAL_FILTER: {\n+\t\tauto &filter = (LogicalFilter &)op;\n+\t\tif (!filter.projection_map.empty()) {\n+\t\t\t// if we have any entries in the filter projection map don't prune any columns\n+\t\t\t// FIXME: we can do something more clever here\n+\t\t\teverything_referenced = true;\n+\t\t}\n+\t\tbreak;\n+\t}\n \tcase LogicalOperatorType::LOGICAL_DISTINCT: {\n \t\t// distinct, all projected columns are used for the DISTINCT computation\n \t\t// mark all columns as used and continue to the children\n",
  "test_patch": "diff --git a/test/sql/subquery/scalar/test_issue_6184.test b/test/sql/subquery/scalar/test_issue_6184.test\nnew file mode 100644\nindex 000000000000..918c09e29c1d\n--- /dev/null\n+++ b/test/sql/subquery/scalar/test_issue_6184.test\n@@ -0,0 +1,87 @@\n+# name: test/sql/subquery/scalar/test_issue_6184.test\n+# description: Issue 6184: INTERNAL Error: Invalid PhysicalType for GetTypeIdSize for certain queries\n+# group: [scalar]\n+\n+statement ok\n+PRAGMA enable_verification\n+\n+statement ok\n+CREATE TABLE t1(fuel_type VARCHAR, location_country VARCHAR);\n+\n+statement ok\n+INSERT INTO t1 VALUES('natural_gas', 'US');\n+\n+statement ok\n+CREATE TABLE t2(__input_row_id BIGINT, \"__input.fuel\" VARCHAR);\n+\n+statement ok\n+INSERT INTO t2 VALUES(1, 'natural_gas');\n+\n+query I\n+SELECT (\n+SELECT NULL\n+\tFROM\n+\t(\n+\t\tSELECT  fuel_type, location_country\n+\t\tFROM \"t1\"\n+\t\tWHERE \"fuel_type\" IS NOT DISTINCT FROM \"__input.fuel\"\n+\t\tLIMIT 1\n+\t) t1)\n+FROM t2 AS __p;\n+----\n+NULL\n+\n+require json\n+\n+statement ok\n+WITH __activity_data AS\n+(\n+\tSELECT  *\n+\tFROM\n+\t(\n+\t\tVALUES ( 'natural_gas', 'US', 'PGE', 'CA', 'SF', json('{}'))\n+\t) AS t(\"fuel\", \"country\", \"grid\", \"state\", \"city\", tags)\n+), \"fuel_kgco2e_per_mmbtu\" AS\n+(\n+\tSELECT  *\n+\t       ,ROW_NUMBER() over () AS row_id\n+\tFROM\n+\t( VALUES ('natural_gas', 'US', NULL, 'CA', 'SF', 2),\n+\t) AS t( fuel_type, location_country, location_grid, location_state, location_city, kgco2e_per_mmbtu)\n+), __input AS\n+(\n+\tSELECT  *\n+\t       ,ROW_NUMBER() OVER () AS __input_row_id\n+\tFROM \"__activity_data\"\n+), \"fuel_kgco2e_per_mmbtu__1\" AS\n+(\n+\tSELECT  *\n+\t       ,ROW_NUMBER() OVER () AS __row_id\n+\tFROM \"fuel_kgco2e_per_mmbtu\"\n+), __stage0 AS\n+(\n+\tSELECT  __input_row_id\n+\t       ,fuel    AS \"__input.fuel\"\n+\t       ,country AS \"__input.country\"\n+\t       ,grid    AS \"__input.grid\"\n+\t       ,state   AS \"__input.state\"\n+\t       ,city    AS \"__input.city\"\n+\tFROM __input\n+)\n+SELECT  __p.*\n+       ,(\n+SELECT  { 'kgco2e_per_mmbtu': FIRST(\"kgco2e_per_mmbtu\")\n+       ,__row_id: FIRST(__row_id)\n+       ,__candidates: LIST(__row_id) }\n+FROM\n+(\n+\tSELECT  *\n+\tFROM \"fuel_kgco2e_per_mmbtu__1\"\n+\tWHERE \"fuel_type\" IS NOT DISTINCT\n+\tFROM \"__input.fuel\"\n+\tORDER BY \"location_country\" IS NOT NULL DESC, \"location_grid\" IS NOT NULL DESC, \"location_state\" IS NOT NULL DESC, \"location_city\" IS NOT NULL DESC\n+\tLIMIT 1\n+)\n+GROUP BY  TRUE )            AS __ref1\n+         ,CAST(1 AS DOUBLE) AS \"__p.__functional_unit__\"\n+FROM __stage0 AS __p;\n",
  "problem_statement": "INTERNAL Error: Invalid PhysicalType for GetTypeIdSize for certain queries\n### What happens?\r\n\r\nWhen executing a particularly constructed query, the following error comes up: INTERNAL Error: Invalid PhysicalType for GetTypeIdSize\r\n\r\n\r\n\r\n### To Reproduce\r\n\r\n\r\nThis query reliably reproduces for me.\r\n\r\n```sql\r\nWITH __activity_data AS (\r\n  SELECT *\r\n  FROM ( VALUES ( 'natural_gas', 'US', 'PGE', 'CA', 'SF', json('{}'))) AS t(\"fuel\", \"country\", \"grid\", \"state\", \"city\", tags)\r\n),\r\n\"fuel_kgco2e_per_mmbtu\" AS (\r\n  SELECT *,\r\n    ROW_NUMBER() over () AS row_id\r\n  FROM (\r\n      VALUES ('natural_gas', 'US', NULL, 'CA', 'SF', 2),\r\n    ) AS t( fuel_type, location_country, location_grid, location_state, location_city, kgco2e_per_mmbtu)\r\n),\r\n__input AS (\r\n  SELECT *,\r\n    ROW_NUMBER() OVER () as __input_row_id\r\n  FROM \"__activity_data\"\r\n),\r\n\"fuel_kgco2e_per_mmbtu__1\" AS (\r\n  SELECT *,\r\n    ROW_NUMBER() OVER () AS __row_id\r\n  FROM \"fuel_kgco2e_per_mmbtu\"\r\n),\r\n__stage0 AS (\r\n  SELECT __input_row_id,\r\n    fuel AS \"__input.fuel\",\r\n    country AS \"__input.country\",\r\n    grid AS \"__input.grid\",\r\n    state AS \"__input.state\",\r\n    city AS \"__input.city\"\r\n  FROM __input\r\n)\r\nSELECT __p.*,\r\n  (\r\n    SELECT { 'kgco2e_per_mmbtu': FIRST(\"kgco2e_per_mmbtu\"),\r\n      __row_id: FIRST(__row_id),\r\n      __candidates: LIST(__row_id) }\r\n    FROM (\r\n        SELECT *\r\n        FROM \"fuel_kgco2e_per_mmbtu__1\"\r\n        WHERE \"fuel_type\" IS NOT DISTINCT\r\n        FROM \"__input.fuel\"\r\n        ORDER BY \"location_country\" IS NOT NULL DESC,\r\n          \"location_grid\" IS NOT NULL DESC,\r\n          \"location_state\" IS NOT NULL DESC,\r\n          \"location_city\" IS NOT NULL DESC\r\n        LIMIT 1\r\n      )\r\n    GROUP BY TRUE\r\n  ) AS __ref1,\r\n  CAST(1 AS DOUBLE) AS \"__p.__functional_unit__\"\r\nFROM __stage0 AS __p;\r\n```\r\n\r\n### OS:\r\n\r\nMac\r\n\r\n### DuckDB Version:\r\n\r\nv0.6.1 919cad22e8\r\n\r\n### DuckDB Client:\r\n\r\ncommand line\r\n\r\n### Full Name:\r\n\r\nKen Miller\r\n\r\n### Affiliation:\r\n\r\nWatershed\r\n\r\n### Have you tried this on the latest `master` branch?\r\n\r\n- [X] I agree\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] I agree\nINTERNAL Error: Invalid PhysicalType for GetTypeIdSize for certain queries\n### What happens?\r\n\r\nWhen executing a particularly constructed query, the following error comes up: INTERNAL Error: Invalid PhysicalType for GetTypeIdSize\r\n\r\n\r\n\r\n### To Reproduce\r\n\r\n\r\nThis query reliably reproduces for me.\r\n\r\n```sql\r\nWITH __activity_data AS (\r\n  SELECT *\r\n  FROM ( VALUES ( 'natural_gas', 'US', 'PGE', 'CA', 'SF', json('{}'))) AS t(\"fuel\", \"country\", \"grid\", \"state\", \"city\", tags)\r\n),\r\n\"fuel_kgco2e_per_mmbtu\" AS (\r\n  SELECT *,\r\n    ROW_NUMBER() over () AS row_id\r\n  FROM (\r\n      VALUES ('natural_gas', 'US', NULL, 'CA', 'SF', 2),\r\n    ) AS t( fuel_type, location_country, location_grid, location_state, location_city, kgco2e_per_mmbtu)\r\n),\r\n__input AS (\r\n  SELECT *,\r\n    ROW_NUMBER() OVER () as __input_row_id\r\n  FROM \"__activity_data\"\r\n),\r\n\"fuel_kgco2e_per_mmbtu__1\" AS (\r\n  SELECT *,\r\n    ROW_NUMBER() OVER () AS __row_id\r\n  FROM \"fuel_kgco2e_per_mmbtu\"\r\n),\r\n__stage0 AS (\r\n  SELECT __input_row_id,\r\n    fuel AS \"__input.fuel\",\r\n    country AS \"__input.country\",\r\n    grid AS \"__input.grid\",\r\n    state AS \"__input.state\",\r\n    city AS \"__input.city\"\r\n  FROM __input\r\n)\r\nSELECT __p.*,\r\n  (\r\n    SELECT { 'kgco2e_per_mmbtu': FIRST(\"kgco2e_per_mmbtu\"),\r\n      __row_id: FIRST(__row_id),\r\n      __candidates: LIST(__row_id) }\r\n    FROM (\r\n        SELECT *\r\n        FROM \"fuel_kgco2e_per_mmbtu__1\"\r\n        WHERE \"fuel_type\" IS NOT DISTINCT\r\n        FROM \"__input.fuel\"\r\n        ORDER BY \"location_country\" IS NOT NULL DESC,\r\n          \"location_grid\" IS NOT NULL DESC,\r\n          \"location_state\" IS NOT NULL DESC,\r\n          \"location_city\" IS NOT NULL DESC\r\n        LIMIT 1\r\n      )\r\n    GROUP BY TRUE\r\n  ) AS __ref1,\r\n  CAST(1 AS DOUBLE) AS \"__p.__functional_unit__\"\r\nFROM __stage0 AS __p;\r\n```\r\n\r\n### OS:\r\n\r\nMac\r\n\r\n### DuckDB Version:\r\n\r\nv0.6.1 919cad22e8\r\n\r\n### DuckDB Client:\r\n\r\ncommand line\r\n\r\n### Full Name:\r\n\r\nKen Miller\r\n\r\n### Affiliation:\r\n\r\nWatershed\r\n\r\n### Have you tried this on the latest `master` branch?\r\n\r\n- [X] I agree\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] I agree\n",
  "hints_text": "Thanks, can you please try to make this reproducible?\nActually, as ginormous as this example is, it does not need anything else, I can reproduce the error running this\r\n(ran it through a formatter)\r\n```sql\r\nrequire json\r\n\r\nstatement ok\r\nWITH __activity_data AS\r\n(\r\n\tSELECT  *\r\n\tFROM\r\n\t(\r\n\t\tVALUES ( 'natural_gas', 'US', 'PGE', 'CA', 'SF', json('{}'))\r\n\t) AS t(\"fuel\", \"country\", \"grid\", \"state\", \"city\", tags)\r\n), \"fuel_kgco2e_per_mmbtu\" AS\r\n(\r\n\tSELECT  *\r\n\t       ,ROW_NUMBER() over () AS row_id\r\n\tFROM\r\n\t( VALUES ('natural_gas', 'US', NULL, 'CA', 'SF', 2),\r\n\t) AS t( fuel_type, location_country, location_grid, location_state, location_city, kgco2e_per_mmbtu)\r\n), __input AS\r\n(\r\n\tSELECT  *\r\n\t       ,ROW_NUMBER() OVER () AS __input_row_id\r\n\tFROM \"__activity_data\"\r\n), \"fuel_kgco2e_per_mmbtu__1\" AS\r\n(\r\n\tSELECT  *\r\n\t       ,ROW_NUMBER() OVER () AS __row_id\r\n\tFROM \"fuel_kgco2e_per_mmbtu\"\r\n), __stage0 AS\r\n(\r\n\tSELECT  __input_row_id\r\n\t       ,fuel    AS \"__input.fuel\"\r\n\t       ,country AS \"__input.country\"\r\n\t       ,grid    AS \"__input.grid\"\r\n\t       ,state   AS \"__input.state\"\r\n\t       ,city    AS \"__input.city\"\r\n\tFROM __input\r\n)\r\nSELECT  __p.*\r\n       ,(\r\nSELECT  { 'kgco2e_per_mmbtu': FIRST(\"kgco2e_per_mmbtu\")\r\n       ,__row_id: FIRST(__row_id)\r\n       ,__candidates: LIST(__row_id) }\r\nFROM\r\n(\r\n\tSELECT  *\r\n\tFROM \"fuel_kgco2e_per_mmbtu__1\"\r\n\tWHERE \"fuel_type\" IS NOT DISTINCT\r\n\tFROM \"__input.fuel\"\r\n\tORDER BY \"location_country\" IS NOT NULL DESC, \"location_grid\" IS NOT NULL DESC, \"location_state\" IS NOT NULL DESC, \"location_city\" IS NOT NULL DESC\r\n\tLIMIT 1\r\n)\r\nGROUP BY  TRUE )            AS __ref1\r\n         ,CAST(1 AS DOUBLE) AS \"__p.__functional_unit__\"\r\nFROM __stage0 AS __p;\r\n\r\n```\nAlso, it's an optimizer problem\r\n\r\nwith\r\n```sql\r\nstatement ok\r\npragma disable_optimizer;\r\n```\r\n\r\nit completes just fine\nSorry for the ginormous sql; tried to reduce as much as possible but the error went away if I trimmed it any more.  \nWe are blocked on this since disabling optimizer is a no-go.  (Unless you can suggest a different construction that avoids this issue?)\nSome more issue reduction - it is related to the remove unused columns optimizer. This is as small as I could make the query:\r\n```sql\r\n-- PRAGMA disabled_optimizers='unused_columns';\r\nCREATE TABLE fuel_kgco2e_per_mmbtu__1(fuel_type VARCHAR, location_country VARCHAR);\r\nINSERT INTO fuel_kgco2e_per_mmbtu__1 VALUES('natural_gas', 'US');\r\nCREATE TABLE __stage0(__input_row_id BIGINT, \"__input.fuel\" VARCHAR);\r\nINSERT INTO __stage0 VALUES(1, 'natural_gas');\r\nSELECT  (\r\nSELECT  NULL\r\n\tFROM\r\n\t(\r\n\t\tSELECT  fuel_type, location_country\r\n\t\tFROM \"fuel_kgco2e_per_mmbtu__1\"\r\n\t\tWHERE \"fuel_type\" IS NOT DISTINCT FROM \"__input.fuel\"\r\n\t\tLIMIT 1\r\n\t))\r\nFROM __stage0 AS __p;\r\n```\r\n\r\nWill investigate more.\nThanks, can you please try to make this reproducible?\nActually, as ginormous as this example is, it does not need anything else, I can reproduce the error running this\r\n(ran it through a formatter)\r\n```sql\r\nrequire json\r\n\r\nstatement ok\r\nWITH __activity_data AS\r\n(\r\n\tSELECT  *\r\n\tFROM\r\n\t(\r\n\t\tVALUES ( 'natural_gas', 'US', 'PGE', 'CA', 'SF', json('{}'))\r\n\t) AS t(\"fuel\", \"country\", \"grid\", \"state\", \"city\", tags)\r\n), \"fuel_kgco2e_per_mmbtu\" AS\r\n(\r\n\tSELECT  *\r\n\t       ,ROW_NUMBER() over () AS row_id\r\n\tFROM\r\n\t( VALUES ('natural_gas', 'US', NULL, 'CA', 'SF', 2),\r\n\t) AS t( fuel_type, location_country, location_grid, location_state, location_city, kgco2e_per_mmbtu)\r\n), __input AS\r\n(\r\n\tSELECT  *\r\n\t       ,ROW_NUMBER() OVER () AS __input_row_id\r\n\tFROM \"__activity_data\"\r\n), \"fuel_kgco2e_per_mmbtu__1\" AS\r\n(\r\n\tSELECT  *\r\n\t       ,ROW_NUMBER() OVER () AS __row_id\r\n\tFROM \"fuel_kgco2e_per_mmbtu\"\r\n), __stage0 AS\r\n(\r\n\tSELECT  __input_row_id\r\n\t       ,fuel    AS \"__input.fuel\"\r\n\t       ,country AS \"__input.country\"\r\n\t       ,grid    AS \"__input.grid\"\r\n\t       ,state   AS \"__input.state\"\r\n\t       ,city    AS \"__input.city\"\r\n\tFROM __input\r\n)\r\nSELECT  __p.*\r\n       ,(\r\nSELECT  { 'kgco2e_per_mmbtu': FIRST(\"kgco2e_per_mmbtu\")\r\n       ,__row_id: FIRST(__row_id)\r\n       ,__candidates: LIST(__row_id) }\r\nFROM\r\n(\r\n\tSELECT  *\r\n\tFROM \"fuel_kgco2e_per_mmbtu__1\"\r\n\tWHERE \"fuel_type\" IS NOT DISTINCT\r\n\tFROM \"__input.fuel\"\r\n\tORDER BY \"location_country\" IS NOT NULL DESC, \"location_grid\" IS NOT NULL DESC, \"location_state\" IS NOT NULL DESC, \"location_city\" IS NOT NULL DESC\r\n\tLIMIT 1\r\n)\r\nGROUP BY  TRUE )            AS __ref1\r\n         ,CAST(1 AS DOUBLE) AS \"__p.__functional_unit__\"\r\nFROM __stage0 AS __p;\r\n\r\n```\nAlso, it's an optimizer problem\r\n\r\nwith\r\n```sql\r\nstatement ok\r\npragma disable_optimizer;\r\n```\r\n\r\nit completes just fine\nSorry for the ginormous sql; tried to reduce as much as possible but the error went away if I trimmed it any more.  \nWe are blocked on this since disabling optimizer is a no-go.  (Unless you can suggest a different construction that avoids this issue?)\nSome more issue reduction - it is related to the remove unused columns optimizer. This is as small as I could make the query:\r\n```sql\r\n-- PRAGMA disabled_optimizers='unused_columns';\r\nCREATE TABLE fuel_kgco2e_per_mmbtu__1(fuel_type VARCHAR, location_country VARCHAR);\r\nINSERT INTO fuel_kgco2e_per_mmbtu__1 VALUES('natural_gas', 'US');\r\nCREATE TABLE __stage0(__input_row_id BIGINT, \"__input.fuel\" VARCHAR);\r\nINSERT INTO __stage0 VALUES(1, 'natural_gas');\r\nSELECT  (\r\nSELECT  NULL\r\n\tFROM\r\n\t(\r\n\t\tSELECT  fuel_type, location_country\r\n\t\tFROM \"fuel_kgco2e_per_mmbtu__1\"\r\n\t\tWHERE \"fuel_type\" IS NOT DISTINCT FROM \"__input.fuel\"\r\n\t\tLIMIT 1\r\n\t))\r\nFROM __stage0 AS __p;\r\n```\r\n\r\nWill investigate more.",
  "created_at": "2023-02-12T11:07:25Z"
}