{
  "repo": "duckdb/duckdb",
  "pull_number": 5969,
  "instance_id": "duckdb__duckdb-5969",
  "issue_numbers": [
    "5968",
    "5968"
  ],
  "base_commit": "218bae210d9b1649f3f6c5569a8b1355335761eb",
  "patch": "diff --git a/extension/parquet/parquet_reader.cpp b/extension/parquet/parquet_reader.cpp\nindex f674a61c9fe3..c3365fda6df5 100644\n--- a/extension/parquet/parquet_reader.cpp\n+++ b/extension/parquet/parquet_reader.cpp\n@@ -257,13 +257,15 @@ unique_ptr<ColumnReader> ParquetReader::CreateReaderRecursive(const FileMetaData\n \tauto &s_ele = file_meta_data->schema[next_schema_idx];\n \tauto this_idx = next_schema_idx;\n \n-\tif (s_ele.__isset.repetition_type) {\n-\t\tif (s_ele.repetition_type != FieldRepetitionType::REQUIRED) {\n-\t\t\tmax_define++;\n-\t\t}\n-\t\tif (s_ele.repetition_type == FieldRepetitionType::REPEATED) {\n-\t\t\tmax_repeat++;\n-\t\t}\n+\tauto repetition_type = FieldRepetitionType::REQUIRED;\n+\tif (s_ele.__isset.repetition_type && this_idx > 0) {\n+\t\trepetition_type = s_ele.repetition_type;\n+\t}\n+\tif (repetition_type != FieldRepetitionType::REQUIRED) {\n+\t\tmax_define++;\n+\t}\n+\tif (repetition_type == FieldRepetitionType::REPEATED) {\n+\t\tmax_repeat++;\n \t}\n \n \tif (!s_ele.__isset.type) { // inner node\n@@ -290,7 +292,7 @@ unique_ptr<ColumnReader> ParquetReader::CreateReaderRecursive(const FileMetaData\n \t\tunique_ptr<ColumnReader> result;\n \t\tLogicalType result_type;\n \n-\t\tbool is_repeated = s_ele.repetition_type == FieldRepetitionType::REPEATED;\n+\t\tbool is_repeated = repetition_type == FieldRepetitionType::REPEATED;\n \t\tbool is_list = s_ele.__isset.converted_type && s_ele.converted_type == ConvertedType::LIST;\n \t\tbool is_map = s_ele.__isset.converted_type && s_ele.converted_type == ConvertedType::MAP;\n \t\tbool is_map_kv = s_ele.__isset.converted_type && s_ele.converted_type == ConvertedType::MAP_KEY_VALUE;\n@@ -366,6 +368,13 @@ unique_ptr<ColumnReader> ParquetReader::CreateReader(const duckdb_parquet::forma\n \tidx_t next_schema_idx = 0;\n \tidx_t next_file_idx = 0;\n \n+\tif (file_meta_data->schema.empty()) {\n+\t\tthrow IOException(\"Parquet reader: no schema elements found\");\n+\t}\n+\tif (file_meta_data->schema[0].num_children == 0) {\n+\t\tthrow IOException(\"Parquet reader: root schema element has no children\");\n+\t}\n+\n \tauto ret = CreateReaderRecursive(file_meta_data, 0, 0, 0, next_schema_idx, next_file_idx);\n \tD_ASSERT(next_schema_idx == file_meta_data->schema.size() - 1);\n \tD_ASSERT(file_meta_data->row_groups.empty() || next_file_idx == file_meta_data->row_groups[0].columns.size());\n",
  "test_patch": "diff --git a/test/sql/copy/parquet/parquet_5968.test b/test/sql/copy/parquet/parquet_5968.test\nnew file mode 100644\nindex 000000000000..2aae151c4686\n--- /dev/null\n+++ b/test/sql/copy/parquet/parquet_5968.test\n@@ -0,0 +1,24 @@\n+# name: test/sql/copy/parquet/parquet_5968.test\n+# description: Issue #5968: Segmentation fault on reading parquet file\n+# group: [parquet]\n+\n+require parquet\n+\n+require httpfs\n+\n+statement ok\n+CREATE TABLE issue_5968 AS FROM 'https://github.com/duckdb/duckdb-data/releases/download/v1.0/issue_5968.parquet'\n+\n+query I\n+SELECT COUNT(*) FROM issue_5968\n+----\n+2028587\n+\n+query I\n+SELECT * FROM issue_5968 LIMIT 5\n+----\n+B00001\n+B00001\n+B00009\n+B00009\n+B00009\n",
  "problem_statement": "Segmentation fault on reading parquet file\n### What happens?\n\nDuckdb cli crashes with segmentation fault on trying to read the following parquet file : https://github.com/k-anshul/pqarrow_example/blob/main/out.parquet\r\n\r\nThe parquet file seems valid since I can scan it with other cli based tools :  https://github.com/apache/parquet-mr/blob/master/parquet-cli/README.md\n\n### To Reproduce\n\n1. Download given file in local \r\n2.  select * from read_parquet(\"filename\");\r\n3. duckdb will crash with segmentation fault\n\n### OS:\n\nmac os 13.1 (m1)\n\n### DuckDB Version:\n\nv0.6.1\n\n### DuckDB Client:\n\ncli\n\n### Full Name:\n\nAnshul\n\n### Affiliation:\n\nIndependent Consultant\n\n### Have you tried this on the latest `master` branch?\n\n- [X] I agree\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] I agree\nSegmentation fault on reading parquet file\n### What happens?\n\nDuckdb cli crashes with segmentation fault on trying to read the following parquet file : https://github.com/k-anshul/pqarrow_example/blob/main/out.parquet\r\n\r\nThe parquet file seems valid since I can scan it with other cli based tools :  https://github.com/apache/parquet-mr/blob/master/parquet-cli/README.md\n\n### To Reproduce\n\n1. Download given file in local \r\n2.  select * from read_parquet(\"filename\");\r\n3. duckdb will crash with segmentation fault\n\n### OS:\n\nmac os 13.1 (m1)\n\n### DuckDB Version:\n\nv0.6.1\n\n### DuckDB Client:\n\ncli\n\n### Full Name:\n\nAnshul\n\n### Affiliation:\n\nIndependent Consultant\n\n### Have you tried this on the latest `master` branch?\n\n- [X] I agree\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] I agree\n",
  "hints_text": "\n",
  "created_at": "2023-01-23T13:03:14Z"
}