{
  "repo": "duckdb/duckdb",
  "pull_number": 4725,
  "instance_id": "duckdb__duckdb-4725",
  "issue_numbers": [
    "4602"
  ],
  "base_commit": "72179ca25253304cfe07c1b85c357a8d7a1081dd",
  "patch": "diff --git a/src/common/types/vector.cpp b/src/common/types/vector.cpp\nindex fca9459fcee2..7ce8aecd05e0 100644\n--- a/src/common/types/vector.cpp\n+++ b/src/common/types/vector.cpp\n@@ -1348,6 +1348,24 @@ void StringVector::AddHeapReference(Vector &vector, Vector &other) {\n \tStringVector::AddBuffer(vector, other.auxiliary);\n }\n \n+Vector &MapVector::GetKeys(Vector &vector) {\n+\tauto &entries = StructVector::GetEntries(vector);\n+\tD_ASSERT(entries.size() == 2);\n+\treturn *entries[0];\n+}\n+Vector &MapVector::GetValues(Vector &vector) {\n+\tauto &entries = StructVector::GetEntries(vector);\n+\tD_ASSERT(entries.size() == 2);\n+\treturn *entries[1];\n+}\n+\n+const Vector &MapVector::GetKeys(const Vector &vector) {\n+\treturn GetKeys((Vector &)vector);\n+}\n+const Vector &MapVector::GetValues(const Vector &vector) {\n+\treturn GetValues((Vector &)vector);\n+}\n+\n vector<unique_ptr<Vector>> &StructVector::GetEntries(Vector &vector) {\n \tD_ASSERT(vector.GetType().id() == LogicalTypeId::STRUCT || vector.GetType().id() == LogicalTypeId::MAP);\n \tif (vector.GetVectorType() == VectorType::DICTIONARY_VECTOR) {\ndiff --git a/src/function/scalar/map/map_extract.cpp b/src/function/scalar/map/map_extract.cpp\nindex 044cb85de70d..d0a7e151b085 100644\n--- a/src/function/scalar/map/map_extract.cpp\n+++ b/src/function/scalar/map/map_extract.cpp\n@@ -40,16 +40,21 @@ static void MapExtractFunction(DataChunk &args, ExpressionState &state, Vector &\n \tauto &map = args.data[0];\n \tauto &key = args.data[1];\n \n-\tUnifiedVectorFormat offset_data;\n+\tUnifiedVectorFormat map_keys_data;\n+\tUnifiedVectorFormat key_data;\n \n-\tauto &children = StructVector::GetEntries(map);\n+\tauto &map_keys = MapVector::GetKeys(map);\n+\tauto &map_values = MapVector::GetValues(map);\n+\n+\tmap_keys.ToUnifiedFormat(args.size(), map_keys_data);\n+\tkey.ToUnifiedFormat(args.size(), key_data);\n \n-\tchildren[0]->ToUnifiedFormat(args.size(), offset_data);\n \tfor (idx_t row = 0; row < args.size(); row++) {\n-\t\tidx_t row_index = offset_data.sel->get_index(row);\n-\t\tauto key_value = key.GetValue(row_index);\n-\t\tauto offsets = ListVector::Search(*children[0], key_value, offset_data.sel->get_index(row));\n-\t\tauto values = ListVector::GetValuesFromOffsets(*children[1], offsets);\n+\t\tidx_t row_index = map_keys_data.sel->get_index(row);\n+\t\tidx_t key_index = key_data.sel->get_index(row);\n+\t\tauto key_value = key.GetValue(key_index);\n+\t\tauto offsets = ListVector::Search(map_keys, key_value, row_index);\n+\t\tauto values = ListVector::GetValuesFromOffsets(map_values, offsets);\n \t\tFillResult(values, result, row);\n \t}\n \ndiff --git a/src/include/duckdb/common/types/vector.hpp b/src/include/duckdb/common/types/vector.hpp\nindex d123b9032407..1535fd568e0f 100644\n--- a/src/include/duckdb/common/types/vector.hpp\n+++ b/src/include/duckdb/common/types/vector.hpp\n@@ -355,6 +355,13 @@ struct StringVector {\n \tDUCKDB_API static void AddHeapReference(Vector &vector, Vector &other);\n };\n \n+struct MapVector {\n+\tDUCKDB_API static const Vector &GetKeys(const Vector &vector);\n+\tDUCKDB_API static const Vector &GetValues(const Vector &vector);\n+\tDUCKDB_API static Vector &GetKeys(Vector &vector);\n+\tDUCKDB_API static Vector &GetValues(Vector &vector);\n+};\n+\n struct StructVector {\n \tDUCKDB_API static const vector<unique_ptr<Vector>> &GetEntries(const Vector &vector);\n \tDUCKDB_API static vector<unique_ptr<Vector>> &GetEntries(Vector &vector);\n",
  "test_patch": "diff --git a/test/sql/types/nested/map/test_map_subscript_where.test b/test/sql/types/nested/map/test_map_subscript_where.test\nnew file mode 100644\nindex 000000000000..f4194331e702\n--- /dev/null\n+++ b/test/sql/types/nested/map/test_map_subscript_where.test\n@@ -0,0 +1,40 @@\n+# name: test/sql/types/nested/map/test_map_subscript_where.test\n+# group: [map]\n+\n+statement ok\n+create table t1 (\n+\tid int,\n+\tk integer[],\n+\tv decimal[]\n+);\n+\n+statement ok\n+insert into t1\n+SELECT * FROM (VALUES\n+\t(0, [1,2,3,4], [1.0, 2.0, 3.0, 4.0]),\n+\t(1, [5,6,7,8], [5.0, 6.0, 7.0, 8.0]),\n+\t(2, [9,10,11,12], [9.0, 10.0, 11.0, 12.0]),\n+\t(3, [13,14,15,16], [13.0, 14.0, 15.0, 16.0]),\n+\t(4, [17,18,19,20], [17.0, 18.0, 19.0, 20.0]),\n+\t(5, [21,22,23,24], [21.0, 22.0, 23.0, 24.0]),\n+\t(6, [25,26,27,28], [25.0, 26.0, 27.0, 28.0]),\n+\t(7, [29,30,31,32], [29.0, 30.0, 31.0, 32.0]),\n+\t(8, [33,34,35,36], [33.0, 34.0, 35.0, 36.0]),\n+\t(9, [37,38,39,40], [37.0, 38.0, 39.0, 40.0])\n+)\n+\n+statement ok\n+create table t2 (id int, v_map map(integer, decimal), k integer[]);\n+\n+statement ok\n+insert into t2 select id, map(k,v), k from t1;\n+\n+query II\n+select id, v_map[array_sort(k, 'DESC', 'NULLS LAST')[1]] from t2 where id > 3 limit 10;\n+----\n+4\t[20.000]\n+5\t[24.000]\n+6\t[28.000]\n+7\t[32.000]\n+8\t[36.000]\n+9\t[40.000]\n",
  "problem_statement": "map[entry] return uncorrect result with \"where\" filter\n### What happens?\r\n\r\nmap[entry] return uncorrect result with where filter:\r\n\r\n```\r\nselect c1,v_map[k1][1] from t1  where c1> '2022-09-13'::date limit 10; \r\n```\r\n\r\nit retrun empty value, but has value correctly. \r\n\r\n### To Reproduce\r\n\r\n```\r\ncreate table t1 (c1 date, k double[], v_map map(double, double)); \r\n\r\ninsert into t1 \r\nselect c1, k, map(k, [random()*100,random()*100,random()*100,random()*100]) from \r\n( select  '2022-09-05'::date+(generate_series||' days')::interval as c1, \r\n[random()*100,random()*100,random()*100,random()*100] as k from generate_series(1,10000)\r\n) t; \r\n\r\nselect * from t1 limit 10; \r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502     c1     \u2502                                       k                                        \u2502                                       v_map                                        \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 2022-09-06 \u2502 [82.17582534583654, 66.05622085417998, 39.07450315055309, 31.323415397508864]  \u2502 {82.17582534583654=87.61564132003478, 66.05622085417998=43.33306938487409, 39.0... \u2502\r\n\u2502 2022-09-07 \u2502 [28.769135318875577, 9.405185936345994, 73.94851133552113, 73.22148870984593]  \u2502 {28.769135318875577=44.95443383812775, 9.405185936345994=99.80066651473769, 73.... \u2502\r\n\u2502 2022-09-08 \u2502 [39.08535764531357, 82.68013752128, 31.026140281703825, 19.833194166383052]    \u2502 {39.08535764531357=18.223565844405343, 82.68013752128=1.428188872856132, 31.026... \u2502\r\n\u2502 2022-09-09 \u2502 [60.39429494654627, 31.0045225617952, 17.507085510880476, 93.31996564132162]   \u2502 {60.39429494654627=12.308044268821376, 31.0045225617952=35.48072027868608, 17.5... \u2502\r\n\u2502 2022-09-10 \u2502 [3.473523027141002, 24.658681923676905, 65.49516650044713, 72.20609548320205]  \u2502 {3.473523027141002=72.03497911617974, 24.658681923676905=2.0152159039897883, 65... \u2502\r\n\u2502 2022-09-11 \u2502 [98.1960644475641, 57.08468606627656, 76.35395451829628, 48.25278335443064]    \u2502 {98.1960644475641=67.73236788989333, 57.08468606627656=33.13701370105544, 76.35... \u2502\r\n\u2502 2022-09-12 \u2502 [96.87780395543152, 36.95240568764331, 84.76455690915803, 6.933931798425953]   \u2502 {96.87780395543152=23.912184178808747, 36.95240568764331=45.9833704507871, 84.7... \u2502\r\n\u2502 2022-09-13 \u2502 [54.40724234897812, 9.684392951821069, 12.837071021282364, 72.66230158802641]  \u2502 {54.40724234897812=79.91778463588976, 9.684392951821069=86.49568115046613, 12.8... \u2502\r\n\u2502 2022-09-14 \u2502 [73.11804431330367, 63.8459843732058, 0.4215751077098714, 7.315747720961401]   \u2502 {73.11804431330367=72.78649596795125, 63.8459843732058=79.24279951938493, 0.421... \u2502\r\n\u2502 2022-09-15 \u2502 [91.85159082800419, 7.1300141297117845, 45.744982209462904, 25.67358902321979] \u2502 {91.85159082800419=24.709493137129932, 7.1300141297117845=54.1685098675472, 45.... \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n\r\n\r\nselect c1,v_map[array_sort(k,'DESC','NULLS LAST')[1]][1] from t1 limit 20;\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502     c1     \u2502 v_map[array_sort(k, 'DESC', 'NULLS LAST')[1]][1] \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 2022-09-06 \u2502 40.62733066748533                                \u2502\r\n\u2502 2022-09-07 \u2502 99.3293300735134                                 \u2502\r\n\u2502 2022-09-08 \u2502 43.52874887258018                                \u2502\r\n\u2502 2022-09-09 \u2502 0.47893354214703043                              \u2502\r\n\u2502 2022-09-10 \u2502 50.447510753396784                               \u2502\r\n\u2502 2022-09-11 \u2502 7.450213378167295                                \u2502\r\n\u2502 2022-09-12 \u2502 55.02208286314786                                \u2502\r\n\u2502 2022-09-13 \u2502 1.9157652980451856                               \u2502\r\n\u2502 2022-09-14 \u2502 20.58395930113829                                \u2502\r\n\u2502 2022-09-15 \u2502 9.982456408902642                                \u2502\r\n\u2502 2022-09-16 \u2502 62.04548395752103                                \u2502\r\n\u2502 2022-09-17 \u2502 79.87326723054827                                \u2502\r\n\u2502 2022-09-18 \u2502 60.37558050834937                                \u2502\r\n\u2502 2022-09-19 \u2502 70.41631843205921                                \u2502\r\n\u2502 2022-09-20 \u2502 77.04330542521627                                \u2502\r\n\u2502 2022-09-21 \u2502 61.96975073823001                                \u2502\r\n\u2502 2022-09-22 \u2502 66.90977475766786                                \u2502\r\n\u2502 2022-09-23 \u2502 23.912062175551444                               \u2502\r\n\u2502 2022-09-24 \u2502 82.00998971751193                                \u2502\r\n\u2502 2022-09-25 \u2502 44.830818182050905                               \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n\r\nselect c1,v_map[array_sort(k,'DESC','NULLS LAST')[1]][1] from t1  where c1> '2022-09-13'::date limit 10; \r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502     c1     \u2502 v_map[array_sort(k, 'DESC', 'NULLS LAST')[1]][1] \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 2022-09-14 \u2502                                                  \u2502\r\n\u2502 2022-09-15 \u2502                                                  \u2502\r\n\u2502 2022-09-16 \u2502                                                  \u2502\r\n\u2502 2022-09-17 \u2502                                                  \u2502\r\n\u2502 2022-09-18 \u2502                                                  \u2502\r\n\u2502 2022-09-19 \u2502                                                  \u2502\r\n\u2502 2022-09-20 \u2502                                                  \u2502\r\n\u2502 2022-09-21 \u2502                                                  \u2502\r\n\u2502 2022-09-22 \u2502                                                  \u2502\r\n\u2502 2022-09-23 \u2502                                                  \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\nalso has problem in below: \r\n```\r\ndrop table t1;\r\ncreate table t1 (c1 date, k double[], k1 double, v_map map(double, double)); \r\n\r\ninsert into t1 (c1,k,v_map)\r\nselect c1, k, map(k, [random()*100,random()*100,random()*100,random()*100]) from \r\n( select  '2022-09-05'::date+(generate_series||' days')::interval as c1, \r\n[random()*100,random()*100,random()*100,random()*100] as k from generate_series(1,10000)\r\n) t; \r\n\r\nupdate t1 set k1=array_sort(k,'DESC','NULLS LAST')[1] ;\r\n\r\n\r\nselect c1,v_map[array_sort(k,'DESC','NULLS LAST')[1]][1] from t1 limit 20;\r\nselect c1,v_map[k1][1] from t1  where c1> '2022-09-13'::date limit 10; \r\n```\r\n\r\n### OS:\r\n\r\nMacOS\r\n\r\n### DuckDB Version:\r\n\r\n0.4.1-dev commit_id: 109f932c41fba9d61189e01ab0e5496cb9749506\r\n\r\n### DuckDB Client:\r\n\r\nCLI\r\n\r\n### Full Name:\r\n\r\nDigoal Zhou\r\n\r\n### Affiliation:\r\n\r\nAlibaba\r\n\r\n### Have you tried this on the latest `master` branch?\r\n\r\n- [x] I agree\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] I agree\n",
  "hints_text": "@Tishj this issue reminds me of a similar one that I had for the list functions. It might be worth checking if this is caused by not using a selection vector to access the input elements. Because the `WHERE` gets pushed down and applies a filter, which returns a selection vector on the input data.",
  "created_at": "2022-09-15T09:00:19Z"
}