{
  "repo": "duckdb/duckdb",
  "pull_number": 4698,
  "instance_id": "duckdb__duckdb-4698",
  "issue_numbers": [
    "4647",
    "4647"
  ],
  "base_commit": "3591cd1728ab2bfb621bd65e5b5ea4042f30b599",
  "patch": "diff --git a/src/catalog/catalog_set.cpp b/src/catalog/catalog_set.cpp\nindex d0ef9b1e5df5..1bfe114d72c9 100644\n--- a/src/catalog/catalog_set.cpp\n+++ b/src/catalog/catalog_set.cpp\n@@ -191,12 +191,16 @@ bool CatalogSet::AlterEntry(ClientContext &context, const string &name, AlterInf\n \t\t\t\tthrow CatalogException(rename_err_msg, original_name, value->name);\n \t\t\t}\n \t\t}\n-\t\tPutMapping(context, value->name, entry_index);\n-\t\tDeleteMapping(context, original_name);\n \t}\n \t//! Check the dependency manager to verify that there are no conflicting dependencies with this alter\n \tcatalog.dependency_manager->AlterObject(context, entry, value.get());\n \n+\tif (value->name != original_name) {\n+\t\t// Do PutMapping and DeleteMapping after dependency check\n+\t\tPutMapping(context, value->name, entry_index);\n+\t\tDeleteMapping(context, original_name);\n+\t}\n+\n \tvalue->timestamp = transaction.transaction_id;\n \tvalue->child = move(entries[entry_index]);\n \tvalue->child->parent = value.get();\n",
  "test_patch": "diff --git a/test/sql/alter/rename_table/test_rename_table_with_dependency_check.test b/test/sql/alter/rename_table/test_rename_table_with_dependency_check.test\nnew file mode 100644\nindex 000000000000..406e2a06cfc4\n--- /dev/null\n+++ b/test/sql/alter/rename_table/test_rename_table_with_dependency_check.test\n@@ -0,0 +1,28 @@\n+# name: test/sql/alter/rename_table/test_rename_table_with_dependency_check.test\n+# description: Test RENAME TABLE with dependency check\n+# group: [rename_table]\n+\n+statement ok\n+CREATE TABLE t0 (c0 INT);\n+\n+statement ok\n+CREATE UNIQUE INDEX i1 ON t0 (c0);\n+\n+# Cannot alter entry \"t0\" because there are entries that depend on it\n+statement error\n+ALTER TABLE t0 RENAME TO t3;\n+\n+# t3 is not exist\n+statement ok\n+CREATE TABLE t3 (c0 INT);\n+\n+# Cannot alter entry \"t0\" because there are entries that depend on it\n+statement error\n+ALTER TABLE t0 RENAME TO t4;\n+\n+statement ok\n+DROP TABLE t0;\n+\n+# t4 is not exist\n+statement error\n+ANALYZE t4;\n\\ No newline at end of file\n",
  "problem_statement": "[Fuzzer] Failed alter table statement and later analyze error\n### What happens?\r\n\r\nRun the following statements:\r\n\r\n```\r\nCREATE TABLE t0 (c0 INT);\r\nCREATE UNIQUE INDEX i1 ON t0 (c0);\r\nALTER TABLE t0 RENAME TO t3; -- Catalog Error: Cannot alter entry \"t0\" because there are entries that depend on it\r\nDROP TABLE t0;\r\nANALYZE t3;\r\n```\r\n\r\nThe undefined error sanitizer finds an issue: src/catalog/catalog_set.cpp:363:18: runtime error: member access within null pointer of type 'duckdb::CatalogEntry'\r\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior src/catalog/catalog_set.cpp:363:18 in\r\n\r\nThe analyze should throw an error about an inexisting table \"t3\".\r\n\r\nI guess I should stop this for a while. Sorry for the many issues :)\r\n\r\n\r\n### To Reproduce\r\n\r\nRun the steps above.\r\n\r\n### OS:\r\n\r\nLinux\r\n\r\n### DuckDB Version:\r\n\r\nlatest from sources\r\n\r\n### DuckDB Client:\r\n\r\nShell\r\n\r\n### Full Name:\r\n\r\nPedro Ferreira\r\n\r\n### Affiliation:\r\n\r\nHuawei\r\n\r\n### Have you tried this on the latest `master` branch?\r\n\r\n- [X] I agree\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] I agree\n[Fuzzer] Failed alter table statement and later analyze error\n### What happens?\r\n\r\nRun the following statements:\r\n\r\n```\r\nCREATE TABLE t0 (c0 INT);\r\nCREATE UNIQUE INDEX i1 ON t0 (c0);\r\nALTER TABLE t0 RENAME TO t3; -- Catalog Error: Cannot alter entry \"t0\" because there are entries that depend on it\r\nDROP TABLE t0;\r\nANALYZE t3;\r\n```\r\n\r\nThe undefined error sanitizer finds an issue: src/catalog/catalog_set.cpp:363:18: runtime error: member access within null pointer of type 'duckdb::CatalogEntry'\r\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior src/catalog/catalog_set.cpp:363:18 in\r\n\r\nThe analyze should throw an error about an inexisting table \"t3\".\r\n\r\nI guess I should stop this for a while. Sorry for the many issues :)\r\n\r\n\r\n### To Reproduce\r\n\r\nRun the steps above.\r\n\r\n### OS:\r\n\r\nLinux\r\n\r\n### DuckDB Version:\r\n\r\nlatest from sources\r\n\r\n### DuckDB Client:\r\n\r\nShell\r\n\r\n### Full Name:\r\n\r\nPedro Ferreira\r\n\r\n### Affiliation:\r\n\r\nHuawei\r\n\r\n### Have you tried this on the latest `master` branch?\r\n\r\n- [X] I agree\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] I agree\n",
  "hints_text": "@PedroTadim thanks for filing all those issues. Maybe you could spend some time sending PRs for fixes? Thanks\nYes I could, but I have to learn the codebase first\nI will try to fix this.\n@PedroTadim thanks for filing all those issues. Maybe you could spend some time sending PRs for fixes? Thanks\nYes I could, but I have to learn the codebase first\nI will try to fix this.",
  "created_at": "2022-09-13T18:34:10Z"
}