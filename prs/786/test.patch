diff --git a/tools/rpkg/tests/testthat.R b/tools/rpkg/tests/testthat.R
index 03b5eae9b505..4eca55582d09 100644
--- a/tools/rpkg/tests/testthat.R
+++ b/tools/rpkg/tests/testthat.R
@@ -1,4 +1,5 @@
-library("testthat")
+library(testthat)
+library(DBI)
 
 # the easy part
 test_check("duckdb")
diff --git a/tools/rpkg/tests/testthat/test_bind.R b/tools/rpkg/tests/testthat/test_bind.R
index 4e15c4429dee..2698768961db 100644
--- a/tools/rpkg/tests/testthat/test_bind.R
+++ b/tools/rpkg/tests/testthat/test_bind.R
@@ -1,6 +1,3 @@
-library("testthat")
-library("DBI")
-
 test_convert <- function(con, type, val) {
   val_comp <- val
   if (is.factor(val)) {
diff --git a/tools/rpkg/tests/testthat/test_parquet.R b/tools/rpkg/tests/testthat/test_parquet.R
index 275fd22d697d..d6d973d8826d 100644
--- a/tools/rpkg/tests/testthat/test_parquet.R
+++ b/tools/rpkg/tests/testthat/test_parquet.R
@@ -1,6 +1,3 @@
-library("testthat")
-library("DBI")
-
 test_that("parquet reader works on the notorious userdata1 file", {
   con <- dbConnect(duckdb::duckdb())
   res <- dbGetQuery(con, "SELECT * FROM parquet_scan('userdata1.parquet')")
diff --git a/tools/rpkg/tests/testthat/test_read.R b/tools/rpkg/tests/testthat/test_read.R
index 8571b4c3be3f..124c0d3333f7 100644
--- a/tools/rpkg/tests/testthat/test_read.R
+++ b/tools/rpkg/tests/testthat/test_read.R
@@ -1,6 +1,3 @@
-library("testthat")
-library("DBI")
-
 test_that("read_csv_duckdb() works as expected", {
   con <- dbConnect(duckdb::duckdb())
 
diff --git a/tools/rpkg/tests/testthat/test_readonly.R b/tools/rpkg/tests/testthat/test_readonly.R
index 624e6bcf5fbc..37314c05048f 100644
--- a/tools/rpkg/tests/testthat/test_readonly.R
+++ b/tools/rpkg/tests/testthat/test_readonly.R
@@ -1,18 +1,14 @@
-library(testthat)
-
 test_that("read_only flag and shutdown works as expected", {
-  library("DBI")
 
   dbdir <- tempfile()
 
   # 1st: create a db and write some tables
 
   callr::r(function(dbdir) {
-    library("DBI")
-    con <- dbConnect(duckdb::duckdb(), dbdir, read_only = FALSE) # FALSE is the default
+    con <- DBI::dbConnect(duckdb::duckdb(), dbdir, read_only = FALSE) # FALSE is the default
     print(con)
-    res <- dbWriteTable(con, "iris", iris)
-    dbDisconnect(con)
+    res <- DBI::dbWriteTable(con, "iris", iris)
+    DBI::dbDisconnect(con)
     duckdb::duckdb_shutdown(con@driver)
   }, args = list(dbdir))
 
@@ -30,10 +26,9 @@ test_that("read_only flag and shutdown works as expected", {
 
   # con is still alive
   callr::r(function(dbdir) {
-    library("DBI")
-    con <- dbConnect(duckdb::duckdb(), dbdir, read_only = TRUE)
-    res <- dbReadTable(con, "iris")
-    dbDisconnect(con, shutdown = TRUE)
+    con <- DBI::dbConnect(duckdb::duckdb(), dbdir, read_only = TRUE)
+    res <- DBI::dbReadTable(con, "iris")
+    DBI::dbDisconnect(con, shutdown = TRUE)
   }, args = list(dbdir))
 
   # shut down one of them again
@@ -47,10 +42,9 @@ test_that("read_only flag and shutdown works as expected", {
   # now we can get write access again
   # TODO shutdown
   callr::r(function(dbdir) {
-    library("DBI")
-    con <- dbConnect(duckdb::duckdb(), dbdir, read_only = FALSE) # FALSE is the default
-    res <- dbWriteTable(con, "iris2", iris)
-    dbDisconnect(con)
+    con <- DBI::dbConnect(duckdb::duckdb(), dbdir, read_only = FALSE) # FALSE is the default
+    res <- DBI::dbWriteTable(con, "iris2", iris)
+    DBI::dbDisconnect(con)
   }, args = list(dbdir))
 
   expect_true(T)
diff --git a/tools/rpkg/tests/testthat/test_register.R b/tools/rpkg/tests/testthat/test_register.R
index 5de72c3d48d5..81e74d37a505 100644
--- a/tools/rpkg/tests/testthat/test_register.R
+++ b/tools/rpkg/tests/testthat/test_register.R
@@ -1,7 +1,3 @@
-library("testthat")
-library("DBI")
-
-
 test_that("duckdb_register() works", {
   con <- dbConnect(duckdb::duckdb())
 
