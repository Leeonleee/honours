{
  "repo": "duckdb/duckdb",
  "pull_number": 12318,
  "instance_id": "duckdb__duckdb-12318",
  "issue_numbers": [
    "12286",
    "12286"
  ],
  "base_commit": "443ff3b8c1efd3407021ae8daa8a9cc0c585e44c",
  "patch": "diff --git a/src/include/duckdb/storage/block_manager.hpp b/src/include/duckdb/storage/block_manager.hpp\nindex 738d9defd357..214b410ca102 100644\n--- a/src/include/duckdb/storage/block_manager.hpp\n+++ b/src/include/duckdb/storage/block_manager.hpp\n@@ -39,6 +39,7 @@ class BlockManager {\n \tvirtual unique_ptr<Block> CreateBlock(block_id_t block_id, FileBuffer *source_buffer) = 0;\n \t//! Return the next free block id\n \tvirtual block_id_t GetFreeBlockId() = 0;\n+\tvirtual block_id_t PeekFreeBlockId() = 0;\n \t//! Returns whether or not a specified block is the root block\n \tvirtual bool IsRootBlock(MetaBlockPointer root) = 0;\n \t//! Mark a block as \"free\"; free blocks are immediately added to the free list and can be immediately overwritten\ndiff --git a/src/include/duckdb/storage/in_memory_block_manager.hpp b/src/include/duckdb/storage/in_memory_block_manager.hpp\nindex 0f3985cb91f6..61707cb91ad9 100644\n--- a/src/include/duckdb/storage/in_memory_block_manager.hpp\n+++ b/src/include/duckdb/storage/in_memory_block_manager.hpp\n@@ -29,6 +29,9 @@ class InMemoryBlockManager : public BlockManager {\n \tblock_id_t GetFreeBlockId() override {\n \t\tthrow InternalException(\"Cannot perform IO in in-memory database - GetFreeBlockId!\");\n \t}\n+\tblock_id_t PeekFreeBlockId() override {\n+\t\tthrow InternalException(\"Cannot perform IO in in-memory database - PeekFreeBlockId!\");\n+\t}\n \tbool IsRootBlock(MetaBlockPointer root) override {\n \t\tthrow InternalException(\"Cannot perform IO in in-memory database - IsRootBlock!\");\n \t}\ndiff --git a/src/include/duckdb/storage/metadata/metadata_manager.hpp b/src/include/duckdb/storage/metadata/metadata_manager.hpp\nindex 900dde009700..58df31b11c72 100644\n--- a/src/include/duckdb/storage/metadata/metadata_manager.hpp\n+++ b/src/include/duckdb/storage/metadata/metadata_manager.hpp\n@@ -81,6 +81,7 @@ class MetadataManager {\n \n protected:\n \tblock_id_t AllocateNewBlock();\n+\tblock_id_t PeekNextBlockId();\n \tblock_id_t GetNextBlockId();\n \n \tvoid AddBlock(MetadataBlock new_block, bool if_exists = false);\ndiff --git a/src/include/duckdb/storage/single_file_block_manager.hpp b/src/include/duckdb/storage/single_file_block_manager.hpp\nindex bdf2e2dbff84..fbdea181049f 100644\n--- a/src/include/duckdb/storage/single_file_block_manager.hpp\n+++ b/src/include/duckdb/storage/single_file_block_manager.hpp\n@@ -49,6 +49,8 @@ class SingleFileBlockManager : public BlockManager {\n \tunique_ptr<Block> CreateBlock(block_id_t block_id, FileBuffer *source_buffer) override;\n \t//! Return the next free block id\n \tblock_id_t GetFreeBlockId() override;\n+\t//! Check the next free block id - but do not assign or allocate it\n+\tblock_id_t PeekFreeBlockId() override;\n \t//! Returns whether or not a specified block is the root block\n \tbool IsRootBlock(MetaBlockPointer root) override;\n \t//! Mark a block as free (immediately re-writeable)\ndiff --git a/src/storage/metadata/metadata_manager.cpp b/src/storage/metadata/metadata_manager.cpp\nindex 2fba4fc1bbc7..5e8c7c5f246a 100644\n--- a/src/storage/metadata/metadata_manager.cpp\n+++ b/src/storage/metadata/metadata_manager.cpp\n@@ -26,7 +26,7 @@ MetadataHandle MetadataManager::AllocateHandle() {\n \t\t\tbreak;\n \t\t}\n \t}\n-\tif (free_block == INVALID_BLOCK) {\n+\tif (free_block == INVALID_BLOCK || free_block > PeekNextBlockId()) {\n \t\tfree_block = AllocateNewBlock();\n \t}\n \tD_ASSERT(free_block != INVALID_BLOCK);\n@@ -315,6 +315,10 @@ vector<MetadataBlockInfo> MetadataManager::GetMetadataInfo() const {\n \treturn result;\n }\n \n+block_id_t MetadataManager::PeekNextBlockId() {\n+\treturn block_manager.PeekFreeBlockId();\n+}\n+\n block_id_t MetadataManager::GetNextBlockId() {\n \treturn block_manager.GetFreeBlockId();\n }\ndiff --git a/src/storage/single_file_block_manager.cpp b/src/storage/single_file_block_manager.cpp\nindex 1b182f2b8878..222d9908c0aa 100644\n--- a/src/storage/single_file_block_manager.cpp\n+++ b/src/storage/single_file_block_manager.cpp\n@@ -348,6 +348,15 @@ block_id_t SingleFileBlockManager::GetFreeBlockId() {\n \treturn block;\n }\n \n+block_id_t SingleFileBlockManager::PeekFreeBlockId() {\n+\tlock_guard<mutex> lock(block_lock);\n+\tif (!free_list.empty()) {\n+\t\treturn *free_list.begin();\n+\t} else {\n+\t\treturn max_block;\n+\t}\n+}\n+\n void SingleFileBlockManager::MarkBlockAsFree(block_id_t block_id) {\n \tlock_guard<mutex> lock(block_lock);\n \tD_ASSERT(block_id >= 0);\n",
  "test_patch": "diff --git a/test/sql/storage/relocate_metadata.test_slow b/test/sql/storage/relocate_metadata.test_slow\nnew file mode 100644\nindex 000000000000..606cf63081d1\n--- /dev/null\n+++ b/test/sql/storage/relocate_metadata.test_slow\n@@ -0,0 +1,53 @@\n+# name: test/sql/storage/relocate_metadata.test_slow\n+# description: Verify that metadata is relocated to allow the database to free up space\n+# group: [storage]\n+\n+# load the DB from disk\n+load __TEST_DIR__/relocate_metadata.db\n+\n+statement ok\n+CREATE TABLE test (x INT, y AS (x + 100));\n+\n+statement ok\n+insert into test select range FROM range(100000000);\n+\n+statement ok\n+delete from test where x % 10 = 7;\n+\n+statement ok\n+delete from test where x % 10 = 6;\n+\n+statement ok\n+delete from test where x % 10 = 5;\n+\n+statement ok\n+delete from test where x % 10 = 4;\n+\n+statement ok\n+delete from test where x % 10 = 3;\n+\n+statement ok\n+delete from test where x % 10 = 2;\n+\n+statement ok\n+delete from test where x % 10 = 1;\n+\n+statement ok\n+delete from test where x % 10 = 0;\n+\n+statement ok\n+delete from test where x % 10 = 8;\n+\n+statement ok\n+delete from test where x % 10 = 9;\n+\n+statement ok\n+drop table test;\n+\n+statement ok\n+checkpoint\n+\n+query I\n+SELECT MAX(block_id)<5 FROM pragma_metadata_info();\n+----\n+true\n",
  "problem_statement": "Why is the db.file size still large after deleting data or dropping tables? \n### What happens?\r\n\r\nI created a table (persistent, dbfile), inserted 1 billion tuples into it, and then deleted these tuples. However, the dbfile remains 89MB in size.\r\n\r\n### To Reproduce\r\n\r\n```bash\r\n./duckdb vacuum.db\r\n```\r\n\r\n```sql\r\nCREATE TABLE test (x INT, y AS (x + 100));\r\ninsert into test select range FROM range(1000000000);\r\n\r\ndelete from test where x % 10 = 7;    --dbfile size : 187MB\r\n\r\ndelete from test where x % 10 = 6;   --dbfile size : 363MB\r\n\r\ndelete from test where x % 10 = 5;   --dbfile size : 404M\r\n\r\ndelete from test where x % 10 = 4;   --dbfile size : 404M\r\n\r\ndelete from test where x % 10 = 3;   --dbfile size : 566M\r\n\r\ndelete from test where x % 10 = 2;   --dbfile size : 566M\r\n\r\ndelete from test where x % 10 = 1;   --dbfile size : 404M\r\n\r\ndelete from test where x % 10 = 0;   --dbfile size : 404M\r\n\r\ndelete from test where x % 10 = 8;   --dbfile size : 90M\r\n\r\ndelete from test where x % 10 = 9;   --dbfile size : 89M\r\n\r\ndrop table test;                                    --dbfile size : 89M\r\n```\r\n\r\n\r\n### OS:\r\n\r\nMacOs\r\n\r\n### DuckDB Version:\r\n\r\n0.10.3\r\n\r\n### DuckDB Client:\r\n\r\ncli\r\n\r\n### Full Name:\r\n\r\nEricDuck\r\n\r\n### Affiliation:\r\n\r\npersonal\r\n\r\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\r\n\r\nI have tested with a stable release\r\n\r\n### Did you include all relevant data sets for reproducing the issue?\r\n\r\nYes\r\n\r\n### Did you include all code required to reproduce the issue?\r\n\r\n- [X] Yes, I have\r\n\r\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\r\n\r\n- [ ] Yes, I have\nWhy is the db.file size still large after deleting data or dropping tables? \n### What happens?\r\n\r\nI created a table (persistent, dbfile), inserted 1 billion tuples into it, and then deleted these tuples. However, the dbfile remains 89MB in size.\r\n\r\n### To Reproduce\r\n\r\n```bash\r\n./duckdb vacuum.db\r\n```\r\n\r\n```sql\r\nCREATE TABLE test (x INT, y AS (x + 100));\r\ninsert into test select range FROM range(1000000000);\r\n\r\ndelete from test where x % 10 = 7;    --dbfile size : 187MB\r\n\r\ndelete from test where x % 10 = 6;   --dbfile size : 363MB\r\n\r\ndelete from test where x % 10 = 5;   --dbfile size : 404M\r\n\r\ndelete from test where x % 10 = 4;   --dbfile size : 404M\r\n\r\ndelete from test where x % 10 = 3;   --dbfile size : 566M\r\n\r\ndelete from test where x % 10 = 2;   --dbfile size : 566M\r\n\r\ndelete from test where x % 10 = 1;   --dbfile size : 404M\r\n\r\ndelete from test where x % 10 = 0;   --dbfile size : 404M\r\n\r\ndelete from test where x % 10 = 8;   --dbfile size : 90M\r\n\r\ndelete from test where x % 10 = 9;   --dbfile size : 89M\r\n\r\ndrop table test;                                    --dbfile size : 89M\r\n```\r\n\r\n\r\n### OS:\r\n\r\nMacOs\r\n\r\n### DuckDB Version:\r\n\r\n0.10.3\r\n\r\n### DuckDB Client:\r\n\r\ncli\r\n\r\n### Full Name:\r\n\r\nEricDuck\r\n\r\n### Affiliation:\r\n\r\npersonal\r\n\r\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\r\n\r\nI have tested with a stable release\r\n\r\n### Did you include all relevant data sets for reproducing the issue?\r\n\r\nYes\r\n\r\n### Did you include all code required to reproduce the issue?\r\n\r\n- [X] Yes, I have\r\n\r\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\r\n\r\n- [ ] Yes, I have\n",
  "hints_text": "Thanks for opening this issue! Based on our automated check, it seems that your post contains some code but it does not use [code blocks](https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/creating-and-highlighting-code-blocks) to format it.\n          \nPlease double-check your post and revise it if necessary. To employ syntax highlighting, it's recommended to use code blocks with triple backticks, e.g.:\n````\n```sql\nSELECT ...\n```\n````\nIf this is a false positive, feel free to disregard this comment.\n\nHi @Toexplore, did you try running `CHECKPOINT`?\r\n\r\nFor more context, see the documentation's section on [Limitations on Reclaiming Memory and Disk Space](https://duckdb.org/docs/sql/statements/delete#limitations-on-reclaiming-memory-and-disk-space).\r\n\n> Hi @Toexplore, did you try running `CHECKPOINT`?\r\n> \r\n> For more context, see the documentation's section on [Limitations on Reclaiming Memory and Disk Space](https://duckdb.org/docs/sql/statements/delete#limitations-on-reclaiming-memory-and-disk-space).\r\n\r\nYes, I have performed a checkpoint, but it seems to have had no effect.\r\n```\r\ncheckpoint;\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 Success \u2502\r\n\u2502 boolean \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 0 rows  \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\nMytherin has a better handle on this, but if I recall correctly the way vacuuming works is we can reduce db filesize by truncating the unused blocks at the end\r\nWe don't (currently) close gaps caused by unused blocks inbetween\r\n\r\nSo what I think is happening is that there are still blocks after the blocks you have vacated by removing the tables, making it so we can't truncate\nCould you try to see what the results of `FROM pragma_metadata_info()` are?\r\nThose should show you which blocks are still being used, which are free and also the block ids, which can help determine if they are blocking a file truncation\nRelevant Discord discussion that was dealing with the same issue\r\n<https://discord.com/channels/909674491309850675/921073327009853451/1202313395466928138>\r\n\r\n@szarnyasg perhaps we should include some of this in the docs, because it's come up a couple times\r\n\"Troubleshooting database file size reduction\" perhaps?\n> Could you try to see what the results of `FROM pragma_metadata_info()` are? Those should show you which blocks are still being used, which are free and also the block ids, which can help determine if they are blocking a file truncation\r\n\r\nThe result of `FROM pragma_metadata_info()`\r\n```\r\nFROM pragma_metadata_info();\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 block_id \u2502 total_blocks \u2502 free_blocks \u2502                                                                                free_list                                                                                 \u2502\r\n\u2502  int64   \u2502    int64     \u2502    int64    \u2502                                                                                 int64[]                                                                                  \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502      323 \u2502           64 \u2502          62 \u2502 [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 4\u2026  \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n```\nYea that sounds like the metadata is occupying block id 323, meaning anything before that block id can not be vacuumed\r\nwhich I think comes out to `262144 (block size in bytes) * 323` bytes being taken up, which comes out to `84,672512` megabytes\nI believe that means there's still a database object present (like a table), recreating that object should pick a lower block id for the metadata, allowing the db file to be truncated\nin duckdb 0.9.x db size very stable but in 0.10.x take much more here a simple test \r\n\r\nduckdb 9:\r\ncreate table test_table as select * from '/tmp/test_table.parquet' ;\r\ndb file size:  8.2G\r\n\r\nduckdb 0.10.3\r\ndb file size  15G \r\n\r\nparquet file: 654M compressed with zstd\r\n\n> I believe that means there's still a database object present (like a table), recreating that object should pick a lower block id for the metadata, allowing the db file to be truncated\r\n\r\nI performed functions such as duckdb_indexes(), duckdb_tables(), duckdb_indexes(), but found nothing.\r\nCan you reproduce it?\n> > I believe that means there's still a database object present (like a table), recreating that object should pick a lower block id for the metadata, allowing the db file to be truncated\r\n> \r\n> I performed functions such as duckdb_indexes(), duckdb_tables(), duckdb_indexes(), but found nothing. Can you reproduce it?\r\n\r\nI recreated the same table and then drop it again, the file size is still more than 80MB. \nif  I delete all tuples in the table at once, the size of vacuum1.db is `8.8MB`, not `89MB`\r\n\r\n```\r\n./duckdb vacuum1.db\r\n\r\nCREATE TABLE test (x INT, y AS (x + 100));\r\ninsert into test select range FROM range(1000000000);\r\ndelete from test;\r\ncheckpoint;\r\n```\r\n\r\n\r\n\r\n\nWhen I create the table, the db size is 9.1~9.2mb (9187328 bytes)\r\nThis shoots up to 177.7mb (177745920 bytes) after the first delete, which is probably caused by the reduction of compression ratio\r\nNext delete it increases to 344.5mb (344993792 bytes), again likely due to compressability dropping\r\nNext it's 379596800 bytes\r\nNext it's 379072512 bytes\r\nNext it's 534786048 bytes\r\nNext it's 534786048 bytes, (likely because we already deleted the data that this filter matched?)\r\nNext it's 534786048 bytes (still hasn't gone down)\r\nNext it's 534786048 bytes (still hasn't gone down)\r\n\r\nI believe the reason this hasn't gone down is again that earlier blocks are deleted, but later blocks still exist\r\nSo we have large empty gaps that we aren't closing currently\r\n\r\nWhen we delete the rows `x % 10 = 8` we go back down to 177745920 bytes\r\nAnd with the final delete we stay at 177745920 bytes\r\n\r\n```\r\nD select * from pragma_metadata_info();\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 block_id \u2502 total_blocks \u2502 free_blocks \u2502                                                                              free_list                                                                               \u2502\r\n\u2502  int64   \u2502    int64     \u2502    int64    \u2502                                                                               int64[]                                                                                \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502      677 \u2502           64 \u2502          57 \u2502 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,\u2026  \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\nI can confirm that it won't reduce in size, even after `create or replace table test as select * from test;`\r\n\r\n\r\n\nOne last thing to add, using COPY FROM DATABASE <https://duckdb.org/docs/sql/statements/copy#copy-from-database--to> this can be used as a workaround\r\n\r\n```sql\r\nattach 'tmp/vacuum2.db' as db2;\r\ncopy from database vacuum to db2;\r\n```\r\n\r\n```\r\n\u279c  duckdb git:(main) \u2717 stat -f \"%z\" tmp/vacuum2.db          \r\n274432\r\n```\r\n\r\n```\r\n./duckdb tmp/vacuum2.db\r\nD select * from pragma_metadata_info();\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 block_id \u2502 total_blocks \u2502 free_blocks \u2502                                                                              free_list                                                                               \u2502\r\n\u2502  int64   \u2502    int64     \u2502    int64    \u2502                                                                               int64[]                                                                                \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502        0 \u2502           64 \u2502          60 \u2502 [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,\u2026  \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\nThis is recreating the metadata block at block id 0, fixing the issue\nThanks for opening this issue! Based on our automated check, it seems that your post contains some code but it does not use [code blocks](https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/creating-and-highlighting-code-blocks) to format it.\n          \nPlease double-check your post and revise it if necessary. To employ syntax highlighting, it's recommended to use code blocks with triple backticks, e.g.:\n````\n```sql\nSELECT ...\n```\n````\nIf this is a false positive, feel free to disregard this comment.\n\nHi @Toexplore, did you try running `CHECKPOINT`?\r\n\r\nFor more context, see the documentation's section on [Limitations on Reclaiming Memory and Disk Space](https://duckdb.org/docs/sql/statements/delete#limitations-on-reclaiming-memory-and-disk-space).\r\n\n> Hi @Toexplore, did you try running `CHECKPOINT`?\r\n> \r\n> For more context, see the documentation's section on [Limitations on Reclaiming Memory and Disk Space](https://duckdb.org/docs/sql/statements/delete#limitations-on-reclaiming-memory-and-disk-space).\r\n\r\nYes, I have performed a checkpoint, but it seems to have had no effect.\r\n```\r\ncheckpoint;\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 Success \u2502\r\n\u2502 boolean \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 0 rows  \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\nMytherin has a better handle on this, but if I recall correctly the way vacuuming works is we can reduce db filesize by truncating the unused blocks at the end\r\nWe don't (currently) close gaps caused by unused blocks inbetween\r\n\r\nSo what I think is happening is that there are still blocks after the blocks you have vacated by removing the tables, making it so we can't truncate\nCould you try to see what the results of `FROM pragma_metadata_info()` are?\r\nThose should show you which blocks are still being used, which are free and also the block ids, which can help determine if they are blocking a file truncation\nRelevant Discord discussion that was dealing with the same issue\r\n<https://discord.com/channels/909674491309850675/921073327009853451/1202313395466928138>\r\n\r\n@szarnyasg perhaps we should include some of this in the docs, because it's come up a couple times\r\n\"Troubleshooting database file size reduction\" perhaps?\n> Could you try to see what the results of `FROM pragma_metadata_info()` are? Those should show you which blocks are still being used, which are free and also the block ids, which can help determine if they are blocking a file truncation\r\n\r\nThe result of `FROM pragma_metadata_info()`\r\n```\r\nFROM pragma_metadata_info();\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 block_id \u2502 total_blocks \u2502 free_blocks \u2502                                                                                free_list                                                                                 \u2502\r\n\u2502  int64   \u2502    int64     \u2502    int64    \u2502                                                                                 int64[]                                                                                  \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502      323 \u2502           64 \u2502          62 \u2502 [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 4\u2026  \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n```\nYea that sounds like the metadata is occupying block id 323, meaning anything before that block id can not be vacuumed\r\nwhich I think comes out to `262144 (block size in bytes) * 323` bytes being taken up, which comes out to `84,672512` megabytes\nI believe that means there's still a database object present (like a table), recreating that object should pick a lower block id for the metadata, allowing the db file to be truncated\nin duckdb 0.9.x db size very stable but in 0.10.x take much more here a simple test \r\n\r\nduckdb 9:\r\ncreate table test_table as select * from '/tmp/test_table.parquet' ;\r\ndb file size:  8.2G\r\n\r\nduckdb 0.10.3\r\ndb file size  15G \r\n\r\nparquet file: 654M compressed with zstd\r\n\n> I believe that means there's still a database object present (like a table), recreating that object should pick a lower block id for the metadata, allowing the db file to be truncated\r\n\r\nI performed functions such as duckdb_indexes(), duckdb_tables(), duckdb_indexes(), but found nothing.\r\nCan you reproduce it?\n> > I believe that means there's still a database object present (like a table), recreating that object should pick a lower block id for the metadata, allowing the db file to be truncated\r\n> \r\n> I performed functions such as duckdb_indexes(), duckdb_tables(), duckdb_indexes(), but found nothing. Can you reproduce it?\r\n\r\nI recreated the same table and then drop it again, the file size is still more than 80MB. \nif  I delete all tuples in the table at once, the size of vacuum1.db is `8.8MB`, not `89MB`\r\n\r\n```\r\n./duckdb vacuum1.db\r\n\r\nCREATE TABLE test (x INT, y AS (x + 100));\r\ninsert into test select range FROM range(1000000000);\r\ndelete from test;\r\ncheckpoint;\r\n```\r\n\r\n\r\n\r\n\nWhen I create the table, the db size is 9.1~9.2mb (9187328 bytes)\r\nThis shoots up to 177.7mb (177745920 bytes) after the first delete, which is probably caused by the reduction of compression ratio\r\nNext delete it increases to 344.5mb (344993792 bytes), again likely due to compressability dropping\r\nNext it's 379596800 bytes\r\nNext it's 379072512 bytes\r\nNext it's 534786048 bytes\r\nNext it's 534786048 bytes, (likely because we already deleted the data that this filter matched?)\r\nNext it's 534786048 bytes (still hasn't gone down)\r\nNext it's 534786048 bytes (still hasn't gone down)\r\n\r\nI believe the reason this hasn't gone down is again that earlier blocks are deleted, but later blocks still exist\r\nSo we have large empty gaps that we aren't closing currently\r\n\r\nWhen we delete the rows `x % 10 = 8` we go back down to 177745920 bytes\r\nAnd with the final delete we stay at 177745920 bytes\r\n\r\n```\r\nD select * from pragma_metadata_info();\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 block_id \u2502 total_blocks \u2502 free_blocks \u2502                                                                              free_list                                                                               \u2502\r\n\u2502  int64   \u2502    int64     \u2502    int64    \u2502                                                                               int64[]                                                                                \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502      677 \u2502           64 \u2502          57 \u2502 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,\u2026  \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\nI can confirm that it won't reduce in size, even after `create or replace table test as select * from test;`\r\n\r\n\r\n\nOne last thing to add, using COPY FROM DATABASE <https://duckdb.org/docs/sql/statements/copy#copy-from-database--to> this can be used as a workaround\r\n\r\n```sql\r\nattach 'tmp/vacuum2.db' as db2;\r\ncopy from database vacuum to db2;\r\n```\r\n\r\n```\r\n\u279c  duckdb git:(main) \u2717 stat -f \"%z\" tmp/vacuum2.db          \r\n274432\r\n```\r\n\r\n```\r\n./duckdb tmp/vacuum2.db\r\nD select * from pragma_metadata_info();\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 block_id \u2502 total_blocks \u2502 free_blocks \u2502                                                                              free_list                                                                               \u2502\r\n\u2502  int64   \u2502    int64     \u2502    int64    \u2502                                                                               int64[]                                                                                \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502        0 \u2502           64 \u2502          60 \u2502 [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,\u2026  \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\nThis is recreating the metadata block at block id 0, fixing the issue",
  "created_at": "2024-05-30T11:56:14Z"
}