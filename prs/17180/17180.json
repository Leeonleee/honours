{
    "repo": "duckdb/duckdb",
    "pull_number": 17180,
    "instance_id": "duckdb__duckdb-17180",
    "issue_numbers": [
        "17170",
        "17170"
    ],
    "base_commit": "92a5b7b32fb014e0fabe92cd6c1e95945fb6679c",
    "patch": "diff --git a/src/common/types/selection_vector.cpp b/src/common/types/selection_vector.cpp\nindex a65319a31d72..52f7f46a55c8 100644\n--- a/src/common/types/selection_vector.cpp\n+++ b/src/common/types/selection_vector.cpp\n@@ -28,6 +28,10 @@ string SelectionVector::ToString(idx_t count) const {\n \treturn result;\n }\n \n+void SelectionVector::Sort(idx_t count) {\n+\tstd::sort(sel_vector, sel_vector + count);\n+}\n+\n void SelectionVector::Print(idx_t count) const {\n \tPrinter::Print(ToString(count));\n }\ndiff --git a/src/execution/expression_executor/execute_conjunction.cpp b/src/execution/expression_executor/execute_conjunction.cpp\nindex 1b2bc3a4ea6a..d7488a639a25 100644\n--- a/src/execution/expression_executor/execute_conjunction.cpp\n+++ b/src/execution/expression_executor/execute_conjunction.cpp\n@@ -130,6 +130,9 @@ idx_t ExpressionExecutor::Select(const BoundConjunctionExpression &expr, Express\n \t\t\t\tcurrent_sel = false_sel;\n \t\t\t}\n \t\t}\n+\t\tif (true_sel) {\n+\t\t\ttrue_sel->Sort(result_count);\n+\t\t}\n \n \t\t// adapt runtime statistics\n \t\tstate.adaptive_filter->EndFilter(filter_state);\ndiff --git a/src/include/duckdb/common/types/selection_vector.hpp b/src/include/duckdb/common/types/selection_vector.hpp\nindex 5aa104758652..4074c80cc574 100644\n--- a/src/include/duckdb/common/types/selection_vector.hpp\n+++ b/src/include/duckdb/common/types/selection_vector.hpp\n@@ -116,6 +116,7 @@ struct SelectionVector {\n \t\treturn sel_vector;\n \t}\n \tvoid Verify(idx_t count, idx_t vector_size) const;\n+\tvoid Sort(idx_t count);\n \n private:\n \tsel_t *sel_vector;\n",
    "test_patch": "diff --git a/test/sql/conjunction/or_comparison.test b/test/sql/conjunction/or_comparison.test\nindex aaa4b994c0e6..9b9d950bf807 100644\n--- a/test/sql/conjunction/or_comparison.test\n+++ b/test/sql/conjunction/or_comparison.test\n@@ -48,3 +48,9 @@ SELECT pk FROM tab0 WHERE col0 < 84 OR col0 < 8 ;\n 5\n 7\n 8\n+\n+query I\n+select pk from tab0 where col0 = 37 or col0 = 86\n+----\n+0\n+1\n",
    "problem_statement": "No order preservation for OR in where clause\n### What happens?\n\nhttps://duckdb.org/docs/stable/sql/dialect/order_preservation.html says that the prefer of results is preserved with where clauses. But this does not work when there is an `or` in the query.\n\n### To Reproduce\n\n```sql\nCREATE TABLE tbl AS\n    SELECT *\n    FROM (VALUES (1, 'a'), (2, 'b'), (3, 'c')) t(x, y);\n\nSELECT *\nFROM tbl;\n```\n\n```sql\n select * from tbl where y = 'b' or y = 'a';\n```\n\nResults in \n\n```\n┌───────┬─────────┐\n│   x   │    y    │\n│ int32 │ varchar │\n├───────┼─────────┤\n│     2 │ b       │\n│     1 │ a       │\n└───────┴─────────┘\n```\n\nwhen it should be \n\n```\n┌───────┬─────────┐\n│   x   │    y    │\n│ int32 │ varchar │\n├───────┼─────────┤\n│     1 │ a       │\n│     2 │ b       │\n└───────┴─────────┘\n```\n\n### OS:\n\nmacOS\n\n### DuckDB Version:\n\nv1.2.2 7c039464e4\n\n### DuckDB Client:\n\nCLI\n\n### Hardware:\n\n_No response_\n\n### Full Name:\n\nDominik Moritz\n\n### Affiliation:\n\nCMU\n\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\n\nI have tested with a stable release\n\n### Did you include all relevant data sets for reproducing the issue?\n\nYes\n\n### Did you include all code required to reproduce the issue?\n\n- [x] Yes, I have\n\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\n\n- [ ] Yes, I have\nNo order preservation for OR in where clause\n### What happens?\n\nhttps://duckdb.org/docs/stable/sql/dialect/order_preservation.html says that the prefer of results is preserved with where clauses. But this does not work when there is an `or` in the query.\n\n### To Reproduce\n\n```sql\nCREATE TABLE tbl AS\n    SELECT *\n    FROM (VALUES (1, 'a'), (2, 'b'), (3, 'c')) t(x, y);\n\nSELECT *\nFROM tbl;\n```\n\n```sql\n select * from tbl where y = 'b' or y = 'a';\n```\n\nResults in \n\n```\n┌───────┬─────────┐\n│   x   │    y    │\n│ int32 │ varchar │\n├───────┼─────────┤\n│     2 │ b       │\n│     1 │ a       │\n└───────┴─────────┘\n```\n\nwhen it should be \n\n```\n┌───────┬─────────┐\n│   x   │    y    │\n│ int32 │ varchar │\n├───────┼─────────┤\n│     1 │ a       │\n│     2 │ b       │\n└───────┴─────────┘\n```\n\n### OS:\n\nmacOS\n\n### DuckDB Version:\n\nv1.2.2 7c039464e4\n\n### DuckDB Client:\n\nCLI\n\n### Hardware:\n\n_No response_\n\n### Full Name:\n\nDominik Moritz\n\n### Affiliation:\n\nCMU\n\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\n\nI have tested with a stable release\n\n### Did you include all relevant data sets for reproducing the issue?\n\nYes\n\n### Did you include all code required to reproduce the issue?\n\n- [x] Yes, I have\n\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\n\n- [ ] Yes, I have\n",
    "hints_text": "\n",
    "created_at": "2025-04-18T11:15:17Z"
}