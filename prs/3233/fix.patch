diff --git a/extension/parquet/column_reader.cpp b/extension/parquet/column_reader.cpp
index fe51325b83df..f3f39379f218 100644
--- a/extension/parquet/column_reader.cpp
+++ b/extension/parquet/column_reader.cpp
@@ -620,6 +620,15 @@ ListColumnReader::ListColumnReader(ParquetReader &reader, LogicalType type_p, co
 	child_filter.set();
 }
 
+// ListColumnReader::Read(uint64_t num_values, parquet_filter_t &filter, uint8_t *define_out, uint8_t *repeat_out,
+//                             Vector &result_out)
+void ListColumnReader::Skip(idx_t num_values) {
+	parquet_filter_t filter;
+	auto define_out = unique_ptr<uint8_t[]>(new uint8_t[num_values]);
+	auto repeat_out = unique_ptr<uint8_t[]>(new uint8_t[num_values]);
+	Vector result_out(Type());
+	Read(num_values, filter, define_out.get(), repeat_out.get(), result_out);
+}
 //===--------------------------------------------------------------------===//
 // Struct Column Reader
 //===--------------------------------------------------------------------===//
@@ -667,7 +676,9 @@ idx_t StructColumnReader::Read(uint64_t num_values, parquet_filter_t &filter, ui
 }
 
 void StructColumnReader::Skip(idx_t num_values) {
-	throw InternalException("Skip not implemented for StructColumnReader");
+	for (auto &child_reader : child_readers) {
+		child_reader->Skip(num_values);
+	}
 }
 
 idx_t StructColumnReader::GroupRowsAvailable() {
diff --git a/extension/parquet/include/list_column_reader.hpp b/extension/parquet/include/list_column_reader.hpp
index b4ccd4842def..e734079ce2dc 100644
--- a/extension/parquet/include/list_column_reader.hpp
+++ b/extension/parquet/include/list_column_reader.hpp
@@ -21,9 +21,7 @@ class ListColumnReader : public ColumnReader {
 	idx_t Read(uint64_t num_values, parquet_filter_t &filter, uint8_t *define_out, uint8_t *repeat_out,
 	           Vector &result_out) override;
 
-	virtual void Skip(idx_t num_values) override {
-		D_ASSERT(0);
-	}
+	void Skip(idx_t num_values) override;
 
 	void InitializeRead(const std::vector<ColumnChunk> &columns, TProtocol &protocol_p) override {
 		child_column_reader->InitializeRead(columns, protocol_p);
