{
  "repo": "duckdb/duckdb",
  "pull_number": 3234,
  "instance_id": "duckdb__duckdb-3234",
  "issue_numbers": [
    "3222",
    "3222"
  ],
  "base_commit": "a004ed237f40bf9a6d916731207b958abb912db6",
  "patch": "diff --git a/extension/parquet/include/parquet_rle_bp_decoder.hpp b/extension/parquet/include/parquet_rle_bp_decoder.hpp\nindex 38a45468e7ff..83a69516849a 100644\n--- a/extension/parquet/include/parquet_rle_bp_decoder.hpp\n+++ b/extension/parquet/include/parquet_rle_bp_decoder.hpp\n@@ -25,7 +25,7 @@ class RleBpDecoder {\n \t\t\tthrow std::runtime_error(\"Decode bit width too large\");\n \t\t}\n \t\tbyte_encoded_len = ((bit_width_ + 7) / 8);\n-\t\tmax_val = (1 << bit_width_) - 1;\n+\t\tmax_val = (uint64_t(1) << bit_width_) - 1;\n \t}\n \n \ttemplate <typename T>\n@@ -77,12 +77,12 @@ class RleBpDecoder {\n \tByteBuffer buffer_;\n \n \t/// Number of bits needed to encode the value. Must be between 0 and 64.\n-\tint bit_width_;\n+\tuint32_t bit_width_;\n \tuint64_t current_value_;\n \tuint32_t repeat_count_;\n \tuint32_t literal_count_;\n \tuint8_t byte_encoded_len;\n-\tuint32_t max_val;\n+\tuint64_t max_val;\n \n \tuint8_t bitpack_pos = 0;\n \n",
  "test_patch": "diff --git a/test/sql/copy/parquet/test_yellow_cab.test_slow b/test/sql/copy/parquet/test_yellow_cab.test_slow\nnew file mode 100644\nindex 000000000000..7c9014f5afee\n--- /dev/null\n+++ b/test/sql/copy/parquet/test_yellow_cab.test_slow\n@@ -0,0 +1,34 @@\n+# name: test/sql/copy/parquet/test_yellow_cab.test_slow\n+# description: Test yellow cab parquet file\n+# group: [parquet]\n+\n+require parquet\n+\n+require httpfs\n+\n+statement ok\n+CREATE TABLE yellow_cab AS SELECT * FROM 'https://github.com/cwida/duckdb-data/releases/download/v1.0/yellowcab.parquet'\n+\n+statement ok\n+PRAGMA enable_verification\n+\n+query IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\n+select min(VendorID::VARCHAR), max(VendorID::VARCHAR), min(tpep_pickup_datetime::VARCHAR), max(tpep_pickup_datetime::VARCHAR), min(tpep_dropoff_datetime::VARCHAR), max(tpep_dropoff_datetime::VARCHAR), min(passenger_count::VARCHAR), max(passenger_count::VARCHAR), min(trip_distance::VARCHAR), max(trip_distance::VARCHAR), min(pickup_longitude::VARCHAR), max(pickup_longitude::VARCHAR), min(pickup_latitude::VARCHAR), max(pickup_latitude::VARCHAR), min(RatecodeID::VARCHAR), max(RatecodeID::VARCHAR), min(store_and_fwd_flag::VARCHAR), max(store_and_fwd_flag::VARCHAR), min(dropoff_longitude::VARCHAR), max(dropoff_longitude::VARCHAR), min(dropoff_latitude::VARCHAR), max(dropoff_latitude::VARCHAR), min(payment_type::VARCHAR), max(payment_type::VARCHAR), min(fare_amount::VARCHAR), max(fare_amount::VARCHAR), min(extra::VARCHAR), max(extra::VARCHAR), min(mta_tax::VARCHAR), max(mta_tax::VARCHAR), min(tip_amount::VARCHAR), max(tip_amount::VARCHAR), min(tolls_amount::VARCHAR), max(tolls_amount::VARCHAR), min(improvement_surcharge::VARCHAR), max(improvement_surcharge::VARCHAR), min(total_amount::VARCHAR), max(total_amount::VARCHAR) from yellow_cab;\n+----\n+1\t2\t2016-01-01 00:00:00\t2016-01-29 12:08:57\t2016-01-01 00:00:00\t2016-01-30 12:05:11\t0\t8\t.00\t97.40\t-0.13990700244903564\t0\t0\t57.269275665283203\t1\t99\t(empty)\tY\t-73.210006713867188\t0\t0\t41.317001342773437\t1\t4\t-10\t998\t-0.5\t2.0\t-0.5\t0.5\t0\t998.14\t-10.5\t9.75\t-0.3\t0.3\t-10.8\t998.3\n+\n+\n+# writer round-trip\n+statement ok\n+COPY yellow_cab TO '__TEST_DIR__/yellowcab.parquet' (FORMAT PARQUET);\n+\n+query IIIIIIIIIIIIIIIIIII nosort yellowcab\n+SELECT * FROM yellow_cab\n+----\n+\n+query IIIIIIIIIIIIIIIIIII nosort yellowcab\n+SELECT * FROM '__TEST_DIR__/yellowcab.parquet'\n+----\n+\n+\n+\n",
  "problem_statement": "Query parquet file throws runtime error: \"Payload value bigger than allowed. Corrupted file?\"\n#### What happens?\r\nQuery parquet file with DuckDB throws this error: `Payload value bigger than allowed. Corrupted file?`. And I was able to read the same parquet file with other tools such as `parquet-tools` and `parquet-cli`.\r\n\r\n#### To Reproduce\r\n1. Download the parquet file: `wget https://github.com/guihaojin/duckdb/raw/master/yellowcab.parquet`.\r\n2. In DuckDB CLI, run a SQL query: `select * from 'yellowcab.parquet' limit 5;`.\r\n\r\n#### Environment (please complete the following information):\r\n - OS: MacOS v12.1\r\n - DuckDB Version: 3.2\r\n - DuckDB Client: CLI / Python\r\n\r\n#### Before Submitting\r\n\r\n- [Yes] **Have you tried this on the latest `master` branch?**\r\n* **Python**: `pip install duckdb --upgrade --pre`\r\n* **R**: `install.packages(\"https://github.com/duckdb/duckdb/releases/download/master-builds/duckdb_r_src.tar.gz\", repos = NULL)`\r\n* **Other Platforms**: You can find binaries [here](https://github.com/duckdb/duckdb/releases/tag/master-builds) or compile from source.\r\n\r\n- [Yes] **Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?**\r\n\nQuery parquet file throws runtime error: \"Payload value bigger than allowed. Corrupted file?\"\n#### What happens?\r\nQuery parquet file with DuckDB throws this error: `Payload value bigger than allowed. Corrupted file?`. And I was able to read the same parquet file with other tools such as `parquet-tools` and `parquet-cli`.\r\n\r\n#### To Reproduce\r\n1. Download the parquet file: `wget https://github.com/guihaojin/duckdb/raw/master/yellowcab.parquet`.\r\n2. In DuckDB CLI, run a SQL query: `select * from 'yellowcab.parquet' limit 5;`.\r\n\r\n#### Environment (please complete the following information):\r\n - OS: MacOS v12.1\r\n - DuckDB Version: 3.2\r\n - DuckDB Client: CLI / Python\r\n\r\n#### Before Submitting\r\n\r\n- [Yes] **Have you tried this on the latest `master` branch?**\r\n* **Python**: `pip install duckdb --upgrade --pre`\r\n* **R**: `install.packages(\"https://github.com/duckdb/duckdb/releases/download/master-builds/duckdb_r_src.tar.gz\", repos = NULL)`\r\n* **Other Platforms**: You can find binaries [here](https://github.com/duckdb/duckdb/releases/tag/master-builds) or compile from source.\r\n\r\n- [Yes] **Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?**\r\n\n",
  "hints_text": "\n",
  "created_at": "2022-03-15T10:28:38Z"
}