{
  "repo": "duckdb/duckdb",
  "pull_number": 14053,
  "instance_id": "duckdb__duckdb-14053",
  "issue_numbers": [
    "13934",
    "13934"
  ],
  "base_commit": "4fe3dc559d10648691f9ab34f20207771890dd45",
  "patch": "diff --git a/src/core_functions/aggregate/distributive/arg_min_max.cpp b/src/core_functions/aggregate/distributive/arg_min_max.cpp\nindex 5120bc797cd9..be64b065f509 100644\n--- a/src/core_functions/aggregate/distributive/arg_min_max.cpp\n+++ b/src/core_functions/aggregate/distributive/arg_min_max.cpp\n@@ -192,7 +192,7 @@ struct GenericArgMinMaxState {\n \n \tstatic void PrepareData(Vector &by, idx_t count, Vector &extra_state, UnifiedVectorFormat &result) {\n \t\tOrderModifiers modifiers(ORDER_TYPE, OrderByNullType::NULLS_LAST);\n-\t\tCreateSortKeyHelpers::CreateSortKey(by, count, modifiers, extra_state);\n+\t\tCreateSortKeyHelpers::CreateSortKeyWithValidity(by, extra_state, modifiers, count);\n \t\textra_state.ToUnifiedFormat(count, result);\n \t}\n };\ndiff --git a/src/include/duckdb/core_functions/aggregate/minmax_n_helpers.hpp b/src/include/duckdb/core_functions/aggregate/minmax_n_helpers.hpp\nindex 09b0bb7d98d0..6dbdb8bce800 100644\n--- a/src/include/duckdb/core_functions/aggregate/minmax_n_helpers.hpp\n+++ b/src/include/duckdb/core_functions/aggregate/minmax_n_helpers.hpp\n@@ -1,7 +1,14 @@\n #pragma once\n \n-#include \"duckdb/common/vector.hpp\"\n+#include \"duckdb/common/common.hpp\"\n+#include \"duckdb/storage/arena_allocator.hpp\"\n #include \"duckdb/common/algorithm.hpp\"\n+#include \"duckdb/common/pair.hpp\"\n+#include \"duckdb/common/types/string_type.hpp\"\n+#include \"duckdb/common/types/vector.hpp\"\n+#include \"duckdb/common/enums/order_type.hpp\"\n+#include \"duckdb/function/aggregate_function.hpp\"\n+#include \"duckdb/core_functions/create_sort_key.hpp\"\n \n namespace duckdb {\n \n@@ -294,11 +301,8 @@ struct MinMaxFallbackValue {\n \n \tstatic void PrepareData(Vector &input, const idx_t count, EXTRA_STATE &extra_state, UnifiedVectorFormat &format) {\n \t\tconst OrderModifiers modifiers(OrderType::ASCENDING, OrderByNullType::NULLS_LAST);\n-\t\tCreateSortKeyHelpers::CreateSortKey(input, count, modifiers, extra_state);\n+\t\tCreateSortKeyHelpers::CreateSortKeyWithValidity(input, extra_state, modifiers, count);\n \t\tinput.Flatten(count);\n-\t\textra_state.Flatten(count);\n-\t\t// Ensure the validity vectors match, because we want to ignore nulls\n-\t\tFlatVector::Validity(extra_state).Initialize(FlatVector::Validity(input));\n \t\textra_state.ToUnifiedFormat(count, format);\n \t}\n };\n",
  "test_patch": "diff --git a/test/sql/aggregate/aggregates/test_arg_min_max.test b/test/sql/aggregate/aggregates/test_arg_min_max.test\nindex 23fa937af1ac..d7781a51116d 100644\n--- a/test/sql/aggregate/aggregates/test_arg_min_max.test\n+++ b/test/sql/aggregate/aggregates/test_arg_min_max.test\n@@ -193,3 +193,8 @@ FROM employees;\n 1030\n \n endloop\n+\n+query I\n+SELECT max_by(c0, c1) FROM (values (1, null)) t(c0,c1);\n+----\n+NULL\n",
  "problem_statement": "max_by/min_by() new behavior - feature or bug?\n### What happens?\r\n\r\nThe behavior of min_by() and max_by() has changed in the new 1.1.0 release. `max_by(a, b)` seems to now return `a` if there is a `null` in `b`, instead of returning `null` like in the previous version (I tested at least until 0.8.1). Returning null is the behavior of other engines like Presto (and perhaps the most intuitive for users?)\r\n\r\nWas the change a feature or a bug? (please close in case the change was intentional)\r\n\r\n### To Reproduce\r\n\r\n```\r\npedroerp@fedora:~/Github/duck-0.8.1$ ./duckdb \r\nv0.8.1 6536a77232\r\nEnter \".help\" for usage hints.\r\nConnected to a transient in-memory database.\r\nUse \".open FILENAME\" to reopen on a persistent database.\r\n```\r\n```sql\r\nSELECT max_by(c0, c1) FROM (values (1, null)) t(c0,c1);\r\n```\r\n```\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 max_by(c0, c1) \u2502\r\n\u2502     int32      \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502                \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n```\r\npedroerp@fedora:~/Github/duck-0.8.1$ cd ../duck-1.1.0/\r\npedroerp@fedora:~/Github/duck-1.1.0$ ./duckdb \r\nv1.1.0 fa5c2fe15f\r\nEnter \".help\" for usage hints.\r\nConnected to a transient in-memory database.\r\nUse \".open FILENAME\" to reopen on a persistent database.\r\n```\r\n```sql\r\nSELECT max_by(c0, c1) FROM (values (1, null)) t(c0,c1);\r\n```\r\n```\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 max_by(c0, c1) \u2502\r\n\u2502     int32      \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502              1 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n### OS:\r\n\r\nFedora\r\n\r\n### DuckDB Version:\r\n\r\n1.1.0 and 0.8.1\r\n\r\n### DuckDB Client:\r\n\r\nCommand line client\r\n\r\n### Hardware:\r\n\r\n_No response_\r\n\r\n### Full Name:\r\n\r\nPedro Pedreira\r\n\r\n### Affiliation:\r\n\r\nMeta\r\n\r\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\r\n\r\nI have tested with a stable release\r\n\r\n### Did you include all relevant data sets for reproducing the issue?\r\n\r\nYes\r\n\r\n### Did you include all code required to reproduce the issue?\r\n\r\n- [X] Yes, I have\r\n\r\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\r\n\r\n- [X] Yes, I have\nmax_by/min_by() new behavior - feature or bug?\n### What happens?\r\n\r\nThe behavior of min_by() and max_by() has changed in the new 1.1.0 release. `max_by(a, b)` seems to now return `a` if there is a `null` in `b`, instead of returning `null` like in the previous version (I tested at least until 0.8.1). Returning null is the behavior of other engines like Presto (and perhaps the most intuitive for users?)\r\n\r\nWas the change a feature or a bug? (please close in case the change was intentional)\r\n\r\n### To Reproduce\r\n\r\n```\r\npedroerp@fedora:~/Github/duck-0.8.1$ ./duckdb \r\nv0.8.1 6536a77232\r\nEnter \".help\" for usage hints.\r\nConnected to a transient in-memory database.\r\nUse \".open FILENAME\" to reopen on a persistent database.\r\n```\r\n```sql\r\nSELECT max_by(c0, c1) FROM (values (1, null)) t(c0,c1);\r\n```\r\n```\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 max_by(c0, c1) \u2502\r\n\u2502     int32      \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502                \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n```\r\npedroerp@fedora:~/Github/duck-0.8.1$ cd ../duck-1.1.0/\r\npedroerp@fedora:~/Github/duck-1.1.0$ ./duckdb \r\nv1.1.0 fa5c2fe15f\r\nEnter \".help\" for usage hints.\r\nConnected to a transient in-memory database.\r\nUse \".open FILENAME\" to reopen on a persistent database.\r\n```\r\n```sql\r\nSELECT max_by(c0, c1) FROM (values (1, null)) t(c0,c1);\r\n```\r\n```\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 max_by(c0, c1) \u2502\r\n\u2502     int32      \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502              1 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n### OS:\r\n\r\nFedora\r\n\r\n### DuckDB Version:\r\n\r\n1.1.0 and 0.8.1\r\n\r\n### DuckDB Client:\r\n\r\nCommand line client\r\n\r\n### Hardware:\r\n\r\n_No response_\r\n\r\n### Full Name:\r\n\r\nPedro Pedreira\r\n\r\n### Affiliation:\r\n\r\nMeta\r\n\r\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\r\n\r\nI have tested with a stable release\r\n\r\n### Did you include all relevant data sets for reproducing the issue?\r\n\r\nYes\r\n\r\n### Did you include all code required to reproduce the issue?\r\n\r\n- [X] Yes, I have\r\n\r\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\r\n\r\n- [X] Yes, I have\n",
  "hints_text": "\n",
  "created_at": "2024-09-20T11:28:48Z"
}