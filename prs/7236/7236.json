{
  "repo": "duckdb/duckdb",
  "pull_number": 7236,
  "instance_id": "duckdb__duckdb-7236",
  "issue_numbers": [
    "7119",
    "7119",
    "7120"
  ],
  "base_commit": "094226ff6959a9c5a5c3556b67f97337a6742800",
  "patch": "diff --git a/src/planner/binder/statement/bind_create.cpp b/src/planner/binder/statement/bind_create.cpp\nindex 4d592f0118be..114f9d3abe2f 100644\n--- a/src/planner/binder/statement/bind_create.cpp\n+++ b/src/planner/binder/statement/bind_create.cpp\n@@ -301,8 +301,17 @@ static void FindMatchingPrimaryKeyColumns(const ColumnList &columns, const vecto\n \t\t\tfk.pk_columns = pk_names;\n \t\t\treturn;\n \t\t}\n-\t\tif (fk.pk_columns != pk_names) {\n-\t\t\t// Name mismatch\n+\t\tif (fk.pk_columns.size() != pk_names.size()) {\n+\t\t\tcontinue;\n+\t\t}\n+\t\tbool equals = true;\n+\t\tfor (idx_t i = 0; i < fk.pk_columns.size(); i++) {\n+\t\t\tif (!StringUtil::CIEquals(fk.pk_columns[i], pk_names[i])) {\n+\t\t\t\tequals = false;\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t\t}\n+\t\tif (!equals) {\n \t\t\tcontinue;\n \t\t}\n \t\t// found match\n@@ -540,7 +549,7 @@ BoundStatement Binder::Bind(CreateStatement &stmt) {\n \t\t\tD_ASSERT(fk.info.pk_keys.empty());\n \t\t\tD_ASSERT(fk.info.fk_keys.empty());\n \t\t\tFindForeignKeyIndexes(create_info.columns, fk.fk_columns, fk.info.fk_keys);\n-\t\t\tif (create_info.table == fk.info.table) {\n+\t\t\tif (StringUtil::CIEquals(create_info.table, fk.info.table)) {\n \t\t\t\t// self-referential foreign key constraint\n \t\t\t\tfk.info.type = ForeignKeyType::FK_TYPE_SELF_REFERENCE_TABLE;\n \t\t\t\tFindMatchingPrimaryKeyColumns(create_info.columns, create_info.constraints, fk);\n",
  "test_patch": "diff --git a/test/sql/constraints/foreignkey/fk_case_insensitivity.test b/test/sql/constraints/foreignkey/fk_case_insensitivity.test\nnew file mode 100644\nindex 000000000000..39922acfac98\n--- /dev/null\n+++ b/test/sql/constraints/foreignkey/fk_case_insensitivity.test\n@@ -0,0 +1,29 @@\n+# name: test/sql/constraints/foreignkey/fk_case_insensitivity.test\n+# description: Issue #7119/#7120: foreign key case insensitivity\n+# group: [foreignkey]\n+\n+statement ok\n+PRAGMA enable_verification\n+\n+# issue 7119\n+statement ok\n+create table a (a int not null, constraint pk_a primary key (A));\n+\n+statement ok\n+create table b (a int references a (a));\n+\n+statement ok\n+drop table b;\n+\n+statement ok\n+drop table a;\n+\n+# issue 7120\n+statement ok\n+create table a (i int primary key);\n+\n+statement ok\n+create table b (i int references A (i));\n+\n+statement ok\n+create table c (i int primary key, j int references C (i));\n",
  "problem_statement": "Foreign key REFERENCES column list is case sensitive when looking up primary keys\n### What happens?\r\n\r\nIt seems that DuckDB doesn't really have case sensitive identifiers. But there's an exception when declaring a `PRIMARY KEY` column list, then the `REFERENCING` column lists must have matching cases, which I think is a bug.\r\n\r\nProbably related: \r\n\r\n- https://github.com/duckdb/duckdb/issues/2075\r\n- https://github.com/duckdb/duckdb/issues/7120\r\n\r\n### To Reproduce\r\n\r\nThis doesn't work:\r\n\r\n```sql\r\ncreate table a (a int not null, constraint pk_a primary key (A));\r\ncreate table b (a int references a (a));\r\n```\r\n\r\nThere's an error:\r\n\r\n> Binder Error: Failed to create foreign key: referenced table \"a\" does not have a primary key or unique constraint on the columns a\r\n\r\nTo fix this error, either declare the column list of the `PRIMARY KEY` in lower case:\r\n\r\n```sql\r\ncreate table a (a int not null, constraint pk_a primary key (a));\r\ncreate table b (a int references a (a));\r\n```\r\n\r\nOr use matching upper case in both `PRIMARY KEY` and `REFERENCES` list:\r\n\r\n```sql\r\ncreate table a (a int not null, constraint pk_a primary key (A));\r\ncreate table b (a int references a (A));\r\n```\r\n\r\nThis took me a while to pinpoint, very subtle, especially since the error message is quite misleading :)\r\n\r\n### OS:\r\n\r\nMicrosoft Windows [Version 10.0.22621.1555]\r\n\r\n### DuckDB Version:\r\n\r\nv0.7.1\r\n\r\n### DuckDB Client:\r\n\r\nJDBC\r\n\r\n### Full Name:\r\n\r\nLukas Eder\r\n\r\n### Affiliation:\r\n\r\nData Geekery / jOOQ\r\n\r\n### Have you tried this on the latest `master` branch?\r\n\r\n- [X] I agree\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] I agree\nForeign key REFERENCES column list is case sensitive when looking up primary keys\n### What happens?\r\n\r\nIt seems that DuckDB doesn't really have case sensitive identifiers. But there's an exception when declaring a `PRIMARY KEY` column list, then the `REFERENCING` column lists must have matching cases, which I think is a bug.\r\n\r\nProbably related: \r\n\r\n- https://github.com/duckdb/duckdb/issues/2075\r\n- https://github.com/duckdb/duckdb/issues/7120\r\n\r\n### To Reproduce\r\n\r\nThis doesn't work:\r\n\r\n```sql\r\ncreate table a (a int not null, constraint pk_a primary key (A));\r\ncreate table b (a int references a (a));\r\n```\r\n\r\nThere's an error:\r\n\r\n> Binder Error: Failed to create foreign key: referenced table \"a\" does not have a primary key or unique constraint on the columns a\r\n\r\nTo fix this error, either declare the column list of the `PRIMARY KEY` in lower case:\r\n\r\n```sql\r\ncreate table a (a int not null, constraint pk_a primary key (a));\r\ncreate table b (a int references a (a));\r\n```\r\n\r\nOr use matching upper case in both `PRIMARY KEY` and `REFERENCES` list:\r\n\r\n```sql\r\ncreate table a (a int not null, constraint pk_a primary key (A));\r\ncreate table b (a int references a (A));\r\n```\r\n\r\nThis took me a while to pinpoint, very subtle, especially since the error message is quite misleading :)\r\n\r\n### OS:\r\n\r\nMicrosoft Windows [Version 10.0.22621.1555]\r\n\r\n### DuckDB Version:\r\n\r\nv0.7.1\r\n\r\n### DuckDB Client:\r\n\r\nJDBC\r\n\r\n### Full Name:\r\n\r\nLukas Eder\r\n\r\n### Affiliation:\r\n\r\nData Geekery / jOOQ\r\n\r\n### Have you tried this on the latest `master` branch?\r\n\r\n- [X] I agree\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] I agree\nForeign key REFERENCES table is case sensitive in the case of a self-reference, but not otherwise\n### What happens?\n\nIt seems that DuckDB doesn't really have case sensitive identifiers. But there's an exception when self-referencing a table, in case of which the `REFERENCING` table must match the declared table case.\r\n\r\nProbably related: \r\n\r\n- https://github.com/duckdb/duckdb/issues/2075\r\n- https://github.com/duckdb/duckdb/issues/7119\n\n### To Reproduce\n\nThis works:\r\n\r\n```sql\r\ncreate table a (i int primary key);\r\ncreate table b (i int references A (i)); -- A is upper case here, but it was declared lower case\r\n```\r\n\r\nBut this doesn't work:\r\n\r\n```sql\r\ncreate table c (i int primary key, j int references C (i));\r\n```\r\n\r\nThere's an error:\r\n\r\n> Table with name C does not exist!\r\n\r\nI have to use a matching cases:\r\n\r\n```sql\r\ncreate table c (i int primary key, j int references c (i));\r\n```\n\n### OS:\n\nMicrosoft Windows [Version 10.0.22621.1555]\n\n### DuckDB Version:\n\nv0.7.1\n\n### DuckDB Client:\n\nJDBC\n\n### Full Name:\n\nLukas Eder\n\n### Affiliation:\n\nData Geekery / jOOQ\n\n### Have you tried this on the latest `master` branch?\n\n- [X] I agree\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] I agree\n",
  "hints_text": "\n\n",
  "created_at": "2023-04-25T14:32:09Z"
}