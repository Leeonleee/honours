{
  "repo": "duckdb/duckdb",
  "pull_number": 1935,
  "instance_id": "duckdb__duckdb-1935",
  "issue_numbers": [
    "1933"
  ],
  "base_commit": "d4d56bab1e025bc8ea2fa7c5de1d60bfa3104646",
  "patch": "diff --git a/src/common/types/date.cpp b/src/common/types/date.cpp\nindex 6f389e252d3e..5337e4def77d 100644\n--- a/src/common/types/date.cpp\n+++ b/src/common/types/date.cpp\n@@ -321,6 +321,12 @@ bool Date::IsValid(int32_t year, int32_t month, int32_t day) {\n \treturn Date::IsLeapYear(year) ? day <= Date::LEAP_DAYS[month] : day <= Date::NORMAL_DAYS[month];\n }\n \n+int32_t Date::MonthDays(int32_t year, int32_t month) {\n+\tD_ASSERT(month >= 1 && month <= 12);\n+\tD_ASSERT(year >= Date::MIN_YEAR && Date::MAX_YEAR);\n+\treturn Date::IsLeapYear(year) ? Date::LEAP_DAYS[month] : Date::NORMAL_DAYS[month];\n+}\n+\n date_t Date::EpochDaysToDate(int32_t epoch) {\n \treturn (date_t)epoch;\n }\ndiff --git a/src/function/scalar/operators/add.cpp b/src/function/scalar/operators/add.cpp\nindex b286f9e8ea39..4cbeacb34474 100644\n--- a/src/function/scalar/operators/add.cpp\n+++ b/src/function/scalar/operators/add.cpp\n@@ -58,6 +58,7 @@ date_t AddOperator::Operation(date_t left, interval_t right) {\n \t\t\tyear--;\n \t\t\tmonth += Interval::MONTHS_PER_YEAR;\n \t\t}\n+\t\tday = MinValue<int32_t>(day, Date::MonthDays(year, month));\n \t\tresult = Date::FromDate(year, month, day);\n \t} else {\n \t\tresult = left;\ndiff --git a/src/include/duckdb/common/types/date.hpp b/src/include/duckdb/common/types/date.hpp\nindex dae1aa433b66..a783f6db2bcd 100644\n--- a/src/include/duckdb/common/types/date.hpp\n+++ b/src/include/duckdb/common/types/date.hpp\n@@ -63,6 +63,9 @@ class Date {\n \t//! date\n \tstatic bool IsValid(int32_t year, int32_t month, int32_t day);\n \n+\t//! The max number of days in a month of a given year\n+\tstatic int32_t MonthDays(int32_t year, int32_t month);\n+\n \t//! Extract the epoch from the date (seconds since 1970-01-01)\n \tstatic int64_t Epoch(date_t date);\n \t//! Extract the epoch from the date (nanoseconds since 1970-01-01)\n",
  "test_patch": "diff --git a/test/issues/general/test_1933.test b/test/issues/general/test_1933.test\nnew file mode 100644\nindex 000000000000..ce7ca9db51b8\n--- /dev/null\n+++ b/test/issues/general/test_1933.test\n@@ -0,0 +1,41 @@\n+# name: test/issues/general/test_1933.test\n+# description: Issue 1933: use INTERVAL function Time out of bounds report error\n+# group: [general]\n+\n+statement ok\n+PRAGMA enable_verification\n+\n+query I\n+SELECT DATE '2021-06-30' - INTERVAL '4' MONTH;\n+----\n+2021-02-28\n+\n+query I\n+SELECT DATE '2021-08-31' + INTERVAL '1' MONTH;\n+----\n+2021-09-30\n+\n+query I\n+SELECT DATE '2021-08-31' + INTERVAL '2' MONTH;\n+----\n+2021-10-31\n+\n+query I\n+SELECT DATE '2021-08-31' + INTERVAL '3' MONTH;\n+----\n+2021-11-30\n+\n+query I\n+SELECT DATE '2021-08-31' + INTERVAL '4' MONTH;\n+----\n+2021-12-31\n+\n+query I\n+SELECT DATE '2021-08-31' - INTERVAL '6' MONTH;\n+----\n+2021-02-28\n+\n+query I\n+SELECT DATE '2021-08-31' - INTERVAL '18' MONTH;\n+----\n+2020-02-29\n",
  "problem_statement": "use INTERVAL function Time out of bounds report error\n<version>0.2.7</version>\r\ntoday is 6.30\r\nin postgres\r\n![image](https://user-images.githubusercontent.com/86718222/123948415-f5cb4b80-d9d3-11eb-906a-41cd69043125.png)\r\n\r\n\r\nin duckdb\r\n\r\n ** preparedStatement = conn.prepareStatement(\"SELECT CURRENT_DATE - INTERVAL '4 MONTH';\");\r\n    rs = preparedStatement.executeQuery();**\r\n\r\n![image](https://user-images.githubusercontent.com/86718222/123948532-14314700-d9d4-11eb-88ea-e9c727696dfa.png)\r\n\r\n\r\n\n",
  "hints_text": "Thanks for the report! This seems like a bug in the interval arithmetic. I will have a look.",
  "created_at": "2021-06-30T11:08:01Z"
}