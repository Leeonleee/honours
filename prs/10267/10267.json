{
  "repo": "duckdb/duckdb",
  "pull_number": 10267,
  "instance_id": "duckdb__duckdb-10267",
  "issue_numbers": [
    "9384"
  ],
  "base_commit": "077e19e969d384bfb7c9eb22f825dbd935c19571",
  "patch": "diff --git a/src/planner/binder/statement/bind_create.cpp b/src/planner/binder/statement/bind_create.cpp\nindex 6dc563ff2f91..d7503637c3c2 100644\n--- a/src/planner/binder/statement/bind_create.cpp\n+++ b/src/planner/binder/statement/bind_create.cpp\n@@ -247,7 +247,7 @@ void Binder::BindLogicalType(ClientContext &context, LogicalType &type, optional\n \t\t\t}\n \n \t\t\tif (type.id() == LogicalTypeId::INVALID) {\n-\t\t\t\ttype = Catalog::GetType(context, INVALID_CATALOG, schema, user_type_name);\n+\t\t\t\ttype = Catalog::GetType(context, INVALID_CATALOG, INVALID_SCHEMA, user_type_name);\n \t\t\t}\n \t\t} else {\n \t\t\tstring type_catalog = UserType::GetCatalog(type);\n",
  "test_patch": "diff --git a/test/issues/general/test_9384.test b/test/issues/general/test_9384.test\nnew file mode 100644\nindex 000000000000..a916f7aef912\n--- /dev/null\n+++ b/test/issues/general/test_9384.test\n@@ -0,0 +1,25 @@\n+# name: test/issues/general/test_9384.test\n+# description: Issue 9384: DuckDB fails when trying to add a JSON column to an existing table via ALTER TABLE\n+# group: [general]\n+\n+require json\n+\n+statement ok\n+create schema my_schema;\n+\n+statement ok\n+use my_schema;\n+\n+statement ok\n+create table t1 (i json);\n+\n+statement ok\n+alter table t1 add column my_col json;\n+\n+require inet\n+\n+statement ok\n+create table t2 (i inet);\n+\n+statement ok\n+alter table t2 add column my_col inet;\n\\ No newline at end of file\n",
  "problem_statement": "DuckDB fails when trying to add a JSON column to an existing table via ALTER TABLE\n### What happens?\r\n\r\nWhen trying to add a new JSON column to an existing table with ALTER TABLE, the query fails with\r\n`duckdb.duckdb.CatalogException: Catalog Error: Type with name \"JSON\" is not in the catalog, but it exists in the json extension.`\r\n\r\nCreating a new table with a JSON column works though.\r\n\r\n### To Reproduce\r\n\r\nRun these SQL commands against a duckdb instance (i am using the python duckdb package 0.9.1).\r\n```\r\n# creating table with JSON column works\r\nCREATE TABLE \"mytable\" (\"id\" VARCHAR NOT NULL, \"detail\" JSON);\r\n# adding a TEXT column to existing table works\r\nALTER TABLE \"mytable\" ADD COLUMN \"some_text\" TEXT;\r\n# adding a JSON column to an existing table fails\r\nALTER TABLE \"mytable\" ADD COLUMN \"more_detail\" JSON;\r\n```\r\n\r\n### OS:\r\n\r\nmac os\r\n\r\n### DuckDB Version:\r\n\r\n0.9.1\r\n\r\n### DuckDB Client:\r\n\r\nPython duckdb package\r\n\r\n### Full Name:\r\n\r\nDavid\r\n\r\n### Affiliation:\r\n\r\ndlthub\r\n\r\n### Have you tried this on the latest `main` branch?\r\n\r\nI have tested with a release build (and could not test with a main build)\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] Yes, I have\n",
  "hints_text": "I tried to reproduce it and got following error, notice `load json` seems ok. \r\n```\r\n./duckdb\r\nv0.9.0 0d84ccf478\r\nEnter \".help\" for usage hints.\r\nConnected to a transient in-memory database.\r\nUse \".open FILENAME\" to reopen on a persistent database.\r\nD # creating table with JSON column works\r\nD CREATE TABLE \"mytable\" (\"id\" VARCHAR NOT NULL, \"detail\" JSON);\r\nError: Extension Autoloading Error: An error occurred while trying to automatically install the required extension 'json':\r\nFailed to download extension \"json\" at URL \"http://extensions.duckdb.org/v0.9.0/linux_arm64/json.duckdb_extension.gz\"\r\nExtension \"json\" is an existing extension.\r\n\r\nAre you using a development build? In this case, extensions might not (yet) be uploaded. (ERROR Read)\r\nD # adding a TEXT column to existing table works\r\nD ALTER TABLE \"mytable\" ADD COLUMN \"some_text\" TEXT;\r\nError: Catalog Error: Table with name mytable does not exist!\r\nDid you mean \"temp.information_schema.tables\"?\r\nD # adding a JSON column to an existing table fails\r\nD ALTER TABLE \"mytable\" ADD COLUMN \"more_detail\" JSON;\r\nError: Catalog Error: Table with name mytable does not exist!\r\nDid you mean \"temp.information_schema.tables\"?\r\nD load json;\r\nD # creating table with JSON column works\r\nD CREATE TABLE \"mytable\" (\"id\" VARCHAR NOT NULL, \"detail\" JSON);\r\nError: Extension Autoloading Error: An error occurred while trying to automatically install the required extension 'json':\r\nFailed to download extension \"json\" at URL \"http://extensions.duckdb.org/v0.9.0/linux_arm64/json.duckdb_extension.gz\"\r\nExtension \"json\" is an existing extension.\r\n\r\nAre you using a development build? In this case, extensions might not (yet) be uploaded. (ERROR Read)\r\nD # adding a TEXT column to existing table works\r\nD ALTER TABLE \"mytable\" ADD COLUMN \"some_text\" TEXT;\r\nError: Catalog Error: Table with name mytable does not exist!\r\nDid you mean \"temp.information_schema.tables\"?\r\nD # adding a JSON column to an existing table fails\r\nD ALTER TABLE \"mytable\" ADD COLUMN \"more_detail\" JSON;\r\nError: Catalog Error: Table with name mytable does not exist!\r\nDid you mean \"temp.information_schema.tables\"?\r\n```\nbut v0.9.1 CLI is ok. \r\n```\r\nroot@localhost:/data/data/com.termux/files/home# 091/duckdb\r\nv0.9.1 401c8061c6\r\nEnter \".help\" for usage hints.\r\nConnected to a transient in-memory database.\r\nUse \".open FILENAME\" to reopen on a persistent database.\r\nD # creating table with JSON column works\r\nD CREATE TABLE \"mytable\" (\"id\" VARCHAR NOT NULL, \"detail\" JSON);\r\nD # adding a TEXT column to existing table works\r\nD ALTER TABLE \"mytable\" ADD COLUMN \"some_text\" TEXT;\r\nD # adding a JSON column to an existing table fails\r\nD ALTER TABLE \"mytable\" ADD COLUMN \"more_detail\" JSON;\r\nD\r\nD from mytable;\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502   id    \u2502 detail \u2502 some_text \u2502 more_detail \u2502\r\n\u2502 varchar \u2502  json  \u2502  varchar  \u2502    json     \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502                   0 rows                   \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\n@sh-rp strangely, I cannot reproduce this.\r\n\r\nThe error message\r\n```\r\nduckdb.duckdb.CatalogException: Catalog Error: Type with name \"JSON\" is not in the catalog, but it exists in the json extension.\r\n```\r\npoints to the JSON extension not being installed. It can be installed with `duckdb.install_extension(\"json\")`. But then, without the extension, the first command should not work either.\nHi folks! \r\n\r\nWe had a MotherDuck user run into this issue and I was able to reproduce it.\r\n\r\nInterestingly though, if you do not use a custom schema, there is no error. \r\n\r\nOS: MacOS\r\nClient: CLI\r\nVersion: 0.9.2 and 0.9.3-dev1538 (downloaded from https://duckdb.org/docs/installation/?version=main&environment=cli&installer=binary&platform=macos )\r\n\r\nThis errors out:\r\n```sql\r\ncreate or replace schema test_schema;\r\ncreate or replace table test_schema.test_table(original_column json);\r\nalter table test_schema.test_table add column added_column json;\r\n```\r\n\r\n```\r\nError: Catalog Error: Type with name \"json\" is not in the catalog, but it exists in the json extension.\r\n```\r\n\r\nThis succeeds:\r\n```sql\r\ncreate or replace table my_table (original_column json);\r\nalter table my_table add column added_column json;\r\nshow table my_table;\r\n```\r\n```\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502   column_name   \u2502 column_type \u2502  null   \u2502   key   \u2502 default \u2502  extra  \u2502\r\n\u2502     varchar     \u2502   varchar   \u2502 varchar \u2502 varchar \u2502 varchar \u2502 varchar \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 original_column \u2502 JSON        \u2502 YES     \u2502         \u2502         \u2502         \u2502\r\n\u2502 added_column    \u2502 JSON        \u2502 YES     \u2502         \u2502         \u2502         \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n",
  "created_at": "2024-01-18T12:39:40Z"
}