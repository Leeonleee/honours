diff --git a/tools/pythonpkg/tests/fast/pandas/test_pandas_timestamp.py b/tools/pythonpkg/tests/fast/pandas/test_pandas_timestamp.py
index 5ab311d1f994..cad5cf53eeb2 100644
--- a/tools/pythonpkg/tests/fast/pandas/test_pandas_timestamp.py
+++ b/tools/pythonpkg/tests/fast/pandas/test_pandas_timestamp.py
@@ -1,16 +1,46 @@
 import duckdb
-import pandas as pd
-from pytest import mark
+import pandas
+import pytest
 
+from datetime import datetime
+from pytz import timezone
 
-@mark.parametrize('timezone', ['UTC', 'CET', 'Asia/Kathmandu'])
-def run_pandas_with_tz(timezone):
+
+@pytest.mark.parametrize('timezone', ['UTC', 'CET', 'Asia/Kathmandu'])
+def test_run_pandas_with_tz(timezone):
     con = duckdb.connect()
-    con.execute("SET TimeZone = '" + timezone + "'")
-    df = pd.DataFrame({"timestamp": [pd.Timestamp("2022-01-01 10:15", tz=timezone)]})
+    con.execute(f"SET TimeZone = '{timezone}'")
+    df = pandas.DataFrame(
+        {
+            'timestamp': pandas.Series(
+                data=[pandas.Timestamp(year=2022, month=1, day=1, hour=10, minute=15, tz=timezone, unit='us')],
+                dtype=f'datetime64[us, {timezone}]',
+            )
+        }
+    )
     duck_df = con.from_df(df).df()
-    print(df['timestamp'].dtype)
-    print(duck_df['timestamp'].dtype)
-    print(df)
-    print(duck_df)
-    assert df.equals(duck_df)
+    assert duck_df['timestamp'][0] == df['timestamp'][0]
+
+
+def test_timestamp_conversion(duckdb_cursor):
+    tzinfo = pandas.Timestamp('2024-01-01 00:00:00+0100', tz='Europe/Copenhagen').tzinfo
+    ts_df = pandas.DataFrame(
+        {
+            "ts": [
+                pandas.Timestamp('2024-01-01 00:00:00+0100', tz=tzinfo),
+                pandas.Timestamp('2024-01-02 00:00:00+0100', tz=tzinfo),
+            ]
+        }
+    )
+
+    query = """
+        select
+            *
+        from ts_df
+        where ts = $notationtime
+    """
+    params_zoneinfo = {"notationtime": datetime(2024, 1, 1, tzinfo=tzinfo)}
+    duckdb_cursor.execute("set TimeZone = 'Europe/Copenhagen'")
+    rel = duckdb_cursor.execute(query, parameters=params_zoneinfo)
+    res = rel.fetchall()
+    assert res[0][0] == datetime(2024, 1, 1, tzinfo=tzinfo)
