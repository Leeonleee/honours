diff --git a/test/sql/attach/attach_table_constraints.test b/test/sql/attach/attach_table_constraints.test
new file mode 100644
index 000000000000..fd5144c8ef17
--- /dev/null
+++ b/test/sql/attach/attach_table_constraints.test
@@ -0,0 +1,19 @@
+# name: test/sql/attach/attach_table_constraints.test
+# description: Test information_schema.table_constraints with attach
+# group: [attach]
+
+require skip_reload
+
+statement ok
+PRAGMA enable_verification
+
+statement ok
+ATTACH '__TEST_DIR__/constraint_test.db' as test
+
+statement ok
+CREATE TABLE test.tbl(i INTEGER PRIMARY KEY);
+
+query III
+select constraint_catalog, table_catalog, table_name from information_schema.table_constraints limit 1
+----
+test	test	tbl
\ No newline at end of file
diff --git a/test/sql/table_function/duckdb_constraints.test b/test/sql/table_function/duckdb_constraints.test
index 1c65c3f45ad3..53939decfa9e 100644
--- a/test/sql/table_function/duckdb_constraints.test
+++ b/test/sql/table_function/duckdb_constraints.test
@@ -27,35 +27,35 @@ query IIII
 SELECT table_name, constraint_index, constraint_type, UNNEST(constraint_column_names) col_name FROM duckdb_constraints ORDER BY table_name, constraint_index, col_name
 ----
 fk_integers	0	FOREIGN KEY	j
-fk_integers_2	0	FOREIGN KEY	k
-integers	0	PRIMARY KEY	i
-integers	1	CHECK	i
-integers	2	NOT NULL	i
-test	3	UNIQUE	i
-test	4	CHECK	i
-test	4	CHECK	k
+fk_integers_2	1	FOREIGN KEY	k
+integers	2	PRIMARY KEY	i
+integers	3	CHECK	i
+integers	4	NOT NULL	i
+test	5	UNIQUE	i
+test	6	CHECK	i
+test	6	CHECK	k
 
 query II
 SELECT constraint_name, unique_constraint_name FROM information_schema.referential_constraints ORDER BY constraint_name
 ----
-fk_integers_2_k_fkey	integers_i_pkey
-fk_integers_j_fkey	integers_i_pkey
+fk_integers_2_k_i_fkey	integers_i_pkey
+fk_integers_j_i_fkey	integers_i_pkey
 
 query IIII
 SELECT column_name, constraint_name, table_name, position_in_unique_constraint FROM information_schema.key_column_usage ORDER BY constraint_name
 ----
-k	fk_integers_2_k_fkey	fk_integers_2	1
-j	fk_integers_j_fkey	fk_integers	1
+k	fk_integers_2_k_i_fkey	fk_integers_2	1
+j	fk_integers_j_i_fkey	fk_integers	1
 i	integers_i_pkey	integers	NULL
 i	test_i_key	test	NULL
 
 query III
 SELECT constraint_name, table_name, constraint_type FROM information_schema.table_constraints ORDER BY constraint_name;
 ----
-fk_integers_2_k_fkey	fk_integers_2	FOREIGN KEY
-fk_integers_j_fkey	fk_integers	FOREIGN KEY
+fk_integers_2_k_i_fkey	fk_integers_2	FOREIGN KEY
+fk_integers_j_i_fkey	fk_integers	FOREIGN KEY
 integers_i_check	integers	CHECK
 integers_i_not_null	integers	CHECK
 integers_i_pkey	integers	PRIMARY KEY
-test_check	test	CHECK
-test_i_key	test	UNIQUE
\ No newline at end of file
+test_i_k_check	test	CHECK
+test_i_key	test	UNIQUE
diff --git a/test/sql/table_function/duckdb_constraints_fk.test b/test/sql/table_function/duckdb_constraints_fk.test
index 4762935010d1..90648f6e43ad 100644
--- a/test/sql/table_function/duckdb_constraints_fk.test
+++ b/test/sql/table_function/duckdb_constraints_fk.test
@@ -35,20 +35,20 @@ CREATE TABLE tf_4 (
   FOREIGN KEY (h) REFERENCES tf_3 (h),
 );
 
-query IIIIIIIII
-SELECT * EXCLUDE (schema_oid, table_oid, database_oid) FROM duckdb_constraints();
+query IIIIIIIIIII
+SELECT * EXCLUDE (schema_oid, table_oid, database_oid, constraint_name) FROM duckdb_constraints();
 ----
-memory	main	tf_1	0	PRIMARY KEY	PRIMARY KEY(a)	NULL	[0]	[a]
-memory	main	tf_1	1	UNIQUE	UNIQUE("b c")	NULL	[1]	[b c]
-memory	main	tf_1	2	UNIQUE	UNIQUE("d e")	NULL	[2]	[d e]
-memory	main	tf_1	3	NOT NULL	NOT NULL	NULL	[0]	[a]
-memory	main	tf_2	4	PRIMARY KEY	PRIMARY KEY(c)	NULL	[0]	[c]
-memory	main	tf_2	0	FOREIGN KEY	FOREIGN KEY (d) REFERENCES tf_1(a)	NULL	[1]	[d]
-memory	main	tf_2	1	FOREIGN KEY	FOREIGN KEY (e) REFERENCES tf_1("b c")	NULL	[2]	[e]
-memory	main	tf_2	2	FOREIGN KEY	FOREIGN KEY (f) REFERENCES tf_1("d e")	NULL	[3]	[f]
-memory	main	tf_2	5	FOREIGN KEY	FOREIGN KEY (g) REFERENCES tf_3(g)	NULL	[4]	[g]
-memory	main	tf_2	6	NOT NULL	NOT NULL	NULL	[0]	[c]
-memory	main	tf_3	5	PRIMARY KEY	PRIMARY KEY(g)	NULL	[0]	[g]
-memory	main	tf_3	7	UNIQUE	UNIQUE(h)	NULL	[1]	[h]
-memory	main	tf_3	8	NOT NULL	NOT NULL	NULL	[0]	[g]
-memory	main	tf_4	7	FOREIGN KEY	FOREIGN KEY (h) REFERENCES tf_3(h)	NULL	[0]	[h]
+memory	main	tf_1	0	PRIMARY KEY	PRIMARY KEY(a)	NULL	[0]	[a]	NULL	[]
+memory	main	tf_1	1	UNIQUE	UNIQUE("b c")	NULL	[1]	[b c]	NULL	[]
+memory	main	tf_1	2	UNIQUE	UNIQUE("d e")	NULL	[2]	[d e]	NULL	[]
+memory	main	tf_1	3	NOT NULL	NOT NULL	NULL	[0]	[a]	NULL	[]
+memory	main	tf_2	4	PRIMARY KEY	PRIMARY KEY(c)	NULL	[0]	[c]	NULL	[]
+memory	main	tf_2	5	FOREIGN KEY	FOREIGN KEY (d) REFERENCES tf_1(a)	NULL	[1]	[d]	tf_1	[a]
+memory	main	tf_2	6	FOREIGN KEY	FOREIGN KEY (e) REFERENCES tf_1("b c")	NULL	[2]	[e]	tf_1	[b c]
+memory	main	tf_2	7	FOREIGN KEY	FOREIGN KEY (f) REFERENCES tf_1("d e")	NULL	[3]	[f]	tf_1	[d e]
+memory	main	tf_2	8	FOREIGN KEY	FOREIGN KEY (g) REFERENCES tf_3(g)	NULL	[4]	[g]	tf_3	[g]
+memory	main	tf_2	9	NOT NULL	NOT NULL	NULL	[0]	[c]	NULL	[]
+memory	main	tf_3	10	PRIMARY KEY	PRIMARY KEY(g)	NULL	[0]	[g]	NULL	[]
+memory	main	tf_3	11	UNIQUE	UNIQUE(h)	NULL	[1]	[h]	NULL	[]
+memory	main	tf_3	12	NOT NULL	NOT NULL	NULL	[0]	[g]	NULL	[]
+memory	main	tf_4	13	FOREIGN KEY	FOREIGN KEY (h) REFERENCES tf_3(h)	NULL	[0]	[h]	tf_3	[h]
diff --git a/test/sql/table_function/duckdb_constraints_issue12863.test b/test/sql/table_function/duckdb_constraints_issue12863.test
new file mode 100644
index 000000000000..69d75678e640
--- /dev/null
+++ b/test/sql/table_function/duckdb_constraints_issue12863.test
@@ -0,0 +1,32 @@
+# name: test/sql/table_function/duckdb_constraints_issue12863.test
+# description: Issue #12863 - INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS doesn't list foreign keys when declaration case doesn't match reference case
+# group: [table_function]
+
+statement ok
+pragma enable_verification
+
+statement ok
+CREATE TABLE a (ID int PRIMARY KEY);
+
+statement ok
+CREATE TABLE b (id int REFERENCES A);
+
+query II
+SELECT constraint_name, unique_constraint_name FROM information_schema.referential_constraints;
+----
+b_id_id_fkey	a_id_pkey
+
+# test multiple schemas with the same table names/references
+statement ok
+CREATE SCHEMA s1;
+
+statement ok
+CREATE TABLE s1.a (ID int PRIMARY KEY);
+
+statement ok
+CREATE TABLE s1.b (id int REFERENCES s1.A);
+
+query I
+SELECT COUNT(*) FROM information_schema.referential_constraints;
+----
+2
diff --git a/test/sql/table_function/information_schema_fkey_constraint_names.test b/test/sql/table_function/information_schema_fkey_constraint_names.test
index c46c660baeb6..05a380415e0d 100644
--- a/test/sql/table_function/information_schema_fkey_constraint_names.test
+++ b/test/sql/table_function/information_schema_fkey_constraint_names.test
@@ -15,7 +15,7 @@ where constraint_type like '%KEY'
 order by 1
 ----
 t_i_pkey
-u_i_fkey
+u_i_i_fkey
 
 query I
 select constraint_name
@@ -23,13 +23,13 @@ from information_schema.key_column_usage
 order by 1
 ----
 t_i_pkey
-u_i_fkey
+u_i_i_fkey
 
 query II
 select constraint_name, unique_constraint_name
 from information_schema.referential_constraints;
 ----
-u_i_fkey	t_i_pkey
+u_i_i_fkey	t_i_pkey
 
 statement ok
 drop table u
@@ -49,7 +49,7 @@ from information_schema.table_constraints
 where constraint_type like '%KEY'
 order by 1
 ----
-source_tbl_source_col_fkey
+source_tbl_source_col_target_col_fkey
 target_tbl_target_col_pkey
 
 query I
@@ -57,11 +57,39 @@ select constraint_name
 from information_schema.key_column_usage
 order by 1
 ----
-source_tbl_source_col_fkey
+source_tbl_source_col_target_col_fkey
 target_tbl_target_col_pkey
 
 query II
 select constraint_name, unique_constraint_name
 from information_schema.referential_constraints;
 ----
-source_tbl_source_col_fkey	target_tbl_target_col_pkey
+source_tbl_source_col_target_col_fkey	target_tbl_target_col_pkey
+
+# multiple constraints
+statement ok
+DROP TABLE source_tbl;
+
+statement ok
+DROP TABLE target_tbl;
+
+statement ok
+CREATE TABLE a (
+  a1 INT, a2 INT, a3 INT,
+  UNIQUE (a1, a2), UNIQUE (a2, a3)
+);
+
+statement ok
+CREATE TABLE b (
+  a1 INT, a2 INT, a3 INT,
+  FOREIGN KEY (a1, a2) REFERENCES a (a1, a2),
+  FOREIGN KEY (a2, a3) REFERENCES a (a2, a3)
+);
+
+query II
+SELECT constraint_name, constraint_type FROM information_schema.table_constraints ORDER BY ALL
+----
+a_a1_a2_key	UNIQUE
+a_a2_a3_key	UNIQUE
+b_a1_a2_a1_a2_fkey	FOREIGN KEY
+b_a2_a3_a2_a3_fkey	FOREIGN KEY
diff --git a/test/sql/table_function/information_schema_issue12867.test b/test/sql/table_function/information_schema_issue12867.test
new file mode 100644
index 000000000000..2ff615161f89
--- /dev/null
+++ b/test/sql/table_function/information_schema_issue12867.test
@@ -0,0 +1,19 @@
+# name: test/sql/table_function/information_schema_issue12867.test
+# description: Issue #12867: INFORMATION_SCHEMA.KEY_COLUMN_USAGE only lists first column of composite keys
+# group: [table_function]
+
+require skip_reload
+
+statement ok
+CREATE TABLE a (a1 int, a2 int, PRIMARY KEY (a1, a2));
+
+statement ok
+CREATE TABLE b (a1 int, a2 int, FOREIGN KEY (a1, a2) REFERENCES a);
+
+query III
+SELECT table_name, column_name, ordinal_position FROM information_schema.key_column_usage ORDER BY table_name, ordinal_position;
+----
+a	a1	1
+a	a2	2
+b	a1	1
+b	a2	2
