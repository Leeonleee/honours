{
  "repo": "duckdb/duckdb",
  "pull_number": 10288,
  "instance_id": "duckdb__duckdb-10288",
  "issue_numbers": [
    "10279",
    "10279"
  ],
  "base_commit": "df685f80654ce7c2145e7eb475f1fa5f48dc9d37",
  "patch": "diff --git a/extension/parquet/include/decode_utils.hpp b/extension/parquet/include/decode_utils.hpp\nindex 1fb6bbc2222a..3b2829d612af 100644\n--- a/extension/parquet/include/decode_utils.hpp\n+++ b/extension/parquet/include/decode_utils.hpp\n@@ -7,8 +7,8 @@ class ParquetDecodeUtils {\n \n public:\n \ttemplate <class T>\n-\tstatic T ZigzagToInt(const T n) {\n-\t\treturn (n >> 1) ^ -(n & 1);\n+\tstatic T ZigzagToInt(const uint64_t n) {\n+\t\treturn T(n >> 1) ^ -T(n & 1);\n \t}\n \n \tstatic const uint64_t BITPACK_MASKS[];\ndiff --git a/extension/parquet/include/parquet_dbp_decoder.hpp b/extension/parquet/include/parquet_dbp_decoder.hpp\nindex 601147a6ba77..c40c3c0268b5 100644\n--- a/extension/parquet/include/parquet_dbp_decoder.hpp\n+++ b/extension/parquet/include/parquet_dbp_decoder.hpp\n@@ -10,7 +10,7 @@ class DbpDecoder {\n \t\tblock_value_count = ParquetDecodeUtils::VarintDecode<uint64_t>(buffer_);\n \t\tminiblocks_per_block = ParquetDecodeUtils::VarintDecode<uint64_t>(buffer_);\n \t\ttotal_value_count = ParquetDecodeUtils::VarintDecode<uint64_t>(buffer_);\n-\t\tstart_value = ParquetDecodeUtils::ZigzagToInt(ParquetDecodeUtils::VarintDecode<int64_t>(buffer_));\n+\t\tstart_value = ParquetDecodeUtils::ZigzagToInt<int64_t>(ParquetDecodeUtils::VarintDecode<uint64_t>(buffer_));\n \n \t\t// some derivatives\n \t\tD_ASSERT(miniblocks_per_block > 0);\n@@ -61,7 +61,8 @@ class DbpDecoder {\n \t\t\t\tif (bitpack_pos > 0) {       // have to eat the leftovers if any\n \t\t\t\t\tbuffer_.inc(1);\n \t\t\t\t}\n-\t\t\t\tmin_delta = ParquetDecodeUtils::ZigzagToInt(ParquetDecodeUtils::VarintDecode<uint64_t>(buffer_));\n+\t\t\t\tmin_delta =\n+\t\t\t\t    ParquetDecodeUtils::ZigzagToInt<int64_t>(ParquetDecodeUtils::VarintDecode<uint64_t>(buffer_));\n \t\t\t\tfor (idx_t miniblock_idx = 0; miniblock_idx < miniblocks_per_block; miniblock_idx++) {\n \t\t\t\t\tminiblock_bit_widths[miniblock_idx] = buffer_.read<uint8_t>();\n \t\t\t\t\t// TODO what happens if width is 0?\n@@ -80,7 +81,7 @@ class DbpDecoder {\n \t\t\tParquetDecodeUtils::BitUnpack<T>(buffer_, bitpack_pos, &values[value_offset], read_now,\n \t\t\t                                 miniblock_bit_widths[miniblock_offset]);\n \t\t\tfor (idx_t i = value_offset; i < value_offset + read_now; i++) {\n-\t\t\t\tvalues[i] = ((i == 0) ? start_value : values[i - 1]) + min_delta + values[i];\n+\t\t\t\tvalues[i] = T(uint64_t((i == 0) ? start_value : values[i - 1]) + min_delta + uint64_t(values[i]));\n \t\t\t}\n \t\t\tvalue_offset += read_now;\n \t\t\tvalues_left_in_miniblock -= read_now;\n",
  "test_patch": "diff --git a/data/parquet-testing/issue10279_delta_encoding.parquet b/data/parquet-testing/issue10279_delta_encoding.parquet\nnew file mode 100644\nindex 000000000000..bdc8a78a6110\nBinary files /dev/null and b/data/parquet-testing/issue10279_delta_encoding.parquet differ\ndiff --git a/test/sql/copy/parquet/parquet_10279.test b/test/sql/copy/parquet/parquet_10279.test\nnew file mode 100644\nindex 000000000000..8a5f53f87856\n--- /dev/null\n+++ b/test/sql/copy/parquet/parquet_10279.test\n@@ -0,0 +1,11 @@\n+# name: test/sql/copy/parquet/parquet_10279.test\n+# description: Issue #10279: Data loss with parquet INT64 and DELTA encoding\n+# group: [parquet]\n+\n+require parquet\n+\n+query IIIIIIII\n+SELECT * FROM 'data/parquet-testing/issue10279_delta_encoding.parquet'\n+----\n+MIN_VALUE\tfalse\t-128\t-32768\t-2147483648\t-9223372036854775808\t1e-45\t5e-324\n+MAX_VALUE\ttrue\t127\t32767\t2147483647\t9223372036854775807\t3.4028235e+38\t1.7976931348623157e+308\n",
  "problem_statement": "Data loss with parquet INT64 and DELTA encoding\n### What happens?\r\n\r\nWhen an INT64 value is stored with DELTA encoding in parquet, the read numbers are wrong. This is not relevant, for other data types like INT32, FLOAT and DOUBLE. It may be a wrong interpretation of signed and unsigned values.\r\n\r\n### To Reproduce\r\n\r\n\r\nDownload and extract zip-archive [0.zstd.parquet.zip](https://github.com/duckdb/duckdb/files/13989193/0.zstd.parquet.zip)\r\n\r\nWrong output for column \"lo\", which simulates a Java Long (64-Bit signed), other columns are valid:\r\n\r\n```\r\nduckdb -nullvalue NULL -c \"SELECT * FROM parquet_scan('0*.parquet');\"\r\n```\r\n```\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502   type    \u2502   bo    \u2502  by  \u2502   sh   \u2502     in      \u2502  lo   \u2502      fl       \u2502           dou           \u2502\r\n\u2502  varchar  \u2502 boolean \u2502 int8 \u2502 int16  \u2502    int32    \u2502 int64 \u2502     float     \u2502         double          \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 MIN_VALUE \u2502 false   \u2502 -128 \u2502 -32768 \u2502 -2147483648 \u2502     0 \u2502         1e-45 \u2502                  5e-324 \u2502\r\n\u2502 MAX_VALUE \u2502 true    \u2502  127 \u2502  32767 \u2502  2147483647 \u2502    -1 \u2502 3.4028235e+38 \u2502 1.7976931348623157e+308 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n```\r\nduckdb -nullvalue NULL -c \"SELECT * FROM parquet_schema('0*.parquet');\"\r\n```\r\n```\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502   file_name    \u2502       name       \u2502    type    \u2502 type_length \u2502 repetition_type \u2502 num_children \u2502 converted_type \u2502 scale \u2502 precision \u2502 field_id \u2502          logical_type           \u2502\r\n\u2502    varchar     \u2502     varchar      \u2502  varchar   \u2502   varchar   \u2502     varchar     \u2502    int64     \u2502    varchar     \u2502 int64 \u2502   int64   \u2502  int64   \u2502             varchar             \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 0.zstd.parquet \u2502 NativeTypeRecord \u2502 NULL       \u2502 NULL        \u2502 NULL            \u2502            8 \u2502 NULL           \u2502  NULL \u2502      NULL \u2502     NULL \u2502 NULL                            \u2502\r\n\u2502 0.zstd.parquet \u2502 type             \u2502 BYTE_ARRAY \u2502 NULL        \u2502 OPTIONAL        \u2502         NULL \u2502 UTF8           \u2502  NULL \u2502      NULL \u2502     NULL \u2502 StringType()                    \u2502\r\n\u2502 0.zstd.parquet \u2502 bo               \u2502 BOOLEAN    \u2502 NULL        \u2502 REQUIRED        \u2502         NULL \u2502 NULL           \u2502  NULL \u2502      NULL \u2502     NULL \u2502 NULL                            \u2502\r\n\u2502 0.zstd.parquet \u2502 by               \u2502 INT32      \u2502 NULL        \u2502 REQUIRED        \u2502         NULL \u2502 INT_8          \u2502  NULL \u2502      NULL \u2502     NULL \u2502 IntType(bitWidth, isSigned=1)  \u2502\r\n\u2502 0.zstd.parquet \u2502 sh               \u2502 INT32      \u2502 NULL        \u2502 REQUIRED        \u2502         NULL \u2502 INT_16         \u2502  NULL \u2502      NULL \u2502     NULL \u2502 IntType(bitWidth=, isSigned=1)  \u2502\r\n\u2502 0.zstd.parquet \u2502 in               \u2502 INT32      \u2502 NULL        \u2502 REQUIRED        \u2502         NULL \u2502 INT_32         \u2502  NULL \u2502      NULL \u2502     NULL \u2502 IntType(bitWidth= , isSigned=1) \u2502\r\n\u2502 0.zstd.parquet \u2502 lo               \u2502 INT64      \u2502 NULL        \u2502 REQUIRED        \u2502         NULL \u2502 INT_64         \u2502  NULL \u2502      NULL \u2502     NULL \u2502 IntType(bitWidth=@, isSigned=1) \u2502\r\n\u2502 0.zstd.parquet \u2502 fl               \u2502 FLOAT      \u2502 NULL        \u2502 REQUIRED        \u2502         NULL \u2502 NULL           \u2502  NULL \u2502      NULL \u2502     NULL \u2502 NULL                            \u2502\r\n\u2502 0.zstd.parquet \u2502 dou              \u2502 DOUBLE     \u2502 NULL        \u2502 REQUIRED        \u2502         NULL \u2502 NULL           \u2502  NULL \u2502      NULL \u2502     NULL \u2502 NULL                            \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\nProove of concept with other parquet implementations:\r\n\r\n```\r\n\u276f brew install parquet-cli; parquet cat 0.zstd.parquet\r\n{\"type\": \"MIN_VALUE\", \"bo\": false, \"by\": -128, \"sh\": -32768, \"in\": -2147483648, \"lo\": -9223372036854775808, \"fl\": 1.4E-45, \"dou\": 4.9E-324}\r\n{\"type\": \"MAX_VALUE\", \"bo\": true, \"by\": 127, \"sh\": 32767, \"in\": 2147483647, \"lo\": 9223372036854775807, \"fl\": 3.4028235E38, \"dou\": 1.7976931348623157E308}\r\n```\r\n\r\n```\r\n\u276f spark-shell\r\nWelcome to\r\n      ____              __\r\n     / __/__  ___ _____/ /__\r\n    _\\ \\/ _ \\/ _ `/ __/  '_/\r\n   /___/ .__/\\_,_/_/ /_/\\_\\   version 3.5.0\r\n      /_/\r\n         \r\nscala> spark.read.parquet(\"0.zstd.parquet\").show()\r\n+---------+-----+----+------+-----------+--------------------+------------+--------------------+\r\n|     type|   bo|  by|    sh|         in|                  lo|          fl|                 dou|\r\n+---------+-----+----+------+-----------+--------------------+------------+--------------------+\r\n|MIN_VALUE|false|-128|-32768|-2147483648|-9223372036854775808|     1.4E-45|            4.9E-324|\r\n|MAX_VALUE| true| 127| 32767| 2147483647| 9223372036854775807|3.4028235E38|1.797693134862315...|\r\n+---------+-----+----+------+-----------+--------------------+------------+--------------------+\r\n```\r\n\r\n### OS:\r\n\r\naarch64\r\n\r\n### DuckDB Version:\r\n\r\nv0.9.2 3c695d7ba9\r\n\r\n### DuckDB Client:\r\n\r\nduckdb cli\r\n\r\n### Full Name:\r\n\r\nMichael Behrendt\r\n\r\n### Affiliation:\r\n\r\nT-Systems\r\n\r\n### Have you tried this on the latest `main` branch?\r\n\r\nI have tested with a main build\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] Yes, I have\nData loss with parquet INT64 and DELTA encoding\n### What happens?\r\n\r\nWhen an INT64 value is stored with DELTA encoding in parquet, the read numbers are wrong. This is not relevant, for other data types like INT32, FLOAT and DOUBLE. It may be a wrong interpretation of signed and unsigned values.\r\n\r\n### To Reproduce\r\n\r\n\r\nDownload and extract zip-archive [0.zstd.parquet.zip](https://github.com/duckdb/duckdb/files/13989193/0.zstd.parquet.zip)\r\n\r\nWrong output for column \"lo\", which simulates a Java Long (64-Bit signed), other columns are valid:\r\n\r\n```\r\nduckdb -nullvalue NULL -c \"SELECT * FROM parquet_scan('0*.parquet');\"\r\n```\r\n```\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502   type    \u2502   bo    \u2502  by  \u2502   sh   \u2502     in      \u2502  lo   \u2502      fl       \u2502           dou           \u2502\r\n\u2502  varchar  \u2502 boolean \u2502 int8 \u2502 int16  \u2502    int32    \u2502 int64 \u2502     float     \u2502         double          \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 MIN_VALUE \u2502 false   \u2502 -128 \u2502 -32768 \u2502 -2147483648 \u2502     0 \u2502         1e-45 \u2502                  5e-324 \u2502\r\n\u2502 MAX_VALUE \u2502 true    \u2502  127 \u2502  32767 \u2502  2147483647 \u2502    -1 \u2502 3.4028235e+38 \u2502 1.7976931348623157e+308 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n```\r\nduckdb -nullvalue NULL -c \"SELECT * FROM parquet_schema('0*.parquet');\"\r\n```\r\n```\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502   file_name    \u2502       name       \u2502    type    \u2502 type_length \u2502 repetition_type \u2502 num_children \u2502 converted_type \u2502 scale \u2502 precision \u2502 field_id \u2502          logical_type           \u2502\r\n\u2502    varchar     \u2502     varchar      \u2502  varchar   \u2502   varchar   \u2502     varchar     \u2502    int64     \u2502    varchar     \u2502 int64 \u2502   int64   \u2502  int64   \u2502             varchar             \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 0.zstd.parquet \u2502 NativeTypeRecord \u2502 NULL       \u2502 NULL        \u2502 NULL            \u2502            8 \u2502 NULL           \u2502  NULL \u2502      NULL \u2502     NULL \u2502 NULL                            \u2502\r\n\u2502 0.zstd.parquet \u2502 type             \u2502 BYTE_ARRAY \u2502 NULL        \u2502 OPTIONAL        \u2502         NULL \u2502 UTF8           \u2502  NULL \u2502      NULL \u2502     NULL \u2502 StringType()                    \u2502\r\n\u2502 0.zstd.parquet \u2502 bo               \u2502 BOOLEAN    \u2502 NULL        \u2502 REQUIRED        \u2502         NULL \u2502 NULL           \u2502  NULL \u2502      NULL \u2502     NULL \u2502 NULL                            \u2502\r\n\u2502 0.zstd.parquet \u2502 by               \u2502 INT32      \u2502 NULL        \u2502 REQUIRED        \u2502         NULL \u2502 INT_8          \u2502  NULL \u2502      NULL \u2502     NULL \u2502 IntType(bitWidth, isSigned=1)  \u2502\r\n\u2502 0.zstd.parquet \u2502 sh               \u2502 INT32      \u2502 NULL        \u2502 REQUIRED        \u2502         NULL \u2502 INT_16         \u2502  NULL \u2502      NULL \u2502     NULL \u2502 IntType(bitWidth=, isSigned=1)  \u2502\r\n\u2502 0.zstd.parquet \u2502 in               \u2502 INT32      \u2502 NULL        \u2502 REQUIRED        \u2502         NULL \u2502 INT_32         \u2502  NULL \u2502      NULL \u2502     NULL \u2502 IntType(bitWidth= , isSigned=1) \u2502\r\n\u2502 0.zstd.parquet \u2502 lo               \u2502 INT64      \u2502 NULL        \u2502 REQUIRED        \u2502         NULL \u2502 INT_64         \u2502  NULL \u2502      NULL \u2502     NULL \u2502 IntType(bitWidth=@, isSigned=1) \u2502\r\n\u2502 0.zstd.parquet \u2502 fl               \u2502 FLOAT      \u2502 NULL        \u2502 REQUIRED        \u2502         NULL \u2502 NULL           \u2502  NULL \u2502      NULL \u2502     NULL \u2502 NULL                            \u2502\r\n\u2502 0.zstd.parquet \u2502 dou              \u2502 DOUBLE     \u2502 NULL        \u2502 REQUIRED        \u2502         NULL \u2502 NULL           \u2502  NULL \u2502      NULL \u2502     NULL \u2502 NULL                            \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\nProove of concept with other parquet implementations:\r\n\r\n```\r\n\u276f brew install parquet-cli; parquet cat 0.zstd.parquet\r\n{\"type\": \"MIN_VALUE\", \"bo\": false, \"by\": -128, \"sh\": -32768, \"in\": -2147483648, \"lo\": -9223372036854775808, \"fl\": 1.4E-45, \"dou\": 4.9E-324}\r\n{\"type\": \"MAX_VALUE\", \"bo\": true, \"by\": 127, \"sh\": 32767, \"in\": 2147483647, \"lo\": 9223372036854775807, \"fl\": 3.4028235E38, \"dou\": 1.7976931348623157E308}\r\n```\r\n\r\n```\r\n\u276f spark-shell\r\nWelcome to\r\n      ____              __\r\n     / __/__  ___ _____/ /__\r\n    _\\ \\/ _ \\/ _ `/ __/  '_/\r\n   /___/ .__/\\_,_/_/ /_/\\_\\   version 3.5.0\r\n      /_/\r\n         \r\nscala> spark.read.parquet(\"0.zstd.parquet\").show()\r\n+---------+-----+----+------+-----------+--------------------+------------+--------------------+\r\n|     type|   bo|  by|    sh|         in|                  lo|          fl|                 dou|\r\n+---------+-----+----+------+-----------+--------------------+------------+--------------------+\r\n|MIN_VALUE|false|-128|-32768|-2147483648|-9223372036854775808|     1.4E-45|            4.9E-324|\r\n|MAX_VALUE| true| 127| 32767| 2147483647| 9223372036854775807|3.4028235E38|1.797693134862315...|\r\n+---------+-----+----+------+-----------+--------------------+------------+--------------------+\r\n```\r\n\r\n### OS:\r\n\r\naarch64\r\n\r\n### DuckDB Version:\r\n\r\nv0.9.2 3c695d7ba9\r\n\r\n### DuckDB Client:\r\n\r\nduckdb cli\r\n\r\n### Full Name:\r\n\r\nMichael Behrendt\r\n\r\n### Affiliation:\r\n\r\nT-Systems\r\n\r\n### Have you tried this on the latest `main` branch?\r\n\r\nI have tested with a main build\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] Yes, I have\n",
  "hints_text": "\n",
  "created_at": "2024-01-20T20:40:23Z"
}