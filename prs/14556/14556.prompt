You will be provided with a partial code base and an issue statement explaining a problem to resolve.
In your output, give nothing but the code (no markdown) so that your output can be copy pasted and run immediately with no changes.
In the patch file, please make sure to include the line numbers and a blank line at the end so it can be applied using git apply.

<issue>
DuckDB SEGV when running nested PIVOT
### What happens?

The latest version of the DuckDB (v1.1.3-dev56 39f9863ef8) crashes when running the following SQL statement: 

```sql
CREATE TABLE v00 (c01 INT);
WITH RECURSIVE ta2205 AS ( SHOW ) PIVOT ( v00 PIVOT ( c01,  FOR IN v00 GROUP BY c01 ) JOIN v00 AS ta2201 USING ( c01 ) ) ON c01;
```

Here is the stack trace from 39f9863ef8:

```
(gdb) bt
#0  0x00000000051696ec in duckdb::Transformer::TransformExpressionList (this=0xffffc5afc2e8, list=..., result=...) at /home/duckdb/duckdb/src/parser/transform/expression/transform_expression.cpp:96
#1  0x0000000002c038e0 in duckdb::Transformer::TransformPivotColumn (this=0xffffc5afc2e8, pivot=..., is_pivot=true) at /home/duckdb/duckdb/src/parser/transform/tableref/transform_pivot.cpp:46
#2  0x0000000002c066ac in duckdb::Transformer::TransformPivotList (this=0xffffc5afc2e8, list=..., is_pivot=<optimized out>) at /home/duckdb/duckdb/src/parser/transform/tableref/transform_pivot.cpp:94
#3  0x0000000002c07248 in duckdb::Transformer::TransformPivot (this=0xffffc5afc2e8, root=...) at /home/duckdb/duckdb/src/parser/transform/tableref/transform_pivot.cpp:109
#4  0x0000000002c00e20 in duckdb::Transformer::TransformTableRefNode (this=0xffffc5afc2e8, n=...) at /home/duckdb/duckdb/src/parser/transform/tableref/transform_tableref.cpp:20
#5  0x0000000002bfdb5c in duckdb::Transformer::TransformJoin (this=0xffffc5afc2e8, root=...) at /home/duckdb/duckdb/src/parser/transform/tableref/transform_join.cpp:47
#6  0x0000000002c00f40 in duckdb::Transformer::TransformTableRefNode (this=0xffffc5afc2e8, n=...) at /home/duckdb/duckdb/src/parser/transform/tableref/transform_tableref.cpp:14
#7  0x0000000002ba74f8 in duckdb::Transformer::TransformPivotStatement (this=0xffffc5afc2e8, select=...) at /home/duckdb/duckdb/src/parser/transform/statement/transform_pivot_stmt.cpp:138
#8  0x0000000002ba6b48 in duckdb::Transformer::TransformSelectNodeInternal (this=0x34797, select=..., is_select=240) at /home/duckdb/duckdb/src/parser/transform/statement/transform_select.cpp:31
#9  0x0000000002b84ae8 in duckdb::Transformer::TransformSelectStmt (this=0x2048, select=..., is_select=true) at /home/duckdb/duckdb/src/parser/transform/statement/transform_select.cpp:40
#10 0x000000000059adb8 in duckdb::Transformer::TransformStatementInternal (this=0x11, stmt=...) at /home/duckdb/duckdb/src/parser/transformer.cpp:147
#11 0x00000000005992b0 in duckdb::Transformer::TransformStatement (this=0xffffc5afc2e8, stmt=...) at /home/duckdb/duckdb/src/parser/transformer.cpp:59
#12 0x0000000000599ecc in duckdb::Transformer::TransformStatementInternal (this=0x11, stmt=...) at /home/duckdb/duckdb/src/parser/transformer.cpp:139
#13 0x00000000005992b0 in duckdb::Transformer::TransformStatement (this=0xffffc5afc2e8, stmt=...) at /home/duckdb/duckdb/src/parser/transformer.cpp:59
#14 0x000000000057bc94 in duckdb::Transformer::TransformParseTree (this=0xffffc5afc2e8, tree=<optimized out>, statements=...) at /home/duckdb/duckdb/src/parser/transformer.cpp:33
#15 0x0000000000577e60 in duckdb::Parser::ParseQuery (this=0xffffc5afc570, Python Exception <class 'gdb.error'> There is no member named _M_dataplus.: 
query=) at /home/duckdb/duckdb/src/parser/parser.cpp:219
#16 0x00000000004c5e7c in duckdb_shell_sqlite3_prepare_v2 (db=0x16e419b0, zSql=<optimized out>, nByte=<optimized out>, ppStmt=0xffffc5afc698, pzTail=<optimized out>) at ../../tools/sqlite3_api_wrapper/sqlite3_api_wrapper.cpp:176
#17 0x00000000004909c4 in shell_exec (pArg=0xffffc5afc968, 
    zSql=0x16e3b360 "CREATE TABLE v00 (c01 INT);WITH RECURSIVE ta2205 AS ( SHOW ) PIVOT ( v00 PIVOT ( c01,  FOR IN v00 GROUP BY c01 ) JOIN v00 AS ta2201 USING ( c01 ) ) ON c01;", pzErrMsg=<optimized out>)
    at ../../tools/shell/shell.c:12994
#18 0x00000000004b9b94 in runOneSqlLine (p=0xffffc5afc968, 
    zSql=0x16e3b360 "CREATE TABLE v00 (c01 INT);WITH RECURSIVE ta2205 AS ( SHOW ) PIVOT ( v00 PIVOT ( c01,  FOR IN v00 GROUP BY c01 ) JOIN v00 AS ta2201 USING ( c01 ) ) ON c01;", in=<optimized out>, startline=<optimized out>)
    at ../../tools/shell/shell.c:19274
#19 0x0000000000494768 in process_input (p=<optimized out>) at ../../tools/shell/shell.c:19385
#20 0x0000000000475018 in main (argc=<optimized out>, argv=0xffffc5afdd38) at ../../tools/shell/shell.c:20207
```

### To Reproduce

1. Clone the DuckDB Git from the official repo.
2. Checkout to either the latest main (39f9863ef8) or release version: 1.1.2 (f680b7d08f).
3. Compile the DuckDB binary by using either `make reldebug` or `make debug`.
4. Run the compiled DuckDB and input the following SQL:

```
CREATE TABLE v00 (c01 INT);
WITH RECURSIVE ta2205 AS ( SHOW ) PIVOT ( v00 PIVOT ( c01,  FOR IN v00 GROUP BY c01 ) JOIN v00 AS ta2201 USING ( c01 ) ) ON c01;
```

### OS:

Ubuntu 20.04 LTS

### DuckDB Version:

v1.1.2 f680b7d08f

### DuckDB Client:

cli

### Hardware:

_No response_

### Full Name:

Yu Liang

### Affiliation:

Pennsylvania State Univerity

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have

</issue>
<code>
[start of README.md]
1: <div align="center">
2:   <picture>
3:     <source media="(prefers-color-scheme: light)" srcset="logo/DuckDB_Logo-horizontal.svg">
4:     <source media="(prefers-color-scheme: dark)" srcset="logo/DuckDB_Logo-horizontal-dark-mode.svg">
5:     <img alt="DuckDB logo" src="logo/DuckDB_Logo-horizontal.svg" height="100">
6:   </picture>
7: </div>
8: <br>
9: 
10: <p align="center">
11:   <a href="https://github.com/duckdb/duckdb/actions"><img src="https://github.com/duckdb/duckdb/actions/workflows/Main.yml/badge.svg?branch=main" alt="Github Actions Badge"></a>
12:   <a href="https://discord.gg/tcvwpjfnZx"><img src="https://shields.io/discord/909674491309850675" alt="discord" /></a>
13:   <a href="https://github.com/duckdb/duckdb/releases/"><img src="https://img.shields.io/github/v/release/duckdb/duckdb?color=brightgreen&display_name=tag&logo=duckdb&logoColor=white" alt="Latest Release"></a>
14: </p>
15: 
16: ## DuckDB
17: 
18: DuckDB is a high-performance analytical database system. It is designed to be fast, reliable, portable, and easy to use. DuckDB provides a rich SQL dialect, with support far beyond basic SQL. DuckDB supports arbitrary and nested correlated subqueries, window functions, collations, complex types (arrays, structs, maps), and [several extensions designed to make SQL easier to use](https://duckdb.org/docs/guides/sql_features/friendly_sql).
19: 
20: DuckDB is available as a [standalone CLI application](https://duckdb.org/docs/api/cli/overview) and has clients for [Python](https://duckdb.org/docs/api/python/overview), [R](https://duckdb.org/docs/api/r), [Java](https://duckdb.org/docs/api/java), [Wasm](https://duckdb.org/docs/api/wasm/overview), etc., with deep integrations with packages such as [pandas](https://duckdb.org/docs/guides/python/sql_on_pandas) and [dplyr](https://duckdblabs.github.io/duckplyr/).
21: 
22: For more information on using DuckDB, please refer to the [DuckDB documentation](https://duckdb.org/docs/).
23: 
24: ## Installation
25: 
26: If you want to install DuckDB, please see [our installation page](https://duckdb.org/docs/installation/) for instructions.
27: 
28: ## Data Import
29: 
30: For CSV files and Parquet files, data import is as simple as referencing the file in the FROM clause:
31: 
32: ```sql
33: SELECT * FROM 'myfile.csv';
34: SELECT * FROM 'myfile.parquet';
35: ```
36: 
37: Refer to our [Data Import](https://duckdb.org/docs/data/overview) section for more information.
38: 
39: ## SQL Reference
40: 
41: The documentation contains a [SQL introduction and reference](https://duckdb.org/docs/sql/introduction).
42: 
43: ## Development
44: 
45: For development, DuckDB requires [CMake](https://cmake.org), Python3 and a `C++11` compliant compiler. Run `make` in the root directory to compile the sources. For development, use `make debug` to build a non-optimized debug version. You should run `make unit` and `make allunit` to verify that your version works properly after making changes. To test performance, you can run `BUILD_BENCHMARK=1 BUILD_TPCH=1 make` and then perform several standard benchmarks from the root directory by executing `./build/release/benchmark/benchmark_runner`. The details of benchmarks are in our [Benchmark Guide](benchmark/README.md).
46: 
47: Please also refer to our [Build Guide](https://duckdb.org/dev/building) and [Contribution Guide](CONTRIBUTING.md).
48: 
49: ## Support
50: 
51: See the [Support Options](https://duckdblabs.com/support/) page.
[end of README.md]
[start of third_party/libpg_query/grammar/statements/select.y]
1: 
2: /*****************************************************************************
3:  *
4:  *		QUERY:
5:  *				SELECT STATEMENTS
6:  *
7:  *****************************************************************************/
8: 
9: /* A complete SELECT statement looks like this.
10:  *
11:  * The rule returns either a single PGSelectStmt node or a tree of them,
12:  * representing a set-operation tree.
13:  *
14:  * There is an ambiguity when a sub-SELECT is within an a_expr and there
15:  * are excess parentheses: do the parentheses belong to the sub-SELECT or
16:  * to the surrounding a_expr?  We don't really care, but bison wants to know.
17:  * To resolve the ambiguity, we are careful to define the grammar so that
18:  * the decision is staved off as long as possible: as long as we can keep
19:  * absorbing parentheses into the sub-SELECT, we will do so, and only when
20:  * it's no longer possible to do that will we decide that parens belong to
21:  * the expression.	For example, in "SELECT (((SELECT 2)) + 3)" the extra
22:  * parentheses are treated as part of the sub-select.  The necessity of doing
23:  * it that way is shown by "SELECT (((SELECT 2)) UNION SELECT 2)".	Had we
24:  * parsed "((SELECT 2))" as an a_expr, it'd be too late to go back to the
25:  * SELECT viewpoint when we see the UNION.
26:  *
27:  * This approach is implemented by defining a nonterminal select_with_parens,
28:  * which represents a SELECT with at least one outer layer of parentheses,
29:  * and being careful to use select_with_parens, never '(' PGSelectStmt ')',
30:  * in the expression grammar.  We will then have shift-reduce conflicts
31:  * which we can resolve in favor of always treating '(' <select> ')' as
32:  * a select_with_parens.  To resolve the conflicts, the productions that
33:  * conflict with the select_with_parens productions are manually given
34:  * precedences lower than the precedence of ')', thereby ensuring that we
35:  * shift ')' (and then reduce to select_with_parens) rather than trying to
36:  * reduce the inner <select> nonterminal to something else.  We use UMINUS
37:  * precedence for this, which is a fairly arbitrary choice.
38:  *
39:  * To be able to define select_with_parens itself without ambiguity, we need
40:  * a nonterminal select_no_parens that represents a SELECT structure with no
41:  * outermost parentheses.  This is a little bit tedious, but it works.
42:  *
43:  * In non-expression contexts, we use PGSelectStmt which can represent a SELECT
44:  * with or without outer parentheses.
45:  */
46: 
47: SelectStmt: select_no_parens			%prec UMINUS
48: 			| select_with_parens		%prec UMINUS
49: 		;
50: 
51: select_with_parens:
52: 			'(' select_no_parens ')'				{ $$ = $2; }
53: 			| '(' select_with_parens ')'			{ $$ = $2; }
54: 			| '(' VariableShowStmt ')'
55: 		    {
56: 		    	$$ = $2;
57: 			}
58: 		;
59: 
60: /*
61:  * This rule parses the equivalent of the standard's <query expression>.
62:  * The duplicative productions are annoying, but hard to get rid of without
63:  * creating shift/reduce conflicts.
64:  *
65:  *	The locking clause (FOR UPDATE etc) may be before or after LIMIT/OFFSET.
66:  *	In <=7.2.X, LIMIT/OFFSET had to be after FOR UPDATE
67:  *	We now support both orderings, but prefer LIMIT/OFFSET before the locking
68:  * clause.
69:  *	2002-08-28 bjm
70:  */
71: select_no_parens:
72: 			simple_select						{ $$ = $1; }
73: 			| select_clause sort_clause
74: 				{
75: 					insertSelectOptions((PGSelectStmt *) $1, $2, NIL,
76: 										NULL, NULL, NULL,
77: 										yyscanner);
78: 					$$ = $1;
79: 				}
80: 			| select_clause opt_sort_clause for_locking_clause opt_select_limit
81: 				{
82: 					insertSelectOptions((PGSelectStmt *) $1, $2, $3,
83: 										(PGNode*) list_nth($4, 0), (PGNode*) list_nth($4, 1),
84: 										NULL,
85: 										yyscanner);
86: 					$$ = $1;
87: 				}
88: 			| select_clause opt_sort_clause select_limit opt_for_locking_clause
89: 				{
90: 					insertSelectOptions((PGSelectStmt *) $1, $2, $4,
91: 										(PGNode*) list_nth($3, 0), (PGNode*) list_nth($3, 1),
92: 										NULL,
93: 										yyscanner);
94: 					$$ = $1;
95: 				}
96: 			| with_clause select_clause
97: 				{
98: 					insertSelectOptions((PGSelectStmt *) $2, NULL, NIL,
99: 										NULL, NULL,
100: 										$1,
101: 										yyscanner);
102: 					$$ = $2;
103: 				}
104: 			| with_clause select_clause sort_clause
105: 				{
106: 					insertSelectOptions((PGSelectStmt *) $2, $3, NIL,
107: 										NULL, NULL,
108: 										$1,
109: 										yyscanner);
110: 					$$ = $2;
111: 				}
112: 			| with_clause select_clause opt_sort_clause for_locking_clause opt_select_limit
113: 				{
114: 					insertSelectOptions((PGSelectStmt *) $2, $3, $4,
115: 										(PGNode*) list_nth($5, 0), (PGNode*) list_nth($5, 1),
116: 										$1,
117: 										yyscanner);
118: 					$$ = $2;
119: 				}
120: 			| with_clause select_clause opt_sort_clause select_limit opt_for_locking_clause
121: 				{
122: 					insertSelectOptions((PGSelectStmt *) $2, $3, $5,
123: 										(PGNode*) list_nth($4, 0), (PGNode*) list_nth($4, 1),
124: 										$1,
125: 										yyscanner);
126: 					$$ = $2;
127: 				}
128: 		;
129: 
130: select_clause:
131: 			simple_select							{ $$ = $1; }
132: 			| select_with_parens					{ $$ = $1; }
133: 		;
134: 
135: /*
136:  * This rule parses SELECT statements that can appear within set operations,
137:  * including UNION, INTERSECT and EXCEPT.  '(' and ')' can be used to specify
138:  * the ordering of the set operations.	Without '(' and ')' we want the
139:  * operations to be ordered per the precedence specs at the head of this file.
140:  *
141:  * As with select_no_parens, simple_select cannot have outer parentheses,
142:  * but can have parenthesized subclauses.
143:  *
144:  * Note that sort clauses cannot be included at this level --- SQL requires
145:  *		SELECT foo UNION SELECT bar ORDER BY baz
146:  * to be parsed as
147:  *		(SELECT foo UNION SELECT bar) ORDER BY baz
148:  * not
149:  *		SELECT foo UNION (SELECT bar ORDER BY baz)
150:  * Likewise for WITH, FOR UPDATE and LIMIT.  Therefore, those clauses are
151:  * described as part of the select_no_parens production, not simple_select.
152:  * This does not limit functionality, because you can reintroduce these
153:  * clauses inside parentheses.
154:  *
155:  * NOTE: only the leftmost component PGSelectStmt should have INTO.
156:  * However, this is not checked by the grammar; parse analysis must check it.
157:  */
158: opt_select:
159: 		SELECT opt_all_clause opt_target_list_opt_comma
160: 			{
161: 				$$ = $3;
162: 			}
163: 		| /* empty */
164: 			{
165: 				PGAStar *star = makeNode(PGAStar);
166: 				$$ = list_make1(star);
167: 			}
168: 	;
169: 
170: 
171: simple_select:
172: 			SELECT opt_all_clause opt_target_list_opt_comma
173: 			into_clause from_clause where_clause
174: 			group_clause having_clause window_clause qualify_clause sample_clause
175: 				{
176: 					PGSelectStmt *n = makeNode(PGSelectStmt);
177: 					n->targetList = $3;
178: 					n->intoClause = $4;
179: 					n->fromClause = $5;
180: 					n->whereClause = $6;
181: 					n->groupClause = $7;
182: 					n->havingClause = $8;
183: 					n->windowClause = $9;
184: 					n->qualifyClause = $10;
185: 					n->sampleOptions = $11;
186: 					$$ = (PGNode *)n;
187: 				}
188: 			| SELECT distinct_clause target_list_opt_comma
189: 			into_clause from_clause where_clause
190: 			group_clause having_clause window_clause qualify_clause sample_clause
191: 				{
192: 					PGSelectStmt *n = makeNode(PGSelectStmt);
193: 					n->distinctClause = $2;
194: 					n->targetList = $3;
195: 					n->intoClause = $4;
196: 					n->fromClause = $5;
197: 					n->whereClause = $6;
198: 					n->groupClause = $7;
199: 					n->havingClause = $8;
200: 					n->windowClause = $9;
201: 					n->qualifyClause = $10;
202: 					n->sampleOptions = $11;
203: 					$$ = (PGNode *)n;
204: 				}
205: 			|  FROM from_list opt_select
206: 			into_clause where_clause
207: 			group_clause having_clause window_clause qualify_clause sample_clause
208: 				{
209: 					PGSelectStmt *n = makeNode(PGSelectStmt);
210: 					n->targetList = $3;
211: 					n->fromClause = $2;
212: 					n->intoClause = $4;
213: 					n->whereClause = $5;
214: 					n->groupClause = $6;
215: 					n->havingClause = $7;
216: 					n->windowClause = $8;
217: 					n->qualifyClause = $9;
218: 					n->sampleOptions = $10;
219: 					n->from_first = true;
220: 					$$ = (PGNode *)n;
221: 				}
222: 			|
223: 			FROM from_list SELECT distinct_clause target_list_opt_comma
224: 			into_clause where_clause
225: 			group_clause having_clause window_clause qualify_clause sample_clause
226: 				{
227: 					PGSelectStmt *n = makeNode(PGSelectStmt);
228: 					n->targetList = $5;
229: 					n->distinctClause = $4;
230: 					n->fromClause = $2;
231: 					n->intoClause = $6;
232: 					n->whereClause = $7;
233: 					n->groupClause = $8;
234: 					n->havingClause = $9;
235: 					n->windowClause = $10;
236: 					n->qualifyClause = $11;
237: 					n->sampleOptions = $12;
238: 					n->from_first = true;
239: 					$$ = (PGNode *)n;
240: 				}
241: 			| values_clause_opt_comma							{ $$ = $1; }
242: 			| TABLE relation_expr
243: 				{
244: 					/* same as SELECT * FROM relation_expr */
245: 					PGColumnRef *cr = makeNode(PGColumnRef);
246: 					PGResTarget *rt = makeNode(PGResTarget);
247: 					PGSelectStmt *n = makeNode(PGSelectStmt);
248: 
249: 					cr->fields = list_make1(makeNode(PGAStar));
250: 					cr->location = -1;
251: 
252: 					rt->name = NULL;
253: 					rt->indirection = NIL;
254: 					rt->val = (PGNode *)cr;
255: 					rt->location = -1;
256: 
257: 					n->targetList = list_make1(rt);
258: 					n->fromClause = list_make1($2);
259: 					$$ = (PGNode *)n;
260: 				}
261:             | select_clause UNION all_or_distinct by_name select_clause
262: 				{
263: 					$$ = makeSetOp(PG_SETOP_UNION_BY_NAME, $3, $1, $5);
264: 				}
265: 			| select_clause UNION all_or_distinct select_clause
266: 				{
267: 					$$ = makeSetOp(PG_SETOP_UNION, $3, $1, $4);
268: 				}
269: 			| select_clause INTERSECT all_or_distinct select_clause
270: 				{
271: 					$$ = makeSetOp(PG_SETOP_INTERSECT, $3, $1, $4);
272: 				}
273: 			| select_clause EXCEPT all_or_distinct select_clause
274: 				{
275: 					$$ = makeSetOp(PG_SETOP_EXCEPT, $3, $1, $4);
276: 				}
277: 			| pivot_keyword table_ref USING target_list_opt_comma
278: 				{
279: 					PGSelectStmt *res = makeNode(PGSelectStmt);
280: 					PGPivotStmt *n = makeNode(PGPivotStmt);
281: 					n->source = $2;
282: 					n->aggrs = $4;
283: 					n->location = @1;
284: 					res->pivot = n;
285: 					$$ = (PGNode *)res;
286: 				}
287: 			| pivot_keyword table_ref USING target_list_opt_comma GROUP_P BY name_list_opt_comma_opt_bracket
288: 				{
289: 					PGSelectStmt *res = makeNode(PGSelectStmt);
290: 					PGPivotStmt *n = makeNode(PGPivotStmt);
291: 					n->source = $2;
292: 					n->aggrs = $4;
293: 					n->groups = $7;
294: 					n->location = @1;
295: 					res->pivot = n;
296: 					$$ = (PGNode *)res;
297: 				}
298: 			| pivot_keyword table_ref GROUP_P BY name_list_opt_comma_opt_bracket
299: 				{
300: 					PGSelectStmt *res = makeNode(PGSelectStmt);
301: 					PGPivotStmt *n = makeNode(PGPivotStmt);
302: 					n->source = $2;
303: 					n->groups = $5;
304: 					n->location = @1;
305: 					res->pivot = n;
306: 					$$ = (PGNode *)res;
307: 				}
308: 			| pivot_keyword table_ref ON pivot_column_list
309: 				{
310: 					PGSelectStmt *res = makeNode(PGSelectStmt);
311: 					PGPivotStmt *n = makeNode(PGPivotStmt);
312: 					n->source = $2;
313: 					n->columns = $4;
314: 					res->pivot = n;
315: 					$$ = (PGNode *)res;
316: 				}
317: 			| pivot_keyword table_ref ON pivot_column_list GROUP_P BY name_list_opt_comma_opt_bracket
318: 				{
319: 					PGSelectStmt *res = makeNode(PGSelectStmt);
320: 					PGPivotStmt *n = makeNode(PGPivotStmt);
321: 					n->source = $2;
322: 					n->columns = $4;
323: 					n->groups = $7;
324: 					n->location = @1;
325: 					res->pivot = n;
326: 					$$ = (PGNode *)res;
327: 				}
328: 			| pivot_keyword table_ref ON pivot_column_list USING target_list_opt_comma
329: 				{
330: 					PGSelectStmt *res = makeNode(PGSelectStmt);
331: 					PGPivotStmt *n = makeNode(PGPivotStmt);
332: 					n->source = $2;
333: 					n->columns = $4;
334: 					n->aggrs = $6;
335: 					n->location = @1;
336: 					res->pivot = n;
337: 					$$ = (PGNode *)res;
338: 				}
339: 			| pivot_keyword table_ref ON pivot_column_list USING target_list_opt_comma GROUP_P BY name_list_opt_comma_opt_bracket
340: 				{
341: 					PGSelectStmt *res = makeNode(PGSelectStmt);
342: 					PGPivotStmt *n = makeNode(PGPivotStmt);
343: 					n->source = $2;
344: 					n->columns = $4;
345: 					n->aggrs = $6;
346: 					n->groups = $9;
347: 					n->location = @1;
348: 					res->pivot = n;
349: 					$$ = (PGNode *)res;
350: 				}
351: 			| unpivot_keyword table_ref ON target_list_opt_comma INTO NAME_P name value_or_values name_list_opt_comma_opt_bracket
352: 				{
353: 					PGSelectStmt *res = makeNode(PGSelectStmt);
354: 					PGPivotStmt *n = makeNode(PGPivotStmt);
355: 					n->source = $2;
356: 					n->unpivots = $9;
357: 					n->location = @1;
358: 					PGPivot *piv = makeNode(PGPivot);
359: 					piv->unpivot_columns = list_make1(makeString($7));
360: 					piv->pivot_value = $4;
361: 					n->columns = list_make1(piv);
362: 
363: 					res->pivot = n;
364: 					$$ = (PGNode *)res;
365: 				}
366: 			| unpivot_keyword table_ref ON target_list_opt_comma
367: 				{
368: 					PGSelectStmt *res = makeNode(PGSelectStmt);
369: 					PGPivotStmt *n = makeNode(PGPivotStmt);
370: 					n->source = $2;
371: 					n->unpivots = list_make1(makeString("value"));
372: 					n->location = @1;
373: 					PGPivot *piv = makeNode(PGPivot);
374: 					piv->unpivot_columns = list_make1(makeString("name"));
375: 					piv->pivot_value = $4;
376: 					n->columns = list_make1(piv);
377: 
378: 					res->pivot = n;
379: 					$$ = (PGNode *)res;
380: 				}
381: 		;
382: 
383: value_or_values:
384: 		VALUE_P | VALUES
385: 	;
386: 
387: pivot_keyword:
388: 		PIVOT | PIVOT_WIDER
389: 	;
390: 
391: unpivot_keyword:
392: 		UNPIVOT | PIVOT_LONGER
393: 	;
394: 
395: pivot_column_entry:
396: 			b_expr
397: 			{
398: 				PGPivot *n = makeNode(PGPivot);
399: 				n->pivot_columns = list_make1($1);
400: 				$$ = (PGNode *) n;
401: 			}
402: 			| b_expr IN_P '(' select_no_parens ')'
403: 			{
404: 				PGPivot *n = makeNode(PGPivot);
405: 				n->pivot_columns = list_make1($1);
406: 				n->subquery = $4;
407: 				$$ = (PGNode *) n;
408: 			}
409: 			| single_pivot_value													{ $$ = $1; }
410: 		;
411: 
412: pivot_column_list_internal:
413: 			pivot_column_entry												{ $$ = list_make1($1); }
414: 			| pivot_column_list_internal ',' pivot_column_entry 			{ $$ = lappend($1, $3); }
415: 		;
416: 
417: pivot_column_list:
418: 			pivot_column_list_internal										{ $$ = $1; }
419: 			| pivot_column_list_internal ','								{ $$ = $1; }
420: 		;
421: 
422: /*
423:  * SQL standard WITH clause looks like:
424:  *
425:  * WITH [ RECURSIVE ] <query name> [ (<column>,...) ]
426:  *		AS (query) [ SEARCH or CYCLE clause ]
427:  *
428:  * We don't currently support the SEARCH or CYCLE clause.
429:  *
430:  * Recognizing WITH_LA here allows a CTE to be named TIME or ORDINALITY.
431:  */
432: with_clause:
433: 		WITH cte_list
434: 			{
435: 				$$ = makeNode(PGWithClause);
436: 				$$->ctes = $2;
437: 				$$->recursive = false;
438: 				$$->location = @1;
439: 			}
440: 		| WITH_LA cte_list
441: 			{
442: 				$$ = makeNode(PGWithClause);
443: 				$$->ctes = $2;
444: 				$$->recursive = false;
445: 				$$->location = @1;
446: 			}
447: 		| WITH RECURSIVE cte_list
448: 			{
449: 				$$ = makeNode(PGWithClause);
450: 				$$->ctes = $3;
451: 				$$->recursive = true;
452: 				$$->location = @1;
453: 			}
454: 		;
455: 
456: cte_list:
457: 		common_table_expr						{ $$ = list_make1($1); }
458: 		| cte_list ',' common_table_expr		{ $$ = lappend($1, $3); }
459: 		;
460: 
461: common_table_expr:  name opt_name_list AS opt_materialized '(' PreparableStmt ')'
462: 			{
463: 				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
464: 				n->ctename = $1;
465: 				n->aliascolnames = $2;
466: 				n->ctematerialized = $4;
467: 				n->ctequery = $6;
468: 				n->location = @1;
469: 				$$ = (PGNode *) n;
470: 			}
471: 		;
472: 
473: opt_materialized:
474: 		MATERIALIZED							{ $$ = PGCTEMaterializeAlways; }
475: 		| NOT MATERIALIZED						{ $$ = PGCTEMaterializeNever; }
476: 		| /*EMPTY*/								{ $$ = PGCTEMaterializeDefault; }
477: 		;
478: 
479: into_clause:
480: 			INTO OptTempTableName
481: 				{
482: 					$$ = makeNode(PGIntoClause);
483: 					$$->rel = $2;
484: 					$$->colNames = NIL;
485: 					$$->options = NIL;
486: 					$$->onCommit = PG_ONCOMMIT_NOOP;
487: 					$$->viewQuery = NULL;
488: 					$$->skipData = false;
489: 				}
490: 			| /*EMPTY*/
491: 				{ $$ = NULL; }
492: 		;
493: 
494: /*
495:  * Redundancy here is needed to avoid shift/reduce conflicts,
496:  * since TEMP is not a reserved word.  See also OptTemp.
497:  */
498: OptTempTableName:
499: 			TEMPORARY opt_table qualified_name
500: 				{
501: 					$$ = $3;
502: 					$$->relpersistence = PG_RELPERSISTENCE_TEMP;
503: 				}
504: 			| TEMP opt_table qualified_name
505: 				{
506: 					$$ = $3;
507: 					$$->relpersistence = PG_RELPERSISTENCE_TEMP;
508: 				}
509: 			| LOCAL TEMPORARY opt_table qualified_name
510: 				{
511: 					$$ = $4;
512: 					$$->relpersistence = PG_RELPERSISTENCE_TEMP;
513: 				}
514: 			| LOCAL TEMP opt_table qualified_name
515: 				{
516: 					$$ = $4;
517: 					$$->relpersistence = PG_RELPERSISTENCE_TEMP;
518: 				}
519: 			| GLOBAL TEMPORARY opt_table qualified_name
520: 				{
521: 					ereport(PGWARNING,
522: 							(errmsg("GLOBAL is deprecated in temporary table creation"),
523: 							 parser_errposition(@1)));
524: 					$$ = $4;
525: 					$$->relpersistence = PG_RELPERSISTENCE_TEMP;
526: 				}
527: 			| GLOBAL TEMP opt_table qualified_name
528: 				{
529: 					ereport(PGWARNING,
530: 							(errmsg("GLOBAL is deprecated in temporary table creation"),
531: 							 parser_errposition(@1)));
532: 					$$ = $4;
533: 					$$->relpersistence = PG_RELPERSISTENCE_TEMP;
534: 				}
535: 			| UNLOGGED opt_table qualified_name
536: 				{
537: 					$$ = $3;
538: 					$$->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
539: 				}
540: 			| TABLE qualified_name
541: 				{
542: 					$$ = $2;
543: 					$$->relpersistence = RELPERSISTENCE_PERMANENT;
544: 				}
545: 			| qualified_name
546: 				{
547: 					$$ = $1;
548: 					$$->relpersistence = RELPERSISTENCE_PERMANENT;
549: 				}
550: 		;
551: 
552: opt_table:	TABLE									{}
553: 			| /*EMPTY*/								{}
554: 		;
555: 
556: all_or_distinct:
557: 			ALL										{ $$ = true; }
558: 			| DISTINCT								{ $$ = false; }
559: 			| /*EMPTY*/								{ $$ = false; }
560: 		;
561: 
562: by_name:
563:             BY NAME_P                                     { }
564:         ;
565: 
566: /* We use (NIL) as a placeholder to indicate that all target expressions
567:  * should be placed in the DISTINCT list during parsetree analysis.
568:  */
569: distinct_clause:
570: 			DISTINCT								{ $$ = list_make1(NIL); }
571: 			| DISTINCT ON '(' expr_list_opt_comma ')'			{ $$ = $4; }
572: 		;
573: 
574: opt_all_clause:
575: 			ALL										{ $$ = NIL;}
576: 			| /*EMPTY*/								{ $$ = NIL; }
577: 		;
578: 
579: opt_ignore_nulls:
580: 			IGNORE_P NULLS_P						{ $$ = PG_IGNORE_NULLS;}
581: 			| RESPECT_P NULLS_P						{ $$ = PG_RESPECT_NULLS;}
582: 			| /*EMPTY*/								{ $$ = PG_DEFAULT_NULLS; }
583: 		;
584: 
585: opt_sort_clause:
586: 			sort_clause								{ $$ = $1;}
587: 			| /*EMPTY*/								{ $$ = NIL; }
588: 		;
589: 
590: sort_clause:
591: 			ORDER BY sortby_list					{ $$ = $3; }
592: 			| ORDER BY ALL opt_asc_desc opt_nulls_order
593: 				{
594: 					PGSortBy *sort = makeNode(PGSortBy);
595: 					PGAStar *star = makeNode(PGAStar);
596: 					star->columns = true;
597: 					star->location = @3;
598: 					sort->node = (PGNode *) star;
599: 					sort->sortby_dir = $4;
600: 					sort->sortby_nulls = $5;
601: 					sort->useOp = NIL;
602: 					sort->location = -1;		/* no operator */
603: 					$$ = list_make1(sort);
604: 				}
605: 		;
606: 
607: sortby_list:
608: 			sortby									{ $$ = list_make1($1); }
609: 			| sortby_list ',' sortby				{ $$ = lappend($1, $3); }
610: 		;
611: 
612: sortby:		a_expr USING qual_all_Op opt_nulls_order
613: 				{
614: 					$$ = makeNode(PGSortBy);
615: 					$$->node = $1;
616: 					$$->sortby_dir = SORTBY_USING;
617: 					$$->sortby_nulls = $4;
618: 					$$->useOp = $3;
619: 					$$->location = @3;
620: 				}
621: 			| a_expr opt_asc_desc opt_nulls_order
622: 				{
623: 					$$ = makeNode(PGSortBy);
624: 					$$->node = $1;
625: 					$$->sortby_dir = $2;
626: 					$$->sortby_nulls = $3;
627: 					$$->useOp = NIL;
628: 					$$->location = -1;		/* no operator */
629: 				}
630: 		;
631: 
632: opt_asc_desc: ASC_P							{ $$ = PG_SORTBY_ASC; }
633: 			| DESC_P						{ $$ = PG_SORTBY_DESC; }
634: 			| /*EMPTY*/						{ $$ = PG_SORTBY_DEFAULT; }
635: 		;
636: 
637: opt_nulls_order: NULLS_LA FIRST_P			{ $$ = PG_SORTBY_NULLS_FIRST; }
638: 			| NULLS_LA LAST_P				{ $$ = PG_SORTBY_NULLS_LAST; }
639: 			| /*EMPTY*/						{ $$ = PG_SORTBY_NULLS_DEFAULT; }
640: 		;
641: 
642: select_limit:
643: 			limit_clause offset_clause			{ $$ = list_make2($2, $1); }
644: 			| offset_clause limit_clause		{ $$ = list_make2($1, $2); }
645: 			| limit_clause						{ $$ = list_make2(NULL, $1); }
646: 			| offset_clause						{ $$ = list_make2($1, NULL); }
647: 		;
648: 
649: opt_select_limit:
650: 			select_limit						{ $$ = $1; }
651: 			| /* EMPTY */						{ $$ = list_make2(NULL,NULL); }
652: 		;
653: 
654: limit_clause:
655: 			LIMIT select_limit_value
656: 				{ $$ = $2; }
657: 			| LIMIT select_limit_value ',' select_offset_value
658: 				{
659: 					/* Disabled because it was too confusing, bjm 2002-02-18 */
660: 					ereport(ERROR,
661: 							(errcode(PG_ERRCODE_SYNTAX_ERROR),
662: 							 errmsg("LIMIT #,# syntax is not supported"),
663: 							 errhint("Use separate LIMIT and OFFSET clauses."),
664: 							 parser_errposition(@1)));
665: 				}
666: 			/* SQL:2008 syntax */
667: 			/* to avoid shift/reduce conflicts, handle the optional value with
668: 			 * a separate production rather than an opt_ expression.  The fact
669: 			 * that ONLY is fully reserved means that this way, we defer any
670: 			 * decision about what rule reduces ROW or ROWS to the point where
671: 			 * we can see the ONLY token in the lookahead slot.
672: 			 */
673: 			| FETCH first_or_next select_fetch_first_value row_or_rows ONLY
674: 				{ $$ = $3; }
675: 			| FETCH first_or_next row_or_rows ONLY
676: 				{ $$ = makeIntConst(1, -1); }
677: 		;
678: 
679: offset_clause:
680: 			OFFSET select_offset_value
681: 				{ $$ = $2; }
682: 			/* SQL:2008 syntax */
683: 			| OFFSET select_fetch_first_value row_or_rows
684: 				{ $$ = $2; }
685: 		;
686: 
687: /*
688:  * SAMPLE clause
689:  */
690: sample_count:
691: 	FCONST '%'
692: 		{
693: 			$$ = makeSampleSize(makeFloat($1), true);
694: 		}
695: 	| ICONST '%'
696: 		{
697: 			$$ = makeSampleSize(makeInteger($1), true);
698: 		}
699: 	| FCONST PERCENT
700: 		{
701: 			$$ = makeSampleSize(makeFloat($1), true);
702: 		}
703: 	| ICONST PERCENT
704: 		{
705: 			$$ = makeSampleSize(makeInteger($1), true);
706: 		}
707: 	| ICONST
708: 		{
709: 			$$ = makeSampleSize(makeInteger($1), false);
710: 		}
711: 	| ICONST ROWS
712: 		{
713: 			$$ = makeSampleSize(makeInteger($1), false);
714: 		}
715: 	;
716: 
717: sample_clause:
718: 			USING SAMPLE tablesample_entry
719: 				{
720: 					$$ = $3;
721: 				}
722: 			| /* EMPTY */
723: 				{ $$ = NULL; }
724: 		;
725: 
726: /*
727:  * TABLESAMPLE decoration in a FROM item
728:  */
729: opt_sample_func:
730: 			ColId					{ $$ = $1; }
731: 			| /*EMPTY*/				{ $$ = NULL; }
732: 		;
733: 
734: tablesample_entry:
735: 	opt_sample_func '(' sample_count ')' opt_repeatable_clause
736: 				{
737: 					int seed = $5;
738: 					$$ = makeSampleOptions($3, $1, &seed, @1);
739: 				}
740: 	| sample_count
741: 		{
742: 			$$ = makeSampleOptions($1, NULL, NULL, @1);
743: 		}
744: 	| sample_count '(' ColId ')'
745: 		{
746: 			$$ = makeSampleOptions($1, $3, NULL, @1);
747: 		}
748: 	| sample_count '(' ColId ',' ICONST ')'
749: 		{
750: 			int seed = $5;
751: 			$$ = makeSampleOptions($1, $3, &seed, @1);
752: 		}
753: 	;
754: 
755: tablesample_clause:
756: 			TABLESAMPLE tablesample_entry
757: 				{
758: 					$$ = $2;
759: 				}
760: 		;
761: 
762: opt_tablesample_clause:
763: 			tablesample_clause			{ $$ = $1; }
764: 			| /*EMPTY*/					{ $$ = NULL; }
765: 		;
766: 
767: 
768: opt_repeatable_clause:
769: 			REPEATABLE '(' ICONST ')'	{ $$ = $3; }
770: 			| /*EMPTY*/					{ $$ = -1; }
771: 		;
772: 
773: select_limit_value:
774: 			a_expr									{ $$ = $1; }
775: 			| ALL
776: 				{
777: 					/* LIMIT ALL is represented as a NULL constant */
778: 					$$ = makeNullAConst(@1);
779: 				}
780: 			| a_expr '%'
781: 				{ $$ = makeLimitPercent($1); }
782: 			| FCONST PERCENT
783: 				{ $$ = makeLimitPercent(makeFloatConst($1,@1)); }
784: 			| ICONST PERCENT
785: 				{ $$ = makeLimitPercent(makeIntConst($1,@1)); }
786: 		;
787: 
788: select_offset_value:
789: 			a_expr									{ $$ = $1; }
790: 		;
791: 
792: /*
793:  * Allowing full expressions without parentheses causes various parsing
794:  * problems with the trailing ROW/ROWS key words.  SQL spec only calls for
795:  * <simple value specification>, which is either a literal or a parameter (but
796:  * an <SQL parameter reference> could be an identifier, bringing up conflicts
797:  * with ROW/ROWS). We solve this by leveraging the presence of ONLY (see above)
798:  * to determine whether the expression is missing rather than trying to make it
799:  * optional in this rule.
800:  *
801:  * c_expr covers almost all the spec-required cases (and more), but it doesn't
802:  * cover signed numeric literals, which are allowed by the spec. So we include
803:  * those here explicitly. We need FCONST as well as ICONST because values that
804:  * don't fit in the platform's "long", but do fit in bigint, should still be
805:  * accepted here. (This is possible in 64-bit Windows as well as all 32-bit
806:  * builds.)
807:  */
808: select_fetch_first_value:
809: 			c_expr									{ $$ = $1; }
810: 			| '+' I_or_F_const
811: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, $2, @1); }
812: 			| '-' I_or_F_const
813: 				{ $$ = doNegate($2, @1); }
814: 		;
815: 
816: I_or_F_const:
817: 			Iconst									{ $$ = makeIntConst($1,@1); }
818: 			| FCONST								{ $$ = makeFloatConst($1,@1); }
819: 		;
820: 
821: /* noise words */
822: row_or_rows: ROW									{ $$ = 0; }
823: 			| ROWS									{ $$ = 0; }
824: 		;
825: 
826: first_or_next: FIRST_P								{ $$ = 0; }
827: 			| NEXT									{ $$ = 0; }
828: 		;
829: 
830: 
831: /*
832:  * This syntax for group_clause tries to follow the spec quite closely.
833:  * However, the spec allows only column references, not expressions,
834:  * which introduces an ambiguity between implicit row constructors
835:  * (a,b) and lists of column references.
836:  *
837:  * We handle this by using the a_expr production for what the spec calls
838:  * <ordinary grouping set>, which in the spec represents either one column
839:  * reference or a parenthesized list of column references. Then, we check the
840:  * top node of the a_expr to see if it's an implicit PGRowExpr, and if so, just
841:  * grab and use the list, discarding the node. (this is done in parse analysis,
842:  * not here)
843:  *
844:  * (we abuse the row_format field of PGRowExpr to distinguish implicit and
845:  * explicit row constructors; it's debatable if anyone sanely wants to use them
846:  * in a group clause, but if they have a reason to, we make it possible.)
847:  *
848:  * Each item in the group_clause list is either an expression tree or a
849:  * PGGroupingSet node of some type.
850:  */
851: group_clause:
852: 			GROUP_P BY group_by_list_opt_comma				{ $$ = $3; }
853: 			| GROUP_P BY ALL
854: 				{
855: 					PGNode *node = (PGNode *) makeGroupingSet(GROUPING_SET_ALL, NIL, @3);
856: 					$$ = list_make1(node);
857: 				}
858: 			| /*EMPTY*/								{ $$ = NIL; }
859: 		;
860: 
861: group_by_list:
862: 			group_by_item							{ $$ = list_make1($1); }
863: 			| group_by_list ',' group_by_item		{ $$ = lappend($1,$3); }
864: 		;
865: 
866: group_by_list_opt_comma:
867: 			group_by_list								{ $$ = $1; }
868: 			| group_by_list ','							{ $$ = $1; }
869: 		;
870: 
871: group_by_item:
872: 			a_expr									{ $$ = $1; }
873: 			| empty_grouping_set					{ $$ = $1; }
874: 			| cube_clause							{ $$ = $1; }
875: 			| rollup_clause							{ $$ = $1; }
876: 			| grouping_sets_clause					{ $$ = $1; }
877: 		;
878: 
879: empty_grouping_set:
880: 			'(' ')'
881: 				{
882: 					$$ = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, @1);
883: 				}
884: 		;
885: 
886: /*
887:  * These hacks rely on setting precedence of CUBE and ROLLUP below that of '(',
888:  * so that they shift in these rules rather than reducing the conflicting
889:  * unreserved_keyword rule.
890:  */
891: 
892: rollup_clause:
893: 			ROLLUP '(' expr_list_opt_comma ')'
894: 				{
895: 					$$ = (PGNode *) makeGroupingSet(GROUPING_SET_ROLLUP, $3, @1);
896: 				}
897: 		;
898: 
899: cube_clause:
900: 			CUBE '(' expr_list_opt_comma ')'
901: 				{
902: 					$$ = (PGNode *) makeGroupingSet(GROUPING_SET_CUBE, $3, @1);
903: 				}
904: 		;
905: 
906: grouping_sets_clause:
907: 			GROUPING SETS '(' group_by_list_opt_comma ')'
908: 				{
909: 					$$ = (PGNode *) makeGroupingSet(GROUPING_SET_SETS, $4, @1);
910: 				}
911: 		;
912: 
913: grouping_or_grouping_id:
914: 		GROUPING								{ $$ = NULL; }
915: 		| GROUPING_ID							{ $$ = NULL; }
916: 		;
917: 
918: having_clause:
919: 			HAVING a_expr							{ $$ = $2; }
920: 			| /*EMPTY*/								{ $$ = NULL; }
921: 		;
922: 
923: qualify_clause:
924: 			QUALIFY a_expr							{ $$ = $2; }
925: 			| /*EMPTY*/								{ $$ = NULL; }
926: 		;
927: 
928: for_locking_clause:
929: 			for_locking_items						{ $$ = $1; }
930: 			| FOR READ_P ONLY							{ $$ = NIL; }
931: 		;
932: 
933: opt_for_locking_clause:
934: 			for_locking_clause						{ $$ = $1; }
935: 			| /* EMPTY */							{ $$ = NIL; }
936: 		;
937: 
938: for_locking_items:
939: 			for_locking_item						{ $$ = list_make1($1); }
940: 			| for_locking_items for_locking_item	{ $$ = lappend($1, $2); }
941: 		;
942: 
943: for_locking_item:
944: 			for_locking_strength locked_rels_list opt_nowait_or_skip
945: 				{
946: 					PGLockingClause *n = makeNode(PGLockingClause);
947: 					n->lockedRels = $2;
948: 					n->strength = $1;
949: 					n->waitPolicy = $3;
950: 					$$ = (PGNode *) n;
951: 				}
952: 		;
953: 
954: for_locking_strength:
955: 			FOR UPDATE 							{ $$ = LCS_FORUPDATE; }
956: 			| FOR NO KEY UPDATE 				{ $$ = PG_LCS_FORNOKEYUPDATE; }
957: 			| FOR SHARE 						{ $$ = PG_LCS_FORSHARE; }
958: 			| FOR KEY SHARE 					{ $$ = PG_LCS_FORKEYSHARE; }
959: 		;
960: 
961: locked_rels_list:
962: 			OF qualified_name_list					{ $$ = $2; }
963: 			| /* EMPTY */							{ $$ = NIL; }
964: 		;
965: 
966: 
967: opt_nowait_or_skip:
968: 			NOWAIT							{ $$ = LockWaitError; }
969: 			| SKIP LOCKED					{ $$ = PGLockWaitSkip; }
970: 			| /*EMPTY*/						{ $$ = PGLockWaitBlock; }
971: 		;
972: 
973: /*
974:  * We should allow ROW '(' expr_list ')' too, but that seems to require
975:  * making VALUES a fully reserved word, which will probably break more apps
976:  * than allowing the noise-word is worth.
977:  */
978: values_clause:
979: 			VALUES '(' expr_list_opt_comma ')'
980: 				{
981: 					PGSelectStmt *n = makeNode(PGSelectStmt);
982: 					n->valuesLists = list_make1($3);
983: 					$$ = (PGNode *) n;
984: 				}
985: 			| values_clause ',' '(' expr_list_opt_comma ')'
986: 				{
987: 					PGSelectStmt *n = (PGSelectStmt *) $1;
988: 					n->valuesLists = lappend(n->valuesLists, $4);
989: 					$$ = (PGNode *) n;
990: 				}
991: 		;
992: 
993: values_clause_opt_comma:
994: 			values_clause				{ $$ = $1; }
995: 			| values_clause ','			{ $$ = $1; }
996: 		;
997: 
998: 
999: /*****************************************************************************
1000:  *
1001:  *	clauses common to all Optimizable Stmts:
1002:  *		from_clause		- allow list of both JOIN expressions and table names
1003:  *		where_clause	- qualifications for joins or restrictions
1004:  *
1005:  *****************************************************************************/
1006: 
1007: from_clause:
1008: 			FROM from_list_opt_comma							{ $$ = $2; }
1009: 			| /*EMPTY*/								{ $$ = NIL; }
1010: 		;
1011: 
1012: from_list:
1013: 			table_ref								{ $$ = list_make1($1); }
1014: 			| from_list ',' table_ref				{ $$ = lappend($1, $3); }
1015: 		;
1016: 
1017: from_list_opt_comma:
1018: 			from_list								{ $$ = $1; }
1019: 			| from_list ','							{ $$ = $1; }
1020: 		;
1021: 
1022: /*
1023:  * table_ref is where an alias clause can be attached.
1024:  */
1025: table_ref:	relation_expr opt_alias_clause opt_tablesample_clause
1026: 				{
1027: 					$1->alias = $2;
1028: 					$1->sample = $3;
1029: 					$$ = (PGNode *) $1;
1030: 				}
1031: 			| func_table func_alias_clause opt_tablesample_clause
1032: 				{
1033: 					PGRangeFunction *n = (PGRangeFunction *) $1;
1034: 					n->alias = (PGAlias*) linitial($2);
1035: 					n->coldeflist = (PGList*) lsecond($2);
1036: 					n->sample = $3;
1037: 					$$ = (PGNode *) n;
1038: 				}
1039: 			| values_clause_opt_comma alias_clause opt_tablesample_clause
1040: 			{
1041: 				PGRangeSubselect *n = makeNode(PGRangeSubselect);
1042: 				n->lateral = false;
1043: 				n->subquery = $1;
1044: 				n->alias = $2;
1045: 				n->sample = $3;
1046: 				$$ = (PGNode *) n;
1047: 			}
1048: 			| LATERAL_P func_table func_alias_clause
1049: 				{
1050: 					PGRangeFunction *n = (PGRangeFunction *) $2;
1051: 					n->lateral = true;
1052: 					n->alias = (PGAlias*) linitial($3);
1053: 					n->coldeflist = (PGList*) lsecond($3);
1054: 					$$ = (PGNode *) n;
1055: 				}
1056: 			| select_with_parens opt_alias_clause opt_tablesample_clause
1057: 				{
1058: 					PGRangeSubselect *n = makeNode(PGRangeSubselect);
1059: 					n->lateral = false;
1060: 					n->subquery = $1;
1061: 					n->alias = $2;
1062: 					n->sample = $3;
1063: 					$$ = (PGNode *) n;
1064: 				}
1065: 			| LATERAL_P select_with_parens opt_alias_clause
1066: 				{
1067: 					PGRangeSubselect *n = makeNode(PGRangeSubselect);
1068: 					n->lateral = true;
1069: 					n->subquery = $2;
1070: 					n->alias = $3;
1071: 					n->sample = NULL;
1072: 					$$ = (PGNode *) n;
1073: 				}
1074: 			| joined_table
1075: 				{
1076: 					$$ = (PGNode *) $1;
1077: 				}
1078: 			| '(' joined_table ')' alias_clause
1079: 				{
1080: 					$2->alias = $4;
1081: 					$$ = (PGNode *) $2;
1082: 				}
1083: 			| table_ref PIVOT '(' target_list_opt_comma FOR pivot_value_list opt_pivot_group_by ')' opt_alias_clause
1084: 				{
1085: 					PGPivotExpr *n = makeNode(PGPivotExpr);
1086: 					n->source = $1;
1087: 					n->aggrs = $4;
1088: 					n->pivots = $6;
1089: 					n->groups = $7;
1090: 					n->alias = $9;
1091: 					n->location = @2;
1092: 					$$ = (PGNode *) n;
1093: 				}
1094: 			| table_ref UNPIVOT opt_include_nulls '(' unpivot_header FOR unpivot_value_list ')' opt_alias_clause
1095: 				{
1096: 					PGPivotExpr *n = makeNode(PGPivotExpr);
1097: 					n->source = $1;
1098: 					n->include_nulls = $3;
1099: 					n->unpivots = $5;
1100: 					n->pivots = $7;
1101: 					n->alias = $9;
1102: 					n->location = @2;
1103: 					$$ = (PGNode *) n;
1104: 				}
1105: 		;
1106: 
1107: opt_pivot_group_by:
1108: 	GROUP_P BY name_list_opt_comma		{ $$ = $3; }
1109: 	| /* empty */						{ $$ = NULL; }
1110: 
1111: opt_include_nulls:
1112: 	INCLUDE_P NULLS_P					{ $$ = true; }
1113: 	| EXCLUDE NULLS_P					{ $$ = false; }
1114: 	| /* empty */						{ $$ = false; }
1115: 
1116: single_pivot_value:
1117: 	b_expr IN_P '(' target_list_opt_comma ')'
1118: 		{
1119: 			PGPivot *n = makeNode(PGPivot);
1120: 			n->pivot_columns = list_make1($1);
1121: 			n->pivot_value = $4;
1122: 			$$ = (PGNode *) n;
1123: 		}
1124: 	|
1125: 	b_expr IN_P ColIdOrString
1126: 		{
1127: 			PGPivot *n = makeNode(PGPivot);
1128: 			n->pivot_columns = list_make1($1);
1129: 			n->pivot_enum = $3;
1130: 			$$ = (PGNode *) n;
1131: 		}
1132: 	;
1133: 
1134: pivot_header:
1135: 	| d_expr	                 			{ $$ = list_make1($1); }
1136: 	| indirection_expr						{ $$ = list_make1($1); }
1137: 	| '(' c_expr_list_opt_comma ')' 		{ $$ = $2; }
1138: 
1139: pivot_value:
1140: 	pivot_header IN_P '(' target_list_opt_comma ')'
1141: 		{
1142: 			PGPivot *n = makeNode(PGPivot);
1143: 			n->pivot_columns = $1;
1144: 			n->pivot_value = $4;
1145: 			$$ = (PGNode *) n;
1146: 		}
1147: 	|
1148: 	pivot_header IN_P ColIdOrString
1149: 		{
1150: 			PGPivot *n = makeNode(PGPivot);
1151: 			n->pivot_columns = $1;
1152: 			n->pivot_enum = $3;
1153: 			$$ = (PGNode *) n;
1154: 		}
1155: 	;
1156: 
1157: pivot_value_list:	pivot_value
1158: 				{
1159: 					$$ = list_make1($1);
1160: 				}
1161: 			| pivot_value_list pivot_value
1162: 				{
1163: 					$$ = lappend($1, $2);
1164: 				}
1165: 		;
1166: 
1167: unpivot_header:
1168: 		ColIdOrString 				  { $$ = list_make1(makeString($1)); }
1169: 		| '(' name_list_opt_comma ')' { $$ = $2; }
1170: 	;
1171: 
1172: unpivot_value:
1173: 	unpivot_header IN_P '(' target_list_opt_comma ')'
1174: 		{
1175: 			PGPivot *n = makeNode(PGPivot);
1176: 			n->unpivot_columns = $1;
1177: 			n->pivot_value = $4;
1178: 			$$ = (PGNode *) n;
1179: 		}
1180: 	;
1181: 
1182: unpivot_value_list:	unpivot_value
1183: 				{
1184: 					$$ = list_make1($1);
1185: 				}
1186: 			| unpivot_value_list unpivot_value
1187: 				{
1188: 					$$ = lappend($1, $2);
1189: 				}
1190: 		;
1191: 
1192: /*
1193:  * It may seem silly to separate joined_table from table_ref, but there is
1194:  * method in SQL's madness: if you don't do it this way you get reduce-
1195:  * reduce conflicts, because it's not clear to the parser generator whether
1196:  * to expect alias_clause after ')' or not.  For the same reason we must
1197:  * treat 'JOIN' and 'join_type JOIN' separately, rather than allowing
1198:  * join_type to expand to empty; if we try it, the parser generator can't
1199:  * figure out when to reduce an empty join_type right after table_ref.
1200:  *
1201:  * Note that a CROSS JOIN is the same as an unqualified
1202:  * INNER JOIN, and an INNER JOIN/ON has the same shape
1203:  * but a qualification expression to limit membership.
1204:  * A NATURAL JOIN implicitly matches column names between
1205:  * tables and the shape is determined by which columns are
1206:  * in common. We'll collect columns during the later transformations.
1207:  * A POSITIONAL JOIN implicitly matches row numbers and is more like a table.
1208:  */
1209: 
1210: joined_table:
1211: 			'(' joined_table ')'
1212: 				{
1213: 					$$ = $2;
1214: 				}
1215: 			| table_ref CROSS JOIN table_ref
1216: 				{
1217: 					/* CROSS JOIN is same as unqualified inner join */
1218: 					PGJoinExpr *n = makeNode(PGJoinExpr);
1219: 					n->jointype = PG_JOIN_INNER;
1220: 					n->joinreftype = PG_JOIN_REGULAR;
1221: 					n->larg = $1;
1222: 					n->rarg = $4;
1223: 					n->usingClause = NIL;
1224: 					n->quals = NULL;
1225: 					n->location = @2;
1226: 					$$ = n;
1227: 				}
1228: 			| table_ref join_type JOIN table_ref join_qual
1229: 				{
1230: 					PGJoinExpr *n = makeNode(PGJoinExpr);
1231: 					n->jointype = $2;
1232: 					n->joinreftype = PG_JOIN_REGULAR;
1233: 					n->larg = $1;
1234: 					n->rarg = $4;
1235: 					if ($5 != NULL && IsA($5, PGList))
1236: 						n->usingClause = (PGList *) $5; /* USING clause */
1237: 					else
1238: 						n->quals = $5; /* ON clause */
1239: 					n->location = @2;
1240: 					$$ = n;
1241: 				}
1242: 			| table_ref JOIN table_ref join_qual
1243: 				{
1244: 					/* letting join_type reduce to empty doesn't work */
1245: 					PGJoinExpr *n = makeNode(PGJoinExpr);
1246: 					n->jointype = PG_JOIN_INNER;
1247: 					n->joinreftype = PG_JOIN_REGULAR;
1248: 					n->larg = $1;
1249: 					n->rarg = $3;
1250: 					if ($4 != NULL && IsA($4, PGList))
1251: 						n->usingClause = (PGList *) $4; /* USING clause */
1252: 					else
1253: 						n->quals = $4; /* ON clause */
1254: 					n->location = @2;
1255: 					$$ = n;
1256: 				}
1257: 			| table_ref NATURAL join_type JOIN table_ref
1258: 				{
1259: 					PGJoinExpr *n = makeNode(PGJoinExpr);
1260: 					n->jointype = $3;
1261: 					n->joinreftype = PG_JOIN_NATURAL;
1262: 					n->larg = $1;
1263: 					n->rarg = $5;
1264: 					n->usingClause = NIL; /* figure out which columns later... */
1265: 					n->quals = NULL; /* fill later */
1266: 					n->location = @2;
1267: 					$$ = n;
1268: 				}
1269: 			| table_ref NATURAL JOIN table_ref
1270: 				{
1271: 					/* letting join_type reduce to empty doesn't work */
1272: 					PGJoinExpr *n = makeNode(PGJoinExpr);
1273: 					n->jointype = PG_JOIN_INNER;
1274: 					n->joinreftype = PG_JOIN_NATURAL;
1275: 					n->larg = $1;
1276: 					n->rarg = $4;
1277: 					n->usingClause = NIL; /* figure out which columns later... */
1278: 					n->quals = NULL; /* fill later */
1279: 					n->location = @2;
1280: 					$$ = n;
1281: 				}
1282: 			| table_ref ASOF join_type JOIN table_ref join_qual
1283: 				{
1284: 					PGJoinExpr *n = makeNode(PGJoinExpr);
1285: 					n->jointype = $3;
1286: 					n->joinreftype = PG_JOIN_ASOF;
1287: 					n->larg = $1;
1288: 					n->rarg = $5;
1289: 					if ($6 != NULL && IsA($6, PGList))
1290: 						n->usingClause = (PGList *) $6; /* USING clause */
1291: 					else
1292: 						n->quals = $6; /* ON clause */
1293: 					n->location = @2;
1294: 					$$ = n;
1295: 				}
1296: 			| table_ref ASOF JOIN table_ref join_qual
1297: 				{
1298: 					PGJoinExpr *n = makeNode(PGJoinExpr);
1299: 					n->jointype = PG_JOIN_INNER;
1300: 					n->joinreftype = PG_JOIN_ASOF;
1301: 					n->larg = $1;
1302: 					n->rarg = $4;
1303: 					if ($5 != NULL && IsA($5, PGList))
1304: 						n->usingClause = (PGList *) $5; /* USING clause */
1305: 					else
1306: 						n->quals = $5; /* ON clause */
1307: 					n->location = @2;
1308: 					$$ = n;
1309: 				}
1310: 			| table_ref POSITIONAL JOIN table_ref
1311: 				{
1312: 					/* POSITIONAL JOIN is a coordinated scan */
1313: 					PGJoinExpr *n = makeNode(PGJoinExpr);
1314: 					n->jointype = PG_JOIN_POSITION;
1315: 					n->joinreftype = PG_JOIN_REGULAR;
1316: 					n->larg = $1;
1317: 					n->rarg = $4;
1318: 					n->usingClause = NIL;
1319: 					n->quals = NULL;
1320: 					n->location = @2;
1321: 					$$ = n;
1322: 				}
1323:             | table_ref ANTI JOIN table_ref join_qual
1324:                 {
1325:                     /* ANTI JOIN is a filter */
1326:                     PGJoinExpr *n = makeNode(PGJoinExpr);
1327:                     n->jointype = PG_JOIN_ANTI;
1328:                     n->joinreftype = PG_JOIN_REGULAR;
1329:                     n->larg = $1;
1330:                     n->rarg = $4;
1331:                     if ($5 != NULL && IsA($5, PGList))
1332:                         n->usingClause = (PGList *) $5; /* USING clause */
1333:                     else
1334:                         n->quals = $5; /* ON clause */
1335:                     n->location = @2;
1336:                     $$ = n;
1337:                 }
1338:            | table_ref SEMI JOIN table_ref join_qual
1339:                {
1340:                    /* SEMI JOIN is also a filter */
1341:                    PGJoinExpr *n = makeNode(PGJoinExpr);
1342:                    n->jointype = PG_JOIN_SEMI;
1343:                    n->joinreftype = PG_JOIN_REGULAR;
1344:                    n->larg = $1;
1345:                    n->rarg = $4;
1346:                    if ($5 != NULL && IsA($5, PGList))
1347:                        n->usingClause = (PGList *) $5; /* USING clause */
1348:                    else
1349:                        n->quals = $5; /* ON clause */
1350:                    n->location = @2;
1351:                    n->location = @2;
1352:                    $$ = n;
1353:                }
1354: 		;
1355: 
1356: alias_clause:
1357: 			AS ColIdOrString '(' name_list_opt_comma ')'
1358: 				{
1359: 					$$ = makeNode(PGAlias);
1360: 					$$->aliasname = $2;
1361: 					$$->colnames = $4;
1362: 				}
1363: 			| AS ColIdOrString
1364: 				{
1365: 					$$ = makeNode(PGAlias);
1366: 					$$->aliasname = $2;
1367: 				}
1368: 			| ColId '(' name_list_opt_comma ')'
1369: 				{
1370: 					$$ = makeNode(PGAlias);
1371: 					$$->aliasname = $1;
1372: 					$$->colnames = $3;
1373: 				}
1374: 			| ColId
1375: 				{
1376: 					$$ = makeNode(PGAlias);
1377: 					$$->aliasname = $1;
1378: 				}
1379: 		;
1380: 
1381: opt_alias_clause: alias_clause						{ $$ = $1; }
1382: 			| /*EMPTY*/								{ $$ = NULL; }
1383: 		;
1384: 
1385: /*
1386:  * func_alias_clause can include both an PGAlias and a coldeflist, so we make it
1387:  * return a 2-element list that gets disassembled by calling production.
1388:  */
1389: func_alias_clause:
1390: 			alias_clause
1391: 				{
1392: 					$$ = list_make2($1, NIL);
1393: 				}
1394: 			| AS '(' TableFuncElementList ')'
1395: 				{
1396: 					$$ = list_make2(NULL, $3);
1397: 				}
1398: 			| AS ColIdOrString '(' TableFuncElementList ')'
1399: 				{
1400: 					PGAlias *a = makeNode(PGAlias);
1401: 					a->aliasname = $2;
1402: 					$$ = list_make2(a, $4);
1403: 				}
1404: 			| ColId '(' TableFuncElementList ')'
1405: 				{
1406: 					PGAlias *a = makeNode(PGAlias);
1407: 					a->aliasname = $1;
1408: 					$$ = list_make2(a, $3);
1409: 				}
1410: 			| /*EMPTY*/
1411: 				{
1412: 					$$ = list_make2(NULL, NIL);
1413: 				}
1414: 		;
1415: 
1416: join_type:	FULL join_outer							{ $$ = PG_JOIN_FULL; }
1417: 			| LEFT join_outer						{ $$ = PG_JOIN_LEFT; }
1418: 			| RIGHT join_outer						{ $$ = PG_JOIN_RIGHT; }
1419: 			| SEMI          						{ $$ = PG_JOIN_SEMI; }
1420: 			| ANTI          						{ $$ = PG_JOIN_ANTI; }
1421: 			| INNER_P								{ $$ = PG_JOIN_INNER; }
1422: 		;
1423: 
1424: /* OUTER is just noise... */
1425: join_outer: OUTER_P									{ $$ = NULL; }
1426: 			| /*EMPTY*/								{ $$ = NULL; }
1427: 		;
1428: 
1429: /* JOIN qualification clauses
1430:  * Possibilities are:
1431:  *	USING ( column list ) allows only unqualified column names,
1432:  *						  which must match between tables.
1433:  *	ON expr allows more general qualifications.
1434:  *
1435:  * We return USING as a PGList node, while an ON-expr will not be a List.
1436:  */
1437: 
1438: join_qual:	USING '(' name_list_opt_comma ')'					{ $$ = (PGNode *) $3; }
1439: 			| ON a_expr								{ $$ = $2; }
1440: 		;
1441: 
1442: 
1443: relation_expr:
1444: 			qualified_name
1445: 				{
1446: 					/* inheritance query, implicitly */
1447: 					$$ = $1;
1448: 					$$->inh = true;
1449: 					$$->alias = NULL;
1450: 				}
1451: 			| qualified_name '*'
1452: 				{
1453: 					/* inheritance query, explicitly */
1454: 					$$ = $1;
1455: 					$$->inh = true;
1456: 					$$->alias = NULL;
1457: 				}
1458: 			| ONLY qualified_name
1459: 				{
1460: 					/* no inheritance */
1461: 					$$ = $2;
1462: 					$$->inh = false;
1463: 					$$->alias = NULL;
1464: 				}
1465: 			| ONLY '(' qualified_name ')'
1466: 				{
1467: 					/* no inheritance, SQL99-style syntax */
1468: 					$$ = $3;
1469: 					$$->inh = false;
1470: 					$$->alias = NULL;
1471: 				}
1472: 		;
1473: 
1474: 
1475: /*
1476:  * Given "UPDATE foo set set ...", we have to decide without looking any
1477:  * further ahead whether the first "set" is an alias or the UPDATE's SET
1478:  * keyword.  Since "set" is allowed as a column name both interpretations
1479:  * are feasible.  We resolve the shift/reduce conflict by giving the first
1480:  * production a higher precedence than the SET token
1481:  * has, causing the parser to prefer to reduce, in effect assuming that the
1482:  * SET is not an alias.
1483:  */
1484: 
1485: /*
1486:  * func_table represents a function invocation in a FROM list. It can be
1487:  * a plain function call, like "foo(...)", or a ROWS FROM expression with
1488:  * one or more function calls, "ROWS FROM (foo(...), bar(...))",
1489:  * optionally with WITH ORDINALITY attached.
1490:  * In the ROWS FROM syntax, a column list can be given for each
1491:  * function, for example:
1492:  *     ROWS FROM (foo() AS (foo_res_a text, foo_res_b text),
1493:  *                bar() AS (bar_res_a text, bar_res_b text))
1494:  * It's also possible to attach a column list to the PGRangeFunction
1495:  * as a whole, but that's handled by the table_ref production.
1496:  */
1497: func_table: func_expr_windowless opt_ordinality
1498: 				{
1499: 					PGRangeFunction *n = makeNode(PGRangeFunction);
1500: 					n->lateral = false;
1501: 					n->ordinality = $2;
1502: 					n->is_rowsfrom = false;
1503: 					n->functions = list_make1(list_make2($1, NIL));
1504: 					n->sample = NULL;
1505: 					/* alias and coldeflist are set by table_ref production */
1506: 					$$ = (PGNode *) n;
1507: 				}
1508: 			| ROWS FROM '(' rowsfrom_list ')' opt_ordinality
1509: 				{
1510: 					PGRangeFunction *n = makeNode(PGRangeFunction);
1511: 					n->lateral = false;
1512: 					n->ordinality = $6;
1513: 					n->is_rowsfrom = true;
1514: 					n->functions = $4;
1515: 					n->sample = NULL;
1516: 					/* alias and coldeflist are set by table_ref production */
1517: 					$$ = (PGNode *) n;
1518: 				}
1519: 		;
1520: 
1521: rowsfrom_item: func_expr_windowless opt_col_def_list
1522: 				{ $$ = list_make2($1, $2); }
1523: 		;
1524: 
1525: rowsfrom_list:
1526: 			rowsfrom_item						{ $$ = list_make1($1); }
1527: 			| rowsfrom_list ',' rowsfrom_item	{ $$ = lappend($1, $3); }
1528: 		;
1529: 
1530: opt_col_def_list: AS '(' TableFuncElementList ')'	{ $$ = $3; }
1531: 			| /*EMPTY*/								{ $$ = NIL; }
1532: 		;
1533: 
1534: opt_ordinality: WITH_LA ORDINALITY					{ $$ = true; }
1535: 			| /*EMPTY*/								{ $$ = false; }
1536: 		;
1537: 
1538: 
1539: where_clause:
1540: 			WHERE a_expr							{ $$ = $2; }
1541: 			| /*EMPTY*/								{ $$ = NULL; }
1542: 		;
1543: 
1544: /* variant for UPDATE and DELETE */
1545: TableFuncElementList:
1546: 			TableFuncElement
1547: 				{
1548: 					$$ = list_make1($1);
1549: 				}
1550: 			| TableFuncElementList ',' TableFuncElement
1551: 				{
1552: 					$$ = lappend($1, $3);
1553: 				}
1554: 		;
1555: 
1556: TableFuncElement:	ColIdOrString Typename opt_collate_clause
1557: 				{
1558: 					PGColumnDef *n = makeNode(PGColumnDef);
1559: 					n->colname = $1;
1560: 					n->typeName = $2;
1561: 					n->inhcount = 0;
1562: 					n->is_local = true;
1563: 					n->is_not_null = false;
1564: 					n->is_from_type = false;
1565: 					n->storage = 0;
1566: 					n->raw_default = NULL;
1567: 					n->cooked_default = NULL;
1568: 					n->collClause = (PGCollateClause *) $3;
1569: 					n->collOid = InvalidOid;
1570: 					n->constraints = NIL;
1571: 					n->location = @1;
1572: 					$$ = (PGNode *)n;
1573: 				}
1574: 		;
1575: 
1576: opt_collate_clause:
1577: 			COLLATE any_name
1578: 				{
1579: 					PGCollateClause *n = makeNode(PGCollateClause);
1580: 					n->arg = NULL;
1581: 					n->collname = $2;
1582: 					n->location = @1;
1583: 					$$ = (PGNode *) n;
1584: 				}
1585: 			| /* EMPTY */				{ $$ = NULL; }
1586: 		;
1587: /*****************************************************************************
1588:  *
1589:  *	Type syntax
1590:  *		SQL introduces a large amount of type-specific syntax.
1591:  *		Define individual clauses to handle these cases, and use
1592:  *		 the generic case to handle regular type-extensible Postgres syntax.
1593:  *		- thomas 1997-10-10
1594:  *
1595:  *****************************************************************************/
1596: 
1597: colid_type_list:
1598:             ColId Typename   {
1599:              $$ = list_make1(list_make2(makeString($1), $2));
1600:             }
1601:             | colid_type_list ',' ColId Typename {
1602:              $$ = lappend($1, list_make2(makeString($3), $4));
1603:             }
1604: 
1605: RowOrStruct: ROW | STRUCT
1606: 
1607: opt_Typename:
1608: 			Typename						{ $$ = $1; }
1609: 			| /*EMPTY*/						{ $$ = NULL; }
1610: 
1611: Typename:	SimpleTypename opt_array_bounds
1612: 				{
1613: 					$$ = $1;
1614: 					$$->arrayBounds = $2;
1615: 				}
1616: 			| SETOF SimpleTypename opt_array_bounds
1617: 				{
1618: 					$$ = $2;
1619: 					$$->arrayBounds = $3;
1620: 					$$->setof = true;
1621: 				}
1622: 			/* SQL standard syntax, currently only one-dimensional */
1623: 			| SimpleTypename ARRAY '[' Iconst ']'
1624: 				{
1625: 					$$ = $1;
1626: 					$$->arrayBounds = list_make1(makeInteger($4));
1627: 				}
1628: 			| SETOF SimpleTypename ARRAY '[' Iconst ']'
1629: 				{
1630: 					$$ = $2;
1631: 					$$->arrayBounds = list_make1(makeInteger($5));
1632: 					$$->setof = true;
1633: 				}
1634: 			| SimpleTypename ARRAY
1635: 				{
1636: 					$$ = $1;
1637: 					$$->arrayBounds = list_make1(makeInteger(-1));
1638: 				}
1639: 			| SETOF SimpleTypename ARRAY
1640: 				{
1641: 					$$ = $2;
1642: 					$$->arrayBounds = list_make1(makeInteger(-1));
1643: 					$$->setof = true;
1644: 				}
1645: 			| qualified_typename
1646: 				{
1647: 					$$ = makeTypeNameFromNameList($1);
1648: 				}
1649: 			| RowOrStruct '(' colid_type_list ')' opt_array_bounds
1650: 				{
1651: 				   $$ = SystemTypeName("struct");
1652: 				   $$->arrayBounds = $5;
1653: 				   $$->typmods = $3;
1654: 				   $$->location = @1;
1655:                }
1656:             | MAP '(' type_list ')' opt_array_bounds
1657:             	{
1658: 				   $$ = SystemTypeName("map");
1659: 				   $$->arrayBounds = $5;
1660: 				   $$->typmods = $3;
1661: 				   $$->location = @1;
1662: 				}
1663: 			| UNION '(' colid_type_list ')' opt_array_bounds
1664: 				{
1665: 				   $$ = SystemTypeName("union");
1666: 				   $$->arrayBounds = $5;
1667: 				   $$->typmods = $3;
1668: 				   $$->location = @1;
1669: 				}
1670: 		;
1671: 
1672: qualified_typename:
1673: 			IDENT '.' IDENT					{ $$ = list_make2(makeString($1), makeString($3)); }
1674: 			| qualified_typename '.' IDENT	{ $$ = lappend($1, makeString($3)); }
1675: 	;
1676: 
1677: opt_array_bounds:
1678: 			opt_array_bounds '[' ']'
1679: 					{  $$ = lappend($1, makeInteger(-1)); }
1680: 			| opt_array_bounds '[' Iconst ']'
1681: 					{  $$ = lappend($1, makeInteger($3)); }
1682: 			| /*EMPTY*/
1683: 					{  $$ = NIL; }
1684: 		;
1685: 
1686: SimpleTypename:
1687: 			GenericType								{ $$ = $1; }
1688: 			| Numeric								{ $$ = $1; }
1689: 			| Bit									{ $$ = $1; }
1690: 			| Character								{ $$ = $1; }
1691: 			| ConstDatetime							{ $$ = $1; }
1692: 			| ConstInterval opt_interval
1693: 				{
1694: 					$$ = $1;
1695: 					$$->typmods = $2;
1696: 				}
1697: 			| ConstInterval '(' Iconst ')'
1698: 				{
1699: 					$$ = $1;
1700: 					$$->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
1701: 											 makeIntConst($3, @3));
1702: 				}
1703: 		;
1704: 
1705: /* We have a separate ConstTypename to allow defaulting fixed-length
1706:  * types such as CHAR() and BIT() to an unspecified length.
1707:  * SQL9x requires that these default to a length of one, but this
1708:  * makes no sense for constructs like CHAR 'hi' and BIT '0101',
1709:  * where there is an obvious better choice to make.
1710:  * Note that ConstInterval is not included here since it must
1711:  * be pushed up higher in the rules to accommodate the postfix
1712:  * options (e.g. INTERVAL '1' YEAR). Likewise, we have to handle
1713:  * the generic-type-name case in AExprConst to avoid premature
1714:  * reduce/reduce conflicts against function names.
1715:  */
1716: ConstTypename:
1717: 			Numeric									{ $$ = $1; }
1718: 			| ConstBit								{ $$ = $1; }
1719: 			| ConstCharacter						{ $$ = $1; }
1720: 			| ConstDatetime							{ $$ = $1; }
1721: 		;
1722: 
1723: /*
1724:  * GenericType covers all type names that don't have special syntax mandated
1725:  * by the standard, including qualified names.  We also allow type modifiers.
1726:  * To avoid parsing conflicts against function invocations, the modifiers
1727:  * have to be shown as expr_list here, but parse analysis will only accept
1728:  * constants for them.
1729:  */
1730: GenericType:
1731: 			type_name_token opt_type_modifiers
1732: 				{
1733: 					$$ = makeTypeName($1);
1734: 					$$->typmods = $2;
1735: 					$$->location = @1;
1736: 				}
1737: 			// | type_name_token attrs opt_type_modifiers
1738: 			// 	{
1739: 			// 		$$ = makeTypeNameFromNameList(lcons(makeString($1), $2));
1740: 			// 		$$->typmods = $3;
1741: 			// 		$$->location = @1;
1742: 			// 	}
1743: 		;
1744: 
1745: opt_type_modifiers: '(' opt_expr_list_opt_comma	 ')'				{ $$ = $2; }
1746: 					| /* EMPTY */					{ $$ = NIL; }
1747: 		;
1748: 
1749: /*
1750:  * SQL numeric data types
1751:  */
1752: Numeric:	INT_P
1753: 				{
1754: 					$$ = SystemTypeName("int4");
1755: 					$$->location = @1;
1756: 				}
1757: 			| INTEGER
1758: 				{
1759: 					$$ = SystemTypeName("int4");
1760: 					$$->location = @1;
1761: 				}
1762: 			| SMALLINT
1763: 				{
1764: 					$$ = SystemTypeName("int2");
1765: 					$$->location = @1;
1766: 				}
1767: 			| BIGINT
1768: 				{
1769: 					$$ = SystemTypeName("int8");
1770: 					$$->location = @1;
1771: 				}
1772: 			| REAL
1773: 				{
1774: 					$$ = SystemTypeName("float4");
1775: 					$$->location = @1;
1776: 				}
1777: 			| FLOAT_P opt_float
1778: 				{
1779: 					$$ = $2;
1780: 					$$->location = @1;
1781: 				}
1782: 			| DOUBLE_P PRECISION
1783: 				{
1784: 					$$ = SystemTypeName("float8");
1785: 					$$->location = @1;
1786: 				}
1787: 			| DECIMAL_P opt_type_modifiers
1788: 				{
1789: 					$$ = SystemTypeName("numeric");
1790: 					$$->typmods = $2;
1791: 					$$->location = @1;
1792: 				}
1793: 			| DEC opt_type_modifiers
1794: 				{
1795: 					$$ = SystemTypeName("numeric");
1796: 					$$->typmods = $2;
1797: 					$$->location = @1;
1798: 				}
1799: 			| NUMERIC opt_type_modifiers
1800: 				{
1801: 					$$ = SystemTypeName("numeric");
1802: 					$$->typmods = $2;
1803: 					$$->location = @1;
1804: 				}
1805: 			| BOOLEAN_P
1806: 				{
1807: 					$$ = SystemTypeName("bool");
1808: 					$$->location = @1;
1809: 				}
1810: 		;
1811: 
1812: opt_float:	'(' Iconst ')'
1813: 				{
1814: 					/*
1815: 					 * Check FLOAT() precision limits assuming IEEE floating
1816: 					 * types - thomas 1997-09-18
1817: 					 */
1818: 					if ($2 < 1)
1819: 						ereport(ERROR,
1820: 								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
1821: 								 errmsg("precision for type float must be at least 1 bit"),
1822: 								 parser_errposition(@2)));
1823: 					else if ($2 <= 24)
1824: 						$$ = SystemTypeName("float4");
1825: 					else if ($2 <= 53)
1826: 						$$ = SystemTypeName("float8");
1827: 					else
1828: 						ereport(ERROR,
1829: 								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
1830: 								 errmsg("precision for type float must be less than 54 bits"),
1831: 								 parser_errposition(@2)));
1832: 				}
1833: 			| /*EMPTY*/
1834: 				{
1835: 					$$ = SystemTypeName("float4");
1836: 				}
1837: 		;
1838: 
1839: /*
1840:  * SQL bit-field data types
1841:  * The following implements BIT() and BIT VARYING().
1842:  */
1843: Bit:		BitWithLength
1844: 				{
1845: 					$$ = $1;
1846: 				}
1847: 			| BitWithoutLength
1848: 				{
1849: 					$$ = $1;
1850: 				}
1851: 		;
1852: 
1853: /* ConstBit is like Bit except "BIT" defaults to unspecified length */
1854: /* See notes for ConstCharacter, which addresses same issue for "CHAR" */
1855: ConstBit:	BitWithLength
1856: 				{
1857: 					$$ = $1;
1858: 				}
1859: 			| BitWithoutLength
1860: 				{
1861: 					$$ = $1;
1862: 					$$->typmods = NIL;
1863: 				}
1864: 		;
1865: 
1866: BitWithLength:
1867: 			BIT opt_varying '(' expr_list_opt_comma ')'
1868: 				{
1869: 					const char *typname;
1870: 
1871: 					typname = $2 ? "varbit" : "bit";
1872: 					$$ = SystemTypeName(typname);
1873: 					$$->typmods = $4;
1874: 					$$->location = @1;
1875: 				}
1876: 		;
1877: 
1878: BitWithoutLength:
1879: 			BIT opt_varying
1880: 				{
1881: 					/* bit defaults to bit(1), varbit to no limit */
1882: 					if ($2)
1883: 					{
1884: 						$$ = SystemTypeName("varbit");
1885: 					}
1886: 					else
1887: 					{
1888: 						$$ = SystemTypeName("bit");
1889: 						$$->typmods = list_make1(makeIntConst(1, -1));
1890: 					}
1891: 					$$->location = @1;
1892: 				}
1893: 		;
1894: 
1895: 
1896: /*
1897:  * SQL character data types
1898:  * The following implements CHAR() and VARCHAR().
1899:  */
1900: Character:  CharacterWithLength
1901: 				{
1902: 					$$ = $1;
1903: 				}
1904: 			| CharacterWithoutLength
1905: 				{
1906: 					$$ = $1;
1907: 				}
1908: 		;
1909: 
1910: ConstCharacter:  CharacterWithLength
1911: 				{
1912: 					$$ = $1;
1913: 				}
1914: 			| CharacterWithoutLength
1915: 				{
1916: 					/* Length was not specified so allow to be unrestricted.
1917: 					 * This handles problems with fixed-length (bpchar) strings
1918: 					 * which in column definitions must default to a length
1919: 					 * of one, but should not be constrained if the length
1920: 					 * was not specified.
1921: 					 */
1922: 					$$ = $1;
1923: 					$$->typmods = NIL;
1924: 				}
1925: 		;
1926: 
1927: CharacterWithLength:  character '(' Iconst ')'
1928: 				{
1929: 					$$ = SystemTypeName($1);
1930: 					$$->typmods = list_make1(makeIntConst($3, @3));
1931: 					$$->location = @1;
1932: 				}
1933: 		;
1934: 
1935: CharacterWithoutLength:	 character
1936: 				{
1937: 					$$ = SystemTypeName($1);
1938: 					/* char defaults to char(1), varchar to no limit */
1939: 					if (strcmp($1, "bpchar") == 0)
1940: 						$$->typmods = list_make1(makeIntConst(1, -1));
1941: 					$$->location = @1;
1942: 				}
1943: 		;
1944: 
1945: character:	CHARACTER opt_varying
1946: 										{ $$ = $2 ? "varchar": "bpchar"; }
1947: 			| CHAR_P opt_varying
1948: 										{ $$ = $2 ? "varchar": "bpchar"; }
1949: 			| VARCHAR
1950: 										{ $$ = "varchar"; }
1951: 			| NATIONAL CHARACTER opt_varying
1952: 										{ $$ = $3 ? "varchar": "bpchar"; }
1953: 			| NATIONAL CHAR_P opt_varying
1954: 										{ $$ = $3 ? "varchar": "bpchar"; }
1955: 			| NCHAR opt_varying
1956: 										{ $$ = $2 ? "varchar": "bpchar"; }
1957: 		;
1958: 
1959: opt_varying:
1960: 			VARYING									{ $$ = true; }
1961: 			| /*EMPTY*/								{ $$ = false; }
1962: 		;
1963: 
1964: /*
1965:  * SQL date/time types
1966:  */
1967: ConstDatetime:
1968: 			TIMESTAMP '(' Iconst ')' opt_timezone
1969: 				{
1970: 					if ($5)
1971: 						$$ = SystemTypeName("timestamptz");
1972: 					else
1973: 						$$ = SystemTypeName("timestamp");
1974: 					$$->typmods = list_make1(makeIntConst($3, @3));
1975: 					$$->location = @1;
1976: 				}
1977: 			| TIMESTAMP opt_timezone
1978: 				{
1979: 					if ($2)
1980: 						$$ = SystemTypeName("timestamptz");
1981: 					else
1982: 						$$ = SystemTypeName("timestamp");
1983: 					$$->location = @1;
1984: 				}
1985: 			| TIME '(' Iconst ')' opt_timezone
1986: 				{
1987: 					if ($5)
1988: 						$$ = SystemTypeName("timetz");
1989: 					else
1990: 						$$ = SystemTypeName("time");
1991: 					$$->typmods = list_make1(makeIntConst($3, @3));
1992: 					$$->location = @1;
1993: 				}
1994: 			| TIME opt_timezone
1995: 				{
1996: 					if ($2)
1997: 						$$ = SystemTypeName("timetz");
1998: 					else
1999: 						$$ = SystemTypeName("time");
2000: 					$$->location = @1;
2001: 				}
2002: 		;
2003: 
2004: ConstInterval:
2005: 			INTERVAL
2006: 				{
2007: 					$$ = SystemTypeName("interval");
2008: 					$$->location = @1;
2009: 				}
2010: 		;
2011: 
2012: opt_timezone:
2013: 			WITH_LA TIME ZONE						{ $$ = true; }
2014: 			| WITHOUT TIME ZONE						{ $$ = false; }
2015: 			| /*EMPTY*/								{ $$ = false; }
2016: 		;
2017: 
2018: year_keyword:
2019: 	YEAR_P | YEARS_P
2020: 
2021: month_keyword:
2022: 	MONTH_P | MONTHS_P
2023: 
2024: day_keyword:
2025: 	DAY_P | DAYS_P
2026: 
2027: hour_keyword:
2028: 	HOUR_P | HOURS_P
2029: 
2030: minute_keyword:
2031: 	MINUTE_P | MINUTES_P
2032: 
2033: second_keyword:
2034: 	SECOND_P | SECONDS_P
2035: 
2036: millisecond_keyword:
2037: 	MILLISECOND_P | MILLISECONDS_P
2038: 
2039: microsecond_keyword:
2040: 	MICROSECOND_P | MICROSECONDS_P
2041: 
2042: week_keyword:
2043: 	WEEK_P | WEEKS_P
2044: 
2045: quarter_keyword:
2046: 	QUARTER_P | QUARTERS_P
2047: 
2048: decade_keyword:
2049: 	DECADE_P | DECADES_P
2050: 
2051: century_keyword:
2052: 	CENTURY_P | CENTURIES_P
2053: 
2054: millennium_keyword:
2055: 	MILLENNIUM_P | MILLENNIA_P
2056: 
2057: opt_interval:
2058: 			year_keyword
2059: 				{ $$ = list_make1(makeIntConst(INTERVAL_MASK(YEAR), @1)); }
2060: 			| month_keyword
2061: 				{ $$ = list_make1(makeIntConst(INTERVAL_MASK(MONTH), @1)); }
2062: 			| day_keyword
2063: 				{ $$ = list_make1(makeIntConst(INTERVAL_MASK(DAY), @1)); }
2064: 			| hour_keyword
2065: 				{ $$ = list_make1(makeIntConst(INTERVAL_MASK(HOUR), @1)); }
2066: 			| minute_keyword
2067: 				{ $$ = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), @1)); }
2068: 			| second_keyword
2069: 				{ $$ = list_make1(makeIntConst(INTERVAL_MASK(SECOND), @1)); }
2070: 			| millisecond_keyword
2071: 				{ $$ = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), @1)); }
2072: 			| microsecond_keyword
2073: 				{ $$ = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), @1)); }
2074: 			| week_keyword
2075: 				{ $$ = list_make1(makeIntConst(INTERVAL_MASK(WEEK), @1)); }
2076: 			| quarter_keyword
2077: 				{ $$ = list_make1(makeIntConst(INTERVAL_MASK(QUARTER), @1)); }
2078: 			| decade_keyword
2079: 				{ $$ = list_make1(makeIntConst(INTERVAL_MASK(DECADE), @1)); }
2080: 			| century_keyword
2081: 				{ $$ = list_make1(makeIntConst(INTERVAL_MASK(CENTURY), @1)); }
2082: 			| millennium_keyword
2083: 				{ $$ = list_make1(makeIntConst(INTERVAL_MASK(MILLENNIUM), @1)); }
2084: 			| year_keyword TO month_keyword
2085: 				{
2086: 					$$ = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
2087: 												 INTERVAL_MASK(MONTH), @1));
2088: 				}
2089: 			| day_keyword TO hour_keyword
2090: 				{
2091: 					$$ = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
2092: 												 INTERVAL_MASK(HOUR), @1));
2093: 				}
2094: 			| day_keyword TO minute_keyword
2095: 				{
2096: 					$$ = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
2097: 												 INTERVAL_MASK(HOUR) |
2098: 												 INTERVAL_MASK(MINUTE), @1));
2099: 				}
2100: 			| day_keyword TO second_keyword
2101: 				{
2102: 					$$ = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
2103: 												 INTERVAL_MASK(HOUR) |
2104: 												 INTERVAL_MASK(MINUTE) |
2105: 												 INTERVAL_MASK(SECOND), @1));
2106: 				}
2107: 			| hour_keyword TO minute_keyword
2108: 				{
2109: 					$$ = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
2110: 												 INTERVAL_MASK(MINUTE), @1));
2111: 				}
2112: 			| hour_keyword TO second_keyword
2113: 				{
2114: 					$$ = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
2115: 												 INTERVAL_MASK(MINUTE) |
2116: 												 INTERVAL_MASK(SECOND), @1));
2117: 				}
2118: 			| minute_keyword TO second_keyword
2119: 				{
2120: 					$$ = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
2121: 												 INTERVAL_MASK(SECOND), @1));
2122: 				}
2123: 			| /*EMPTY*/
2124: 				{ $$ = NIL; }
2125: 		;
2126: 
2127: /*****************************************************************************
2128:  *
2129:  *	expression grammar
2130:  *
2131:  *****************************************************************************/
2132: 
2133: /*
2134:  * General expressions
2135:  * This is the heart of the expression syntax.
2136:  *
2137:  * We have two expression types: a_expr is the unrestricted kind, and
2138:  * b_expr is a subset that must be used in some places to avoid shift/reduce
2139:  * conflicts.  For example, we can't do BETWEEN as "BETWEEN a_expr AND a_expr"
2140:  * because that use of AND conflicts with AND as a boolean operator.  So,
2141:  * b_expr is used in BETWEEN and we remove boolean keywords from b_expr.
2142:  *
2143:  * Note that '(' a_expr ')' is a b_expr, so an unrestricted expression can
2144:  * always be used by surrounding it with parens.
2145:  *
2146:  * c_expr is all the productions that are common to a_expr and b_expr;
2147:  * it's factored out just to eliminate redundant coding.
2148:  *
2149:  * Be careful of productions involving more than one terminal token.
2150:  * By default, bison will assign such productions the precedence of their
2151:  * last terminal, but in nearly all cases you want it to be the precedence
2152:  * of the first terminal instead; otherwise you will not get the behavior
2153:  * you expect!  So we use %prec annotations freely to set precedences.
2154:  */
2155: a_expr:		c_expr									{ $$ = $1; }
2156: 			|
2157: 			a_expr TYPECAST Typename
2158: 					{ $$ = makeTypeCast($1, $3, 0, @2); }
2159: 			| a_expr COLLATE any_name
2160: 				{
2161: 					PGCollateClause *n = makeNode(PGCollateClause);
2162: 					n->arg = $1;
2163: 					n->collname = $3;
2164: 					n->location = @2;
2165: 					$$ = (PGNode *) n;
2166: 				}
2167: 			| a_expr AT TIME ZONE a_expr			%prec AT
2168: 				{
2169: 					$$ = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
2170: 											   list_make2($5, $1),
2171: 											   @2);
2172: 				}
2173: 		/*
2174: 		 * These operators must be called out explicitly in order to make use
2175: 		 * of bison's automatic operator-precedence handling.  All other
2176: 		 * operator names are handled by the generic productions using "Op",
2177: 		 * below; and all those operators will have the same precedence.
2178: 		 *
2179: 		 * If you add more explicitly-known operators, be sure to add them
2180: 		 * also to b_expr and to the MathOp list below.
2181: 		 */
2182: 			| '+' a_expr					%prec UMINUS
2183: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, $2, @1); }
2184: 			| '-' a_expr					%prec UMINUS
2185: 				{ $$ = doNegate($2, @1); }
2186: 			| a_expr '+' a_expr
2187: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", $1, $3, @2); }
2188: 			| a_expr '-' a_expr
2189: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", $1, $3, @2); }
2190: 			| a_expr '*' a_expr
2191: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", $1, $3, @2); }
2192: 			| a_expr '/' a_expr
2193: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", $1, $3, @2); }
2194: 			| a_expr INTEGER_DIVISION a_expr
2195: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "//", $1, $3, @2); }
2196: 			| a_expr '%' a_expr
2197: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", $1, $3, @2); }
2198: 			| a_expr '^' a_expr
2199: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", $1, $3, @2); }
2200: 			| a_expr POWER_OF a_expr
2201: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "**", $1, $3, @2); }
2202: 			| a_expr '<' a_expr
2203: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", $1, $3, @2); }
2204: 			| a_expr '>' a_expr
2205: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", $1, $3, @2); }
2206: 			| a_expr '=' a_expr
2207: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", $1, $3, @2); }
2208: 			| a_expr LESS_EQUALS a_expr
2209: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", $1, $3, @2); }
2210: 			| a_expr GREATER_EQUALS a_expr
2211: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", $1, $3, @2); }
2212: 			| a_expr NOT_EQUALS a_expr
2213: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", $1, $3, @2); }
2214: 
2215: 			| a_expr qual_Op a_expr				%prec Op
2216: 				{ $$ = (PGNode *) makeAExpr(PG_AEXPR_OP, $2, $1, $3, @2); }
2217: 			| qual_Op a_expr					%prec Op
2218: 				{ $$ = (PGNode *) makeAExpr(PG_AEXPR_OP, $1, NULL, $2, @1); }
2219: 			| a_expr qual_Op					%prec POSTFIXOP
2220: 				{ $$ = (PGNode *) makeAExpr(PG_AEXPR_OP, $2, $1, NULL, @2); }
2221: 
2222: 			| a_expr AND a_expr
2223: 				{ $$ = makeAndExpr($1, $3, @2); }
2224: 			| a_expr OR a_expr
2225: 				{ $$ = makeOrExpr($1, $3, @2); }
2226: 			| NOT a_expr
2227: 				{ $$ = makeNotExpr($2, @1); }
2228: 			| NOT_LA a_expr						%prec NOT
2229: 				{ $$ = makeNotExpr($2, @1); }
2230: 			| a_expr GLOB a_expr %prec GLOB
2231: 				{
2232: 					$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
2233: 												   $1, $3, @2);
2234: 				}
2235: 			| a_expr LIKE a_expr
2236: 				{
2237: 					$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
2238: 												   $1, $3, @2);
2239: 				}
2240: 			| a_expr LIKE a_expr ESCAPE a_expr					%prec LIKE
2241: 				{
2242: 					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
2243: 											   list_make3($1, $3, $5),
2244: 											   @2);
2245: 					$$ = (PGNode *) n;
2246: 				}
2247: 			| a_expr NOT_LA LIKE a_expr							%prec NOT_LA
2248: 				{
2249: 					$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
2250: 												   $1, $4, @2);
2251: 				}
2252: 			| a_expr NOT_LA LIKE a_expr ESCAPE a_expr			%prec NOT_LA
2253: 				{
2254: 					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
2255: 											   list_make3($1, $4, $6),
2256: 											   @2);
2257: 					$$ = (PGNode *) n;
2258: 				}
2259: 			| a_expr ILIKE a_expr
2260: 				{
2261: 					$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
2262: 												   $1, $3, @2);
2263: 				}
2264: 			| a_expr ILIKE a_expr ESCAPE a_expr					%prec ILIKE
2265: 				{
2266: 					PGFuncCall *n = makeFuncCall(SystemFuncName("ilike_escape"),
2267: 											   list_make3($1, $3, $5),
2268: 											   @2);
2269: 					$$ = (PGNode *) n;
2270: 				}
2271: 			| a_expr NOT_LA ILIKE a_expr						%prec NOT_LA
2272: 				{
2273: 					$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
2274: 												   $1, $4, @2);
2275: 				}
2276: 			| a_expr NOT_LA ILIKE a_expr ESCAPE a_expr			%prec NOT_LA
2277: 				{
2278: 					PGFuncCall *n = makeFuncCall(SystemFuncName("not_ilike_escape"),
2279: 											   list_make3($1, $4, $6),
2280: 											   @2);
2281: 					$$ = (PGNode *) n;
2282: 				}
2283: 
2284: 			| a_expr SIMILAR TO a_expr							%prec SIMILAR
2285: 				{
2286: 					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
2287: 											   list_make2($4, makeNullAConst(-1)),
2288: 											   @2);
2289: 					$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
2290: 												   $1, (PGNode *) n, @2);
2291: 				}
2292: 			| a_expr SIMILAR TO a_expr ESCAPE a_expr			%prec SIMILAR
2293: 				{
2294: 					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
2295: 											   list_make2($4, $6),
2296: 											   @2);
2297: 					$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
2298: 												   $1, (PGNode *) n, @2);
2299: 				}
2300: 			| a_expr NOT_LA SIMILAR TO a_expr					%prec NOT_LA
2301: 				{
2302: 					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
2303: 											   list_make2($5, makeNullAConst(-1)),
2304: 											   @2);
2305: 					$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
2306: 												   $1, (PGNode *) n, @2);
2307: 				}
2308: 			| a_expr NOT_LA SIMILAR TO a_expr ESCAPE a_expr		%prec NOT_LA
2309: 				{
2310: 					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
2311: 											   list_make2($5, $7),
2312: 											   @2);
2313: 					$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
2314: 												   $1, (PGNode *) n, @2);
2315: 				}
2316: 
2317: 			/* PGNullTest clause
2318: 			 * Define SQL-style Null test clause.
2319: 			 * Allow two forms described in the standard:
2320: 			 *	a IS NULL
2321: 			 *	a IS NOT NULL
2322: 			 * Allow two SQL extensions
2323: 			 *	a ISNULL
2324: 			 *	a NOTNULL
2325: 			 */
2326: 			| a_expr IS NULL_P							%prec IS
2327: 				{
2328: 					PGNullTest *n = makeNode(PGNullTest);
2329: 					n->arg = (PGExpr *) $1;
2330: 					n->nulltesttype = PG_IS_NULL;
2331: 					n->location = @2;
2332: 					$$ = (PGNode *)n;
2333: 				}
2334: 			| a_expr ISNULL
2335: 				{
2336: 					PGNullTest *n = makeNode(PGNullTest);
2337: 					n->arg = (PGExpr *) $1;
2338: 					n->nulltesttype = PG_IS_NULL;
2339: 					n->location = @2;
2340: 					$$ = (PGNode *)n;
2341: 				}
2342: 			| a_expr IS NOT NULL_P						%prec IS
2343: 				{
2344: 					PGNullTest *n = makeNode(PGNullTest);
2345: 					n->arg = (PGExpr *) $1;
2346: 					n->nulltesttype = IS_NOT_NULL;
2347: 					n->location = @2;
2348: 					$$ = (PGNode *)n;
2349: 				}
2350: 			| a_expr NOT NULL_P
2351: 				{
2352: 					PGNullTest *n = makeNode(PGNullTest);
2353: 					n->arg = (PGExpr *) $1;
2354: 					n->nulltesttype = IS_NOT_NULL;
2355: 					n->location = @2;
2356: 					$$ = (PGNode *)n;
2357: 				}
2358: 			| a_expr NOTNULL
2359: 				{
2360: 					PGNullTest *n = makeNode(PGNullTest);
2361: 					n->arg = (PGExpr *) $1;
2362: 					n->nulltesttype = IS_NOT_NULL;
2363: 					n->location = @2;
2364: 					$$ = (PGNode *)n;
2365: 				}
2366: 			| a_expr LAMBDA_ARROW a_expr
2367: 			{
2368: 				PGLambdaFunction *n = makeNode(PGLambdaFunction);
2369: 				n->lhs = $1;
2370: 				n->rhs = $3;
2371: 				n->location = @2;
2372: 				$$ = (PGNode *) n;
2373: 			}
2374: 			| a_expr DOUBLE_ARROW a_expr %prec Op
2375: 			{
2376: 							$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "->>", $1, $3, @2);
2377: 			}
2378: 			| row OVERLAPS row
2379: 				{
2380: 					if (list_length($1) != 2)
2381: 						ereport(ERROR,
2382: 								(errcode(PG_ERRCODE_SYNTAX_ERROR),
2383: 								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
2384: 								 parser_errposition(@1)));
2385: 					if (list_length($3) != 2)
2386: 						ereport(ERROR,
2387: 								(errcode(PG_ERRCODE_SYNTAX_ERROR),
2388: 								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
2389: 								 parser_errposition(@3)));
2390: 					$$ = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
2391: 											   list_concat($1, $3),
2392: 											   @2);
2393: 				}
2394: 			| a_expr IS TRUE_P							%prec IS
2395: 				{
2396: 					PGBooleanTest *b = makeNode(PGBooleanTest);
2397: 					b->arg = (PGExpr *) $1;
2398: 					b->booltesttype = PG_IS_TRUE;
2399: 					b->location = @2;
2400: 					$$ = (PGNode *)b;
2401: 				}
2402: 			| a_expr IS NOT TRUE_P						%prec IS
2403: 				{
2404: 					PGBooleanTest *b = makeNode(PGBooleanTest);
2405: 					b->arg = (PGExpr *) $1;
2406: 					b->booltesttype = IS_NOT_TRUE;
2407: 					b->location = @2;
2408: 					$$ = (PGNode *)b;
2409: 				}
2410: 			| a_expr IS FALSE_P							%prec IS
2411: 				{
2412: 					PGBooleanTest *b = makeNode(PGBooleanTest);
2413: 					b->arg = (PGExpr *) $1;
2414: 					b->booltesttype = IS_FALSE;
2415: 					b->location = @2;
2416: 					$$ = (PGNode *)b;
2417: 				}
2418: 			| a_expr IS NOT FALSE_P						%prec IS
2419: 				{
2420: 					PGBooleanTest *b = makeNode(PGBooleanTest);
2421: 					b->arg = (PGExpr *) $1;
2422: 					b->booltesttype = IS_NOT_FALSE;
2423: 					b->location = @2;
2424: 					$$ = (PGNode *)b;
2425: 				}
2426: 			| a_expr IS UNKNOWN							%prec IS
2427: 				{
2428: 					PGBooleanTest *b = makeNode(PGBooleanTest);
2429: 					b->arg = (PGExpr *) $1;
2430: 					b->booltesttype = IS_UNKNOWN;
2431: 					b->location = @2;
2432: 					$$ = (PGNode *)b;
2433: 				}
2434: 			| a_expr IS NOT UNKNOWN						%prec IS
2435: 				{
2436: 					PGBooleanTest *b = makeNode(PGBooleanTest);
2437: 					b->arg = (PGExpr *) $1;
2438: 					b->booltesttype = IS_NOT_UNKNOWN;
2439: 					b->location = @2;
2440: 					$$ = (PGNode *)b;
2441: 				}
2442: 			| a_expr IS DISTINCT FROM a_expr			%prec IS
2443: 				{
2444: 					$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", $1, $5, @2);
2445: 				}
2446: 			| a_expr IS NOT DISTINCT FROM a_expr		%prec IS
2447: 				{
2448: 					$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", $1, $6, @2);
2449: 				}
2450: 			| a_expr IS OF '(' type_list ')'			%prec IS
2451: 				{
2452: 					$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", $1, (PGNode *) $5, @2);
2453: 				}
2454: 			| a_expr IS NOT OF '(' type_list ')'		%prec IS
2455: 				{
2456: 					$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", $1, (PGNode *) $6, @2);
2457: 				}
2458: 			| a_expr BETWEEN opt_asymmetric b_expr AND a_expr		%prec BETWEEN
2459: 				{
2460: 					$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
2461: 												   "BETWEEN",
2462: 												   $1,
2463: 												   (PGNode *) list_make2($4, $6),
2464: 												   @2);
2465: 				}
2466: 			| a_expr NOT_LA BETWEEN opt_asymmetric b_expr AND a_expr %prec NOT_LA
2467: 				{
2468: 					$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
2469: 												   "NOT BETWEEN",
2470: 												   $1,
2471: 												   (PGNode *) list_make2($5, $7),
2472: 												   @2);
2473: 				}
2474: 			| a_expr BETWEEN SYMMETRIC b_expr AND a_expr			%prec BETWEEN
2475: 				{
2476: 					$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
2477: 												   "BETWEEN SYMMETRIC",
2478: 												   $1,
2479: 												   (PGNode *) list_make2($4, $6),
2480: 												   @2);
2481: 				}
2482: 			| a_expr NOT_LA BETWEEN SYMMETRIC b_expr AND a_expr		%prec NOT_LA
2483: 				{
2484: 					$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
2485: 												   "NOT BETWEEN SYMMETRIC",
2486: 												   $1,
2487: 												   (PGNode *) list_make2($5, $7),
2488: 												   @2);
2489: 				}
2490: 			| a_expr IN_P in_expr
2491: 				{
2492: 					/* in_expr returns a PGSubLink or a list of a_exprs */
2493: 					if (IsA($3, PGSubLink))
2494: 					{
2495: 						/* generate foo = ANY (subquery) */
2496: 						PGSubLink *n = (PGSubLink *) $3;
2497: 						n->subLinkType = PG_ANY_SUBLINK;
2498: 						n->subLinkId = 0;
2499: 						n->testexpr = $1;
2500: 						n->operName = NIL;		/* show it's IN not = ANY */
2501: 						n->location = @2;
2502: 						$$ = (PGNode *)n;
2503: 					}
2504: 					else
2505: 					{
2506: 						/* generate scalar IN expression */
2507: 						$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", $1, $3, @2);
2508: 					}
2509: 				}
2510: 			| a_expr NOT_LA IN_P in_expr						%prec NOT_LA
2511: 				{
2512: 					/* in_expr returns a PGSubLink or a list of a_exprs */
2513: 					if (IsA($4, PGSubLink))
2514: 					{
2515: 						/* generate NOT (foo = ANY (subquery)) */
2516: 						/* Make an = ANY node */
2517: 						PGSubLink *n = (PGSubLink *) $4;
2518: 						n->subLinkType = PG_ANY_SUBLINK;
2519: 						n->subLinkId = 0;
2520: 						n->testexpr = $1;
2521: 						n->operName = NIL;		/* show it's IN not = ANY */
2522: 						n->location = @2;
2523: 						/* Stick a NOT on top; must have same parse location */
2524: 						$$ = makeNotExpr((PGNode *) n, @2);
2525: 					}
2526: 					else
2527: 					{
2528: 						/* generate scalar NOT IN expression */
2529: 						$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", $1, $4, @2);
2530: 					}
2531: 				}
2532: 			| a_expr subquery_Op sub_type select_with_parens	%prec Op
2533: 				{
2534: 					PGSubLink *n = makeNode(PGSubLink);
2535: 					n->subLinkType = $3;
2536: 					n->subLinkId = 0;
2537: 					n->testexpr = $1;
2538: 					n->operName = $2;
2539: 					n->subselect = $4;
2540: 					n->location = @2;
2541: 					$$ = (PGNode *)n;
2542: 				}
2543: 			| a_expr subquery_Op sub_type '(' a_expr ')'		%prec Op
2544: 				{
2545: 					if ($3 == PG_ANY_SUBLINK)
2546: 						$$ = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, $2, $1, $5, @2);
2547: 					else
2548: 						$$ = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, $2, $1, $5, @2);
2549: 				}
2550: 			| DEFAULT
2551: 				{
2552: 					/*
2553: 					 * The SQL spec only allows DEFAULT in "contextually typed
2554: 					 * expressions", but for us, it's easier to allow it in
2555: 					 * any a_expr and then throw error during parse analysis
2556: 					 * if it's in an inappropriate context.  This way also
2557: 					 * lets us say something smarter than "syntax error".
2558: 					 */
2559: 					PGSetToDefault *n = makeNode(PGSetToDefault);
2560: 					/* parse analysis will fill in the rest */
2561: 					n->location = @1;
2562: 					$$ = (PGNode *)n;
2563: 				}
2564: 			| '*' COLUMNS '(' a_expr ')'
2565: 				{
2566: 					PGAStar *star = makeNode(PGAStar);
2567: 					star->expr = $4;
2568: 					star->columns = true;
2569: 					star->unpacked = true;
2570: 					star->location = @1;
2571: 					$$ = (PGNode *) star;
2572: 				}
2573: 			| COLUMNS '(' a_expr ')'
2574: 				{
2575: 					PGAStar *star = makeNode(PGAStar);
2576: 					star->expr = $3;
2577: 					star->columns = true;
2578: 					star->location = @1;
2579: 					$$ = (PGNode *) star;
2580: 				}
2581: 			| '*' opt_except_list opt_replace_list
2582: 				{
2583: 					PGAStar *star = makeNode(PGAStar);
2584: 					star->except_list = $2;
2585: 					star->replace_list = $3;
2586: 					star->location = @1;
2587: 					$$ = (PGNode *) star;
2588: 				}
2589: 			| ColId '.' '*' opt_except_list opt_replace_list
2590: 				{
2591: 					PGAStar *star = makeNode(PGAStar);
2592: 					star->relation = $1;
2593: 					star->except_list = $4;
2594: 					star->replace_list = $5;
2595: 					star->location = @1;
2596: 					$$ = (PGNode *) star;
2597: 				}
2598: 		;
2599: 
2600: /*
2601:  * Restricted expressions
2602:  *
2603:  * b_expr is a subset of the complete expression syntax defined by a_expr.
2604:  *
2605:  * Presently, AND, NOT, IS, and IN are the a_expr keywords that would
2606:  * cause trouble in the places where b_expr is used.  For simplicity, we
2607:  * just eliminate all the boolean-keyword-operator productions from b_expr.
2608:  */
2609: b_expr:		c_expr
2610: 				{ $$ = $1; }
2611: 			| b_expr TYPECAST Typename
2612: 				{ $$ = makeTypeCast($1, $3, 0, @2); }
2613: 			| '+' b_expr					%prec UMINUS
2614: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, $2, @1); }
2615: 			| '-' b_expr					%prec UMINUS
2616: 				{ $$ = doNegate($2, @1); }
2617: 			| b_expr '+' b_expr
2618: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", $1, $3, @2); }
2619: 			| b_expr '-' b_expr
2620: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", $1, $3, @2); }
2621: 			| b_expr '*' b_expr
2622: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", $1, $3, @2); }
2623: 			| b_expr '/' b_expr
2624: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", $1, $3, @2); }
2625: 			| b_expr INTEGER_DIVISION b_expr
2626: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "//", $1, $3, @2); }
2627: 			| b_expr '%' b_expr
2628: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", $1, $3, @2); }
2629: 			| b_expr '^' b_expr
2630: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", $1, $3, @2); }
2631: 			| b_expr POWER_OF b_expr
2632: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "**", $1, $3, @2); }
2633: 			| b_expr '<' b_expr
2634: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", $1, $3, @2); }
2635: 			| b_expr '>' b_expr
2636: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", $1, $3, @2); }
2637: 			| b_expr '=' b_expr
2638: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", $1, $3, @2); }
2639: 			| b_expr LESS_EQUALS b_expr
2640: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", $1, $3, @2); }
2641: 			| b_expr GREATER_EQUALS b_expr
2642: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", $1, $3, @2); }
2643: 			| b_expr NOT_EQUALS b_expr
2644: 				{ $$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", $1, $3, @2); }
2645: 			| b_expr qual_Op b_expr				%prec Op
2646: 				{ $$ = (PGNode *) makeAExpr(PG_AEXPR_OP, $2, $1, $3, @2); }
2647: 			| qual_Op b_expr					%prec Op
2648: 				{ $$ = (PGNode *) makeAExpr(PG_AEXPR_OP, $1, NULL, $2, @1); }
2649: 			| b_expr qual_Op					%prec POSTFIXOP
2650: 				{ $$ = (PGNode *) makeAExpr(PG_AEXPR_OP, $2, $1, NULL, @2); }
2651: 			| b_expr IS DISTINCT FROM b_expr		%prec IS
2652: 				{
2653: 					$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", $1, $5, @2);
2654: 				}
2655: 			| b_expr IS NOT DISTINCT FROM b_expr	%prec IS
2656: 				{
2657: 					$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", $1, $6, @2);
2658: 				}
2659: 			| b_expr IS OF '(' type_list ')'		%prec IS
2660: 				{
2661: 					$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", $1, (PGNode *) $5, @2);
2662: 				}
2663: 			| b_expr IS NOT OF '(' type_list ')'	%prec IS
2664: 				{
2665: 					$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", $1, (PGNode *) $6, @2);
2666: 				}
2667: 		;
2668: 
2669: /*
2670:  * Productions that can be used in both a_expr and b_expr.
2671:  *
2672:  * Note: productions that refer recursively to a_expr or b_expr mostly
2673:  * cannot appear here.	However, it's OK to refer to a_exprs that occur
2674:  * inside parentheses, such as function arguments; that cannot introduce
2675:  * ambiguity to the b_expr syntax.
2676:  */
2677: c_expr:		d_expr
2678: 			| indirection_expr_or_a_expr opt_extended_indirection
2679: 				{
2680: 					if ($2)
2681: 					{
2682: 						PGAIndirection *n = makeNode(PGAIndirection);
2683: 						n->arg = (PGNode *) $1;
2684: 						n->indirection = check_indirection($2, yyscanner);
2685: 						$$ = (PGNode *) n;
2686: 					}
2687: 					else
2688: 						$$ = (PGNode *) $1;
2689: 				}
2690: 		;
2691: 
2692: d_expr:		columnref_opt_indirection								{ $$ = $1; }
2693: 			| AexprConst							{ $$ = $1; }
2694: 			| select_with_parens			%prec UMINUS
2695: 				{
2696: 					PGSubLink *n = makeNode(PGSubLink);
2697: 					n->subLinkType = PG_EXPR_SUBLINK;
2698: 					n->subLinkId = 0;
2699: 					n->testexpr = NULL;
2700: 					n->operName = NIL;
2701: 					n->subselect = $1;
2702: 					n->location = @1;
2703: 					$$ = (PGNode *)n;
2704: 				}
2705: 			| select_with_parens indirection
2706: 				{
2707: 					/*
2708: 					 * Because the select_with_parens nonterminal is designed
2709: 					 * to "eat" as many levels of parens as possible, the
2710: 					 * '(' a_expr ')' opt_indirection production above will
2711: 					 * fail to match a sub-SELECT with indirection decoration;
2712: 					 * the sub-SELECT won't be regarded as an a_expr as long
2713: 					 * as there are parens around it.  To support applying
2714: 					 * subscripting or field selection to a sub-SELECT result,
2715: 					 * we need this redundant-looking production.
2716: 					 */
2717: 					PGSubLink *n = makeNode(PGSubLink);
2718: 					PGAIndirection *a = makeNode(PGAIndirection);
2719: 					n->subLinkType = PG_EXPR_SUBLINK;
2720: 					n->subLinkId = 0;
2721: 					n->testexpr = NULL;
2722: 					n->operName = NIL;
2723: 					n->subselect = $1;
2724: 					n->location = @1;
2725: 					a->arg = (PGNode *)n;
2726: 					a->indirection = check_indirection($2, yyscanner);
2727: 					$$ = (PGNode *)a;
2728: 				}
2729: 			| EXISTS select_with_parens
2730: 				{
2731: 					PGSubLink *n = makeNode(PGSubLink);
2732: 					n->subLinkType = PG_EXISTS_SUBLINK;
2733: 					n->subLinkId = 0;
2734: 					n->testexpr = NULL;
2735: 					n->operName = NIL;
2736: 					n->subselect = $2;
2737: 					n->location = @1;
2738: 					$$ = (PGNode *)n;
2739: 				}
2740: 			| grouping_or_grouping_id '(' expr_list_opt_comma ')'
2741: 			  {
2742: 				  PGGroupingFunc *g = makeNode(PGGroupingFunc);
2743: 				  g->args = $3;
2744: 				  g->location = @1;
2745: 				  $$ = (PGNode *)g;
2746: 			  }
2747: 		;
2748: 
2749: indirection_expr_or_a_expr:
2750: 			'(' a_expr ')'
2751: 				{
2752: 					$$ = $2;
2753: 				}
2754: 			| indirection_expr
2755: 				{
2756: 					$$ = $1;
2757: 				}
2758: 			| row {
2759: 				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), $1, @1);
2760: 				$$ = (PGNode *) n;
2761: 			}
2762: 		;
2763: 
2764: indirection_expr:
2765: 			'?'
2766: 				{
2767: 					$$ = makeParamRef(0, @1);
2768: 				}
2769: 			| PARAM
2770: 				{
2771: 					PGParamRef *p = makeNode(PGParamRef);
2772: 					p->number = $1;
2773: 					p->location = @1;
2774: 					$$ = (PGNode *) p;
2775: 				}
2776: 			| struct_expr
2777: 				{
2778: 					$$ = $1;
2779: 				}
2780: 			| map_expr
2781: 				{
2782: 					$$ = $1;
2783: 				}
2784: 			| func_expr
2785: 				{
2786: 					$$ = $1;
2787: 				}
2788: 			| case_expr
2789: 				{ $$ = $1; }
2790: 			 | list_expr {
2791:                 $$ = $1;
2792: 			}
2793: 			| list_comprehension {
2794: 				$$ = $1;
2795: 			}
2796: 			| ARRAY select_with_parens
2797: 				{
2798: 					PGSubLink *n = makeNode(PGSubLink);
2799: 					n->subLinkType = PG_ARRAY_SUBLINK;
2800: 					n->subLinkId = 0;
2801: 					n->testexpr = NULL;
2802: 					n->operName = NULL;
2803: 					n->subselect = $2;
2804: 					n->location = @2;
2805: 					$$ = (PGNode *)n;
2806: 				}
2807: 			| ARRAY '[' opt_expr_list_opt_comma ']' {
2808: 				PGList *func_name = list_make1(makeString("construct_array"));
2809: 				PGFuncCall *n = makeFuncCall(func_name, $3, @1);
2810: 				$$ = (PGNode *) n;
2811: 			}
2812: 			| '#' ICONST
2813: 				{
2814: 					PGPositionalReference *n = makeNode(PGPositionalReference);
2815: 					n->position = $2;
2816: 					n->location = @1;
2817: 					$$ = (PGNode *) n;
2818: 				}
2819: 			| '$' ColLabel
2820: 				{
2821: 					$$ = makeNamedParamRef($2, @1);
2822: 				}
2823: 		;
2824: 
2825: list_expr:  '[' opt_expr_list_opt_comma ']' {
2826:                 PGFuncCall *n = makeFuncCall(SystemFuncName("list_value"), $2, @2);
2827:                 $$ = (PGNode *) n;
2828:             }
2829:         ;
2830: 
2831: struct_expr:		'{' dict_arguments_opt_comma '}'
2832: 				{
2833: 					PGFuncCall *f = makeFuncCall(SystemFuncName("struct_pack"), $2, @2);
2834: 					$$ = (PGNode *) f;
2835: 				}
2836: 		;
2837: 
2838: map_expr:  MAP '{' opt_map_arguments_opt_comma '}'
2839:                 {
2840:                     PGList *key_list = NULL;
2841:                     PGList *value_list = NULL;
2842:                     PGListCell *lc;
2843:                     PGList *entry_list = $3;
2844:                     foreach(lc, entry_list)
2845:                     {
2846:                         PGList *l = (PGList *) lc->data.ptr_value;
2847:                         key_list = lappend(key_list, (PGNode *) l->head->data.ptr_value);
2848:                         value_list = lappend(value_list, (PGNode *) l->tail->data.ptr_value);
2849:                     }
2850:                     PGNode *keys   = (PGNode *) makeFuncCall(SystemFuncName("list_value"), key_list, @3);
2851:                     PGNode *values = (PGNode *) makeFuncCall(SystemFuncName("list_value"), value_list, @3);
2852:                     PGFuncCall *f = makeFuncCall(SystemFuncName("map"), list_make2(keys, values), @3);
2853:                     $$ = (PGNode *) f;
2854:                 }
2855: 
2856: 
2857: 
2858: func_application:       func_name '(' ')'
2859: 				{
2860: 					$$ = (PGNode *) makeFuncCall($1, NIL, @1);
2861: 				}
2862: 			| func_name '(' func_arg_list opt_sort_clause opt_ignore_nulls ')'
2863: 				{
2864: 					PGFuncCall *n = makeFuncCall($1, $3, @1);
2865: 					n->agg_order = $4;
2866: 					n->agg_ignore_nulls = $5;
2867: 					$$ = (PGNode *)n;
2868: 				}
2869: 			| func_name '(' VARIADIC func_arg_expr opt_sort_clause opt_ignore_nulls ')'
2870: 				{
2871: 					PGFuncCall *n = makeFuncCall($1, list_make1($4), @1);
2872: 					n->func_variadic = true;
2873: 					n->agg_order = $5;
2874: 					n->agg_ignore_nulls = $6;
2875: 					$$ = (PGNode *)n;
2876: 				}
2877: 			| func_name '(' func_arg_list ',' VARIADIC func_arg_expr opt_sort_clause opt_ignore_nulls ')'
2878: 				{
2879: 					PGFuncCall *n = makeFuncCall($1, lappend($3, $6), @1);
2880: 					n->func_variadic = true;
2881: 					n->agg_order = $7;
2882: 					n->agg_ignore_nulls = $8;
2883: 					$$ = (PGNode *)n;
2884: 				}
2885: 			| func_name '(' ALL func_arg_list opt_sort_clause opt_ignore_nulls ')'
2886: 				{
2887: 					PGFuncCall *n = makeFuncCall($1, $4, @1);
2888: 					n->agg_order = $5;
2889: 					n->agg_ignore_nulls = $6;
2890: 					/* Ideally we'd mark the PGFuncCall node to indicate
2891: 					 * "must be an aggregate", but there's no provision
2892: 					 * for that in PGFuncCall at the moment.
2893: 					 */
2894: 					$$ = (PGNode *)n;
2895: 				}
2896: 			| func_name '(' DISTINCT func_arg_list opt_sort_clause opt_ignore_nulls ')'
2897: 				{
2898: 					PGFuncCall *n = makeFuncCall($1, $4, @1);
2899: 					n->agg_order = $5;
2900: 					n->agg_ignore_nulls = $6;
2901: 					n->agg_distinct = true;
2902: 					$$ = (PGNode *)n;
2903: 				}
2904: 		;
2905: 
2906: 
2907: /*
2908:  * func_expr and its cousin func_expr_windowless are split out from c_expr just
2909:  * so that we have classifications for "everything that is a function call or
2910:  * looks like one".  This isn't very important, but it saves us having to
2911:  * document which variants are legal in places like "FROM function()" or the
2912:  * backwards-compatible functional-index syntax for CREATE INDEX.
2913:  * (Note that many of the special SQL functions wouldn't actually make any
2914:  * sense as functional index entries, but we ignore that consideration here.)
2915:  */
2916: func_expr: func_application within_group_clause filter_clause export_clause over_clause
2917: 				{
2918: 					PGFuncCall *n = (PGFuncCall *) $1;
2919: 					/*
2920: 					 * The order clause for WITHIN GROUP and the one for
2921: 					 * plain-aggregate ORDER BY share a field, so we have to
2922: 					 * check here that at most one is present.  We also check
2923: 					 * for DISTINCT and VARIADIC here to give a better error
2924: 					 * location.  Other consistency checks are deferred to
2925: 					 * parse analysis.
2926: 					 */
2927: 					if ($2 != NIL)
2928: 					{
2929: 						if (n->agg_order != NIL)
2930: 							ereport(ERROR,
2931: 									(errcode(PG_ERRCODE_SYNTAX_ERROR),
2932: 									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
2933: 									 parser_errposition(@2)));
2934: 						if (n->agg_distinct)
2935: 							ereport(ERROR,
2936: 									(errcode(PG_ERRCODE_SYNTAX_ERROR),
2937: 									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
2938: 									 parser_errposition(@2)));
2939: 						if (n->func_variadic)
2940: 							ereport(ERROR,
2941: 									(errcode(PG_ERRCODE_SYNTAX_ERROR),
2942: 									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
2943: 									 parser_errposition(@2)));
2944: 						n->agg_order = $2;
2945: 						n->agg_within_group = true;
2946: 					}
2947: 					n->agg_filter = $3;
2948: 					n->export_state = $4;
2949: 					n->over = $5;
2950: 					$$ = (PGNode *) n;
2951: 				}
2952: 			| func_expr_common_subexpr
2953: 				{ $$ = $1; }
2954: 		;
2955: 
2956: /*
2957:  * As func_expr but does not accept WINDOW functions directly
2958:  * (but they can still be contained in arguments for functions etc).
2959:  * Use this when window expressions are not allowed, where needed to
2960:  * disambiguate the grammar (e.g. in CREATE INDEX).
2961:  */
2962: func_expr_windowless:
2963: 			func_application						{ $$ = $1; }
2964: 			| func_expr_common_subexpr				{ $$ = $1; }
2965: 		;
2966: 
2967: /*
2968:  * Special expressions that are considered to be functions.
2969:  */
2970: func_expr_common_subexpr:
2971: 			COLLATION FOR '(' a_expr ')'
2972: 				{
2973: 					$$ = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
2974: 											   list_make1($4),
2975: 											   @1);
2976: 				}
2977: 			| CAST '(' a_expr AS Typename ')'
2978: 				{ $$ = makeTypeCast($3, $5, 0, @1); }
2979: 			| TRY_CAST '(' a_expr AS Typename ')'
2980: 				{ $$ = makeTypeCast($3, $5, 1, @1); }
2981: 			| EXTRACT '(' extract_list ')'
2982: 				{
2983: 					$$ = (PGNode *) makeFuncCall(SystemFuncName("date_part"), $3, @1);
2984: 				}
2985: 			| OVERLAY '(' overlay_list ')'
2986: 				{
2987: 					/* overlay(A PLACING B FROM C FOR D) is converted to
2988: 					 * overlay(A, B, C, D)
2989: 					 * overlay(A PLACING B FROM C) is converted to
2990: 					 * overlay(A, B, C)
2991: 					 */
2992: 					$$ = (PGNode *) makeFuncCall(SystemFuncName("overlay"), $3, @1);
2993: 				}
2994: 			| POSITION '(' position_list ')'
2995: 				{
2996: 					/* position(A in B) is converted to position_inverse(A, B) */
2997: 					$$ = (PGNode *) makeFuncCall(SystemFuncName("__internal_position_operator"), $3, @1);
2998: 				}
2999: 			| SUBSTRING '(' substr_list ')'
3000: 				{
3001: 					/* substring(A from B for C) is converted to
3002: 					 * substring(A, B, C) - thomas 2000-11-28
3003: 					 */
3004: 					$$ = (PGNode *) makeFuncCall(SystemFuncName("substring"), $3, @1);
3005: 				}
3006: 			| TREAT '(' a_expr AS Typename ')'
3007: 				{
3008: 					/* TREAT(expr AS target) converts expr of a particular type to target,
3009: 					 * which is defined to be a subtype of the original expression.
3010: 					 * In SQL99, this is intended for use with structured UDTs,
3011: 					 * but let's make this a generally useful form allowing stronger
3012: 					 * coercions than are handled by implicit casting.
3013: 					 *
3014: 					 * Convert SystemTypeName() to SystemFuncName() even though
3015: 					 * at the moment they result in the same thing.
3016: 					 */
3017: 					$$ = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast($5->names))->val.str),
3018: 												list_make1($3),
3019: 												@1);
3020: 				}
3021: 			| TRIM '(' BOTH trim_list ')'
3022: 				{
3023: 					/* various trim expressions are defined in SQL
3024: 					 * - thomas 1997-07-19
3025: 					 */
3026: 					$$ = (PGNode *) makeFuncCall(SystemFuncName("trim"), $4, @1);
3027: 				}
3028: 			| TRIM '(' LEADING trim_list ')'
3029: 				{
3030: 					$$ = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), $4, @1);
3031: 				}
3032: 			| TRIM '(' TRAILING trim_list ')'
3033: 				{
3034: 					$$ = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), $4, @1);
3035: 				}
3036: 			| TRIM '(' trim_list ')'
3037: 				{
3038: 					$$ = (PGNode *) makeFuncCall(SystemFuncName("trim"), $3, @1);
3039: 				}
3040: 			| NULLIF '(' a_expr ',' a_expr ')'
3041: 				{
3042: 					$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", $3, $5, @1);
3043: 				}
3044: 			| COALESCE '(' expr_list_opt_comma ')'
3045: 				{
3046: 					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
3047: 					c->args = $3;
3048: 					c->location = @1;
3049: 					$$ = (PGNode *)c;
3050: 				}
3051: 		;
3052: 
3053: list_comprehension_lhs:
3054: 		columnrefList
3055: 		{
3056: 			PGFuncCall *n = makeFuncCall(SystemFuncName("row"), $1, @1);
3057: 			$$ = (PGNode *) n;
3058: 		}
3059: 	;
3060: 
3061: list_comprehension:
3062: 				'[' a_expr FOR list_comprehension_lhs IN_P a_expr ']'
3063: 				{
3064: 					PGLambdaFunction *lambda = makeNode(PGLambdaFunction);
3065: 					lambda->lhs = $4;
3066: 					lambda->rhs = $2;
3067: 					lambda->location = @1;
3068: 					PGFuncCall *n = makeFuncCall(SystemFuncName("list_apply"), list_make2($6, lambda), @1);
3069: 					$$ = (PGNode *) n;
3070: 				}
3071: 				| '[' a_expr FOR list_comprehension_lhs IN_P c_expr IF_P a_expr']'
3072: 				{
3073: 					PGLambdaFunction *lambda = makeNode(PGLambdaFunction);
3074: 					lambda->lhs = $4;
3075: 					lambda->rhs = $2;
3076: 					lambda->location = @1;
3077: 
3078: 					PGLambdaFunction *lambda_filter = makeNode(PGLambdaFunction);
3079: 					lambda_filter->lhs = $4;
3080: 					lambda_filter->rhs = $8;
3081: 					lambda_filter->location = @8;
3082: 					PGFuncCall *filter = makeFuncCall(SystemFuncName("list_filter"), list_make2($6, lambda_filter), @1);
3083: 					PGFuncCall *n = makeFuncCall(SystemFuncName("list_apply"), list_make2(filter, lambda), @1);
3084: 					$$ = (PGNode *) n;
3085: 				}
3086: 			;
3087: 
3088: /* We allow several variants for SQL and other compatibility. */
3089: /*
3090:  * Aggregate decoration clauses
3091:  */
3092: within_group_clause:
3093: 			WITHIN GROUP_P '(' sort_clause ')'		{ $$ = $4; }
3094: 			| /*EMPTY*/								{ $$ = NIL; }
3095: 		;
3096: 
3097: filter_clause:
3098: 			FILTER '(' WHERE a_expr ')'				{ $$ = $4; }
3099: 			| FILTER '(' a_expr ')'					{ $$ = $3; }
3100: 			| /*EMPTY*/								{ $$ = NULL; }
3101: 		;
3102: 
3103: export_clause:
3104: 			EXPORT_STATE            				{ $$ = true; }
3105: 			| /*EMPTY*/								{ $$ = false; }
3106: 		;
3107: 
3108: /*
3109:  * Window Definitions
3110:  */
3111: window_clause:
3112: 			WINDOW window_definition_list			{ $$ = $2; }
3113: 			| /*EMPTY*/								{ $$ = NIL; }
3114: 		;
3115: 
3116: window_definition_list:
3117: 			window_definition						{ $$ = list_make1($1); }
3118: 			| window_definition_list ',' window_definition
3119: 													{ $$ = lappend($1, $3); }
3120: 		;
3121: 
3122: window_definition:
3123: 			ColId AS window_specification
3124: 				{
3125: 					PGWindowDef *n = $3;
3126: 					n->name = $1;
3127: 					$$ = n;
3128: 				}
3129: 		;
3130: 
3131: over_clause: OVER window_specification
3132: 				{ $$ = $2; }
3133: 			| OVER ColId
3134: 				{
3135: 					PGWindowDef *n = makeNode(PGWindowDef);
3136: 					n->name = $2;
3137: 					n->refname = NULL;
3138: 					n->partitionClause = NIL;
3139: 					n->orderClause = NIL;
3140: 					n->frameOptions = FRAMEOPTION_DEFAULTS;
3141: 					n->startOffset = NULL;
3142: 					n->endOffset = NULL;
3143: 					n->location = @2;
3144: 					$$ = n;
3145: 				}
3146: 			| /*EMPTY*/
3147: 				{ $$ = NULL; }
3148: 		;
3149: 
3150: window_specification: '(' opt_existing_window_name opt_partition_clause
3151: 						opt_sort_clause opt_frame_clause ')'
3152: 				{
3153: 					PGWindowDef *n = makeNode(PGWindowDef);
3154: 					n->name = NULL;
3155: 					n->refname = $2;
3156: 					n->partitionClause = $3;
3157: 					n->orderClause = $4;
3158: 					/* copy relevant fields of opt_frame_clause */
3159: 					n->frameOptions = $5->frameOptions;
3160: 					n->startOffset = $5->startOffset;
3161: 					n->endOffset = $5->endOffset;
3162: 					n->location = @1;
3163: 					$$ = n;
3164: 				}
3165: 		;
3166: 
3167: /*
3168:  * If we see PARTITION, RANGE, ROWS or GROUPS as the first token after the '('
3169:  * of a window_specification, we want the assumption to be that there is
3170:  * no existing_window_name; but those keywords are unreserved and so could
3171:  * be ColIds.  We fix this by making them have the same precedence as IDENT
3172:  * and giving the empty production here a slightly higher precedence, so
3173:  * that the shift/reduce conflict is resolved in favor of reducing the rule.
3174:  * These keywords are thus precluded from being an existing_window_name but
3175:  * are not reserved for any other purpose.
3176:  */
3177: opt_existing_window_name: ColId						{ $$ = $1; }
3178: 			| /*EMPTY*/				%prec Op		{ $$ = NULL; }
3179: 		;
3180: 
3181: opt_partition_clause: PARTITION BY expr_list		{ $$ = $3; }
3182: 			| /*EMPTY*/								{ $$ = NIL; }
3183: 		;
3184: 
3185: /*
3186:  * For frame clauses, we return a PGWindowDef, but only some fields are used:
3187:  * frameOptions, startOffset, and endOffset.
3188:  */
3189: opt_frame_clause:
3190: 			RANGE frame_extent opt_window_exclusion_clause
3191: 				{
3192: 					PGWindowDef *n = $2;
3193: 
3194: 					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
3195: 					n->frameOptions |= $3;
3196: 					$$ = n;
3197: 				}
3198: 			| ROWS frame_extent opt_window_exclusion_clause
3199: 				{
3200: 					PGWindowDef *n = $2;
3201: 
3202: 					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
3203: 					n->frameOptions |= $3;
3204: 					$$ = n;
3205: 				}
3206: 			| GROUPS frame_extent opt_window_exclusion_clause
3207: 				{
3208: 					PGWindowDef *n = $2;
3209: 
3210: 					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_GROUPS;
3211: 					n->frameOptions |= $3;
3212: 					$$ = n;
3213: 				}
3214: 			| /*EMPTY*/
3215: 				{
3216: 					PGWindowDef *n = makeNode(PGWindowDef);
3217: 
3218: 					n->frameOptions = FRAMEOPTION_DEFAULTS;
3219: 					n->startOffset = NULL;
3220: 					n->endOffset = NULL;
3221: 					$$ = n;
3222: 				}
3223: 		;
3224: 
3225: frame_extent: frame_bound
3226: 				{
3227: 					PGWindowDef *n = $1;
3228: 
3229: 					/* reject invalid cases */
3230: 					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
3231: 						ereport(ERROR,
3232: 								(errcode(PG_ERRCODE_WINDOWING_ERROR),
3233: 								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
3234: 								 parser_errposition(@1)));
3235: 					if (n->frameOptions & FRAMEOPTION_START_OFFSET_FOLLOWING)
3236: 						ereport(ERROR,
3237: 								(errcode(PG_ERRCODE_WINDOWING_ERROR),
3238: 								 errmsg("frame starting from following row cannot end with current row"),
3239: 								 parser_errposition(@1)));
3240: 					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
3241: 					$$ = n;
3242: 				}
3243: 			| BETWEEN frame_bound AND frame_bound
3244: 				{
3245: 					PGWindowDef *n1 = $2;
3246: 					PGWindowDef *n2 = $4;
3247: 
3248: 					/* form merged options */
3249: 					int		frameOptions = n1->frameOptions;
3250: 					/* shift converts START_ options to END_ options */
3251: 					frameOptions |= n2->frameOptions << 1;
3252: 					frameOptions |= FRAMEOPTION_BETWEEN;
3253: 					/* reject invalid cases */
3254: 					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
3255: 						ereport(ERROR,
3256: 								(errcode(PG_ERRCODE_WINDOWING_ERROR),
3257: 								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
3258: 								 parser_errposition(@2)));
3259: 					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
3260: 						ereport(ERROR,
3261: 								(errcode(PG_ERRCODE_WINDOWING_ERROR),
3262: 								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
3263: 								 parser_errposition(@4)));
3264: 					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
3265: 						(frameOptions & FRAMEOPTION_END_OFFSET_PRECEDING))
3266: 						ereport(ERROR,
3267: 								(errcode(PG_ERRCODE_WINDOWING_ERROR),
3268: 								 errmsg("frame starting from current row cannot have preceding rows"),
3269: 								 parser_errposition(@4)));
3270: 					if ((frameOptions & FRAMEOPTION_START_OFFSET_FOLLOWING) &&
3271: 						(frameOptions & (FRAMEOPTION_END_OFFSET_PRECEDING |
3272: 										 FRAMEOPTION_END_CURRENT_ROW)))
3273: 						ereport(ERROR,
3274: 								(errcode(PG_ERRCODE_WINDOWING_ERROR),
3275: 								 errmsg("frame starting from following row cannot have preceding rows"),
3276: 								 parser_errposition(@4)));
3277: 					n1->frameOptions = frameOptions;
3278: 					n1->endOffset = n2->startOffset;
3279: 					$$ = n1;
3280: 				}
3281: 		;
3282: 
3283: /*
3284:  * This is used for both frame start and frame end, with output set up on
3285:  * the assumption it's frame start; the frame_extent productions must reject
3286:  * invalid cases.
3287:  */
3288: frame_bound:
3289: 			UNBOUNDED PRECEDING
3290: 				{
3291: 					PGWindowDef *n = makeNode(PGWindowDef);
3292: 
3293: 					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
3294: 					n->startOffset = NULL;
3295: 					n->endOffset = NULL;
3296: 					$$ = n;
3297: 				}
3298: 			| UNBOUNDED FOLLOWING
3299: 				{
3300: 					PGWindowDef *n = makeNode(PGWindowDef);
3301: 
3302: 					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
3303: 					n->startOffset = NULL;
3304: 					n->endOffset = NULL;
3305: 					$$ = n;
3306: 				}
3307: 			| CURRENT_P ROW
3308: 				{
3309: 					PGWindowDef *n = makeNode(PGWindowDef);
3310: 
3311: 					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
3312: 					n->startOffset = NULL;
3313: 					n->endOffset = NULL;
3314: 					$$ = n;
3315: 				}
3316: 			| a_expr PRECEDING
3317: 				{
3318: 					PGWindowDef *n = makeNode(PGWindowDef);
3319: 
3320: 					n->frameOptions = FRAMEOPTION_START_OFFSET_PRECEDING;
3321: 					n->startOffset = $1;
3322: 					n->endOffset = NULL;
3323: 					$$ = n;
3324: 				}
3325: 			| a_expr FOLLOWING
3326: 				{
3327: 					PGWindowDef *n = makeNode(PGWindowDef);
3328: 
3329: 					n->frameOptions = FRAMEOPTION_START_OFFSET_FOLLOWING;
3330: 					n->startOffset = $1;
3331: 					n->endOffset = NULL;
3332: 					$$ = n;
3333: 				}
3334: 		;
3335: 
3336: opt_window_exclusion_clause:
3337: 			EXCLUDE CURRENT_P ROW	{ $$ = FRAMEOPTION_EXCLUDE_CURRENT_ROW; }
3338: 			| EXCLUDE GROUP_P		{ $$ = FRAMEOPTION_EXCLUDE_GROUP; }
3339: 			| EXCLUDE TIES			{ $$ = FRAMEOPTION_EXCLUDE_TIES; }
3340: 			| EXCLUDE NO OTHERS		{ $$ = 0; }
3341: 			| /*EMPTY*/				{ $$ = 0; }
3342: 		;
3343: 
3344: 
3345: /*
3346:  * Supporting nonterminals for expressions.
3347:  */
3348: 
3349: /* Explicit row production.
3350:  *
3351:  * SQL99 allows an optional ROW keyword, so we can now do single-element rows
3352:  * without conflicting with the parenthesized a_expr production.  Without the
3353:  * ROW keyword, there must be more than one a_expr inside the parens.
3354:  */
3355: qualified_row:	ROW '(' expr_list_opt_comma ')'					{ $$ = $3; }
3356: 			| ROW '(' ')'							{ $$ = NIL; }
3357: 		;
3358: 
3359: row:		qualified_row							{ $$ = $1;}
3360: 			| '(' expr_list ',' a_expr ')'			{ $$ = lappend($2, $4); }
3361: 		;
3362: 
3363: dict_arg:
3364: 	ColIdOrString ':' a_expr						{
3365: 		PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
3366: 		na->name = $1;
3367: 		na->arg = (PGExpr *) $3;
3368: 		na->argnumber = -1;
3369: 		na->location = @1;
3370: 		$$ = (PGNode *) na;
3371: 	}
3372: 
3373: dict_arguments:
3374: 	dict_arg						{ $$ = list_make1($1); }
3375: 	| dict_arguments ',' dict_arg	{ $$ = lappend($1, $3); }
3376: 
3377: 
3378: dict_arguments_opt_comma:
3379: 			dict_arguments								{ $$ = $1; }
3380: 			| dict_arguments ','							{ $$ = $1; }
3381: 		;
3382: 
3383: map_arg:
3384: 			a_expr ':' a_expr
3385: 			{
3386: 				$$ = list_make2($1, $3);
3387: 			}
3388: 	;
3389: 
3390: map_arguments:
3391: 			map_arg									{ $$ = list_make1($1); }
3392: 			| map_arguments ',' map_arg				{ $$ = lappend($1, $3); }
3393: 	;
3394: 
3395: 
3396: map_arguments_opt_comma:
3397: 			map_arguments							{ $$ = $1; }
3398: 			| map_arguments ','						{ $$ = $1; }
3399: 		;
3400: 
3401: 
3402: opt_map_arguments_opt_comma:
3403: 			map_arguments_opt_comma					{ $$ = $1; }
3404: 			| /* empty */							{ $$ = NULL; }
3405: 		;
3406: 
3407: sub_type:	ANY										{ $$ = PG_ANY_SUBLINK; }
3408: 			| SOME									{ $$ = PG_ANY_SUBLINK; }
3409: 			| ALL									{ $$ = PG_ALL_SUBLINK; }
3410: 		;
3411: 
3412: all_Op:		Op										{ $$ = $1; }
3413: 			| MathOp								{ $$ = (char*) $1; }
3414: 		;
3415: 
3416: MathOp:		 '+'									{ $$ = "+"; }
3417: 			| '-'									{ $$ = "-"; }
3418: 			| '*'									{ $$ = "*"; }
3419: 			| '/'									{ $$ = "/"; }
3420: 			| INTEGER_DIVISION						{ $$ = "//"; }
3421: 			| '%'									{ $$ = "%"; }
3422: 			| '^'									{ $$ = "^"; }
3423: 			| POWER_OF								{ $$ = "**"; }
3424: 			| '<'									{ $$ = "<"; }
3425: 			| '>'									{ $$ = ">"; }
3426: 			| '='									{ $$ = "="; }
3427: 			| LESS_EQUALS							{ $$ = "<="; }
3428: 			| GREATER_EQUALS						{ $$ = ">="; }
3429: 			| NOT_EQUALS							{ $$ = "<>"; }
3430: 		;
3431: 
3432: qual_Op:	Op
3433: 					{ $$ = list_make1(makeString($1)); }
3434: 			| OPERATOR '(' any_operator ')'
3435: 					{ $$ = $3; }
3436: 		;
3437: 
3438: qual_all_Op:
3439: 			all_Op
3440: 					{ $$ = list_make1(makeString($1)); }
3441: 			| OPERATOR '(' any_operator ')'
3442: 					{ $$ = $3; }
3443: 		;
3444: 
3445: subquery_Op:
3446: 			all_Op
3447: 					{ $$ = list_make1(makeString($1)); }
3448: 			| OPERATOR '(' any_operator ')'
3449: 					{ $$ = $3; }
3450: 			| LIKE
3451: 					{ $$ = list_make1(makeString("~~")); }
3452: 			| NOT_LA LIKE
3453: 					{ $$ = list_make1(makeString("!~~")); }
3454: 			| GLOB
3455: 					{ $$ = list_make1(makeString("~~~")); }
3456: 			| NOT_LA GLOB
3457: 					{ $$ = list_make1(makeString("!~~~")); }
3458: 			| ILIKE
3459: 					{ $$ = list_make1(makeString("~~*")); }
3460: 			| NOT_LA ILIKE
3461: 					{ $$ = list_make1(makeString("!~~*")); }
3462: /* cannot put SIMILAR TO here, because SIMILAR TO is a hack.
3463:  * the regular expression is preprocessed by a function (similar_escape),
3464:  * and the ~ operator for posix regular expressions is used.
3465:  *        x SIMILAR TO y     ->    x ~ similar_escape(y)
3466:  * this transformation is made on the fly by the parser upwards.
3467:  * however the PGSubLink structure which handles any/some/all stuff
3468:  * is not ready for such a thing.
3469:  */
3470: 			;
3471: 
3472: 
3473: any_operator:
3474: 			all_Op
3475: 					{ $$ = list_make1(makeString($1)); }
3476: 			| ColId '.' any_operator
3477: 					{ $$ = lcons(makeString($1), $3); }
3478: 		;
3479: 
3480: c_expr_list:
3481: 			c_expr
3482: 				{
3483: 					$$ = list_make1($1);
3484: 				}
3485: 			| c_expr_list ',' c_expr
3486: 				{
3487: 					$$ = lappend($1, $3);
3488: 				}
3489: 		;
3490: 
3491: c_expr_list_opt_comma:
3492: 			c_expr_list
3493: 				{
3494: 					$$ = $1;
3495: 				}
3496: 			|
3497: 			c_expr_list ','
3498: 				{
3499: 					$$ = $1;
3500: 				}
3501: 		;
3502: 
3503: expr_list:	a_expr
3504: 				{
3505: 					$$ = list_make1($1);
3506: 				}
3507: 			| expr_list ',' a_expr
3508: 				{
3509: 					$$ = lappend($1, $3);
3510: 				}
3511: 		;
3512: 
3513: expr_list_opt_comma:
3514: 			expr_list
3515: 				{
3516: 					$$ = $1;
3517: 				}
3518: 			|
3519: 			expr_list ','
3520: 				{
3521: 					$$ = $1;
3522: 				}
3523: 		;
3524: 
3525: opt_expr_list_opt_comma:
3526: 			expr_list_opt_comma
3527: 				{
3528: 					$$ = $1;
3529: 				}
3530: 			| /* empty */
3531: 				{
3532: 					$$ = NULL;
3533: 				}
3534: 		;
3535: 
3536: 
3537: 
3538: /* function arguments can have names */
3539: func_arg_list:  func_arg_expr
3540: 				{
3541: 					$$ = list_make1($1);
3542: 				}
3543: 			| func_arg_list ',' func_arg_expr
3544: 				{
3545: 					$$ = lappend($1, $3);
3546: 				}
3547: 		;
3548: 
3549: func_arg_expr:  a_expr
3550: 				{
3551: 					$$ = $1;
3552: 				}
3553: 			| param_name COLON_EQUALS a_expr
3554: 				{
3555: 					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
3556: 					na->name = $1;
3557: 					na->arg = (PGExpr *) $3;
3558: 					na->argnumber = -1;		/* until determined */
3559: 					na->location = @1;
3560: 					$$ = (PGNode *) na;
3561: 				}
3562: 			| param_name EQUALS_GREATER a_expr
3563: 				{
3564: 					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
3565: 					na->name = $1;
3566: 					na->arg = (PGExpr *) $3;
3567: 					na->argnumber = -1;		/* until determined */
3568: 					na->location = @1;
3569: 					$$ = (PGNode *) na;
3570: 				}
3571: 		;
3572: 
3573: type_list:	Typename								{ $$ = list_make1($1); }
3574: 			| type_list ',' Typename				{ $$ = lappend($1, $3); }
3575: 		;
3576: 
3577: extract_list:
3578: 			extract_arg FROM a_expr
3579: 				{
3580: 					$$ = list_make2(makeStringConst($1, @1), $3);
3581: 				}
3582: 			| /*EMPTY*/								{ $$ = NIL; }
3583: 		;
3584: 
3585: /* Allow delimited string Sconst in extract_arg as an SQL extension.
3586:  * - thomas 2001-04-12
3587:  */
3588: extract_arg:
3589: 			IDENT											{ $$ = $1; }
3590: 			| year_keyword									{ $$ = (char*) "year"; }
3591: 			| month_keyword									{ $$ = (char*) "month"; }
3592: 			| day_keyword									{ $$ = (char*) "day"; }
3593: 			| hour_keyword									{ $$ = (char*) "hour"; }
3594: 			| minute_keyword								{ $$ = (char*) "minute"; }
3595: 			| second_keyword								{ $$ = (char*) "second"; }
3596: 			| millisecond_keyword							{ $$ = (char*) "millisecond"; }
3597: 			| microsecond_keyword							{ $$ = (char*) "microsecond"; }
3598: 			| week_keyword									{ $$ = (char*) "week"; }
3599: 			| quarter_keyword								{ $$ = (char*) "quarter"; }
3600: 			| decade_keyword								{ $$ = (char*) "decade"; }
3601: 			| century_keyword								{ $$ = (char*) "century"; }
3602: 			| millennium_keyword							{ $$ = (char*) "millennium"; }
3603: 			| Sconst										{ $$ = $1; }
3604: 		;
3605: 
3606: /* OVERLAY() arguments
3607:  * SQL99 defines the OVERLAY() function:
3608:  * o overlay(text placing text from int for int)
3609:  * o overlay(text placing text from int)
3610:  * and similarly for binary strings
3611:  */
3612: overlay_list:
3613: 			a_expr overlay_placing substr_from substr_for
3614: 				{
3615: 					$$ = list_make4($1, $2, $3, $4);
3616: 				}
3617: 			| a_expr overlay_placing substr_from
3618: 				{
3619: 					$$ = list_make3($1, $2, $3);
3620: 				}
3621: 		;
3622: 
3623: overlay_placing:
3624: 			PLACING a_expr
3625: 				{ $$ = $2; }
3626: 		;
3627: 
3628: /* position_list uses b_expr not a_expr to avoid conflict with general IN */
3629: 
3630: position_list:
3631: 			b_expr IN_P b_expr						{ $$ = list_make2($1, $3); }
3632: 			| /*EMPTY*/								{ $$ = NIL; }
3633: 		;
3634: 
3635: /* SUBSTRING() arguments
3636:  * SQL9x defines a specific syntax for arguments to SUBSTRING():
3637:  * o substring(text from int for int)
3638:  * o substring(text from int) get entire string from starting point "int"
3639:  * o substring(text for int) get first "int" characters of string
3640:  * o substring(text from pattern) get entire string matching pattern
3641:  * o substring(text from pattern for escape) same with specified escape char
3642:  * We also want to support generic substring functions which accept
3643:  * the usual generic list of arguments. So we will accept both styles
3644:  * here, and convert the SQL9x style to the generic list for further
3645:  * processing. - thomas 2000-11-28
3646:  */
3647: substr_list:
3648: 			a_expr substr_from substr_for
3649: 				{
3650: 					$$ = list_make3($1, $2, $3);
3651: 				}
3652: 			| a_expr substr_for substr_from
3653: 				{
3654: 					/* not legal per SQL99, but might as well allow it */
3655: 					$$ = list_make3($1, $3, $2);
3656: 				}
3657: 			| a_expr substr_from
3658: 				{
3659: 					$$ = list_make2($1, $2);
3660: 				}
3661: 			| a_expr substr_for
3662: 				{
3663: 					/*
3664: 					 * Since there are no cases where this syntax allows
3665: 					 * a textual FOR value, we forcibly cast the argument
3666: 					 * to int4.  The possible matches in pg_proc are
3667: 					 * substring(text,int4) and substring(text,text),
3668: 					 * and we don't want the parser to choose the latter,
3669: 					 * which it is likely to do if the second argument
3670: 					 * is unknown or doesn't have an implicit cast to int4.
3671: 					 */
3672: 					$$ = list_make3($1, makeIntConst(1, -1),
3673: 									makeTypeCast($2,
3674: 												 SystemTypeName("int4"), 0, -1));
3675: 				}
3676: 			| expr_list
3677: 				{
3678: 					$$ = $1;
3679: 				}
3680: 			| /*EMPTY*/
3681: 				{ $$ = NIL; }
3682: 		;
3683: 
3684: substr_from:
3685: 			FROM a_expr								{ $$ = $2; }
3686: 		;
3687: 
3688: substr_for: FOR a_expr								{ $$ = $2; }
3689: 		;
3690: 
3691: trim_list:	a_expr FROM expr_list_opt_comma					{ $$ = lappend($3, $1); }
3692: 			| FROM expr_list_opt_comma						{ $$ = $2; }
3693: 			| expr_list_opt_comma								{ $$ = $1; }
3694: 		;
3695: 
3696: in_expr:	select_with_parens
3697: 				{
3698: 					PGSubLink *n = makeNode(PGSubLink);
3699: 					n->subselect = $1;
3700: 					/* other fields will be filled later */
3701: 					$$ = (PGNode *)n;
3702: 				}
3703: 			| '(' expr_list_opt_comma ')'						{ $$ = (PGNode *)$2; }
3704: 			| columnref_opt_indirection
3705: 			| indirection_expr { $$ = (PGNode *)$1; }
3706: 		;
3707: 
3708: /*
3709:  * Define SQL-style CASE clause.
3710:  * - Full specification
3711:  *	CASE WHEN a = b THEN c ... ELSE d END
3712:  * - Implicit argument
3713:  *	CASE a WHEN b THEN c ... ELSE d END
3714:  */
3715: case_expr:	CASE case_arg when_clause_list case_default END_P
3716: 				{
3717: 					PGCaseExpr *c = makeNode(PGCaseExpr);
3718: 					c->casetype = InvalidOid; /* not analyzed yet */
3719: 					c->arg = (PGExpr *) $2;
3720: 					c->args = $3;
3721: 					c->defresult = (PGExpr *) $4;
3722: 					c->location = @1;
3723: 					$$ = (PGNode *)c;
3724: 				}
3725: 		;
3726: 
3727: when_clause_list:
3728: 			/* There must be at least one */
3729: 			when_clause								{ $$ = list_make1($1); }
3730: 			| when_clause_list when_clause			{ $$ = lappend($1, $2); }
3731: 		;
3732: 
3733: when_clause:
3734: 			WHEN a_expr THEN a_expr
3735: 				{
3736: 					PGCaseWhen *w = makeNode(PGCaseWhen);
3737: 					w->expr = (PGExpr *) $2;
3738: 					w->result = (PGExpr *) $4;
3739: 					w->location = @1;
3740: 					$$ = (PGNode *)w;
3741: 				}
3742: 		;
3743: 
3744: case_default:
3745: 			ELSE a_expr								{ $$ = $2; }
3746: 			| /*EMPTY*/								{ $$ = NULL; }
3747: 		;
3748: 
3749: case_arg:	a_expr									{ $$ = $1; }
3750: 			| /*EMPTY*/								{ $$ = NULL; }
3751: 		;
3752: 
3753: columnrefList:
3754: 			columnref								{ $$ = list_make1($1); }
3755: 			| columnrefList ',' columnref				{ $$ = lappend($1, $3); }
3756: 		;
3757: 
3758: columnref: ColId
3759: 		{
3760: 			$$ = makeColumnRef($1, NIL, @1, yyscanner);
3761: 		}
3762: 	;
3763: 
3764: columnref_opt_indirection:	ColId
3765: 				{
3766: 					$$ = makeColumnRef($1, NIL, @1, yyscanner);
3767: 				}
3768: 			| ColId indirection
3769: 				{
3770: 					$$ = makeColumnRef($1, $2, @1, yyscanner);
3771: 				}
3772: 		;
3773: 
3774: indirection_el:
3775: 			'[' a_expr ']'
3776: 				{
3777: 					PGAIndices *ai = makeNode(PGAIndices);
3778: 					ai->is_slice = false;
3779: 					ai->lidx = NULL;
3780: 					ai->uidx = $2;
3781: 					$$ = (PGNode *) ai;
3782: 				}
3783: 			| '[' opt_slice_bound ':' opt_slice_bound ']'
3784: 				{
3785: 					PGAIndices *ai = makeNode(PGAIndices);
3786: 					ai->is_slice = true;
3787: 					ai->lidx = $2;
3788: 					ai->uidx = $4;
3789: 					$$ = (PGNode *) ai;
3790: 				}
3791: 			| '[' opt_slice_bound ':' opt_slice_bound ':' opt_slice_bound ']' {
3792: 				    	PGAIndices *ai = makeNode(PGAIndices);
3793: 				    	ai->is_slice = true;
3794: 				    	ai->lidx = $2;
3795: 				    	ai->uidx = $4;
3796: 				    	ai->step = $6;
3797: 				    	$$ = (PGNode *) ai;
3798: 				}
3799: 			| '[' opt_slice_bound ':' '-' ':' opt_slice_bound ']' {
3800: 					PGAIndices *ai = makeNode(PGAIndices);
3801: 					ai->is_slice = true;
3802: 					ai->lidx = $2;
3803: 					ai->step = $6;
3804: 					$$ = (PGNode *) ai;
3805: 				}
3806: 				;
3807: 
3808: opt_slice_bound:
3809: 			a_expr									{ $$ = $1; }
3810: 			| /*EMPTY*/								{ $$ = NULL; }
3811: 		;
3812: 
3813: 
3814: opt_indirection:
3815: 			/*EMPTY*/								{ $$ = NIL; }
3816: 			| opt_indirection indirection_el		{ $$ = lappend($1, $2); }
3817: 		;
3818: 
3819: opt_func_arguments:
3820: 	/* empty */ 				{ $$ = NULL; }
3821: 	| '(' ')'					{ $$ = list_make1(NULL); }
3822: 	| '(' func_arg_list ')' 	{ $$ = $2; }
3823: 	;
3824: 
3825: extended_indirection_el:
3826: 			'.' attr_name opt_func_arguments
3827: 				{
3828: 					if ($3) {
3829: 						PGFuncCall *n = makeFuncCall(list_make1(makeString($2)), $3->head->data.ptr_value ? $3 : NULL, @2);
3830: 						$$ = (PGNode *) n;
3831: 					} else {
3832: 						$$ = (PGNode *) makeString($2);
3833: 					}
3834: 				}
3835: 			| '[' a_expr ']'
3836: 				{
3837: 					PGAIndices *ai = makeNode(PGAIndices);
3838: 					ai->is_slice = false;
3839: 					ai->lidx = NULL;
3840: 					ai->uidx = $2;
3841: 					$$ = (PGNode *) ai;
3842: 				}
3843: 			| '[' opt_slice_bound ':' opt_slice_bound ']'
3844: 				{
3845: 					PGAIndices *ai = makeNode(PGAIndices);
3846: 					ai->is_slice = true;
3847: 					ai->lidx = $2;
3848: 					ai->uidx = $4;
3849: 					$$ = (PGNode *) ai;
3850: 				}
3851: 		    	| '[' opt_slice_bound ':' opt_slice_bound ':' opt_slice_bound ']' {
3852: 					PGAIndices *ai = makeNode(PGAIndices);
3853: 					ai->is_slice = true;
3854: 					ai->lidx = $2;
3855: 					ai->uidx = $4;
3856: 					ai->step = $6;
3857:                  			$$ = (PGNode *) ai;
3858:                 		}
3859: 
3860: 			| '[' opt_slice_bound ':' '-' ':' opt_slice_bound ']' {
3861: 					PGAIndices *ai = makeNode(PGAIndices);
3862: 					ai->is_slice = true;
3863: 					ai->lidx = $2;
3864: 					ai->step = $6;
3865: 					$$ = (PGNode *) ai;
3866: 				}
3867: 		;
3868: 
3869: extended_indirection:
3870: 			extended_indirection_el									{ $$ = list_make1($1); }
3871: 			| extended_indirection extended_indirection_el			{ $$ = lappend($1, $2); }
3872: 		;
3873: 
3874: opt_extended_indirection:
3875: 			/*EMPTY*/												{ $$ = NIL; }
3876: 			| opt_extended_indirection extended_indirection_el		{ $$ = lappend($1, $2); }
3877: 		;
3878: 
3879: 
3880: 
3881: opt_asymmetric: ASYMMETRIC
3882: 			| /*EMPTY*/
3883: 		;
3884: 
3885: 
3886: /*****************************************************************************
3887:  *
3888:  *	target list for SELECT
3889:  *
3890:  *****************************************************************************/
3891: 
3892: opt_target_list_opt_comma: target_list_opt_comma						{ $$ = $1; }
3893: 			| /* EMPTY */							{ $$ = NIL; }
3894: 		;
3895: 
3896: target_list:
3897: 			target_el								{ $$ = list_make1($1); }
3898: 			| target_list ',' target_el				{ $$ = lappend($1, $3); }
3899: 		;
3900: 
3901: target_list_opt_comma:
3902: 			target_list								{ $$ = $1; }
3903: 			| target_list ','						{ $$ = $1; }
3904: 		;
3905: 
3906: target_el:	a_expr AS ColLabelOrString
3907: 				{
3908: 					$$ = makeNode(PGResTarget);
3909: 					$$->name = $3;
3910: 					$$->indirection = NIL;
3911: 					$$->val = (PGNode *)$1;
3912: 					$$->location = @1;
3913: 				}
3914: 			/*
3915: 			 * We support omitting AS only for column labels that aren't
3916: 			 * any known keyword.  There is an ambiguity against postfix
3917: 			 * operators: is "a ! b" an infix expression, or a postfix
3918: 			 * expression and a column label?  We prefer to resolve this
3919: 			 * as an infix expression, which we accomplish by assigning
3920: 			 * IDENT a precedence higher than POSTFIXOP.
3921: 			 */
3922: 			| a_expr IDENT
3923: 				{
3924: 					$$ = makeNode(PGResTarget);
3925: 					$$->name = $2;
3926: 					$$->indirection = NIL;
3927: 					$$->val = (PGNode *)$1;
3928: 					$$->location = @1;
3929: 				}
3930: 			| a_expr
3931: 				{
3932: 					$$ = makeNode(PGResTarget);
3933: 					$$->name = NULL;
3934: 					$$->indirection = NIL;
3935: 					$$->val = (PGNode *)$1;
3936: 					$$->location = @1;
3937: 				}
3938: 		;
3939: 
3940: except_list: EXCLUDE '(' name_list_opt_comma ')'					{ $$ = $3; }
3941: 			| EXCLUDE ColId								{ $$ = list_make1(makeString($2)); }
3942: 		;
3943: 
3944: opt_except_list: except_list						{ $$ = $1; }
3945: 			| /*EMPTY*/								{ $$ = NULL; }
3946: 		;
3947: 
3948: replace_list_el: a_expr AS ColId					{ $$ = list_make2($1, makeString($3)); }
3949: 		;
3950: 
3951: replace_list:
3952: 			replace_list_el							{ $$ = list_make1($1); }
3953: 			| replace_list ',' replace_list_el		{ $$ = lappend($1, $3); }
3954: 		;
3955: 
3956: replace_list_opt_comma:
3957: 			replace_list								{ $$ = $1; }
3958: 			| replace_list ','							{ $$ = $1; }
3959: 		;
3960: 
3961: opt_replace_list: REPLACE '(' replace_list_opt_comma ')'		{ $$ = $3; }
3962: 			| REPLACE replace_list_el				{ $$ = list_make1($2); }
3963: 			| /*EMPTY*/								{ $$ = NULL; }
3964: 		;
3965: 
3966: /*****************************************************************************
3967:  *
3968:  *	Names and constants
3969:  *
3970:  *****************************************************************************/
3971: 
3972: qualified_name_list:
3973: 			qualified_name							{ $$ = list_make1($1); }
3974: 			| qualified_name_list ',' qualified_name { $$ = lappend($1, $3); }
3975: 		;
3976: 
3977: 
3978: name_list:	name
3979: 					{ $$ = list_make1(makeString($1)); }
3980: 			| name_list ',' name
3981: 					{ $$ = lappend($1, makeString($3)); }
3982: 		;
3983: 
3984: 
3985: name_list_opt_comma:
3986: 			name_list								{ $$ = $1; }
3987: 			| name_list ','							{ $$ = $1; }
3988: 		;
3989: 
3990: name_list_opt_comma_opt_bracket:
3991: 			name_list_opt_comma										{ $$ = $1; }
3992: 			| '(' name_list_opt_comma ')'							{ $$ = $2; }
3993: 		;
3994: 
3995: name:		ColIdOrString							{ $$ = $1; };
3996: 
3997: 
3998: /*
3999:  * The production for a qualified func_name has to exactly match the
4000:  * production for a qualified columnref, because we cannot tell which we
4001:  * are parsing until we see what comes after it ('(' or Sconst for a func_name,
4002:  * anything else for a columnref).  Therefore we allow 'indirection' which
4003:  * may contain subscripts, and reject that case in the C code.  (If we
4004:  * ever implement SQL99-like methods, such syntax may actually become legal!)
4005:  */
4006: func_name:	function_name_token
4007: 					{ $$ = list_make1(makeString($1)); }
4008: 			|
4009: 			ColId indirection
4010: 					{
4011: 						$$ = check_func_name(lcons(makeString($1), $2),
4012: 											 yyscanner);
4013: 					}
4014: 		;
4015: 
4016: 
4017: /*
4018:  * Constants
4019:  */
4020: AexprConst: Iconst
4021: 				{
4022: 					$$ = makeIntConst($1, @1);
4023: 				}
4024: 			| FCONST
4025: 				{
4026: 					$$ = makeFloatConst($1, @1);
4027: 				}
4028: 			| Sconst opt_indirection
4029: 				{
4030: 					if ($2)
4031: 					{
4032: 						PGAIndirection *n = makeNode(PGAIndirection);
4033: 						n->arg = makeStringConst($1, @1);
4034: 						n->indirection = check_indirection($2, yyscanner);
4035: 						$$ = (PGNode *) n;
4036: 					}
4037: 					else
4038: 						$$ = makeStringConst($1, @1);
4039: 				}
4040: 			| BCONST
4041: 				{
4042: 					$$ = makeBitStringConst($1, @1);
4043: 				}
4044: 			| XCONST
4045: 				{
4046: 					/* This is a bit constant per SQL99:
4047: 					 * Without Feature F511, "BIT data type",
4048: 					 * a <general literal> shall not be a
4049: 					 * <bit string literal> or a <hex string literal>.
4050: 					 */
4051: 					$$ = makeBitStringConst($1, @1);
4052: 				}
4053: 			| func_name Sconst
4054: 				{
4055: 					/* generic type 'literal' syntax */
4056: 					PGTypeName *t = makeTypeNameFromNameList($1);
4057: 					t->location = @1;
4058: 					$$ = makeStringConstCast($2, @2, t);
4059: 				}
4060: 			| func_name '(' func_arg_list opt_sort_clause opt_ignore_nulls ')' Sconst
4061: 				{
4062: 					/* generic syntax with a type modifier */
4063: 					PGTypeName *t = makeTypeNameFromNameList($1);
4064: 					PGListCell *lc;
4065: 
4066: 					/*
4067: 					 * We must use func_arg_list and opt_sort_clause in the
4068: 					 * production to avoid reduce/reduce conflicts, but we
4069: 					 * don't actually wish to allow PGNamedArgExpr in this
4070: 					 * context, ORDER BY, nor IGNORE NULLS.
4071: 					 */
4072: 					foreach(lc, $3)
4073: 					{
4074: 						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);
4075: 
4076: 						if (IsA(arg, PGNamedArgExpr))
4077: 							ereport(ERROR,
4078: 									(errcode(PG_ERRCODE_SYNTAX_ERROR),
4079: 									 errmsg("type modifier cannot have parameter name"),
4080: 									 parser_errposition(arg->location)));
4081: 					}
4082: 					if ($4 != NIL)
4083: 							ereport(ERROR,
4084: 									(errcode(PG_ERRCODE_SYNTAX_ERROR),
4085: 									 errmsg("type modifier cannot have ORDER BY"),
4086: 									 parser_errposition(@4)));
4087: 					if ($5 != false)
4088: 							ereport(ERROR,
4089: 									(errcode(PG_ERRCODE_SYNTAX_ERROR),
4090: 									 errmsg("type modifier cannot have IGNORE NULLS"),
4091: 									 parser_errposition(@5)));
4092: 
4093: 
4094: 					t->typmods = $3;
4095: 					t->location = @1;
4096: 					$$ = makeStringConstCast($7, @7, t);
4097: 				}
4098: 			| ConstTypename Sconst
4099: 				{
4100: 					$$ = makeStringConstCast($2, @2, $1);
4101: 				}
4102: 			| ConstInterval '(' a_expr ')' opt_interval
4103: 				{
4104: 					$$ = makeIntervalNode($3, @3, $5);
4105: 				}
4106: 			| ConstInterval Iconst opt_interval
4107: 				{
4108: 					$$ = makeIntervalNode($2, @2, $3);
4109: 				}
4110: 			| ConstInterval Sconst opt_interval
4111: 				{
4112: 					$$ = makeIntervalNode($2, @2, $3);
4113: 				}
4114: 			| TRUE_P
4115: 				{
4116: 					$$ = makeBoolAConst(true, @1);
4117: 				}
4118: 			| FALSE_P
4119: 				{
4120: 					$$ = makeBoolAConst(false, @1);
4121: 				}
4122: 			| NULL_P
4123: 				{
4124: 					$$ = makeNullAConst(@1);
4125: 				}
4126: 		;
4127: 
4128: Iconst:		ICONST									{ $$ = $1; };
4129: 
4130: /* Role specifications */
4131: /*
4132:  * Name classification hierarchy.
4133:  *
4134:  * IDENT is the lexeme returned by the lexer for identifiers that match
4135:  * no known keyword.  In most cases, we can accept certain keywords as
4136:  * names, not only IDENTs.	We prefer to accept as many such keywords
4137:  * as possible to minimize the impact of "reserved words" on programmers.
4138:  * So, we divide names into several possible classes.  The classification
4139:  * is chosen in part to make keywords acceptable as names wherever possible.
4140:  */
4141: 
4142: 
4143: /* Type/function identifier --- names that can be type or function names.
4144:  */
4145: type_function_name:	IDENT							{ $$ = $1; }
4146: 			| unreserved_keyword					{ $$ = pstrdup($1); }
4147: 			| type_func_name_keyword				{ $$ = pstrdup($1); }
4148: 		;
4149: 
4150: function_name_token:	IDENT						{ $$ = $1; }
4151: 			| unreserved_keyword					{ $$ = pstrdup($1); }
4152: 			| func_name_keyword						{ $$ = pstrdup($1); }
4153: 		;
4154: 
4155: type_name_token:	IDENT						{ $$ = $1; }
4156: 			| unreserved_keyword					{ $$ = pstrdup($1); }
4157: 			| type_name_keyword						{ $$ = pstrdup($1); }
4158: 		;
4159: 
4160: any_name:	ColId						{ $$ = list_make1(makeString($1)); }
4161: 			| ColId attrs				{ $$ = lcons(makeString($1), $2); }
4162: 		;
4163: 
4164: attrs:		'.' attr_name
4165: 					{ $$ = list_make1(makeString($2)); }
4166: 			| attrs '.' attr_name
4167: 					{ $$ = lappend($1, makeString($3)); }
4168: 		;
4169: 
4170: opt_name_list:
4171: 			'(' name_list_opt_comma ')'						{ $$ = $2; }
4172: 			| /*EMPTY*/								{ $$ = NIL; }
4173: 		;
4174: 
4175: param_name:	type_function_name
4176: 		;
4177: 
4178: 
4179: ColLabelOrString:	ColLabel						{ $$ = $1; }
4180: 					| SCONST						{ $$ = $1; }
4181: 		;
[end of third_party/libpg_query/grammar/statements/select.y]
[start of third_party/libpg_query/src_backend_parser_gram.cpp]
1: /* A Bison parser, made by GNU Bison 2.3.  */
2: 
3: /* Skeleton implementation for Bison's Yacc-like parsers in C
4: 
5:    Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
6:    Free Software Foundation, Inc.
7: 
8:    This program is free software; you can redistribute it and/or modify
9:    it under the terms of the GNU General Public License as published by
10:    the Free Software Foundation; either version 2, or (at your option)
11:    any later version.
12: 
13:    This program is distributed in the hope that it will be useful,
14:    but WITHOUT ANY WARRANTY; without even the implied warranty of
15:    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
16:    GNU General Public License for more details.
17: 
18:    You should have received a copy of the GNU General Public License
19:    along with this program; if not, write to the Free Software
20:    Foundation, Inc., 51 Franklin Street, Fifth Floor,
21:    Boston, MA 02110-1301, USA.  */
22: 
23: /* As a special exception, you may create a larger work that contains
24:    part or all of the Bison parser skeleton and distribute that work
25:    under terms of your choice, so long as that work isn't itself a
26:    parser generator using the skeleton or a modified version thereof
27:    as a parser skeleton.  Alternatively, if you modify or redistribute
28:    the parser skeleton itself, you may (at your option) remove this
29:    special exception, which will cause the skeleton and the resulting
30:    Bison output files to be licensed under the GNU General Public
31:    License without this special exception.
32: 
33:    This special exception was added by the Free Software Foundation in
34:    version 2.2 of Bison.  */
35: 
36: /* C LALR(1) parser skeleton written by Richard Stallman, by
37:    simplifying the original so-called "semantic" parser.  */
38: 
39: /* All symbols defined below should begin with yy or YY, to avoid
40:    infringing on user name space.  This should be done even for local
41:    variables, as they might otherwise be expanded by user macros.
42:    There are some unavoidable exceptions within include files to
43:    define necessary library symbols; they are noted "INFRINGES ON
44:    USER NAME SPACE" below.  */
45: 
46: /* Identify Bison output.  */
47: #define YYBISON 1
48: 
49: /* Bison version.  */
50: #define YYBISON_VERSION "2.3"
51: 
52: /* Skeleton name.  */
53: #define YYSKELETON_NAME "yacc.c"
54: 
55: /* Pure parsers.  */
56: #define YYPURE 1
57: 
58: /* Using locations.  */
59: #define YYLSP_NEEDED 1
60: 
61: /* Substitute the variable and function names.  */
62: #define yyparse base_yyparse
63: #define yylex   base_yylex
64: #define yyerror base_yyerror
65: #define yylval  base_yylval
66: #define yychar  base_yychar
67: #define yydebug base_yydebug
68: #define yynerrs base_yynerrs
69: #define yylloc base_yylloc
70: 
71: /* Tokens.  */
72: #ifndef YYTOKENTYPE
73: # define YYTOKENTYPE
74:    /* Put the tokens into the symbol table, so that GDB and other debuggers
75:       know about them.  */
76:    enum yytokentype {
77:      IDENT = 258,
78:      FCONST = 259,
79:      SCONST = 260,
80:      BCONST = 261,
81:      XCONST = 262,
82:      Op = 263,
83:      ICONST = 264,
84:      PARAM = 265,
85:      TYPECAST = 266,
86:      DOT_DOT = 267,
87:      COLON_EQUALS = 268,
88:      EQUALS_GREATER = 269,
89:      INTEGER_DIVISION = 270,
90:      POWER_OF = 271,
91:      LAMBDA_ARROW = 272,
92:      DOUBLE_ARROW = 273,
93:      LESS_EQUALS = 274,
94:      GREATER_EQUALS = 275,
95:      NOT_EQUALS = 276,
96:      ABORT_P = 277,
97:      ABSOLUTE_P = 278,
98:      ACCESS = 279,
99:      ACTION = 280,
100:      ADD_P = 281,
101:      ADMIN = 282,
102:      AFTER = 283,
103:      AGGREGATE = 284,
104:      ALL = 285,
105:      ALSO = 286,
106:      ALTER = 287,
107:      ALWAYS = 288,
108:      ANALYSE = 289,
109:      ANALYZE = 290,
110:      AND = 291,
111:      ANTI = 292,
112:      ANY = 293,
113:      ARRAY = 294,
114:      AS = 295,
115:      ASC_P = 296,
116:      ASOF = 297,
117:      ASSERTION = 298,
118:      ASSIGNMENT = 299,
119:      ASYMMETRIC = 300,
120:      AT = 301,
121:      ATTACH = 302,
122:      ATTRIBUTE = 303,
123:      AUTHORIZATION = 304,
124:      BACKWARD = 305,
125:      BEFORE = 306,
126:      BEGIN_P = 307,
127:      BETWEEN = 308,
128:      BIGINT = 309,
129:      BINARY = 310,
130:      BIT = 311,
131:      BOOLEAN_P = 312,
132:      BOTH = 313,
133:      BY = 314,
134:      CACHE = 315,
135:      CALL_P = 316,
136:      CALLED = 317,
137:      CASCADE = 318,
138:      CASCADED = 319,
139:      CASE = 320,
140:      CAST = 321,
141:      CATALOG_P = 322,
142:      CENTURIES_P = 323,
143:      CENTURY_P = 324,
144:      CHAIN = 325,
145:      CHAR_P = 326,
146:      CHARACTER = 327,
147:      CHARACTERISTICS = 328,
148:      CHECK_P = 329,
149:      CHECKPOINT = 330,
150:      CLASS = 331,
151:      CLOSE = 332,
152:      CLUSTER = 333,
153:      COALESCE = 334,
154:      COLLATE = 335,
155:      COLLATION = 336,
156:      COLUMN = 337,
157:      COLUMNS = 338,
158:      COMMENT = 339,
159:      COMMENTS = 340,
160:      COMMIT = 341,
161:      COMMITTED = 342,
162:      COMPRESSION = 343,
163:      CONCURRENTLY = 344,
164:      CONFIGURATION = 345,
165:      CONFLICT = 346,
166:      CONNECTION = 347,
167:      CONSTRAINT = 348,
168:      CONSTRAINTS = 349,
169:      CONTENT_P = 350,
170:      CONTINUE_P = 351,
171:      CONVERSION_P = 352,
172:      COPY = 353,
173:      COST = 354,
174:      CREATE_P = 355,
175:      CROSS = 356,
176:      CSV = 357,
177:      CUBE = 358,
178:      CURRENT_P = 359,
179:      CURSOR = 360,
180:      CYCLE = 361,
181:      DATA_P = 362,
182:      DATABASE = 363,
183:      DAY_P = 364,
184:      DAYS_P = 365,
185:      DEALLOCATE = 366,
186:      DEC = 367,
187:      DECADE_P = 368,
188:      DECADES_P = 369,
189:      DECIMAL_P = 370,
190:      DECLARE = 371,
191:      DEFAULT = 372,
192:      DEFAULTS = 373,
193:      DEFERRABLE = 374,
194:      DEFERRED = 375,
195:      DEFINER = 376,
196:      DELETE_P = 377,
197:      DELIMITER = 378,
198:      DELIMITERS = 379,
199:      DEPENDS = 380,
200:      DESC_P = 381,
201:      DESCRIBE = 382,
202:      DETACH = 383,
203:      DICTIONARY = 384,
204:      DISABLE_P = 385,
205:      DISCARD = 386,
206:      DISTINCT = 387,
207:      DO = 388,
208:      DOCUMENT_P = 389,
209:      DOMAIN_P = 390,
210:      DOUBLE_P = 391,
211:      DROP = 392,
212:      EACH = 393,
213:      ELSE = 394,
214:      ENABLE_P = 395,
215:      ENCODING = 396,
216:      ENCRYPTED = 397,
217:      END_P = 398,
218:      ENUM_P = 399,
219:      ESCAPE = 400,
220:      EVENT = 401,
221:      EXCEPT = 402,
222:      EXCLUDE = 403,
223:      EXCLUDING = 404,
224:      EXCLUSIVE = 405,
225:      EXECUTE = 406,
226:      EXISTS = 407,
227:      EXPLAIN = 408,
228:      EXPORT_P = 409,
229:      EXPORT_STATE = 410,
230:      EXTENSION = 411,
231:      EXTENSIONS = 412,
232:      EXTERNAL = 413,
233:      EXTRACT = 414,
234:      FALSE_P = 415,
235:      FAMILY = 416,
236:      FETCH = 417,
237:      FILTER = 418,
238:      FIRST_P = 419,
239:      FLOAT_P = 420,
240:      FOLLOWING = 421,
241:      FOR = 422,
242:      FORCE = 423,
243:      FOREIGN = 424,
244:      FORWARD = 425,
245:      FREEZE = 426,
246:      FROM = 427,
247:      FULL = 428,
248:      FUNCTION = 429,
249:      FUNCTIONS = 430,
250:      GENERATED = 431,
251:      GLOB = 432,
252:      GLOBAL = 433,
253:      GRANT = 434,
254:      GRANTED = 435,
255:      GROUP_P = 436,
256:      GROUPING = 437,
257:      GROUPING_ID = 438,
258:      GROUPS = 439,
259:      HANDLER = 440,
260:      HAVING = 441,
261:      HEADER_P = 442,
262:      HOLD = 443,
263:      HOUR_P = 444,
264:      HOURS_P = 445,
265:      IDENTITY_P = 446,
266:      IF_P = 447,
267:      IGNORE_P = 448,
268:      ILIKE = 449,
269:      IMMEDIATE = 450,
270:      IMMUTABLE = 451,
271:      IMPLICIT_P = 452,
272:      IMPORT_P = 453,
273:      IN_P = 454,
274:      INCLUDE_P = 455,
275:      INCLUDING = 456,
276:      INCREMENT = 457,
277:      INDEX = 458,
278:      INDEXES = 459,
279:      INHERIT = 460,
280:      INHERITS = 461,
281:      INITIALLY = 462,
282:      INLINE_P = 463,
283:      INNER_P = 464,
284:      INOUT = 465,
285:      INPUT_P = 466,
286:      INSENSITIVE = 467,
287:      INSERT = 468,
288:      INSTALL = 469,
289:      INSTEAD = 470,
290:      INT_P = 471,
291:      INTEGER = 472,
292:      INTERSECT = 473,
293:      INTERVAL = 474,
294:      INTO = 475,
295:      INVOKER = 476,
296:      IS = 477,
297:      ISNULL = 478,
298:      ISOLATION = 479,
299:      JOIN = 480,
300:      JSON = 481,
301:      KEY = 482,
302:      LABEL = 483,
303:      LANGUAGE = 484,
304:      LARGE_P = 485,
305:      LAST_P = 486,
306:      LATERAL_P = 487,
307:      LEADING = 488,
308:      LEAKPROOF = 489,
309:      LEFT = 490,
310:      LEVEL = 491,
311:      LIKE = 492,
312:      LIMIT = 493,
313:      LISTEN = 494,
314:      LOAD = 495,
315:      LOCAL = 496,
316:      LOCATION = 497,
317:      LOCK_P = 498,
318:      LOCKED = 499,
319:      LOGGED = 500,
320:      MACRO = 501,
321:      MAP = 502,
322:      MAPPING = 503,
323:      MATCH = 504,
324:      MATERIALIZED = 505,
325:      MAXVALUE = 506,
326:      METHOD = 507,
327:      MICROSECOND_P = 508,
328:      MICROSECONDS_P = 509,
329:      MILLENNIA_P = 510,
330:      MILLENNIUM_P = 511,
331:      MILLISECOND_P = 512,
332:      MILLISECONDS_P = 513,
333:      MINUTE_P = 514,
334:      MINUTES_P = 515,
335:      MINVALUE = 516,
336:      MODE = 517,
337:      MONTH_P = 518,
338:      MONTHS_P = 519,
339:      MOVE = 520,
340:      NAME_P = 521,
341:      NAMES = 522,
342:      NATIONAL = 523,
343:      NATURAL = 524,
344:      NCHAR = 525,
345:      NEW = 526,
346:      NEXT = 527,
347:      NO = 528,
348:      NONE = 529,
349:      NOT = 530,
350:      NOTHING = 531,
351:      NOTIFY = 532,
352:      NOTNULL = 533,
353:      NOWAIT = 534,
354:      NULL_P = 535,
355:      NULLIF = 536,
356:      NULLS_P = 537,
357:      NUMERIC = 538,
358:      OBJECT_P = 539,
359:      OF = 540,
360:      OFF = 541,
361:      OFFSET = 542,
362:      OIDS = 543,
363:      OLD = 544,
364:      ON = 545,
365:      ONLY = 546,
366:      OPERATOR = 547,
367:      OPTION = 548,
368:      OPTIONS = 549,
369:      OR = 550,
370:      ORDER = 551,
371:      ORDINALITY = 552,
372:      OTHERS = 553,
373:      OUT_P = 554,
374:      OUTER_P = 555,
375:      OVER = 556,
376:      OVERLAPS = 557,
377:      OVERLAY = 558,
378:      OVERRIDING = 559,
379:      OWNED = 560,
380:      OWNER = 561,
381:      PARALLEL = 562,
382:      PARSER = 563,
383:      PARTIAL = 564,
384:      PARTITION = 565,
385:      PASSING = 566,
386:      PASSWORD = 567,
387:      PERCENT = 568,
388:      PERSISTENT = 569,
389:      PIVOT = 570,
390:      PIVOT_LONGER = 571,
391:      PIVOT_WIDER = 572,
392:      PLACING = 573,
393:      PLANS = 574,
394:      POLICY = 575,
395:      POSITION = 576,
396:      POSITIONAL = 577,
397:      PRAGMA_P = 578,
398:      PRECEDING = 579,
399:      PRECISION = 580,
400:      PREPARE = 581,
401:      PREPARED = 582,
402:      PRESERVE = 583,
403:      PRIMARY = 584,
404:      PRIOR = 585,
405:      PRIVILEGES = 586,
406:      PROCEDURAL = 587,
407:      PROCEDURE = 588,
408:      PROGRAM = 589,
409:      PUBLICATION = 590,
410:      QUALIFY = 591,
411:      QUARTER_P = 592,
412:      QUARTERS_P = 593,
413:      QUOTE = 594,
414:      RANGE = 595,
415:      READ_P = 596,
416:      REAL = 597,
417:      REASSIGN = 598,
418:      RECHECK = 599,
419:      RECURSIVE = 600,
420:      REF = 601,
421:      REFERENCES = 602,
422:      REFERENCING = 603,
423:      REFRESH = 604,
424:      REINDEX = 605,
425:      RELATIVE_P = 606,
426:      RELEASE = 607,
427:      RENAME = 608,
428:      REPEATABLE = 609,
429:      REPLACE = 610,
430:      REPLICA = 611,
431:      RESET = 612,
432:      RESPECT_P = 613,
433:      RESTART = 614,
434:      RESTRICT = 615,
435:      RETURNING = 616,
436:      RETURNS = 617,
437:      REVOKE = 618,
438:      RIGHT = 619,
439:      ROLE = 620,
440:      ROLLBACK = 621,
441:      ROLLUP = 622,
442:      ROW = 623,
443:      ROWS = 624,
444:      RULE = 625,
445:      SAMPLE = 626,
446:      SAVEPOINT = 627,
447:      SCHEMA = 628,
448:      SCHEMAS = 629,
449:      SCOPE = 630,
450:      SCROLL = 631,
451:      SEARCH = 632,
452:      SECOND_P = 633,
453:      SECONDS_P = 634,
454:      SECRET = 635,
455:      SECURITY = 636,
456:      SELECT = 637,
457:      SEMI = 638,
458:      SEQUENCE = 639,
459:      SEQUENCES = 640,
460:      SERIALIZABLE = 641,
461:      SERVER = 642,
462:      SESSION = 643,
463:      SET = 644,
464:      SETOF = 645,
465:      SETS = 646,
466:      SHARE = 647,
467:      SHOW = 648,
468:      SIMILAR = 649,
469:      SIMPLE = 650,
470:      SKIP = 651,
471:      SMALLINT = 652,
472:      SNAPSHOT = 653,
473:      SOME = 654,
474:      SQL_P = 655,
475:      STABLE = 656,
476:      STANDALONE_P = 657,
477:      START = 658,
478:      STATEMENT = 659,
479:      STATISTICS = 660,
480:      STDIN = 661,
481:      STDOUT = 662,
482:      STORAGE = 663,
483:      STORED = 664,
484:      STRICT_P = 665,
485:      STRIP_P = 666,
486:      STRUCT = 667,
487:      SUBSCRIPTION = 668,
488:      SUBSTRING = 669,
489:      SUMMARIZE = 670,
490:      SYMMETRIC = 671,
491:      SYSID = 672,
492:      SYSTEM_P = 673,
493:      TABLE = 674,
494:      TABLES = 675,
495:      TABLESAMPLE = 676,
496:      TABLESPACE = 677,
497:      TEMP = 678,
498:      TEMPLATE = 679,
499:      TEMPORARY = 680,
500:      TEXT_P = 681,
501:      THEN = 682,
502:      TIES = 683,
503:      TIME = 684,
504:      TIMESTAMP = 685,
505:      TO = 686,
506:      TRAILING = 687,
507:      TRANSACTION = 688,
508:      TRANSFORM = 689,
509:      TREAT = 690,
510:      TRIGGER = 691,
511:      TRIM = 692,
512:      TRUE_P = 693,
513:      TRUNCATE = 694,
514:      TRUSTED = 695,
515:      TRY_CAST = 696,
516:      TYPE_P = 697,
517:      TYPES_P = 698,
518:      UNBOUNDED = 699,
519:      UNCOMMITTED = 700,
520:      UNENCRYPTED = 701,
521:      UNION = 702,
522:      UNIQUE = 703,
523:      UNKNOWN = 704,
524:      UNLISTEN = 705,
525:      UNLOGGED = 706,
526:      UNPIVOT = 707,
527:      UNTIL = 708,
528:      UPDATE = 709,
529:      USE_P = 710,
530:      USER = 711,
531:      USING = 712,
532:      VACUUM = 713,
533:      VALID = 714,
534:      VALIDATE = 715,
535:      VALIDATOR = 716,
536:      VALUE_P = 717,
537:      VALUES = 718,
538:      VARCHAR = 719,
539:      VARIABLE_P = 720,
540:      VARIADIC = 721,
541:      VARYING = 722,
542:      VERBOSE = 723,
543:      VERSION_P = 724,
544:      VIEW = 725,
545:      VIEWS = 726,
546:      VIRTUAL = 727,
547:      VOLATILE = 728,
548:      WEEK_P = 729,
549:      WEEKS_P = 730,
550:      WHEN = 731,
551:      WHERE = 732,
552:      WHITESPACE_P = 733,
553:      WINDOW = 734,
554:      WITH = 735,
555:      WITHIN = 736,
556:      WITHOUT = 737,
557:      WORK = 738,
558:      WRAPPER = 739,
559:      WRITE_P = 740,
560:      XML_P = 741,
561:      XMLATTRIBUTES = 742,
562:      XMLCONCAT = 743,
563:      XMLELEMENT = 744,
564:      XMLEXISTS = 745,
565:      XMLFOREST = 746,
566:      XMLNAMESPACES = 747,
567:      XMLPARSE = 748,
568:      XMLPI = 749,
569:      XMLROOT = 750,
570:      XMLSERIALIZE = 751,
571:      XMLTABLE = 752,
572:      YEAR_P = 753,
573:      YEARS_P = 754,
574:      YES_P = 755,
575:      ZONE = 756,
576:      NOT_LA = 757,
577:      NULLS_LA = 758,
578:      WITH_LA = 759,
579:      POSTFIXOP = 760,
580:      UMINUS = 761
581:    };
582: #endif
583: /* Tokens.  */
584: #define IDENT 258
585: #define FCONST 259
586: #define SCONST 260
587: #define BCONST 261
588: #define XCONST 262
589: #define Op 263
590: #define ICONST 264
591: #define PARAM 265
592: #define TYPECAST 266
593: #define DOT_DOT 267
594: #define COLON_EQUALS 268
595: #define EQUALS_GREATER 269
596: #define INTEGER_DIVISION 270
597: #define POWER_OF 271
598: #define LAMBDA_ARROW 272
599: #define DOUBLE_ARROW 273
600: #define LESS_EQUALS 274
601: #define GREATER_EQUALS 275
602: #define NOT_EQUALS 276
603: #define ABORT_P 277
604: #define ABSOLUTE_P 278
605: #define ACCESS 279
606: #define ACTION 280
607: #define ADD_P 281
608: #define ADMIN 282
609: #define AFTER 283
610: #define AGGREGATE 284
611: #define ALL 285
612: #define ALSO 286
613: #define ALTER 287
614: #define ALWAYS 288
615: #define ANALYSE 289
616: #define ANALYZE 290
617: #define AND 291
618: #define ANTI 292
619: #define ANY 293
620: #define ARRAY 294
621: #define AS 295
622: #define ASC_P 296
623: #define ASOF 297
624: #define ASSERTION 298
625: #define ASSIGNMENT 299
626: #define ASYMMETRIC 300
627: #define AT 301
628: #define ATTACH 302
629: #define ATTRIBUTE 303
630: #define AUTHORIZATION 304
631: #define BACKWARD 305
632: #define BEFORE 306
633: #define BEGIN_P 307
634: #define BETWEEN 308
635: #define BIGINT 309
636: #define BINARY 310
637: #define BIT 311
638: #define BOOLEAN_P 312
639: #define BOTH 313
640: #define BY 314
641: #define CACHE 315
642: #define CALL_P 316
643: #define CALLED 317
644: #define CASCADE 318
645: #define CASCADED 319
646: #define CASE 320
647: #define CAST 321
648: #define CATALOG_P 322
649: #define CENTURIES_P 323
650: #define CENTURY_P 324
651: #define CHAIN 325
652: #define CHAR_P 326
653: #define CHARACTER 327
654: #define CHARACTERISTICS 328
655: #define CHECK_P 329
656: #define CHECKPOINT 330
657: #define CLASS 331
658: #define CLOSE 332
659: #define CLUSTER 333
660: #define COALESCE 334
661: #define COLLATE 335
662: #define COLLATION 336
663: #define COLUMN 337
664: #define COLUMNS 338
665: #define COMMENT 339
666: #define COMMENTS 340
667: #define COMMIT 341
668: #define COMMITTED 342
669: #define COMPRESSION 343
670: #define CONCURRENTLY 344
671: #define CONFIGURATION 345
672: #define CONFLICT 346
673: #define CONNECTION 347
674: #define CONSTRAINT 348
675: #define CONSTRAINTS 349
676: #define CONTENT_P 350
677: #define CONTINUE_P 351
678: #define CONVERSION_P 352
679: #define COPY 353
680: #define COST 354
681: #define CREATE_P 355
682: #define CROSS 356
683: #define CSV 357
684: #define CUBE 358
685: #define CURRENT_P 359
686: #define CURSOR 360
687: #define CYCLE 361
688: #define DATA_P 362
689: #define DATABASE 363
690: #define DAY_P 364
691: #define DAYS_P 365
692: #define DEALLOCATE 366
693: #define DEC 367
694: #define DECADE_P 368
695: #define DECADES_P 369
696: #define DECIMAL_P 370
697: #define DECLARE 371
698: #define DEFAULT 372
699: #define DEFAULTS 373
700: #define DEFERRABLE 374
701: #define DEFERRED 375
702: #define DEFINER 376
703: #define DELETE_P 377
704: #define DELIMITER 378
705: #define DELIMITERS 379
706: #define DEPENDS 380
707: #define DESC_P 381
708: #define DESCRIBE 382
709: #define DETACH 383
710: #define DICTIONARY 384
711: #define DISABLE_P 385
712: #define DISCARD 386
713: #define DISTINCT 387
714: #define DO 388
715: #define DOCUMENT_P 389
716: #define DOMAIN_P 390
717: #define DOUBLE_P 391
718: #define DROP 392
719: #define EACH 393
720: #define ELSE 394
721: #define ENABLE_P 395
722: #define ENCODING 396
723: #define ENCRYPTED 397
724: #define END_P 398
725: #define ENUM_P 399
726: #define ESCAPE 400
727: #define EVENT 401
728: #define EXCEPT 402
729: #define EXCLUDE 403
730: #define EXCLUDING 404
731: #define EXCLUSIVE 405
732: #define EXECUTE 406
733: #define EXISTS 407
734: #define EXPLAIN 408
735: #define EXPORT_P 409
736: #define EXPORT_STATE 410
737: #define EXTENSION 411
738: #define EXTENSIONS 412
739: #define EXTERNAL 413
740: #define EXTRACT 414
741: #define FALSE_P 415
742: #define FAMILY 416
743: #define FETCH 417
744: #define FILTER 418
745: #define FIRST_P 419
746: #define FLOAT_P 420
747: #define FOLLOWING 421
748: #define FOR 422
749: #define FORCE 423
750: #define FOREIGN 424
751: #define FORWARD 425
752: #define FREEZE 426
753: #define FROM 427
754: #define FULL 428
755: #define FUNCTION 429
756: #define FUNCTIONS 430
757: #define GENERATED 431
758: #define GLOB 432
759: #define GLOBAL 433
760: #define GRANT 434
761: #define GRANTED 435
762: #define GROUP_P 436
763: #define GROUPING 437
764: #define GROUPING_ID 438
765: #define GROUPS 439
766: #define HANDLER 440
767: #define HAVING 441
768: #define HEADER_P 442
769: #define HOLD 443
770: #define HOUR_P 444
771: #define HOURS_P 445
772: #define IDENTITY_P 446
773: #define IF_P 447
774: #define IGNORE_P 448
775: #define ILIKE 449
776: #define IMMEDIATE 450
777: #define IMMUTABLE 451
778: #define IMPLICIT_P 452
779: #define IMPORT_P 453
780: #define IN_P 454
781: #define INCLUDE_P 455
782: #define INCLUDING 456
783: #define INCREMENT 457
784: #define INDEX 458
785: #define INDEXES 459
786: #define INHERIT 460
787: #define INHERITS 461
788: #define INITIALLY 462
789: #define INLINE_P 463
790: #define INNER_P 464
791: #define INOUT 465
792: #define INPUT_P 466
793: #define INSENSITIVE 467
794: #define INSERT 468
795: #define INSTALL 469
796: #define INSTEAD 470
797: #define INT_P 471
798: #define INTEGER 472
799: #define INTERSECT 473
800: #define INTERVAL 474
801: #define INTO 475
802: #define INVOKER 476
803: #define IS 477
804: #define ISNULL 478
805: #define ISOLATION 479
806: #define JOIN 480
807: #define JSON 481
808: #define KEY 482
809: #define LABEL 483
810: #define LANGUAGE 484
811: #define LARGE_P 485
812: #define LAST_P 486
813: #define LATERAL_P 487
814: #define LEADING 488
815: #define LEAKPROOF 489
816: #define LEFT 490
817: #define LEVEL 491
818: #define LIKE 492
819: #define LIMIT 493
820: #define LISTEN 494
821: #define LOAD 495
822: #define LOCAL 496
823: #define LOCATION 497
824: #define LOCK_P 498
825: #define LOCKED 499
826: #define LOGGED 500
827: #define MACRO 501
828: #define MAP 502
829: #define MAPPING 503
830: #define MATCH 504
831: #define MATERIALIZED 505
832: #define MAXVALUE 506
833: #define METHOD 507
834: #define MICROSECOND_P 508
835: #define MICROSECONDS_P 509
836: #define MILLENNIA_P 510
837: #define MILLENNIUM_P 511
838: #define MILLISECOND_P 512
839: #define MILLISECONDS_P 513
840: #define MINUTE_P 514
841: #define MINUTES_P 515
842: #define MINVALUE 516
843: #define MODE 517
844: #define MONTH_P 518
845: #define MONTHS_P 519
846: #define MOVE 520
847: #define NAME_P 521
848: #define NAMES 522
849: #define NATIONAL 523
850: #define NATURAL 524
851: #define NCHAR 525
852: #define NEW 526
853: #define NEXT 527
854: #define NO 528
855: #define NONE 529
856: #define NOT 530
857: #define NOTHING 531
858: #define NOTIFY 532
859: #define NOTNULL 533
860: #define NOWAIT 534
861: #define NULL_P 535
862: #define NULLIF 536
863: #define NULLS_P 537
864: #define NUMERIC 538
865: #define OBJECT_P 539
866: #define OF 540
867: #define OFF 541
868: #define OFFSET 542
869: #define OIDS 543
870: #define OLD 544
871: #define ON 545
872: #define ONLY 546
873: #define OPERATOR 547
874: #define OPTION 548
875: #define OPTIONS 549
876: #define OR 550
877: #define ORDER 551
878: #define ORDINALITY 552
879: #define OTHERS 553
880: #define OUT_P 554
881: #define OUTER_P 555
882: #define OVER 556
883: #define OVERLAPS 557
884: #define OVERLAY 558
885: #define OVERRIDING 559
886: #define OWNED 560
887: #define OWNER 561
888: #define PARALLEL 562
889: #define PARSER 563
890: #define PARTIAL 564
891: #define PARTITION 565
892: #define PASSING 566
893: #define PASSWORD 567
894: #define PERCENT 568
895: #define PERSISTENT 569
896: #define PIVOT 570
897: #define PIVOT_LONGER 571
898: #define PIVOT_WIDER 572
899: #define PLACING 573
900: #define PLANS 574
901: #define POLICY 575
902: #define POSITION 576
903: #define POSITIONAL 577
904: #define PRAGMA_P 578
905: #define PRECEDING 579
906: #define PRECISION 580
907: #define PREPARE 581
908: #define PREPARED 582
909: #define PRESERVE 583
910: #define PRIMARY 584
911: #define PRIOR 585
912: #define PRIVILEGES 586
913: #define PROCEDURAL 587
914: #define PROCEDURE 588
915: #define PROGRAM 589
916: #define PUBLICATION 590
917: #define QUALIFY 591
918: #define QUARTER_P 592
919: #define QUARTERS_P 593
920: #define QUOTE 594
921: #define RANGE 595
922: #define READ_P 596
923: #define REAL 597
924: #define REASSIGN 598
925: #define RECHECK 599
926: #define RECURSIVE 600
927: #define REF 601
928: #define REFERENCES 602
929: #define REFERENCING 603
930: #define REFRESH 604
931: #define REINDEX 605
932: #define RELATIVE_P 606
933: #define RELEASE 607
934: #define RENAME 608
935: #define REPEATABLE 609
936: #define REPLACE 610
937: #define REPLICA 611
938: #define RESET 612
939: #define RESPECT_P 613
940: #define RESTART 614
941: #define RESTRICT 615
942: #define RETURNING 616
943: #define RETURNS 617
944: #define REVOKE 618
945: #define RIGHT 619
946: #define ROLE 620
947: #define ROLLBACK 621
948: #define ROLLUP 622
949: #define ROW 623
950: #define ROWS 624
951: #define RULE 625
952: #define SAMPLE 626
953: #define SAVEPOINT 627
954: #define SCHEMA 628
955: #define SCHEMAS 629
956: #define SCOPE 630
957: #define SCROLL 631
958: #define SEARCH 632
959: #define SECOND_P 633
960: #define SECONDS_P 634
961: #define SECRET 635
962: #define SECURITY 636
963: #define SELECT 637
964: #define SEMI 638
965: #define SEQUENCE 639
966: #define SEQUENCES 640
967: #define SERIALIZABLE 641
968: #define SERVER 642
969: #define SESSION 643
970: #define SET 644
971: #define SETOF 645
972: #define SETS 646
973: #define SHARE 647
974: #define SHOW 648
975: #define SIMILAR 649
976: #define SIMPLE 650
977: #define SKIP 651
978: #define SMALLINT 652
979: #define SNAPSHOT 653
980: #define SOME 654
981: #define SQL_P 655
982: #define STABLE 656
983: #define STANDALONE_P 657
984: #define START 658
985: #define STATEMENT 659
986: #define STATISTICS 660
987: #define STDIN 661
988: #define STDOUT 662
989: #define STORAGE 663
990: #define STORED 664
991: #define STRICT_P 665
992: #define STRIP_P 666
993: #define STRUCT 667
994: #define SUBSCRIPTION 668
995: #define SUBSTRING 669
996: #define SUMMARIZE 670
997: #define SYMMETRIC 671
998: #define SYSID 672
999: #define SYSTEM_P 673
1000: #define TABLE 674
1001: #define TABLES 675
1002: #define TABLESAMPLE 676
1003: #define TABLESPACE 677
1004: #define TEMP 678
1005: #define TEMPLATE 679
1006: #define TEMPORARY 680
1007: #define TEXT_P 681
1008: #define THEN 682
1009: #define TIES 683
1010: #define TIME 684
1011: #define TIMESTAMP 685
1012: #define TO 686
1013: #define TRAILING 687
1014: #define TRANSACTION 688
1015: #define TRANSFORM 689
1016: #define TREAT 690
1017: #define TRIGGER 691
1018: #define TRIM 692
1019: #define TRUE_P 693
1020: #define TRUNCATE 694
1021: #define TRUSTED 695
1022: #define TRY_CAST 696
1023: #define TYPE_P 697
1024: #define TYPES_P 698
1025: #define UNBOUNDED 699
1026: #define UNCOMMITTED 700
1027: #define UNENCRYPTED 701
1028: #define UNION 702
1029: #define UNIQUE 703
1030: #define UNKNOWN 704
1031: #define UNLISTEN 705
1032: #define UNLOGGED 706
1033: #define UNPIVOT 707
1034: #define UNTIL 708
1035: #define UPDATE 709
1036: #define USE_P 710
1037: #define USER 711
1038: #define USING 712
1039: #define VACUUM 713
1040: #define VALID 714
1041: #define VALIDATE 715
1042: #define VALIDATOR 716
1043: #define VALUE_P 717
1044: #define VALUES 718
1045: #define VARCHAR 719
1046: #define VARIABLE_P 720
1047: #define VARIADIC 721
1048: #define VARYING 722
1049: #define VERBOSE 723
1050: #define VERSION_P 724
1051: #define VIEW 725
1052: #define VIEWS 726
1053: #define VIRTUAL 727
1054: #define VOLATILE 728
1055: #define WEEK_P 729
1056: #define WEEKS_P 730
1057: #define WHEN 731
1058: #define WHERE 732
1059: #define WHITESPACE_P 733
1060: #define WINDOW 734
1061: #define WITH 735
1062: #define WITHIN 736
1063: #define WITHOUT 737
1064: #define WORK 738
1065: #define WRAPPER 739
1066: #define WRITE_P 740
1067: #define XML_P 741
1068: #define XMLATTRIBUTES 742
1069: #define XMLCONCAT 743
1070: #define XMLELEMENT 744
1071: #define XMLEXISTS 745
1072: #define XMLFOREST 746
1073: #define XMLNAMESPACES 747
1074: #define XMLPARSE 748
1075: #define XMLPI 749
1076: #define XMLROOT 750
1077: #define XMLSERIALIZE 751
1078: #define XMLTABLE 752
1079: #define YEAR_P 753
1080: #define YEARS_P 754
1081: #define YES_P 755
1082: #define ZONE 756
1083: #define NOT_LA 757
1084: #define NULLS_LA 758
1085: #define WITH_LA 759
1086: #define POSTFIXOP 760
1087: #define UMINUS 761
1088: 
1089: 
1090: 
1091: 
1092: /* Copy the first part of user declarations.  */
1093: #line 1 "third_party/libpg_query/grammar/grammar.y.tmp"
1094: 
1095: #line 1 "third_party/libpg_query/grammar/grammar.hpp"
1096: /*#define YYDEBUG 1*/
1097: /*-------------------------------------------------------------------------
1098:  *
1099:  * gram.y
1100:  *	  POSTGRESQL BISON rules/actions
1101:  *
1102:  * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
1103:  * Portions Copyright (c) 1994, Regents of the University of California
1104:  *
1105:  *
1106:  * IDENTIFICATION
1107:  *	  src/backend/parser/gram.y
1108:  *
1109:  * HISTORY
1110:  *	  AUTHOR			DATE			MAJOR EVENT
1111:  *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
1112:  *	  Andrew Yu			Oct, 1994		lispy code conversion
1113:  *
1114:  * NOTES
1115:  *	  CAPITALS are used to represent terminal symbols.
1116:  *	  non-capitals are used to represent non-terminals.
1117:  *
1118:  *	  In general, nothing in this file should initiate database accesses
1119:  *	  nor depend on changeable state (such as SET variables).  If you do
1120:  *	  database accesses, your code will fail when we have aborted the
1121:  *	  current transaction and are just parsing commands to find the next
1122:  *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
1123:  *	  will do the wrong thing in multi-query strings like this:
1124:  *			SET constraint_exclusion TO off; SELECT * FROM foo;
1125:  *	  because the entire string is parsed by gram.y before the SET gets
1126:  *	  executed.  Anything that depends on the database or changeable state
1127:  *	  should be handled during parse analysis so that it happens at the
1128:  *	  right time not the wrong time.
1129:  *
1130:  * WARNINGS
1131:  *	  If you use a list, make sure the datum is a node so that the printing
1132:  *	  routines work.
1133:  *
1134:  *	  Sometimes we assign constants to makeStrings. Make sure we don't free
1135:  *	  those.
1136:  *
1137:  *-------------------------------------------------------------------------
1138:  */
1139: #include "pg_functions.hpp"
1140: #include <string.h>
1141: 
1142: #include <ctype.h>
1143: #include <limits.h>
1144: 
1145: #include "nodes/makefuncs.hpp"
1146: #include "nodes/nodeFuncs.hpp"
1147: #include "parser/gramparse.hpp"
1148: #include "parser/parser.hpp"
1149: #include "utils/datetime.hpp"
1150: 
1151: namespace duckdb_libpgquery {
1152: #define DEFAULT_SCHEMA "main"
1153: 
1154: /*
1155:  * Location tracking support --- simpler than bison's default, since we only
1156:  * want to track the start position not the end position of each nonterminal.
1157:  */
1158: #define YYLLOC_DEFAULT(Current, Rhs, N) \
1159: 	do { \
1160: 		if ((N) > 0) \
1161: 			(Current) = (Rhs)[1]; \
1162: 		else \
1163: 			(Current) = (-1); \
1164: 	} while (0)
1165: 
1166: /*
1167:  * The above macro assigns -1 (unknown) as the parse location of any
1168:  * nonterminal that was reduced from an empty rule, or whose leftmost
1169:  * component was reduced from an empty rule.  This is problematic
1170:  * for nonterminals defined like
1171:  *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
1172:  * because we'll set -1 as the location during the first reduction and then
1173:  * copy it during each subsequent reduction, leaving us with -1 for the
1174:  * location even when the list is not empty.  To fix that, do this in the
1175:  * action for the nonempty rule(s):
1176:  *		if (@$ < 0) @$ = @2;
1177:  * (Although we have many nonterminals that follow this pattern, we only
1178:  * bother with fixing @$ like this when the nonterminal's parse location
1179:  * is actually referenced in some rule.)
1180:  *
1181:  * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
1182:  * locations until it's found one that's not -1.  Then we'd get a correct
1183:  * location for any nonterminal that isn't entirely empty.  But this way
1184:  * would add overhead to every rule reduction, and so far there's not been
1185:  * a compelling reason to pay that overhead.
1186:  */
1187: 
1188: /*
1189:  * Bison doesn't allocate anything that needs to live across parser calls,
1190:  * so we can easily have it use palloc instead of malloc.  This prevents
1191:  * memory leaks if we error out during parsing.  Note this only works with
1192:  * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
1193:  * if possible, so there's not really much problem anyhow, at least if
1194:  * you're building with gcc.
1195:  */
1196: #define YYMALLOC palloc
1197: #define YYFREE   pfree
1198: #define YYINITDEPTH 1000
1199: 
1200: /* yields an integer bitmask of these flags: */
1201: #define CAS_NOT_DEFERRABLE			0x01
1202: #define CAS_DEFERRABLE				0x02
1203: #define CAS_INITIALLY_IMMEDIATE		0x04
1204: #define CAS_INITIALLY_DEFERRED		0x08
1205: #define CAS_NOT_VALID				0x10
1206: #define CAS_NO_INHERIT				0x20
1207: 
1208: 
1209: #define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
1210: #define parser_errposition(pos)  scanner_errposition(pos, yyscanner)
1211: 
1212: #if YYBISON == 1
1213: // explicitly define stack growing support
1214: // yacc cannot handle stack growing by default YYLTYPE is overriden - which the Postgres parser overrides with an `int`
1215: // so we need to copy these definitions here explicitly
1216: /* A type that is properly aligned for any stack member.  */
1217: union yyalloc
1218: {
1219:   short int yyss;
1220:   YYSTYPE yyvs;
1221:   YYLTYPE yyls;
1222: };
1223: 
1224: /* The size of the maximum gap between one aligned stack and the next.  */
1225: # define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
1226: 
1227: /* The size of an array large to enough to hold all stacks, each with
1228:    N elements.  */
1229: # define YYSTACK_BYTES(N) \
1230:      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
1231:       + 2 * YYSTACK_GAP_MAXIMUM)
1232: 
1233: /* Copy COUNT objects from FROM to TO.  The source and destination do
1234:    not overlap.  */
1235: # ifndef YYCOPY
1236: #  if defined __GNUC__ && 1 < __GNUC__
1237: #   define YYCOPY(To, From, Count) \
1238:       __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
1239: #  else
1240: #   define YYCOPY(To, From, Count)		\
1241:       do					\
1242: 	{					\
1243: 	  YYSIZE_T yyi;				\
1244: 	  for (yyi = 0; yyi < (Count); yyi++)	\
1245: 	    (To)[yyi] = (From)[yyi];		\
1246: 	}					\
1247:       while (YYID (0))
1248: #  endif
1249: # endif
1250: 
1251: /* Relocate STACK from its old location to the new one.  The
1252:    local variables YYSIZE and YYSTACKSIZE give the old and new number of
1253:    elements in the stack, and YYPTR gives the new location of the
1254:    stack.  Advance YYPTR to a properly aligned location for the next
1255:    stack.  */
1256: # define YYSTACK_RELOCATE(Stack)					\
1257:     do									\
1258:       {									\
1259: 	YYSIZE_T yynewbytes;						\
1260: 	YYCOPY (&yyptr->Stack, Stack, yysize);				\
1261: 	Stack = &yyptr->Stack;						\
1262: 	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
1263: 	yyptr += yynewbytes / sizeof (*yyptr);				\
1264:       }									\
1265:     while (YYID (0))
1266: #endif
1267: 
1268: static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
1269: 						 const char *msg);
1270: static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
1271: static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
1272: static PGNode *makeColumnRef(char *colname, PGList *indirection,
1273: 						   int location, core_yyscan_t yyscanner);
1274: static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location);
1275: static PGNode *makeStringConst(char *str, int location);
1276: static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
1277: static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
1278: static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
1279: static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
1280: static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
1281: static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int *seed, int location);
1282: static PGNode *makeIntConst(int val, int location);
1283: static PGNode *makeFloatConst(char *str, int location);
1284: static PGNode *makeBitStringConst(char *str, int location);
1285: static PGNode *makeNullAConst(int location);
1286: static PGNode *makeAConst(PGValue *v, int location);
1287: static PGNode *makeBoolAConst(bool state, int location);
1288: static PGNode *makeParamRef(int number, int location);
1289: static PGNode *makeNamedParamRef(char* name, int location);
1290: static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
1291: static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
1292: static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
1293: static void insertSelectOptions(PGSelectStmt *stmt,
1294: 								PGList *sortClause, PGList *lockingClause,
1295: 								PGNode *limitOffset, PGNode *limitCount,
1296: 								PGWithClause *withClause,
1297: 								core_yyscan_t yyscanner);
1298: static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
1299: static PGNode *doNegate(PGNode *n, int location);
1300: static void doNegateFloat(PGValue *v);
1301: static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
1302: static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
1303: static PGNode *makeNotExpr(PGNode *expr, int location);
1304: static void SplitColQualList(PGList *qualList,
1305: 							 PGList **constraintList, PGCollateClause **collClause,
1306: 							 core_yyscan_t yyscanner);
1307: static void processCASbits(int cas_bits, int location, const char *constrType,
1308: 			   bool *deferrable, bool *initdeferred, bool *not_valid,
1309: 			   bool *no_inherit, core_yyscan_t yyscanner);
1310: static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);
1311: static PGNode *makeLimitPercent(PGNode *limit_percent);
1312: 
1313: 
1314: 
1315: /* Enabling traces.  */
1316: #ifndef YYDEBUG
1317: # define YYDEBUG 0
1318: #endif
1319: 
1320: /* Enabling verbose error messages.  */
1321: #ifdef YYERROR_VERBOSE
1322: # undef YYERROR_VERBOSE
1323: # define YYERROR_VERBOSE 1
1324: #else
1325: # define YYERROR_VERBOSE 0
1326: #endif
1327: 
1328: /* Enabling the token table.  */
1329: #ifndef YYTOKEN_TABLE
1330: # define YYTOKEN_TABLE 0
1331: #endif
1332: 
1333: #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
1334: typedef union YYSTYPE
1335: #line 14 "third_party/libpg_query/grammar/grammar.y"
1336: {
1337: 	core_YYSTYPE		core_yystype;
1338: 	/* these fields must match core_YYSTYPE: */
1339: 	int					ival;
1340: 	char				*str;
1341: 	const char			*keyword;
1342: 	const char          *conststr;
1343: 
1344: 	char				chr;
1345: 	bool				boolean;
1346: 	PGJoinType			jtype;
1347: 	PGDropBehavior		dbehavior;
1348: 	PGOnCommitAction		oncommit;
1349: 	PGOnCreateConflict		oncreateconflict;
1350: 	PGList				*list;
1351: 	PGNode				*node;
1352: 	PGValue				*value;
1353: 	PGObjectType			objtype;
1354: 	PGTypeName			*typnam;
1355: 	PGObjectWithArgs		*objwithargs;
1356: 	PGDefElem				*defelt;
1357: 	PGSortBy				*sortby;
1358: 	PGWindowDef			*windef;
1359: 	PGJoinExpr			*jexpr;
1360: 	PGIndexElem			*ielem;
1361: 	PGAlias				*alias;
1362: 	PGRangeVar			*range;
1363: 	PGIntoClause			*into;
1364: 	PGCTEMaterialize			ctematerialize;
1365: 	PGWithClause			*with;
1366: 	PGInferClause			*infer;
1367: 	PGOnConflictClause	*onconflict;
1368: 	PGOnConflictActionAlias onconflictshorthand;
1369: 	PGAIndices			*aind;
1370: 	PGResTarget			*target;
1371: 	PGInsertStmt			*istmt;
1372: 	PGVariableSetStmt		*vsetstmt;
1373: 	PGOverridingKind       override;
1374: 	PGSortByDir            sortorder;
1375: 	PGSortByNulls          nullorder;
1376: 	PGIgnoreNulls          ignorenulls;
1377: 	PGConstrType           constr;
1378: 	PGLockClauseStrength lockstrength;
1379: 	PGLockWaitPolicy lockwaitpolicy;
1380: 	PGSubLinkType subquerytype;
1381: 	PGViewCheckOption viewcheckoption;
1382: 	PGInsertColumnOrder bynameorposition;
1383: 	PGLoadInstallType loadinstalltype;
1384: 	PGTransactionStmtType transactiontype;
1385: }
1386: /* Line 193 of yacc.c.  */
1387: #line 1388 "third_party/libpg_query/grammar/grammar_out.cpp"
1388: 	YYSTYPE;
1389: # define yystype YYSTYPE /* obsolescent; will be withdrawn */
1390: # define YYSTYPE_IS_DECLARED 1
1391: # define YYSTYPE_IS_TRIVIAL 1
1392: #endif
1393: 
1394: #if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
1395: typedef struct YYLTYPE
1396: {
1397:   int first_line;
1398:   int first_column;
1399:   int last_line;
1400:   int last_column;
1401: } YYLTYPE;
1402: # define yyltype YYLTYPE /* obsolescent; will be withdrawn */
1403: # define YYLTYPE_IS_DECLARED 1
1404: # define YYLTYPE_IS_TRIVIAL 1
1405: #endif
1406: 
1407: 
1408: /* Copy the second part of user declarations.  */
1409: 
1410: 
1411: /* Line 216 of yacc.c.  */
1412: #line 1413 "third_party/libpg_query/grammar/grammar_out.cpp"
1413: 
1414: #ifdef short
1415: # undef short
1416: #endif
1417: 
1418: #ifdef YYTYPE_UINT8
1419: typedef YYTYPE_UINT8 yytype_uint8;
1420: #else
1421: typedef unsigned char yytype_uint8;
1422: #endif
1423: 
1424: #ifdef YYTYPE_INT8
1425: typedef YYTYPE_INT8 yytype_int8;
1426: #elif (defined __STDC__ || defined __C99__FUNC__ \
1427:      || defined __cplusplus || defined _MSC_VER)
1428: typedef signed char yytype_int8;
1429: #else
1430: typedef short int yytype_int8;
1431: #endif
1432: 
1433: #ifdef YYTYPE_UINT16
1434: typedef YYTYPE_UINT16 yytype_uint16;
1435: #else
1436: typedef unsigned short int yytype_uint16;
1437: #endif
1438: 
1439: #ifdef YYTYPE_INT16
1440: typedef YYTYPE_INT16 yytype_int16;
1441: #else
1442: typedef short int yytype_int16;
1443: #endif
1444: 
1445: #ifndef YYSIZE_T
1446: # ifdef __SIZE_TYPE__
1447: #  define YYSIZE_T __SIZE_TYPE__
1448: # elif defined size_t
1449: #  define YYSIZE_T size_t
1450: # elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
1451:      || defined __cplusplus || defined _MSC_VER)
1452: #  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
1453: #  define YYSIZE_T size_t
1454: # else
1455: #  define YYSIZE_T unsigned int
1456: # endif
1457: #endif
1458: 
1459: #define YYSIZE_MAXIMUM ((YYSIZE_T) -1)
1460: 
1461: #ifndef YY_
1462: # if defined YYENABLE_NLS && YYENABLE_NLS
1463: #  if ENABLE_NLS
1464: #   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
1465: #   define YY_(msgid) dgettext ("bison-runtime", msgid)
1466: #  endif
1467: # endif
1468: # ifndef YY_
1469: #  define YY_(msgid) msgid
1470: # endif
1471: #endif
1472: 
1473: /* Suppress unused-variable warnings by "using" E.  */
1474: #if ! defined lint || defined __GNUC__
1475: # define YYUSE(e) ((void) (e))
1476: #else
1477: # define YYUSE(e) /* empty */
1478: #endif
1479: 
1480: /* Identity function, used to suppress warnings about constant conditions.  */
1481: #ifndef lint
1482: # define YYID(n) (n)
1483: #else
1484: #if (defined __STDC__ || defined __C99__FUNC__ \
1485:      || defined __cplusplus || defined _MSC_VER)
1486: static int
1487: YYID (int i)
1488: #else
1489: static int
1490: YYID (i)
1491:     int i;
1492: #endif
1493: {
1494:   return i;
1495: }
1496: #endif
1497: 
1498: #if ! defined yyoverflow || YYERROR_VERBOSE
1499: 
1500: /* The parser invokes alloca or malloc; define the necessary symbols.  */
1501: 
1502: # ifdef YYSTACK_USE_ALLOCA
1503: #  if YYSTACK_USE_ALLOCA
1504: #   ifdef __GNUC__
1505: #    define YYSTACK_ALLOC __builtin_alloca
1506: #   elif defined __BUILTIN_VA_ARG_INCR
1507: #    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
1508: #   elif defined _AIX
1509: #    define YYSTACK_ALLOC __alloca
1510: #   elif defined _MSC_VER
1511: #    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
1512: #    define alloca _alloca
1513: #   else
1514: #    define YYSTACK_ALLOC alloca
1515: #    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
1516:      || defined __cplusplus || defined _MSC_VER)
1517: #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
1518: #     ifndef _STDLIB_H
1519: #      define _STDLIB_H 1
1520: #     endif
1521: #    endif
1522: #   endif
1523: #  endif
1524: # endif
1525: 
1526: # ifdef YYSTACK_ALLOC
1527:    /* Pacify GCC's `empty if-body' warning.  */
1528: #  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
1529: #  ifndef YYSTACK_ALLOC_MAXIMUM
1530:     /* The OS might guarantee only one guard page at the bottom of the stack,
1531:        and a page size can be as small as 4096 bytes.  So we cannot safely
1532:        invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
1533:        to allow for a few compiler-allocated temporary stack slots.  */
1534: #   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
1535: #  endif
1536: # else
1537: #  define YYSTACK_ALLOC YYMALLOC
1538: #  define YYSTACK_FREE YYFREE
1539: #  ifndef YYSTACK_ALLOC_MAXIMUM
1540: #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
1541: #  endif
1542: #  if (defined __cplusplus && ! defined _STDLIB_H \
1543:        && ! ((defined YYMALLOC || defined malloc) \
1544: 	     && (defined YYFREE || defined free)))
1545: #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
1546: #   ifndef _STDLIB_H
1547: #    define _STDLIB_H 1
1548: #   endif
1549: #  endif
1550: #  ifndef YYMALLOC
1551: #   define YYMALLOC malloc
1552: #   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
1553:      || defined __cplusplus || defined _MSC_VER)
1554: void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
1555: #   endif
1556: #  endif
1557: #  ifndef YYFREE
1558: #   define YYFREE free
1559: #   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
1560:      || defined __cplusplus || defined _MSC_VER)
1561: void free (void *); /* INFRINGES ON USER NAME SPACE */
1562: #   endif
1563: #  endif
1564: # endif
1565: #endif /* ! defined yyoverflow || YYERROR_VERBOSE */
1566: 
1567: 
1568: #if (! defined yyoverflow \
1569:      && (! defined __cplusplus \
1570: 	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
1571: 	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))
1572: 
1573: /* A type that is properly aligned for any stack member.  */
1574: union yyalloc
1575: {
1576:   yytype_int16 yyss;
1577:   YYSTYPE yyvs;
1578:     YYLTYPE yyls;
1579: };
1580: 
1581: /* The size of the maximum gap between one aligned stack and the next.  */
1582: # define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
1583: 
1584: /* The size of an array large to enough to hold all stacks, each with
1585:    N elements.  */
1586: # define YYSTACK_BYTES(N) \
1587:      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
1588:       + 2 * YYSTACK_GAP_MAXIMUM)
1589: 
1590: /* Copy COUNT objects from FROM to TO.  The source and destination do
1591:    not overlap.  */
1592: # ifndef YYCOPY
1593: #  if defined __GNUC__ && 1 < __GNUC__
1594: #   define YYCOPY(To, From, Count) \
1595:       __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
1596: #  else
1597: #   define YYCOPY(To, From, Count)		\
1598:       do					\
1599: 	{					\
1600: 	  YYSIZE_T yyi;				\
1601: 	  for (yyi = 0; yyi < (Count); yyi++)	\
1602: 	    (To)[yyi] = (From)[yyi];		\
1603: 	}					\
1604:       while (YYID (0))
1605: #  endif
1606: # endif
1607: 
1608: /* Relocate STACK from its old location to the new one.  The
1609:    local variables YYSIZE and YYSTACKSIZE give the old and new number of
1610:    elements in the stack, and YYPTR gives the new location of the
1611:    stack.  Advance YYPTR to a properly aligned location for the next
1612:    stack.  */
1613: # define YYSTACK_RELOCATE(Stack)					\
1614:     do									\
1615:       {									\
1616: 	YYSIZE_T yynewbytes;						\
1617: 	YYCOPY (&yyptr->Stack, Stack, yysize);				\
1618: 	Stack = &yyptr->Stack;						\
1619: 	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
1620: 	yyptr += yynewbytes / sizeof (*yyptr);				\
1621:       }									\
1622:     while (YYID (0))
1623: 
1624: #endif
1625: 
1626: /* YYFINAL -- State number of the termination state.  */
1627: #define YYFINAL  873
1628: /* YYLAST -- Last index in YYTABLE.  */
1629: #define YYLAST   72916
1630: 
1631: /* YYNTOKENS -- Number of terminals.  */
1632: #define YYNTOKENS  529
1633: /* YYNNTS -- Number of nonterminals.  */
1634: #define YYNNTS  474
1635: /* YYNRULES -- Number of rules.  */
1636: #define YYNRULES  2156
1637: /* YYNRULES -- Number of states.  */
1638: #define YYNSTATES  3579
1639: 
1640: /* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
1641: #define YYUNDEFTOK  2
1642: #define YYMAXUTOK   761
1643: 
1644: #define YYTRANSLATE(YYX)						\
1645:   ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)
1646: 
1647: /* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
1648: static const yytype_uint16 yytranslate[] =
1649: {
1650:        0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
1651:        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
1652:        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
1653:        2,     2,     2,     2,     2,   524,   525,   513,     2,     2,
1654:      518,   519,   511,   509,   522,   510,   520,   512,     2,     2,
1655:        2,     2,     2,     2,     2,     2,     2,     2,   528,   521,
1656:      505,   507,   506,   523,     2,     2,     2,     2,     2,     2,
1657:        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
1658:        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
1659:        2,   516,     2,   517,   514,     2,     2,     2,     2,     2,
1660:        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
1661:        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
1662:        2,     2,     2,   526,     2,   527,     2,     2,     2,     2,
1663:        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
1664:        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
1665:        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
1666:        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
1667:        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
1668:        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
1669:        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
1670:        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
1671:        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
1672:        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
1673:        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
1674:        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
1675:        2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
1676:        5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
1677:       15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
1678:       25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
1679:       35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
1680:       45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
1681:       55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
1682:       65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
1683:       75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
1684:       85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
1685:       95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
1686:      105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
1687:      115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
1688:      125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
1689:      135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
1690:      145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
1691:      155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
1692:      165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
1693:      175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
1694:      185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
1695:      195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
1696:      205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
1697:      215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
1698:      225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
1699:      235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
1700:      245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
1701:      255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
1702:      265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
1703:      275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
1704:      285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
1705:      295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
1706:      305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
1707:      315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
1708:      325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
1709:      335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
1710:      345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
1711:      355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
1712:      365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
1713:      375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
1714:      385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
1715:      395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
1716:      405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
1717:      415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
1718:      425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
1719:      435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
1720:      445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
1721:      455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
1722:      465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
1723:      475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
1724:      485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
1725:      495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
1726:      508,   515
1727: };
1728: 
1729: #if YYDEBUG
1730: /* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
1731:    YYRHS.  */
1732: static const yytype_uint16 yyprhs[] =
1733: {
1734:        0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
1735:       21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
1736:       41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
1737:       61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
1738:       81,    83,    85,    87,    89,    91,    93,    94,    99,   106,
1739:      111,   118,   123,   130,   135,   142,   144,   147,   151,   154,
1740:      156,   160,   163,   167,   169,   173,   176,   182,   186,   193,
1741:      198,   205,   212,   219,   225,   231,   238,   248,   253,   259,
1742:      267,   274,   279,   288,   293,   296,   301,   305,   312,   317,
1743:      320,   323,   326,   329,   331,   334,   335,   337,   340,   343,
1744:      346,   348,   352,   357,   360,   362,   363,   366,   370,   373,
1745:      377,   379,   382,   384,   386,   388,   390,   392,   394,   396,
1746:      399,   402,   404,   406,   408,   410,   412,   419,   426,   435,
1747:      442,   451,   458,   467,   474,   483,   492,   503,   512,   523,
1748:      525,   526,   536,   538,   543,   548,   556,   559,   561,   565,
1749:      568,   571,   572,   577,   581,   582,   584,   585,   588,   592,
1750:      598,   601,   604,   605,   614,   620,   621,   627,   633,   641,
1751:      644,   645,   647,   649,   651,   655,   658,   659,   661,   662,
1752:      664,   668,   670,   674,   676,   679,   681,   685,   688,   695,
1753:      704,   710,   712,   713,   715,   719,   722,   727,   733,   739,
1754:      748,   756,   758,   759,   768,   780,   791,   792,   794,   795,
1755:      797,   799,   800,   803,   808,   812,   822,   835,   837,   841,
1756:      843,   847,   851,   852,   857,   864,   866,   869,   871,   873,
1757:      874,   876,   879,   882,   884,   887,   890,   892,   895,   899,
1758:      902,   905,   908,   911,   915,   919,   923,   925,   929,   931,
1759:      932,   934,   937,   940,   946,   954,   955,   958,   961,   965,
1760:      969,   972,   975,   978,   980,   982,   983,   986,   989,   990,
1761:      993,  1003,  1016,  1028,  1029,  1032,  1034,  1036,  1038,  1040,
1762:     1042,  1044,  1048,  1049,  1051,  1054,  1056,  1058,  1061,  1064,
1763:     1068,  1070,  1072,  1075,  1078,  1080,  1083,  1087,  1093,  1097,
1764:     1100,  1106,  1108,  1110,  1112,  1113,  1119,  1127,  1133,  1136,
1765:     1140,  1142,  1144,  1147,  1150,  1151,  1155,  1160,  1165,  1166,
1766:     1170,  1173,  1174,  1178,  1180,  1182,  1184,  1186,  1188,  1190,
1767:     1192,  1194,  1196,  1198,  1202,  1206,  1208,  1211,  1214,  1217,
1768:     1220,  1223,  1226,  1227,  1231,  1235,  1239,  1240,  1242,  1245,
1769:     1247,  1250,  1253,  1256,  1259,  1263,  1268,  1270,  1274,  1276,
1770:     1278,  1280,  1282,  1286,  1288,  1291,  1292,  1294,  1297,  1298,
1771:     1300,  1304,  1305,  1308,  1309,  1313,  1317,  1319,  1325,  1329,
1772:     1331,  1335,  1337,  1340,  1342,  1347,  1353,  1359,  1366,  1370,
1773:     1378,  1383,  1395,  1397,  1401,  1404,  1407,  1410,  1411,  1415,
1774:     1417,  1419,  1422,  1425,  1428,  1431,  1433,  1434,  1436,  1439,
1775:     1446,  1451,  1458,  1463,  1470,  1479,  1481,  1483,  1485,  1487,
1776:     1490,  1492,  1495,  1497,  1500,  1502,  1504,  1506,  1508,  1512,
1777:     1516,  1520,  1524,  1526,  1529,  1532,  1534,  1538,  1540,  1542,
1778:     1544,  1548,  1550,  1552,  1553,  1555,  1557,  1559,  1565,  1574,
1779:     1582,  1588,  1597,  1605,  1610,  1615,  1617,  1621,  1623,  1625,
1780:     1629,  1631,  1635,  1637,  1639,  1642,  1646,  1655,  1667,  1677,
1781:     1685,  1686,  1690,  1694,  1696,  1698,  1702,  1703,  1705,  1709,
1782:     1711,  1712,  1714,  1715,  1717,  1718,  1720,  1724,  1726,  1728,
1783:     1730,  1732,  1736,  1738,  1740,  1741,  1744,  1747,  1748,  1751,
1784:     1752,  1754,  1755,  1757,  1759,  1761,  1765,  1769,  1771,  1773,
1785:     1777,  1781,  1785,  1789,  1793,  1797,  1802,  1806,  1809,  1811,
1786:     1813,  1815,  1817,  1821,  1823,  1825,  1829,  1831,  1833,  1837,
1787:     1841,  1845,  1847,  1850,  1855,  1860,  1863,  1867,  1873,  1879,
1788:     1881,  1883,  1887,  1888,  1900,  1912,  1923,  1936,  1938,  1941,
1789:     1947,  1952,  1957,  1962,  1967,  1975,  1981,  1986,  1994,  2001,
1790:     2011,  2021,  2026,  2028,  2030,  2032,  2034,  2036,  2038,  2040,
1791:     2046,  2048,  2050,  2054,  2056,  2059,  2062,  2065,  2069,  2071,
1792:     2075,  2083,  2085,  2088,  2089,  2092,  2093,  2097,  2101,  2106,
1793:     2111,  2116,  2121,  2125,  2128,  2130,  2132,  2133,  2135,  2137,
1794:     2138,  2141,  2143,  2149,  2151,  2152,  2155,  2158,  2159,  2161,
1795:     2162,  2166,  2172,  2174,  2178,  2183,  2187,  2189,  2191,  2192,
1796:     2195,  2198,  2199,  2202,  2205,  2207,  2209,  2211,  2212,  2215,
1797:     2220,  2226,  2231,  2234,  2238,  2241,  2244,  2247,  2250,  2252,
1798:     2255,  2259,  2260,  2262,  2263,  2269,  2271,  2276,  2283,  2286,
1799:     2288,  2289,  2294,  2295,  2297,  2299,  2302,  2305,  2308,  2310,
1800:     2312,  2315,  2318,  2320,  2322,  2324,  2326,  2328,  2330,  2334,
1801:     2338,  2339,  2341,  2345,  2347,  2350,  2352,  2354,  2356,  2358,
1802:     2360,  2363,  2368,  2373,  2379,  2381,  2383,  2386,  2387,  2390,
1803:     2391,  2393,  2397,  2399,  2400,  2402,  2405,  2409,  2412,  2417,
1804:     2420,  2424,  2427,  2428,  2430,  2433,  2434,  2439,  2445,  2447,
1805:     2450,  2453,  2454,  2456,  2460,  2462,  2465,  2469,  2473,  2477,
1806:     2481,  2485,  2489,  2491,  2496,  2506,  2516,  2520,  2521,  2524,
1807:     2527,  2528,  2534,  2538,  2539,  2541,  2543,  2547,  2553,  2557,
1808:     2559,  2562,  2564,  2568,  2574,  2576,  2579,  2583,  2588,  2594,
1809:     2599,  2605,  2610,  2617,  2623,  2628,  2634,  2640,  2646,  2649,
1810:     2654,  2656,  2658,  2659,  2661,  2666,  2672,  2677,  2678,  2681,
1811:     2684,  2687,  2689,  2691,  2693,  2695,  2696,  2701,  2704,  2706,
1812:     2709,  2712,  2717,  2720,  2727,  2730,  2732,  2736,  2741,  2742,
1813:     2745,  2746,  2749,  2750,  2752,  2756,  2760,  2763,  2764,  2767,
1814:     2772,  2774,  2776,  2778,  2779,  2782,  2786,  2792,  2799,  2802,
1815:     2806,  2808,  2814,  2820,  2826,  2830,  2834,  2838,  2843,  2844,
1816:     2846,  2848,  2850,  2852,  2854,  2857,  2862,  2864,  2866,  2868,
1817:     2870,  2873,  2877,  2878,  2880,  2882,  2884,  2886,  2888,  2891,
1818:     2894,  2897,  2900,  2903,  2905,  2909,  2910,  2912,  2914,  2916,
1819:     2918,  2924,  2927,  2929,  2931,  2933,  2935,  2940,  2942,  2945,
1820:     2948,  2950,  2954,  2958,  2961,  2963,  2964,  2970,  2973,  2979,
1821:     2982,  2984,  2988,  2992,  2993,  2995,  2997,  2999,  3001,  3003,
1822:     3005,  3007,  3009,  3011,  3013,  3015,  3017,  3019,  3021,  3023,
1823:     3025,  3027,  3029,  3031,  3033,  3035,  3037,  3039,  3041,  3043,
1824:     3045,  3047,  3049,  3051,  3053,  3055,  3057,  3059,  3061,  3063,
1825:     3065,  3067,  3069,  3071,  3075,  3079,  3083,  3087,  3091,  3095,
1826:     3099,  3100,  3102,  3106,  3110,  3116,  3119,  3122,  3126,  3130,
1827:     3134,  3138,  3142,  3146,  3150,  3154,  3158,  3162,  3166,  3170,
1828:     3174,  3178,  3182,  3185,  3188,  3192,  3196,  3199,  3202,  3206,
1829:     3210,  3216,  3221,  3228,  3232,  3238,  3243,  3250,  3255,  3262,
1830:     3268,  3276,  3280,  3283,  3288,  3292,  3295,  3299,  3303,  3307,
1831:     3311,  3316,  3320,  3325,  3329,  3334,  3340,  3347,  3354,  3362,
1832:     3369,  3377,  3384,  3392,  3396,  3401,  3406,  3413,  3415,  3421,
1833:     3426,  3430,  3436,  3438,  3442,  3445,  3448,  3452,  3456,  3460,
1834:     3464,  3468,  3472,  3476,  3480,  3484,  3488,  3492,  3496,  3500,
1835:     3504,  3508,  3511,  3514,  3520,  3527,  3534,  3542,  3544,  3547,
1836:     3549,  3551,  3553,  3556,  3559,  3564,  3568,  3570,  3572,  3574,
1837:     3576,  3578,  3580,  3582,  3584,  3586,  3588,  3591,  3596,  3599,
1838:     3602,  3606,  3610,  3615,  3619,  3626,  3634,  3644,  3652,  3660,
1839:     3666,  3668,  3670,  3672,  3678,  3685,  3692,  3697,  3702,  3707,
1840:     3712,  3719,  3725,  3731,  3737,  3742,  3749,  3754,  3756,  3764,
1841:     3774,  3780,  3781,  3787,  3792,  3793,  3795,  3796,  3799,  3800,
1842:     3802,  3806,  3810,  3813,  3816,  3817,  3824,  3826,  3827,  3831,
1843:     3832,  3836,  3840,  3844,  3845,  3847,  3852,  3855,  3858,  3861,
1844:     3864,  3867,  3871,  3874,  3877,  3881,  3882,  3887,  3891,  3893,
1845:     3899,  3903,  3905,  3909,  3911,  3914,  3918,  3920,  3924,  3926,
1846:     3929,  3931,  3932,  3934,  3936,  3938,  3940,  3942,  3944,  3946,
1847:     3948,  3950,  3952,  3954,  3956,  3958,  3960,  3962,  3964,  3966,
1848:     3968,  3970,  3972,  3977,  3979,  3984,  3986,  3991,  3993,  3996,
1849:     3998,  4001,  4003,  4006,  4008,  4012,  4014,  4018,  4020,  4023,
1850:     4025,  4029,  4031,  4034,  4036,  4037,  4039,  4043,  4045,  4049,
1851:     4053,  4055,  4059,  4063,  4064,  4066,  4068,  4070,  4072,  4074,
1852:     4076,  4078,  4080,  4082,  4084,  4086,  4088,  4090,  4092,  4094,
1853:     4099,  4103,  4106,  4110,  4111,  4115,  4119,  4122,  4125,  4127,
1854:     4128,  4131,  4134,  4138,  4141,  4143,  4145,  4149,  4151,  4153,
1855:     4159,  4161,  4164,  4169,  4172,  4173,  4175,  4176,  4178,  4182,
1856:     4184,  4186,  4189,  4193,  4199,  4207,  4215,  4217,  4218,  4219,
1857:     4222,  4223,  4226,  4230,  4234,  4238,  4244,  4252,  4260,  4261,
1858:     4264,  4266,  4267,  4269,  4270,  4272,  4276,  4278,  4281,  4285,
1859:     4288,  4290,  4295,  4298,  4300,  4301,  4305,  4307,  4311,  4313,
1860:     4316,  4321,  4324,  4325,  4327,  4331,  4333,  4337,  4339,  4342,
1861:     4344,  4348,  4350,  4352,  4355,  4357,  4359,  4362,  4364,  4366,
1862:     4369,  4377,  4380,  4386,  4390,  4394,  4396,  4398,  4400,  4402,
1863:     4404,  4406,  4408,  4410,  4412,  4414,  4416,  4418,  4420,  4422,
1864:     4425,  4428,  4432,  4436,  4437,  4439,  4441,  4443,  4449,  4453,
1865:     4454,  4456,  4458,  4460,  4462,  4464,  4466,  4471,  4479,  4486,
1866:     4489,  4490,  4492,  4494,  4496,  4498,  4512,  4529,  4531,  4534,
1867:     4535,  4537,  4538,  4540,  4541,  4544,  4545,  4547,  4548,  4555,
1868:     4564,  4571,  4580,  4587,  4596,  4600,  4603,  4605,  4606,  4613,
1869:     4620,  4622,  4624,  4626,  4628,  4630,  4632,  4635,  4637,  4639,
1870:     4641,  4643,  4645,  4650,  4657,  4661,  4664,  4669,  4673,  4679,
1871:     4681,  4682,  4684,  4686,  4687,  4689,  4691,  4693,  4695,  4697,
1872:     4699,  4701,  4703,  4705,  4707,  4709,  4711,  4713,  4715,  4717,
1873:     4719,  4721,  4723,  4725,  4727,  4729,  4731,  4733,  4735,  4737,
1874:     4739,  4741,  4743,  4745,  4747,  4749,  4751,  4753,  4755,  4757,
1875:     4759,  4761,  4765,  4767,  4769,  4771,  4773,  4775,  4777,  4780,
1876:     4782,  4784,  4787,  4791,  4795,  4799,  4803,  4805,  4809,  4813,
1877:     4816,  4820,  4824,  4826,  4828,  4830,  4834,  4840,  4842,  4844,
1878:     4846,  4848,  4852,  4855,  4860,  4867,  4874,  4875,  4877,  4879,
1879:     4881,  4882,  4885,  4888,  4893,  4900,  4906,  4911,  4918,  4920,
1880:     4922,  4924,  4926,  4928,  4930,  4931,  4933,  4937,  4939,  4940,
1881:     4948,  4952,  4954,  4957,  4961,  4964,  4965,  4968,  4969,  4972,
1882:     4977,  4983,  4992,  4995,  4999,  5005,  5007,  5008,  5011,  5012,
1883:     5015,  5019,  5023,  5027,  5031,  5033,  5035,  5037,  5040,  5044,
1884:     5047,  5050,  5053,  5056,  5060,  5065,  5069,  5071,  5073,  5075,
1885:     5077,  5079,  5081,  5082,  5084,  5088,  5090,  5094,  5097,  5107,
1886:     5120,  5132,  5145,  5160,  5164,  5169,  5174,  5175,  5183,  5194,
1887:     5204,  5207,  5211,  5212,  5217,  5219,  5221,  5223,  5225,  5227,
1888:     5229,  5231,  5233,  5235,  5237,  5239,  5241,  5243,  5245,  5247,
1889:     5249,  5251,  5253,  5255,  5257,  5259,  5261,  5263,  5265,  5267,
1890:     5269,  5271,  5273,  5275,  5277,  5279,  5281,  5283,  5285,  5287,
1891:     5289,  5291,  5293,  5295,  5297,  5299,  5301,  5303,  5305,  5307,
1892:     5309,  5311,  5313,  5315,  5317,  5319,  5321,  5323,  5325,  5327,
1893:     5329,  5331,  5333,  5335,  5337,  5339,  5341,  5343,  5345,  5347,
1894:     5349,  5351,  5353,  5355,  5357,  5359,  5361,  5363,  5365,  5367,
1895:     5369,  5371,  5373,  5375,  5377,  5379,  5381,  5383,  5385,  5387,
1896:     5389,  5391,  5393,  5395,  5397,  5399,  5401,  5403,  5405,  5407,
1897:     5409,  5411,  5413,  5415,  5417,  5419,  5421,  5423,  5425,  5427,
1898:     5429,  5431,  5433,  5435,  5437,  5439,  5441,  5443,  5445,  5447,
1899:     5449,  5451,  5453,  5455,  5457,  5459,  5461,  5463,  5465,  5467,
1900:     5469,  5471,  5473,  5475,  5477,  5479,  5481,  5483,  5485,  5487,
1901:     5489,  5491,  5493,  5495,  5497,  5499,  5501,  5503,  5505,  5507,
1902:     5509,  5511,  5513,  5515,  5517,  5519,  5521,  5523,  5525,  5527,
1903:     5529,  5531,  5533,  5535,  5537,  5539,  5541,  5543,  5545,  5547,
1904:     5549,  5551,  5553,  5555,  5557,  5559,  5561,  5563,  5565,  5567,
1905:     5569,  5571,  5573,  5575,  5577,  5579,  5581,  5583,  5585,  5587,
1906:     5589,  5591,  5593,  5595,  5597,  5599,  5601,  5603,  5605,  5607,
1907:     5609,  5611,  5613,  5615,  5617,  5619,  5621,  5623,  5625,  5627,
1908:     5629,  5631,  5633,  5635,  5637,  5639,  5641,  5643,  5645,  5647,
1909:     5649,  5651,  5653,  5655,  5657,  5659,  5661,  5663,  5665,  5667,
1910:     5669,  5671,  5673,  5675,  5677,  5679,  5681,  5683,  5685,  5687,
1911:     5689,  5691,  5693,  5695,  5697,  5699,  5701,  5703,  5705,  5707,
1912:     5709,  5711,  5713,  5715,  5717,  5719,  5721,  5723,  5725,  5727,
1913:     5729,  5731,  5733,  5735,  5737,  5739,  5741,  5743,  5745,  5747,
1914:     5749,  5751,  5753,  5755,  5757,  5759,  5761,  5763,  5765,  5767,
1915:     5769,  5771,  5773,  5775,  5777,  5779,  5781,  5783,  5785,  5787,
1916:     5789,  5791,  5793,  5795,  5797,  5799,  5801,  5803,  5805,  5807,
1917:     5809,  5811,  5813,  5815,  5817,  5819,  5821,  5823,  5825,  5827,
1918:     5829,  5831,  5833,  5835,  5837,  5839,  5841,  5843,  5845,  5847,
1919:     5849,  5851,  5853,  5855,  5857,  5859,  5861,  5863,  5865,  5867,
1920:     5869,  5871,  5873,  5875,  5877,  5879,  5881,  5883,  5885,  5887,
1921:     5889,  5891,  5893,  5895,  5897,  5899,  5901,  5903,  5905,  5907,
1922:     5909,  5911,  5913,  5915,  5917,  5919,  5921,  5923,  5925,  5927,
1923:     5929,  5931,  5933,  5935,  5937,  5939,  5941,  5943,  5945,  5947,
1924:     5949,  5951,  5953,  5955,  5957,  5959,  5961,  5963,  5965,  5967,
1925:     5969,  5971,  5973,  5975,  5977,  5979,  5981,  5983,  5985,  5987,
1926:     5989,  5991,  5993,  5995,  5997,  5999,  6001,  6003,  6005,  6007,
1927:     6009,  6011,  6013,  6015,  6017,  6019,  6021,  6023,  6025,  6027,
1928:     6029,  6031,  6033,  6035,  6037,  6039,  6041,  6043,  6045,  6047,
1929:     6049,  6051,  6053,  6055,  6057,  6059,  6061,  6063,  6065,  6067,
1930:     6069,  6071,  6073,  6075,  6077,  6079,  6081,  6083,  6085,  6087,
1931:     6089,  6091,  6093,  6095,  6097,  6099,  6101,  6103,  6105,  6107,
1932:     6109,  6111,  6113,  6115,  6117,  6119,  6121,  6123,  6125,  6127,
1933:     6129,  6131,  6133,  6135,  6137,  6139,  6141,  6143,  6145,  6147,
1934:     6149,  6151,  6153,  6155,  6157,  6159,  6161,  6163,  6165,  6167,
1935:     6169,  6171,  6173,  6175,  6177,  6179,  6181,  6183,  6185,  6187,
1936:     6189,  6191,  6193,  6195,  6197,  6199,  6201,  6203,  6205,  6207,
1937:     6209,  6211,  6213,  6215,  6217,  6219,  6221,  6223,  6225,  6227,
1938:     6229,  6231,  6233,  6235,  6237,  6239,  6241,  6243,  6245,  6247,
1939:     6249,  6251,  6253,  6255,  6257,  6259,  6261,  6263,  6265,  6267,
1940:     6269,  6271,  6273,  6275,  6277,  6279,  6281,  6283,  6285,  6287,
1941:     6289,  6291,  6293,  6295,  6297,  6299,  6301,  6303,  6305,  6307,
1942:     6309,  6311,  6313,  6315,  6317,  6319,  6321,  6323,  6325,  6327,
1943:     6329,  6331,  6333,  6335,  6337,  6339,  6341,  6343,  6345,  6347,
1944:     6349,  6351,  6353,  6355,  6357,  6359,  6361,  6363,  6365,  6367,
1945:     6369,  6371,  6373,  6375,  6377,  6379,  6381,  6383,  6385,  6387,
1946:     6389,  6391,  6393,  6395,  6397,  6399,  6401,  6403,  6405,  6407,
1947:     6409,  6411,  6413,  6415,  6417,  6419,  6421,  6423,  6425,  6427,
1948:     6429,  6431,  6433,  6435,  6437,  6439,  6441,  6443,  6445,  6447,
1949:     6449,  6451,  6453,  6455,  6457,  6459,  6461
1950: };
1951: 
1952: /* YYRHS -- A `-1'-separated list of the rules' RHS.  */
1953: static const yytype_int16 yyrhs[] =
1954: {
1955:      530,     0,    -1,   531,    -1,   531,   521,   532,    -1,   532,
1956:       -1,   938,    -1,   591,    -1,   533,    -1,   976,    -1,   977,
1957:       -1,   990,    -1,   939,    -1,   941,    -1,   668,    -1,   993,
1958:       -1,   658,    -1,   928,    -1,   582,    -1,   580,    -1,   604,
1959:       -1,   576,    -1,   544,    -1,   972,    -1,   978,    -1,   598,
1960:       -1,   652,    -1,   587,    -1,   946,    -1,   944,    -1,   945,
1961:       -1,   931,    -1,   555,    -1,   963,    -1,   579,    -1,   925,
1962:       -1,   553,    -1,   686,    -1,   600,    -1,   586,    -1,   667,
1963:       -1,   603,    -1,   967,    -1,   981,    -1,   957,    -1,   984,
1964:       -1,   991,    -1,    -1,    32,   419,   773,   541,    -1,    32,
1965:      419,   192,   152,   773,   541,    -1,    32,   203,   545,   541,
1966:       -1,    32,   203,   192,   152,   545,   541,    -1,    32,   384,
1967:      545,   541,    -1,    32,   384,   192,   152,   545,   541,    -1,
1968:       32,   470,   545,   541,    -1,    32,   470,   192,   152,   545,
1969:      541,    -1,   536,    -1,   534,   536,    -1,   389,   117,   822,
1970:       -1,   137,   117,    -1,   359,    -1,   359,   593,   594,    -1,
1971:      389,   595,    -1,   389,   176,   651,    -1,   540,    -1,   537,
1972:      522,   540,    -1,    26,   631,    -1,    26,   192,   275,   152,
1973:      631,    -1,    26,    82,   631,    -1,    26,    82,   192,   275,
1974:      152,   631,    -1,    32,   554,   546,   535,    -1,    32,   554,
1975:      546,   137,   275,   280,    -1,    32,   554,   546,   389,   275,
1976:      280,    -1,    32,   554,   546,   389,   405,   597,    -1,    32,
1977:      554,   546,   389,   619,    -1,    32,   554,   546,   357,   619,
1978:       -1,    32,   554,   546,   389,   408,   546,    -1,    32,   554,
1979:      546,    26,   176,   651,    40,   191,   607,    -1,    32,   554,
1980:      546,   534,    -1,    32,   554,   546,   137,   191,    -1,    32,
1981:      554,   546,   137,   191,   192,   152,    -1,   137,   554,   192,
1982:      152,   546,   656,    -1,   137,   554,   546,   656,    -1,    32,
1983:      554,   546,   543,   442,   786,   782,   539,    -1,    32,   554,
1984:      546,   542,    -1,    26,   621,    -1,    32,    93,   913,   605,
1985:       -1,   460,    93,   913,    -1,   137,    93,   192,   152,   913,
1986:      656,    -1,   137,    93,   913,   656,    -1,   389,   245,    -1,
1987:      389,   451,    -1,   389,   619,    -1,   357,   619,    -1,   542,
1988:       -1,   457,   822,    -1,    -1,   615,    -1,   389,   615,    -1,
1989:       26,   615,    -1,   137,   629,    -1,   538,    -1,   541,   522,
1990:      538,    -1,   294,   518,   537,   519,    -1,   389,   107,    -1,
1991:      389,    -1,    -1,   111,   913,    -1,   111,   326,   913,    -1,
1992:      111,    30,    -1,   111,   326,    30,    -1,   547,    -1,   546,
1993:      549,    -1,     3,    -1,   996,    -1,   997,    -1,   546,    -1,
1994:        5,    -1,     5,    -1,   550,    -1,   549,   550,    -1,   520,
1995:      551,    -1,   552,    -1,     3,    -1,  1000,    -1,   996,    -1,
1996:     1002,    -1,    32,   373,   913,   353,   431,   913,    -1,    32,
1997:      419,   773,   353,   431,   913,    -1,    32,   419,   192,   152,
1998:      773,   353,   431,   913,    -1,    32,   384,   545,   353,   431,
1999:      913,    -1,    32,   384,   192,   152,   545,   353,   431,   913,
2000:       -1,    32,   470,   545,   353,   431,   913,    -1,    32,   470,
2001:      192,   152,   545,   353,   431,   913,    -1,    32,   203,   545,
2002:      353,   431,   913,    -1,    32,   203,   192,   152,   545,   353,
2003:      431,   913,    -1,    32,   419,   773,   353,   554,   913,   431,
2004:      913,    -1,    32,   419,   192,   152,   773,   353,   554,   913,
2005:      431,   913,    -1,    32,   419,   773,   353,    93,   913,   431,
2006:      913,    -1,    32,   419,   192,   152,   773,   353,    93,   913,
2007:      431,   913,    -1,    82,    -1,    -1,   560,   213,   563,   220,
2008:      557,   558,   556,   564,   566,    -1,   686,    -1,   304,   567,
2009:      462,   686,    -1,   518,   571,   519,   686,    -1,   518,   571,
2010:      519,   304,   567,   462,   686,    -1,   117,   463,    -1,   545,
2011:       -1,   545,    40,   546,    -1,    59,   266,    -1,    59,   321,
2012:       -1,    -1,   518,   574,   519,   779,    -1,   290,    93,   913,
2013:       -1,    -1,   698,    -1,    -1,   546,   894,    -1,   575,   507,
2014:      822,    -1,   518,   568,   519,   507,   822,    -1,   295,   355,
2015:       -1,   295,   193,    -1,    -1,   290,    91,   559,   133,   454,
2016:      389,   573,   779,    -1,   290,    91,   559,   133,   276,    -1,
2017:       -1,   546,   569,   570,   714,   715,    -1,   833,   569,   570,
2018:      714,   715,    -1,   518,   822,   519,   569,   570,   714,   715,
2019:       -1,   361,   900,    -1,    -1,   456,    -1,   418,    -1,   575,
2020:       -1,   568,   522,   575,    -1,    80,   920,    -1,    -1,   920,
2021:       -1,    -1,   561,    -1,   571,   522,   561,    -1,   562,    -1,
2022:      572,   522,   562,    -1,   572,    -1,   572,   522,    -1,   565,
2023:       -1,   574,   522,   565,    -1,   546,   894,    -1,   100,   442,
2024:      545,    40,   144,   687,    -1,   100,   442,   545,    40,   144,
2025:      518,   577,   519,    -1,   100,   442,   545,    40,   786,    -1,
2026:      578,    -1,    -1,   548,    -1,   578,   522,   548,    -1,   323,
2027:      546,    -1,   323,   546,   507,   962,    -1,   323,   546,   518,
2028:      872,   519,    -1,   100,   650,   384,   545,   581,    -1,   100,
2029:      650,   384,   192,   275,   152,   545,   581,    -1,   100,   295,
2030:      355,   650,   384,   545,   581,    -1,   592,    -1,    -1,   100,
2031:      584,   380,   583,   585,   518,   685,   519,    -1,   100,   584,
2032:      380,   192,   275,   152,   583,   585,   518,   685,   519,    -1,
2033:      100,   295,   355,   584,   380,   583,   585,   518,   685,   519,
2034:       -1,    -1,   546,    -1,    -1,   425,    -1,   314,    -1,    -1,
2035:      199,     3,    -1,   560,   454,   157,   639,    -1,   151,   913,
2036:      590,    -1,   100,   650,   419,   995,    40,   151,   913,   590,
2037:      994,    -1,   100,   650,   419,   192,   275,   152,   995,    40,
2038:      151,   913,   590,   994,    -1,   822,    -1,   923,    13,   822,
2039:       -1,   588,    -1,   589,   522,   588,    -1,   518,   589,   519,
2040:       -1,    -1,    32,   384,   545,   592,    -1,    32,   384,   192,
2041:      152,   545,   592,    -1,   595,    -1,   592,   595,    -1,   480,
2042:       -1,   504,    -1,    -1,     4,    -1,   509,     4,    -1,   510,
2043:        4,    -1,   597,    -1,    40,   789,    -1,    60,   594,    -1,
2044:      106,    -1,   273,   106,    -1,   202,   596,   594,    -1,   251,
2045:      594,    -1,   261,   594,    -1,   273,   251,    -1,   273,   261,
2046:       -1,   305,    59,   920,    -1,   384,   266,   920,    -1,   403,
2047:      593,   594,    -1,   359,    -1,   359,   593,   594,    -1,    59,
2048:       -1,    -1,   916,    -1,   509,   916,    -1,   510,   916,    -1,
2049:      137,   584,   380,   546,   599,    -1,   137,   584,   380,   192,
2050:      152,   546,   599,    -1,    -1,   172,     3,    -1,    22,   601,
2051:       -1,    52,   601,   602,    -1,   403,   601,   602,    -1,    86,
2052:      601,    -1,   143,   601,    -1,   366,   601,    -1,   483,    -1,
2053:      433,    -1,    -1,   341,   291,    -1,   341,   485,    -1,    -1,
2054:      455,   545,    -1,   100,   650,   419,   545,   518,   637,   519,
2055:      626,   618,    -1,   100,   650,   419,   192,   275,   152,   545,
2056:      518,   637,   519,   626,   618,    -1,   100,   295,   355,   650,
2057:      419,   545,   518,   637,   519,   626,   618,    -1,    -1,   605,
2058:      630,    -1,   645,    -1,  1002,    -1,   864,    -1,   594,    -1,
2059:      548,    -1,   274,    -1,   518,   592,   519,    -1,    -1,   548,
2060:       -1,   273,    25,    -1,   360,    -1,    63,    -1,   389,   280,
2061:       -1,   389,   117,    -1,    93,   913,   611,    -1,   611,    -1,
2062:      625,    -1,    80,   920,    -1,   275,   280,    -1,   280,    -1,
2063:      448,   636,    -1,   329,   227,   636,    -1,    74,   518,   822,
2064:      519,   620,    -1,   457,    88,   913,    -1,   117,   823,    -1,
2065:      347,   545,   639,   648,   617,    -1,   472,    -1,   409,    -1,
2066:      612,    -1,    -1,   176,   651,    40,   191,   607,    -1,   176,
2067:      651,    40,   518,   822,   519,   613,    -1,    40,   518,   822,
2068:      519,   613,    -1,   629,   608,    -1,   290,   454,   609,    -1,
2069:      616,    -1,   641,    -1,   616,   641,    -1,   641,   616,    -1,
2070:       -1,   290,    86,   137,    -1,   290,    86,   122,   369,    -1,
2071:      290,    86,   328,   369,    -1,    -1,   518,   623,   519,    -1,
2072:      273,   205,    -1,    -1,    93,   913,   646,    -1,   646,    -1,
2073:       85,    -1,    94,    -1,   118,    -1,   191,    -1,   204,    -1,
2074:      405,    -1,   408,    -1,    30,    -1,   642,    -1,   623,   522,
2075:      642,    -1,   457,   203,   633,    -1,   119,    -1,   275,   119,
2076:       -1,   207,   120,    -1,   207,   195,    -1,   480,   619,    -1,
2077:      480,   288,    -1,   482,   288,    -1,    -1,   518,   632,   519,
2078:       -1,   628,   201,   622,    -1,   628,   149,   622,    -1,    -1,
2079:      552,    -1,   275,   119,    -1,   119,    -1,   207,   195,    -1,
2080:      207,   120,    -1,   275,   459,    -1,   273,   205,    -1,   546,
2081:      786,   640,    -1,   546,   785,   614,   640,    -1,   635,    -1,
2082:      632,   522,   635,    -1,   546,    -1,   631,    -1,   649,    -1,
2083:      621,    -1,   552,   507,   606,    -1,   552,    -1,   480,   627,
2084:       -1,    -1,   647,    -1,   647,   522,    -1,    -1,   546,    -1,
2085:      518,   643,   519,    -1,    -1,   640,   610,    -1,    -1,   290,
2086:      122,   609,    -1,   552,   507,   606,    -1,   552,    -1,   552,
2087:      520,   552,   507,   606,    -1,   552,   520,   552,    -1,   638,
2088:       -1,   643,   522,   638,    -1,   643,    -1,   643,   522,    -1,
2089:      786,    -1,   917,   921,   513,   442,    -1,   390,   917,   921,
2090:      513,   442,    -1,    74,   518,   822,   519,   605,    -1,   448,
2091:      518,   644,   519,   636,   605,    -1,   448,   624,   605,    -1,
2092:      329,   227,   518,   644,   519,   636,   605,    -1,   329,   227,
2093:      624,   605,    -1,   169,   227,   518,   644,   519,   347,   545,
2094:      639,   648,   617,   605,    -1,   634,    -1,   647,   522,   634,
2095:       -1,   249,   173,    -1,   249,   309,    -1,   249,   395,    -1,
2096:       -1,   237,   545,   628,    -1,   425,    -1,   423,    -1,   241,
2097:      425,    -1,   241,   423,    -1,   178,   425,    -1,   178,   423,
2098:       -1,   451,    -1,    -1,    33,    -1,    59,   117,    -1,   137,
2099:      653,   192,   152,   655,   656,    -1,   137,   653,   655,   656,
2100:       -1,   137,   654,   192,   152,   910,   656,    -1,   137,   654,
2101:      910,   656,    -1,   137,   657,   913,   290,   920,   656,    -1,
2102:      137,   657,   192,   152,   913,   290,   920,   656,    -1,   419,
2103:       -1,   384,    -1,   174,    -1,   246,    -1,   246,   419,    -1,
2104:      470,    -1,   250,   470,    -1,   203,    -1,   169,   419,    -1,
2105:       81,    -1,    97,    -1,   373,    -1,   405,    -1,   426,   377,
2106:      308,    -1,   426,   377,   129,    -1,   426,   377,   424,    -1,
2107:      426,   377,    90,    -1,   442,    -1,    24,   252,    -1,   146,
2108:      436,    -1,   156,    -1,   169,   107,   484,    -1,   335,    -1,
2109:      387,    -1,   920,    -1,   655,   522,   920,    -1,    63,    -1,
2110:      360,    -1,    -1,   320,    -1,   370,    -1,   436,    -1,   100,
2111:      650,   665,   545,   662,    -1,   100,   650,   665,   192,   275,
2112:      152,   545,   662,    -1,   100,   295,   355,   650,   665,   545,
2113:      662,    -1,   100,   650,   665,   545,   664,    -1,   100,   650,
2114:      665,   192,   275,   152,   545,   664,    -1,   100,   295,   355,
2115:      650,   665,   545,   664,    -1,   666,    40,   419,   688,    -1,
2116:      666,    40,   419,   687,    -1,   660,    -1,   661,   522,   660,
2117:       -1,   659,    -1,   661,    -1,   666,    40,   822,    -1,   663,
2118:       -1,   664,   522,   663,    -1,   174,    -1,   246,    -1,   518,
2119:      519,    -1,   518,   872,   519,    -1,   560,   454,   973,   389,
2120:      573,   753,   974,   566,    -1,    98,   681,   545,   639,   679,
2121:      670,   675,   684,   671,   593,   676,    -1,    98,   518,   686,
2122:      519,   431,   675,   684,   593,   676,    -1,    98,   172,   108,
2123:      546,   431,   546,   669,    -1,    -1,   518,   373,   519,    -1,
2124:      518,   107,   519,    -1,   172,    -1,   431,    -1,   673,   124,
2125:      548,    -1,    -1,   683,    -1,   672,   522,   683,    -1,   457,
2126:       -1,    -1,    40,    -1,    -1,   334,    -1,    -1,   680,    -1,
2127:      518,   685,   519,    -1,   954,    -1,   594,    -1,   828,    -1,
2128:      511,    -1,   518,   672,   519,    -1,   829,    -1,   830,    -1,
2129:       -1,   552,   677,    -1,   480,   288,    -1,    -1,   680,   682,
2130:       -1,    -1,    55,    -1,    -1,    55,    -1,   288,    -1,   171,
2131:       -1,   123,   674,   548,    -1,   280,   674,   548,    -1,   102,
2132:       -1,   187,    -1,   339,   674,   548,    -1,   145,   674,   548,
2133:       -1,   168,   339,   643,    -1,   168,   339,   511,    -1,   310,
2134:       59,   643,    -1,   310,    59,   511,    -1,   168,   275,   280,
2135:      643,    -1,   168,   280,   643,    -1,   141,   548,    -1,   954,
2136:       -1,   548,    -1,   406,    -1,   407,    -1,     3,   520,   546,
2137:       -1,     3,    -1,   678,    -1,   685,   522,   678,    -1,   688,
2138:       -1,   687,    -1,   518,   688,   519,    -1,   518,   687,   519,
2139:       -1,   518,   984,   519,    -1,   691,    -1,   689,   711,    -1,
2140:      689,   710,   744,   717,    -1,   689,   710,   716,   745,    -1,
2141:      698,   689,    -1,   698,   689,   711,    -1,   698,   689,   710,
2142:      744,   717,    -1,   698,   689,   710,   716,   745,    -1,   691,
2143:       -1,   687,    -1,   382,   708,   899,    -1,    -1,   382,   708,
2144:      899,   702,   753,   779,   733,   742,   840,   743,   721,    -1,
2145:      382,   707,   901,   702,   753,   779,   733,   742,   840,   743,
2146:      721,    -1,   172,   754,   690,   702,   779,   733,   742,   840,
2147:      743,   721,    -1,   172,   754,   382,   707,   901,   702,   779,
2148:      733,   742,   840,   743,   721,    -1,   752,    -1,   419,   773,
2149:       -1,   689,   447,   705,   706,   689,    -1,   689,   447,   705,
2150:      689,    -1,   689,   218,   705,   689,    -1,   689,   147,   705,
2151:      689,    -1,   693,   756,   457,   901,    -1,   693,   756,   457,
2152:      901,   181,    59,   912,    -1,   693,   756,   181,    59,   912,
2153:       -1,   693,   756,   290,   697,    -1,   693,   756,   290,   697,
2154:      181,    59,   912,    -1,   693,   756,   290,   697,   457,   901,
2155:       -1,   693,   756,   290,   697,   457,   901,   181,    59,   912,
2156:       -1,   694,   756,   290,   901,   220,   266,   913,   692,   912,
2157:       -1,   694,   756,   290,   901,    -1,   462,    -1,   463,    -1,
2158:      315,    -1,   317,    -1,   452,    -1,   316,    -1,   823,    -1,
2159:      823,   199,   518,   688,   519,    -1,   759,    -1,   695,    -1,
2160:      696,   522,   695,    -1,   696,    -1,   696,   522,    -1,   480,
2161:      699,    -1,   504,   699,    -1,   480,   345,   699,    -1,   700,
2162:       -1,   699,   522,   700,    -1,   913,   922,    40,   701,   518,
2163:      927,   519,    -1,   250,    -1,   275,   250,    -1,    -1,   220,
2164:      703,    -1,    -1,   425,   704,   545,    -1,   423,   704,   545,
2165:       -1,   241,   425,   704,   545,    -1,   241,   423,   704,   545,
2166:       -1,   178,   425,   704,   545,    -1,   178,   423,   704,   545,
2167:       -1,   451,   704,   545,    -1,   419,   545,    -1,   545,    -1,
2168:      419,    -1,    -1,    30,    -1,   132,    -1,    -1,    59,   266,
2169:       -1,   132,    -1,   132,   290,   518,   870,   519,    -1,    30,
2170:       -1,    -1,   193,   282,    -1,   358,   282,    -1,    -1,   711,
2171:       -1,    -1,   296,    59,   712,    -1,   296,    59,    30,   714,
2172:      715,    -1,   713,    -1,   712,   522,   713,    -1,   822,   457,
2173:      864,   715,    -1,   822,   714,   715,    -1,    41,    -1,   126,
2174:       -1,    -1,   503,   164,    -1,   503,   231,    -1,    -1,   718,
2175:      719,    -1,   719,   718,    -1,   718,    -1,   719,    -1,   716,
2176:       -1,    -1,   238,   727,    -1,   238,   727,   522,   728,    -1,
2177:      162,   732,   729,   731,   291,    -1,   162,   732,   731,   291,
2178:       -1,   287,   728,    -1,   287,   729,   731,    -1,     4,   513,
2179:       -1,     9,   513,    -1,     4,   313,    -1,     9,   313,    -1,
2180:        9,    -1,     9,   369,    -1,   457,   371,   723,    -1,    -1,
2181:      546,    -1,    -1,   722,   518,   720,   519,   726,    -1,   720,
2182:       -1,   720,   518,   546,   519,    -1,   720,   518,   546,   522,
2183:        9,   519,    -1,   421,   723,    -1,   724,    -1,    -1,   354,
2184:      518,     9,   519,    -1,    -1,   822,    -1,    30,    -1,   822,
2185:      513,    -1,     4,   313,    -1,     9,   313,    -1,   822,    -1,
2186:      824,    -1,   509,   730,    -1,   510,   730,    -1,   916,    -1,
2187:        4,    -1,   368,    -1,   369,    -1,   164,    -1,   272,    -1,
2188:      181,    59,   735,    -1,   181,    59,    30,    -1,    -1,   736,
2189:       -1,   734,   522,   736,    -1,   734,    -1,   734,   522,    -1,
2190:      822,    -1,   737,    -1,   739,    -1,   738,    -1,   740,    -1,
2191:      518,   519,    -1,   367,   518,   870,   519,    -1,   103,   518,
2192:      870,   519,    -1,   182,   391,   518,   735,   519,    -1,   182,
2193:       -1,   183,    -1,   186,   822,    -1,    -1,   336,   822,    -1,
2194:       -1,   746,    -1,   167,   341,   291,    -1,   744,    -1,    -1,
2195:      747,    -1,   746,   747,    -1,   748,   749,   750,    -1,   167,
2196:      454,    -1,   167,   273,   227,   454,    -1,   167,   392,    -1,
2197:      167,   227,   392,    -1,   285,   909,    -1,    -1,   279,    -1,
2198:      396,   244,    -1,    -1,   463,   518,   870,   519,    -1,   751,
2199:      522,   518,   870,   519,    -1,   751,    -1,   751,   522,    -1,
2200:      172,   755,    -1,    -1,   756,    -1,   754,   522,   756,    -1,
2201:      754,    -1,   754,   522,    -1,   773,   768,   725,    -1,   774,
2202:      769,   725,    -1,   752,   767,   725,    -1,   232,   774,   769,
2203:       -1,   687,   768,   725,    -1,   232,   687,   768,    -1,   766,
2204:       -1,   518,   766,   519,   767,    -1,   756,   315,   518,   901,
2205:      167,   762,   757,   519,   768,    -1,   756,   452,   758,   518,
2206:      763,   167,   765,   519,   768,    -1,   181,    59,   911,    -1,
2207:       -1,   200,   282,    -1,   148,   282,    -1,    -1,   823,   199,
2208:      518,   901,   519,    -1,   823,   199,   547,    -1,    -1,   825,
2209:       -1,   827,    -1,   518,   868,   519,    -1,   760,   199,   518,
2210:      901,   519,    -1,   760,   199,   547,    -1,   761,    -1,   762,
2211:      761,    -1,   547,    -1,   518,   911,   519,    -1,   763,   199,
2212:      518,   901,   519,    -1,   764,    -1,   765,   764,    -1,   518,
2213:      766,   519,    -1,   756,   101,   225,   756,    -1,   756,   770,
2214:      225,   756,   772,    -1,   756,   225,   756,   772,    -1,   756,
2215:      269,   770,   225,   756,    -1,   756,   269,   225,   756,    -1,
2216:      756,    42,   770,   225,   756,   772,    -1,   756,    42,   225,
2217:      756,   772,    -1,   756,   322,   225,   756,    -1,   756,    37,
2218:      225,   756,   772,    -1,   756,   383,   225,   756,   772,    -1,
2219:       40,   547,   518,   911,   519,    -1,    40,   547,    -1,   546,
2220:      518,   911,   519,    -1,   546,    -1,   767,    -1,    -1,   767,
2221:       -1,    40,   518,   780,   519,    -1,    40,   547,   518,   780,
2222:      519,    -1,   546,   518,   780,   519,    -1,    -1,   173,   771,
2223:       -1,   235,   771,    -1,   364,   771,    -1,   383,    -1,    37,
2224:       -1,   209,    -1,   300,    -1,    -1,   457,   518,   911,   519,
2225:       -1,   290,   822,    -1,   545,    -1,   545,   511,    -1,   291,
2226:      545,    -1,   291,   518,   545,   519,    -1,   833,   778,    -1,
2227:      369,   172,   518,   776,   519,   778,    -1,   833,   777,    -1,
2228:      775,    -1,   776,   522,   775,    -1,    40,   518,   780,   519,
2229:       -1,    -1,   504,   297,    -1,    -1,   477,   822,    -1,    -1,
2230:      781,    -1,   780,   522,   781,    -1,   547,   786,   782,    -1,
2231:       80,   920,    -1,    -1,   546,   786,    -1,   783,   522,   546,
2232:      786,    -1,   368,    -1,   412,    -1,   786,    -1,    -1,   789,
2233:      788,    -1,   390,   789,   788,    -1,   789,    39,   516,   916,
2234:      517,    -1,   390,   789,    39,   516,   916,   517,    -1,   789,
2235:       39,    -1,   390,   789,    39,    -1,   787,    -1,   784,   518,
2236:      783,   519,   788,    -1,   247,   518,   874,   519,   788,    -1,
2237:      447,   518,   783,   519,   788,    -1,     3,   520,     3,    -1,
2238:      787,   520,     3,    -1,   788,   516,   517,    -1,   788,   516,
2239:      916,   517,    -1,    -1,   791,    -1,   793,    -1,   795,    -1,
2240:      799,    -1,   805,    -1,   806,   821,    -1,   806,   518,   916,
2241:      519,    -1,   793,    -1,   796,    -1,   800,    -1,   805,    -1,
2242:      919,   792,    -1,   518,   871,   519,    -1,    -1,   216,    -1,
2243:      217,    -1,   397,    -1,    54,    -1,   342,    -1,   165,   794,
2244:       -1,   136,   325,    -1,   115,   792,    -1,   112,   792,    -1,
2245:      283,   792,    -1,    57,    -1,   518,   916,   519,    -1,    -1,
2246:      797,    -1,   798,    -1,   797,    -1,   798,    -1,    56,   804,
2247:      518,   870,   519,    -1,    56,   804,    -1,   801,    -1,   802,
2248:       -1,   801,    -1,   802,    -1,   803,   518,   916,   519,    -1,
2249:      803,    -1,    72,   804,    -1,    71,   804,    -1,   464,    -1,
2250:      268,    72,   804,    -1,   268,    71,   804,    -1,   270,   804,
2251:       -1,   467,    -1,    -1,   430,   518,   916,   519,   807,    -1,
2252:      430,   807,    -1,   429,   518,   916,   519,   807,    -1,   429,
2253:      807,    -1,   219,    -1,   504,   429,   501,    -1,   482,   429,
2254:      501,    -1,    -1,   498,    -1,   499,    -1,   263,    -1,   264,
2255:       -1,   109,    -1,   110,    -1,   189,    -1,   190,    -1,   259,
2256:       -1,   260,    -1,   378,    -1,   379,    -1,   257,    -1,   258,
2257:       -1,   253,    -1,   254,    -1,   474,    -1,   475,    -1,   337,
2258:       -1,   338,    -1,   113,    -1,   114,    -1,    69,    -1,    68,
2259:       -1,   256,    -1,   255,    -1,   808,    -1,   809,    -1,   810,
2260:       -1,   811,    -1,   812,    -1,   813,    -1,   814,    -1,   815,
2261:       -1,   816,    -1,   817,    -1,   818,    -1,   819,    -1,   820,
2262:       -1,   808,   431,   809,    -1,   810,   431,   811,    -1,   810,
2263:      431,   812,    -1,   810,   431,   813,    -1,   811,   431,   812,
2264:       -1,   811,   431,   813,    -1,   812,   431,   813,    -1,    -1,
2265:      824,    -1,   822,    11,   786,    -1,   822,    80,   920,    -1,
2266:      822,    46,   429,   501,   822,    -1,   509,   822,    -1,   510,
2267:      822,    -1,   822,   509,   822,    -1,   822,   510,   822,    -1,
2268:      822,   511,   822,    -1,   822,   512,   822,    -1,   822,    15,
2269:      822,    -1,   822,   513,   822,    -1,   822,   514,   822,    -1,
2270:      822,    16,   822,    -1,   822,   505,   822,    -1,   822,   506,
2271:      822,    -1,   822,   507,   822,    -1,   822,    19,   822,    -1,
2272:      822,    20,   822,    -1,   822,    21,   822,    -1,   822,   863,
2273:      822,    -1,   863,   822,    -1,   822,   863,    -1,   822,    36,
2274:      822,    -1,   822,   295,   822,    -1,   275,   822,    -1,   502,
2275:      822,    -1,   822,   177,   822,    -1,   822,   237,   822,    -1,
2276:      822,   237,   822,   145,   822,    -1,   822,   502,   237,   822,
2277:       -1,   822,   502,   237,   822,   145,   822,    -1,   822,   194,
2278:      822,    -1,   822,   194,   822,   145,   822,    -1,   822,   502,
2279:      194,   822,    -1,   822,   502,   194,   822,   145,   822,    -1,
2280:      822,   394,   431,   822,    -1,   822,   394,   431,   822,   145,
2281:      822,    -1,   822,   502,   394,   431,   822,    -1,   822,   502,
2282:      394,   431,   822,   145,   822,    -1,   822,   222,   280,    -1,
2283:      822,   223,    -1,   822,   222,   275,   280,    -1,   822,   275,
2284:      280,    -1,   822,   278,    -1,   822,    17,   822,    -1,   822,
2285:       18,   822,    -1,   852,   302,   852,    -1,   822,   222,   438,
2286:       -1,   822,   222,   275,   438,    -1,   822,   222,   160,    -1,
2287:      822,   222,   275,   160,    -1,   822,   222,   449,    -1,   822,
2288:      222,   275,   449,    -1,   822,   222,   132,   172,   822,    -1,
2289:      822,   222,   275,   132,   172,   822,    -1,   822,   222,   285,
2290:      518,   874,   519,    -1,   822,   222,   275,   285,   518,   874,
2291:      519,    -1,   822,    53,   898,   823,    36,   822,    -1,   822,
2292:      502,    53,   898,   823,    36,   822,    -1,   822,    53,   416,
2293:      823,    36,   822,    -1,   822,   502,    53,   416,   823,    36,
2294:      822,    -1,   822,   199,   884,    -1,   822,   502,   199,   884,
2295:       -1,   822,   865,   860,   687,    -1,   822,   865,   860,   518,
2296:      822,   519,    -1,   117,    -1,   511,    83,   518,   822,   519,
2297:       -1,    83,   518,   822,   519,    -1,   511,   904,   908,    -1,
2298:      546,   520,   511,   904,   908,    -1,   824,    -1,   823,    11,
2299:      786,    -1,   509,   823,    -1,   510,   823,    -1,   823,   509,
2300:      823,    -1,   823,   510,   823,    -1,   823,   511,   823,    -1,
2301:      823,   512,   823,    -1,   823,    15,   823,    -1,   823,   513,
2302:      823,    -1,   823,   514,   823,    -1,   823,    16,   823,    -1,
2303:      823,   505,   823,    -1,   823,   506,   823,    -1,   823,   507,
2304:      823,    -1,   823,    19,   823,    -1,   823,    20,   823,    -1,
2305:      823,    21,   823,    -1,   823,   863,   823,    -1,   863,   823,
2306:       -1,   823,   863,    -1,   823,   222,   132,   172,   823,    -1,
2307:      823,   222,   275,   132,   172,   823,    -1,   823,   222,   285,
2308:      518,   874,   519,    -1,   823,   222,   275,   285,   518,   874,
2309:      519,    -1,   825,    -1,   826,   897,    -1,   892,    -1,   915,
2310:       -1,   687,    -1,   687,   549,    -1,   152,   687,    -1,   741,
2311:      518,   870,   519,    -1,   518,   822,   519,    -1,   827,    -1,
2312:      852,    -1,   523,    -1,    10,    -1,   829,    -1,   830,    -1,
2313:      832,    -1,   885,    -1,   828,    -1,   836,    -1,    39,   687,
2314:       -1,    39,   516,   871,   517,    -1,   524,     9,    -1,   525,
2315:      552,    -1,   516,   871,   517,    -1,   526,   855,   527,    -1,
2316:      247,   526,   859,   527,    -1,   914,   518,   519,    -1,   914,
2317:      518,   872,   710,   709,   519,    -1,   914,   518,   466,   873,
2318:      710,   709,   519,    -1,   914,   518,   872,   522,   466,   873,
2319:      710,   709,   519,    -1,   914,   518,    30,   872,   710,   709,
2320:      519,    -1,   914,   518,   132,   872,   710,   709,   519,    -1,
2321:      831,   837,   838,   839,   843,    -1,   834,    -1,   831,    -1,
2322:      834,    -1,    81,   167,   518,   822,   519,    -1,    66,   518,
2323:      822,    40,   786,   519,    -1,   441,   518,   822,    40,   786,
2324:      519,    -1,   159,   518,   875,   519,    -1,   303,   518,   877,
2325:      519,    -1,   321,   518,   879,   519,    -1,   414,   518,   880,
2326:      519,    -1,   435,   518,   822,    40,   786,   519,    -1,   437,
2327:      518,    58,   883,   519,    -1,   437,   518,   233,   883,   519,
2328:       -1,   437,   518,   432,   883,   519,    -1,   437,   518,   883,
2329:      519,    -1,   281,   518,   822,   522,   822,   519,    -1,    79,
2330:      518,   870,   519,    -1,   890,    -1,   516,   822,   167,   835,
2331:      199,   822,   517,    -1,   516,   822,   167,   835,   199,   824,
2332:      192,   822,   517,    -1,   481,   181,   518,   711,   519,    -1,
2333:       -1,   163,   518,   477,   822,   519,    -1,   163,   518,   822,
2334:      519,    -1,    -1,   155,    -1,    -1,   479,   841,    -1,    -1,
2335:      842,    -1,   841,   522,   842,    -1,   546,    40,   844,    -1,
2336:      301,   844,    -1,   301,   546,    -1,    -1,   518,   845,   846,
2337:      710,   847,   519,    -1,   546,    -1,    -1,   310,    59,   869,
2338:       -1,    -1,   340,   848,   850,    -1,   369,   848,   850,    -1,
2339:      184,   848,   850,    -1,    -1,   849,    -1,    53,   849,    36,
2340:      849,    -1,   444,   324,    -1,   444,   166,    -1,   104,   368,
2341:       -1,   822,   324,    -1,   822,   166,    -1,   148,   104,   368,
2342:       -1,   148,   181,    -1,   148,   428,    -1,   148,   273,   298,
2343:       -1,    -1,   368,   518,   870,   519,    -1,   368,   518,   519,
2344:       -1,   851,    -1,   518,   869,   522,   822,   519,    -1,   547,
2345:      528,   822,    -1,   853,    -1,   854,   522,   853,    -1,   854,
2346:       -1,   854,   522,    -1,   822,   528,   822,    -1,   856,    -1,
2347:      857,   522,   856,    -1,   857,    -1,   857,   522,    -1,   858,
2348:       -1,    -1,    38,    -1,   399,    -1,    30,    -1,     8,    -1,
2349:      862,    -1,   509,    -1,   510,    -1,   511,    -1,   512,    -1,
2350:       15,    -1,   513,    -1,   514,    -1,    16,    -1,   505,    -1,
2351:      506,    -1,   507,    -1,    19,    -1,    20,    -1,    21,    -1,
2352:        8,    -1,   292,   518,   866,   519,    -1,   861,    -1,   292,
2353:      518,   866,   519,    -1,   861,    -1,   292,   518,   866,   519,
2354:       -1,   237,    -1,   502,   237,    -1,   177,    -1,   502,   177,
2355:       -1,   194,    -1,   502,   194,    -1,   861,    -1,   546,   520,
2356:      866,    -1,   824,    -1,   867,   522,   824,    -1,   867,    -1,
2357:      867,   522,    -1,   822,    -1,   869,   522,   822,    -1,   869,
2358:       -1,   869,   522,    -1,   870,    -1,    -1,   873,    -1,   872,
2359:      522,   873,    -1,   822,    -1,   923,    13,   822,    -1,   923,
2360:       14,   822,    -1,   786,    -1,   874,   522,   786,    -1,   876,
2361:      172,   822,    -1,    -1,     3,    -1,   808,    -1,   809,    -1,
2362:      810,    -1,   811,    -1,   812,    -1,   813,    -1,   814,    -1,
2363:      815,    -1,   816,    -1,   817,    -1,   818,    -1,   819,    -1,
2364:      820,    -1,   548,    -1,   822,   878,   881,   882,    -1,   822,
2365:      878,   881,    -1,   318,   822,    -1,   823,   199,   823,    -1,
2366:       -1,   822,   881,   882,    -1,   822,   882,   881,    -1,   822,
2367:      881,    -1,   822,   882,    -1,   869,    -1,    -1,   172,   822,
2368:       -1,   167,   822,    -1,   822,   172,   870,    -1,   172,   870,
2369:       -1,   870,    -1,   687,    -1,   518,   870,   519,    -1,   892,
2370:       -1,   827,    -1,    65,   889,   886,   888,   143,    -1,   887,
2371:       -1,   886,   887,    -1,   476,   822,   427,   822,    -1,   139,
2372:      822,    -1,    -1,   822,    -1,    -1,   891,    -1,   890,   522,
2373:      891,    -1,   546,    -1,   546,    -1,   546,   549,    -1,   516,
2374:      822,   517,    -1,   516,   893,   528,   893,   517,    -1,   516,
2375:      893,   528,   893,   528,   893,   517,    -1,   516,   893,   528,
2376:      510,   528,   893,   517,    -1,   822,    -1,    -1,    -1,   894,
2377:      550,    -1,    -1,   518,   519,    -1,   518,   872,   519,    -1,
2378:      520,   551,   895,    -1,   516,   822,   517,    -1,   516,   893,
2379:      528,   893,   517,    -1,   516,   893,   528,   893,   528,   893,
2380:      517,    -1,   516,   893,   528,   510,   528,   893,   517,    -1,
2381:       -1,   897,   896,    -1,    45,    -1,    -1,   901,    -1,    -1,
2382:      902,    -1,   900,   522,   902,    -1,   900,    -1,   900,   522,
2383:       -1,   822,    40,   924,    -1,   822,     3,    -1,   822,    -1,
2384:      148,   518,   911,   519,    -1,   148,   546,    -1,   903,    -1,
2385:       -1,   822,    40,   546,    -1,   905,    -1,   906,   522,   905,
2386:       -1,   906,    -1,   906,   522,    -1,   355,   518,   907,   519,
2387:       -1,   355,   905,    -1,    -1,   545,    -1,   909,   522,   545,
2388:       -1,   913,    -1,   910,   522,   913,    -1,   910,    -1,   910,
2389:      522,    -1,   911,    -1,   518,   911,   519,    -1,   547,    -1,
2390:      918,    -1,   546,   549,    -1,   916,    -1,     4,    -1,   548,
2391:      894,    -1,     6,    -1,     7,    -1,   914,   548,    -1,   914,
2392:      518,   872,   710,   709,   519,   548,    -1,   790,   548,    -1,
2393:      806,   518,   822,   519,   821,    -1,   806,   916,   821,    -1,
2394:      806,   548,   821,    -1,   438,    -1,   160,    -1,   280,    -1,
2395:        9,    -1,     3,    -1,   996,    -1,  1001,    -1,     3,    -1,
2396:      996,    -1,   998,    -1,     3,    -1,   996,    -1,   999,    -1,
2397:      546,    -1,   546,   921,    -1,   520,   551,    -1,   921,   520,
2398:      551,    -1,   518,   911,   519,    -1,    -1,   917,    -1,   552,
2399:       -1,     5,    -1,   326,   913,   926,    40,   927,    -1,   518,
2400:      874,   519,    -1,    -1,   686,    -1,   555,    -1,   667,    -1,
2401:      668,    -1,   972,    -1,   984,    -1,   100,   373,   545,   929,
2402:       -1,   100,   373,   192,   275,   152,   545,   929,    -1,   100,
2403:      295,   355,   373,   545,   929,    -1,   929,   930,    -1,    -1,
2404:      604,    -1,   931,    -1,   580,    -1,   991,    -1,   100,   937,
2405:      203,   934,   935,   290,   545,   933,   518,   574,   519,   936,
2406:      779,    -1,   100,   937,   203,   934,   192,   275,   152,   633,
2407:      290,   545,   933,   518,   574,   519,   936,   779,    -1,   546,
2408:       -1,   457,   932,    -1,    -1,    89,    -1,    -1,   633,    -1,
2409:       -1,   480,   619,    -1,    -1,   448,    -1,    -1,    32,   419,
2410:      773,   389,   373,   913,    -1,    32,   419,   192,   152,   773,
2411:      389,   373,   913,    -1,    32,   384,   545,   389,   373,   913,
2412:       -1,    32,   384,   192,   152,   545,   389,   373,   913,    -1,
2413:       32,   470,   545,   389,   373,   913,    -1,    32,   470,   192,
2414:      152,   545,   389,   373,   913,    -1,   168,    75,   940,    -1,
2415:       75,   940,    -1,   546,    -1,    -1,    84,   290,   943,   545,
2416:      222,   942,    -1,    84,   290,    82,   822,   222,   942,    -1,
2417:      548,    -1,   280,    -1,   419,    -1,   384,    -1,   174,    -1,
2418:      246,    -1,   246,   419,    -1,   470,    -1,   108,    -1,   203,
2419:       -1,   373,    -1,   442,    -1,   154,   108,   548,   676,    -1,
2420:      154,   108,   546,   431,   548,   676,    -1,   198,   108,   548,
2421:       -1,   153,   949,    -1,   153,   953,   947,   949,    -1,   153,
2422:      468,   949,    -1,   153,   518,   952,   519,   949,    -1,   468,
2423:       -1,    -1,   954,    -1,   594,    -1,    -1,   938,    -1,   591,
2424:       -1,   533,    -1,   990,    -1,   939,    -1,   668,    -1,   993,
2425:       -1,   658,    -1,   928,    -1,   580,    -1,   604,    -1,   576,
2426:       -1,   544,    -1,   972,    -1,   652,    -1,   587,    -1,   931,
2427:       -1,   555,    -1,   963,    -1,   579,    -1,   925,    -1,   553,
2428:       -1,   686,    -1,   600,    -1,   667,    -1,   586,    -1,   967,
2429:       -1,   981,    -1,   957,    -1,   984,    -1,   991,    -1,     3,
2430:       -1,   996,    -1,  1000,    -1,   950,    -1,   548,    -1,   955,
2431:       -1,   952,   522,   955,    -1,    35,    -1,    34,    -1,   438,
2432:       -1,   160,    -1,   290,    -1,   951,    -1,   956,   948,    -1,
2433:      950,    -1,   953,    -1,   389,   958,    -1,   389,   241,   958,
2434:       -1,   389,   388,   958,    -1,   389,   178,   958,    -1,   389,
2435:      465,   958,    -1,   959,    -1,   988,   172,   104,    -1,   429,
2436:      501,   961,    -1,   373,   548,    -1,   988,   431,   962,    -1,
2437:      988,   507,   962,    -1,   822,    -1,   548,    -1,     3,    -1,
2438:      806,   548,   821,    -1,   806,   518,   916,   519,   548,    -1,
2439:      594,    -1,   117,    -1,   241,    -1,   960,    -1,   962,   522,
2440:      960,    -1,   240,   965,    -1,   964,   214,   965,   966,    -1,
2441:      964,   214,   965,   172,   546,   966,    -1,   964,   214,   965,
2442:      172,   548,   966,    -1,    -1,   168,    -1,   548,    -1,   546,
2443:       -1,    -1,   469,   548,    -1,   469,   546,    -1,   458,   969,
2444:      971,   947,    -1,   458,   969,   971,   947,   545,   922,    -1,
2445:      458,   969,   971,   947,   976,    -1,   458,   518,   970,   519,
2446:       -1,   458,   518,   970,   519,   545,   922,    -1,   953,    -1,
2447:      468,    -1,   171,    -1,   173,    -1,     3,    -1,   173,    -1,
2448:       -1,   968,    -1,   970,   522,   968,    -1,   171,    -1,    -1,
2449:      560,   122,   172,   973,   975,   974,   566,    -1,   439,   704,
2450:      973,    -1,   773,    -1,   773,   546,    -1,   773,    40,   546,
2451:       -1,   477,   822,    -1,    -1,   457,   755,    -1,    -1,   953,
2452:      947,    -1,   953,   947,   545,   922,    -1,    47,   979,   548,
2453:      980,   676,    -1,    47,   192,   275,   152,   979,   548,   980,
2454:      676,    -1,   128,   552,    -1,   128,   108,   552,    -1,   128,
2455:      108,   192,   152,   552,    -1,   108,    -1,    -1,    40,   546,
2456:       -1,    -1,   357,   983,    -1,   357,   241,   983,    -1,   357,
2457:      388,   983,    -1,   357,   178,   983,    -1,   357,   465,   983,
2458:       -1,   988,    -1,    30,    -1,   982,    -1,   429,   501,    -1,
2459:      433,   224,   236,    -1,   986,   686,    -1,   415,   686,    -1,
2460:      415,   989,    -1,   986,   989,    -1,   986,   429,   501,    -1,
2461:      986,   433,   224,   236,    -1,   986,    30,   987,    -1,   986,
2462:       -1,   127,    -1,   126,    -1,   393,    -1,   985,    -1,   420,
2463:       -1,    -1,   546,    -1,   988,   520,   546,    -1,   546,    -1,
2464:      989,   520,   546,    -1,    61,   831,    -1,   100,   650,   470,
2465:      545,   639,   936,    40,   686,   992,    -1,   100,   650,   470,
2466:      192,   275,   152,   545,   639,   936,    40,   686,   992,    -1,
2467:      100,   295,   355,   650,   470,   545,   639,   936,    40,   686,
2468:      992,    -1,   100,   650,   345,   470,   545,   518,   643,   519,
2469:      936,    40,   686,   992,    -1,   100,   295,   355,   650,   345,
2470:      470,   545,   518,   643,   519,   936,    40,   686,   992,    -1,
2471:      480,    74,   293,    -1,   480,    64,    74,   293,    -1,   480,
2472:      241,    74,   293,    -1,    -1,   100,   650,   419,   995,    40,
2473:      686,   994,    -1,   100,   650,   419,   192,   275,   152,   995,
2474:       40,   686,   994,    -1,   100,   295,   355,   650,   419,   995,
2475:       40,   686,   994,    -1,   480,   107,    -1,   480,   273,   107,
2476:       -1,    -1,   545,   639,   626,   618,    -1,    22,    -1,    23,
2477:       -1,    24,    -1,    25,    -1,    26,    -1,    27,    -1,    28,
2478:       -1,    29,    -1,    31,    -1,    32,    -1,    33,    -1,    43,
2479:       -1,    44,    -1,    46,    -1,    47,    -1,    48,    -1,    50,
2480:       -1,    51,    -1,    52,    -1,    59,    -1,    60,    -1,    61,
2481:       -1,    62,    -1,    63,    -1,    64,    -1,    67,    -1,    68,
2482:       -1,    69,    -1,    70,    -1,    73,    -1,    75,    -1,    76,
2483:       -1,    77,    -1,    78,    -1,    84,    -1,    85,    -1,    86,
2484:       -1,    87,    -1,    88,    -1,    90,    -1,    91,    -1,    92,
2485:       -1,    94,    -1,    95,    -1,    96,    -1,    97,    -1,    98,
2486:       -1,    99,    -1,   102,    -1,   103,    -1,   104,    -1,   105,
2487:       -1,   106,    -1,   107,    -1,   108,    -1,   109,    -1,   110,
2488:       -1,   111,    -1,   113,    -1,   114,    -1,   116,    -1,   118,
2489:       -1,   120,    -1,   121,    -1,   122,    -1,   123,    -1,   124,
2490:       -1,   125,    -1,   128,    -1,   129,    -1,   130,    -1,   131,
2491:       -1,   134,    -1,   135,    -1,   136,    -1,   137,    -1,   138,
2492:       -1,   140,    -1,   141,    -1,   142,    -1,   144,    -1,   145,
2493:       -1,   146,    -1,   148,    -1,   149,    -1,   150,    -1,   151,
2494:       -1,   153,    -1,   154,    -1,   155,    -1,   156,    -1,   157,
2495:       -1,   158,    -1,   161,    -1,   163,    -1,   164,    -1,   166,
2496:       -1,   168,    -1,   170,    -1,   174,    -1,   175,    -1,   178,
2497:       -1,   180,    -1,   184,    -1,   185,    -1,   187,    -1,   188,
2498:       -1,   189,    -1,   190,    -1,   191,    -1,   192,    -1,   193,
2499:       -1,   195,    -1,   196,    -1,   197,    -1,   198,    -1,   200,
2500:       -1,   201,    -1,   202,    -1,   203,    -1,   204,    -1,   205,
2501:       -1,   206,    -1,   208,    -1,   211,    -1,   212,    -1,   213,
2502:       -1,   214,    -1,   215,    -1,   221,    -1,   224,    -1,   226,
2503:       -1,   227,    -1,   228,    -1,   229,    -1,   230,    -1,   231,
2504:       -1,   234,    -1,   236,    -1,   239,    -1,   240,    -1,   241,
2505:       -1,   242,    -1,   243,    -1,   244,    -1,   245,    -1,   246,
2506:       -1,   248,    -1,   249,    -1,   250,    -1,   251,    -1,   252,
2507:       -1,   253,    -1,   254,    -1,   255,    -1,   256,    -1,   257,
2508:       -1,   258,    -1,   259,    -1,   260,    -1,   261,    -1,   262,
2509:       -1,   263,    -1,   264,    -1,   265,    -1,   266,    -1,   267,
2510:       -1,   271,    -1,   272,    -1,   273,    -1,   276,    -1,   277,
2511:       -1,   279,    -1,   282,    -1,   284,    -1,   285,    -1,   286,
2512:       -1,   288,    -1,   289,    -1,   292,    -1,   293,    -1,   294,
2513:       -1,   297,    -1,   298,    -1,   301,    -1,   304,    -1,   305,
2514:       -1,   306,    -1,   307,    -1,   308,    -1,   309,    -1,   310,
2515:       -1,   311,    -1,   312,    -1,   313,    -1,   314,    -1,   319,
2516:       -1,   320,    -1,   323,    -1,   324,    -1,   326,    -1,   327,
2517:       -1,   328,    -1,   330,    -1,   331,    -1,   332,    -1,   333,
2518:       -1,   334,    -1,   335,    -1,   337,    -1,   338,    -1,   339,
2519:       -1,   340,    -1,   341,    -1,   343,    -1,   344,    -1,   345,
2520:       -1,   346,    -1,   348,    -1,   349,    -1,   350,    -1,   351,
2521:       -1,   352,    -1,   353,    -1,   354,    -1,   355,    -1,   356,
2522:       -1,   357,    -1,   358,    -1,   359,    -1,   360,    -1,   362,
2523:       -1,   363,    -1,   365,    -1,   366,    -1,   367,    -1,   369,
2524:       -1,   370,    -1,   371,    -1,   372,    -1,   373,    -1,   374,
2525:       -1,   375,    -1,   376,    -1,   377,    -1,   378,    -1,   379,
2526:       -1,   380,    -1,   381,    -1,   384,    -1,   385,    -1,   386,
2527:       -1,   387,    -1,   388,    -1,   389,    -1,   391,    -1,   392,
2528:       -1,   395,    -1,   396,    -1,   398,    -1,   400,    -1,   401,
2529:       -1,   402,    -1,   403,    -1,   404,    -1,   405,    -1,   406,
2530:       -1,   407,    -1,   408,    -1,   409,    -1,   410,    -1,   411,
2531:       -1,   413,    -1,   417,    -1,   418,    -1,   420,    -1,   422,
2532:       -1,   423,    -1,   424,    -1,   425,    -1,   426,    -1,   428,
2533:       -1,   433,    -1,   434,    -1,   436,    -1,   439,    -1,   440,
2534:       -1,   442,    -1,   443,    -1,   444,    -1,   445,    -1,   446,
2535:       -1,   449,    -1,   450,    -1,   451,    -1,   453,    -1,   454,
2536:       -1,   455,    -1,   456,    -1,   458,    -1,   459,    -1,   460,
2537:       -1,   461,    -1,   462,    -1,   465,    -1,   467,    -1,   469,
2538:       -1,   470,    -1,   471,    -1,   472,    -1,   473,    -1,   474,
2539:       -1,   475,    -1,   478,    -1,   481,    -1,   482,    -1,   483,
2540:       -1,   484,    -1,   485,    -1,   486,    -1,   498,    -1,   499,
2541:       -1,   500,    -1,   501,    -1,    53,    -1,    54,    -1,    56,
2542:       -1,    57,    -1,    71,    -1,    72,    -1,    79,    -1,    83,
2543:       -1,   112,    -1,   115,    -1,   152,    -1,   159,    -1,   165,
2544:       -1,   176,    -1,   182,    -1,   183,    -1,   210,    -1,   216,
2545:       -1,   217,    -1,   219,    -1,   247,    -1,   268,    -1,   270,
2546:       -1,   274,    -1,   281,    -1,   283,    -1,   299,    -1,   303,
2547:       -1,   321,    -1,   325,    -1,   342,    -1,   368,    -1,   390,
2548:       -1,   397,    -1,   412,    -1,   414,    -1,   429,    -1,   430,
2549:       -1,   435,    -1,   437,    -1,   441,    -1,   463,    -1,   464,
2550:       -1,   487,    -1,   488,    -1,   489,    -1,   490,    -1,   491,
2551:       -1,   492,    -1,   493,    -1,   494,    -1,   495,    -1,   496,
2552:       -1,   497,    -1,    42,    -1,    49,    -1,    55,    -1,    81,
2553:       -1,    89,    -1,   101,    -1,   171,    -1,   173,    -1,   176,
2554:       -1,   177,    -1,   194,    -1,   209,    -1,   222,    -1,   223,
2555:       -1,   225,    -1,   235,    -1,   237,    -1,   247,    -1,   269,
2556:       -1,   278,    -1,   300,    -1,   302,    -1,   322,    -1,   364,
2557:       -1,   394,    -1,   412,    -1,   421,    -1,   468,    -1,    37,
2558:       -1,    42,    -1,    49,    -1,    55,    -1,    81,    -1,    83,
2559:       -1,    89,    -1,   101,    -1,   171,    -1,   173,    -1,   177,
2560:       -1,   194,    -1,   209,    -1,   222,    -1,   223,    -1,   225,
2561:       -1,   235,    -1,   237,    -1,   269,    -1,   278,    -1,   300,
2562:       -1,   302,    -1,   322,    -1,   364,    -1,   383,    -1,   394,
2563:       -1,   421,    -1,   441,    -1,   468,    -1,    37,    -1,    42,
2564:       -1,    49,    -1,    53,    -1,    54,    -1,    55,    -1,    56,
2565:       -1,    57,    -1,    72,    -1,    71,    -1,    79,    -1,    81,
2566:       -1,    83,    -1,    89,    -1,   101,    -1,   112,    -1,   115,
2567:       -1,   152,    -1,   159,    -1,   165,    -1,   171,    -1,   173,
2568:       -1,   176,    -1,   177,    -1,   182,    -1,   183,    -1,   194,
2569:       -1,   209,    -1,   210,    -1,   217,    -1,   219,    -1,   216,
2570:       -1,   222,    -1,   223,    -1,   225,    -1,   235,    -1,   237,
2571:       -1,   247,    -1,   268,    -1,   269,    -1,   270,    -1,   274,
2572:       -1,   278,    -1,   281,    -1,   283,    -1,   300,    -1,   299,
2573:       -1,   302,    -1,   303,    -1,   321,    -1,   322,    -1,   325,
2574:       -1,   342,    -1,   364,    -1,   368,    -1,   383,    -1,   390,
2575:       -1,   394,    -1,   397,    -1,   412,    -1,   414,    -1,   421,
2576:       -1,   429,    -1,   430,    -1,   435,    -1,   437,    -1,   441,
2577:       -1,   463,    -1,   464,    -1,   468,    -1,   487,    -1,   488,
2578:       -1,   489,    -1,   490,    -1,   491,    -1,   492,    -1,   493,
2579:       -1,   494,    -1,   495,    -1,   496,    -1,   497,    -1,    37,
2580:       -1,    42,    -1,    49,    -1,    55,    -1,    81,    -1,    83,
2581:       -1,    89,    -1,   101,    -1,   171,    -1,   173,    -1,   176,
2582:       -1,   177,    -1,   194,    -1,   209,    -1,   222,    -1,   223,
2583:       -1,   225,    -1,   235,    -1,   237,    -1,   247,    -1,   269,
2584:       -1,   278,    -1,   300,    -1,   302,    -1,   322,    -1,   364,
2585:       -1,   383,    -1,   394,    -1,   412,    -1,   421,    -1,   441,
2586:       -1,   468,    -1,    30,    -1,    34,    -1,    35,    -1,    36,
2587:       -1,    38,    -1,    39,    -1,    40,    -1,    41,    -1,    45,
2588:       -1,    58,    -1,    65,    -1,    66,    -1,    74,    -1,    80,
2589:       -1,    82,    -1,    93,    -1,   100,    -1,   117,    -1,   119,
2590:       -1,   126,    -1,   127,    -1,   132,    -1,   133,    -1,   139,
2591:       -1,   143,    -1,   147,    -1,   160,    -1,   162,    -1,   167,
2592:       -1,   169,    -1,   172,    -1,   179,    -1,   181,    -1,   186,
2593:       -1,   199,    -1,   207,    -1,   218,    -1,   220,    -1,   232,
2594:       -1,   233,    -1,   238,    -1,   275,    -1,   280,    -1,   287,
2595:       -1,   290,    -1,   291,    -1,   295,    -1,   296,    -1,   315,
2596:       -1,   316,    -1,   317,    -1,   318,    -1,   329,    -1,   336,
2597:       -1,   347,    -1,   361,    -1,   382,    -1,   393,    -1,   399,
2598:       -1,   415,    -1,   416,    -1,   419,    -1,   427,    -1,   431,
2599:       -1,   432,    -1,   438,    -1,   447,    -1,   448,    -1,   452,
2600:       -1,   457,    -1,   466,    -1,   476,    -1,   477,    -1,   479,
2601:       -1,   480,    -1
2602: };
2603: 
2604: /* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
2605: static const yytype_uint16 yyrline[] =
2606: {
2607:        0,   508,   508,   524,   536,   545,   546,   547,   548,   549,
2608:      550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
2609:      560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
2610:      570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
2611:      580,   581,   582,   583,   584,   585,   587,     9,    18,    27,
2612:       36,    45,    54,    63,    72,    85,    87,    93,    94,    99,
2613:      103,   107,   118,   126,   130,   139,   148,   157,   166,   175,
2614:      184,   192,   200,   209,   218,   227,   236,   253,   262,   271,
2615:      280,   290,   303,   318,   327,   335,   350,   358,   368,   378,
2616:      385,   392,   400,   407,   418,   419,   424,   428,   433,   438,
2617:      446,   447,   452,   456,   457,   458,     7,    13,    19,    25,
2618:        9,    13,    44,    45,    46,    50,    51,    55,    59,    60,
2619:       64,    70,    75,    76,    77,    78,     6,    15,    25,    35,
2620:       45,    55,    65,    75,    85,    95,   106,   117,   127,   140,
2621:      141,     9,    23,    29,    36,    42,    49,    59,    63,    71,
2622:       72,    73,    77,    86,    95,   102,   103,   108,   120,   125,
2623:      150,   155,   160,   166,   176,   186,   192,   203,   214,   229,
2624:      230,   236,   237,   242,   243,   249,   250,   254,   255,   260,
2625:      262,   268,   269,   273,   274,   277,   278,   283,     7,    16,
2626:       25,    46,    47,    50,    54,     7,    14,    22,     9,    19,
2627:       29,    42,    43,     7,    17,    27,    40,    41,    45,    46,
2628:       47,    51,    52,     7,     7,    14,    31,    51,    55,    65,
2629:       69,    75,    76,     9,    17,    29,    30,    34,    35,    36,
2630:       41,    42,    43,    48,    52,    56,    60,    64,    68,    72,
2631:       76,    80,    84,    88,    92,    97,   101,   105,   112,   113,
2632:      117,   118,   119,     7,    16,    28,    29,     2,    10,    17,
2633:       24,    32,    40,    51,    52,    53,    57,    58,    59,     2,
2634:        7,    21,    36,    56,    57,    84,    85,    86,    87,    88,
2635:       89,    93,    94,    99,   104,   105,   106,   107,   108,   113,
2636:      120,   121,   122,   139,   146,   153,   163,   173,   185,   193,
2637:      202,   220,   221,   225,   226,   230,   239,   262,   276,   283,
2638:      288,   290,   292,   294,   297,   300,   301,   302,   303,   308,
2639:      312,   313,   318,   325,   330,   331,   332,   333,   334,   335,
2640:      336,   337,   343,   344,   348,   353,   360,   367,   374,   386,
2641:      387,   388,   389,   393,   398,   399,   400,   405,   410,   411,
2642:      412,   413,   414,   415,   420,   440,   469,   470,   474,   478,
2643:      479,   480,   484,   488,   496,   497,   502,   503,   504,   508,
2644:      516,   517,   522,   523,   527,   532,   536,   540,   545,   553,
2645:      554,   558,   559,   563,   564,   570,   581,   594,   608,   622,
2646:      636,   650,   673,   677,   684,   688,   696,   701,   708,   718,
2647:      719,   720,   721,   722,   729,   736,   737,   742,   743,     9,
2648:       19,    29,    39,    49,    59,    73,    74,    75,    76,    77,
2649:       78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
2650:       88,    89,    90,    95,    96,    97,    98,    99,   100,   105,
2651:      106,   111,   112,   113,   118,   119,   120,     8,    18,    29,
2652:       39,    49,    59,    71,    81,    91,    95,   102,   106,   110,
2653:      119,   123,   130,   131,   135,   139,     7,     1,    30,    49,
2654:       61,    62,    63,    67,    68,    73,    77,    82,    86,    94,
2655:       95,    99,   100,   105,   106,   110,   111,   116,   117,   118,
2656:      119,   120,   121,   122,   123,   128,   136,   140,   145,   146,
2657:      151,   155,   160,   164,   168,   172,   176,   180,   184,   188,
2658:      192,   196,   200,   204,   208,   212,   216,   220,   228,   233,
2659:      234,   235,   236,   237,   243,   247,    47,    48,    52,    53,
2660:       54,    72,    73,    80,    88,    96,   104,   112,   120,   131,
2661:      132,   159,   164,   172,   188,   205,   223,   241,   242,   261,
2662:      265,   269,   273,   277,   287,   298,   308,   317,   328,   339,
2663:      351,   366,   384,   384,   388,   388,   392,   392,   396,   402,
2664:      409,   413,   414,   418,   419,   433,   440,   447,   457,   458,
2665:      461,   474,   475,   476,   480,   491,   499,   504,   509,   514,
2666:      519,   527,   535,   540,   545,   552,   553,   557,   558,   559,
2667:      563,   570,   571,   575,   576,   580,   581,   582,   586,   587,
2668:      591,   592,   608,   609,   612,   621,   632,   633,   634,   637,
2669:      638,   639,   643,   644,   645,   646,   650,   651,   655,   657,
2670:      673,   675,   680,   683,   691,   695,   699,   703,   707,   711,
2671:      718,   723,   730,   731,   735,   740,   744,   748,   756,   763,
2672:      764,   769,   770,   774,   775,   780,   782,   784,   789,   809,
2673:      810,   812,   817,   818,   822,   823,   826,   827,   852,   853,
2674:      858,   862,   863,   867,   868,   872,   873,   874,   875,   876,
2675:      880,   893,   900,   907,   914,   915,   919,   920,   924,   925,
2676:      929,   930,   934,   935,   939,   940,   944,   955,   956,   957,
2677:      958,   962,   963,   968,   969,   970,   979,   985,   994,   995,
2678:     1008,  1009,  1013,  1014,  1018,  1019,  1025,  1031,  1039,  1048,
2679:     1056,  1065,  1074,  1078,  1083,  1094,  1108,  1109,  1112,  1113,
2680:     1114,  1117,  1125,  1134,  1135,  1136,  1137,  1140,  1148,  1157,
2681:     1161,  1168,  1169,  1173,  1182,  1186,  1211,  1215,  1228,  1242,
2682:     1257,  1269,  1282,  1296,  1310,  1323,  1338,  1357,  1363,  1368,
2683:     1374,  1381,  1382,  1390,  1394,  1398,  1404,  1411,  1416,  1417,
2684:     1418,  1419,  1420,  1421,  1425,  1426,  1438,  1439,  1444,  1451,
2685:     1458,  1465,  1497,  1508,  1521,  1526,  1527,  1530,  1531,  1534,
2686:     1535,  1540,  1541,  1546,  1550,  1556,  1577,  1585,  1598,  1601,
2687:     1605,  1605,  1608,  1609,  1611,  1616,  1623,  1628,  1634,  1639,
2688:     1645,  1649,  1656,  1663,  1673,  1674,  1678,  1680,  1683,  1687,
2689:     1688,  1689,  1690,  1691,  1692,  1697,  1717,  1718,  1719,  1720,
2690:     1731,  1745,  1746,  1752,  1757,  1762,  1767,  1772,  1777,  1782,
2691:     1787,  1793,  1799,  1805,  1812,  1834,  1843,  1847,  1855,  1859,
2692:     1867,  1879,  1900,  1904,  1910,  1914,  1927,  1935,  1945,  1947,
2693:     1949,  1951,  1953,  1955,  1960,  1961,  1968,  1977,  1985,  1994,
2694:     2005,  2013,  2014,  2015,  2019,  2019,  2022,  2022,  2025,  2025,
2695:     2028,  2028,  2031,  2031,  2034,  2034,  2037,  2037,  2040,  2040,
2696:     2043,  2043,  2046,  2046,  2049,  2049,  2052,  2052,  2055,  2055,
2697:     2058,  2060,  2062,  2064,  2066,  2068,  2070,  2072,  2074,  2076,
2698:     2078,  2080,  2082,  2084,  2089,  2094,  2100,  2107,  2112,  2118,
2699:     2124,  2155,  2157,  2159,  2167,  2182,  2184,  2186,  2188,  2190,
2700:     2192,  2194,  2196,  2198,  2200,  2202,  2204,  2206,  2208,  2210,
2701:     2212,  2215,  2217,  2219,  2222,  2224,  2226,  2228,  2230,  2235,
2702:     2240,  2247,  2252,  2259,  2264,  2271,  2276,  2284,  2292,  2300,
2703:     2308,  2326,  2334,  2342,  2350,  2358,  2366,  2374,  2378,  2394,
2704:     2402,  2410,  2418,  2426,  2434,  2442,  2446,  2450,  2454,  2458,
2705:     2466,  2474,  2482,  2490,  2510,  2532,  2543,  2550,  2564,  2573,
2706:     2581,  2589,  2609,  2611,  2613,  2615,  2617,  2619,  2621,  2623,
2707:     2625,  2627,  2629,  2631,  2633,  2635,  2637,  2639,  2641,  2643,
2708:     2645,  2647,  2649,  2651,  2655,  2659,  2663,  2677,  2678,  2692,
2709:     2693,  2694,  2705,  2729,  2740,  2750,  2754,  2758,  2765,  2769,
2710:     2776,  2780,  2784,  2788,  2790,  2793,  2796,  2807,  2812,  2819,
2711:     2825,  2831,  2838,  2858,  2862,  2869,  2877,  2885,  2896,  2916,
2712:     2952,  2963,  2964,  2971,  2977,  2979,  2981,  2985,  2994,  2999,
2713:     3006,  3021,  3028,  3032,  3036,  3040,  3044,  3054,  3062,  3071,
2714:     3093,  3094,  3098,  3099,  3100,  3104,  3105,  3112,  3113,  3117,
2715:     3118,  3123,  3131,  3133,  3147,  3150,  3177,  3178,  3181,  3182,
2716:     3190,  3198,  3206,  3215,  3225,  3243,  3289,  3298,  3307,  3316,
2717:     3325,  3337,  3338,  3339,  3340,  3341,  3355,  3356,  3359,  3360,
2718:     3364,  3374,  3375,  3379,  3380,  3384,  3391,  3392,  3397,  3398,
2719:     3403,  3404,  3407,  3408,  3409,  3412,  3413,  3416,  3417,  3418,
2720:     3419,  3420,  3421,  3422,  3423,  3424,  3425,  3426,  3427,  3428,
2721:     3429,  3432,  3434,  3439,  3441,  3446,  3448,  3450,  3452,  3454,
2722:     3456,  3458,  3460,  3474,  3476,  3481,  3485,  3492,  3497,  3503,
2723:     3507,  3514,  3519,  3526,  3531,  3539,  3543,  3549,  3553,  3562,
2724:     3573,  3574,  3578,  3582,  3589,  3590,  3591,  3592,  3593,  3594,
2725:     3595,  3596,  3597,  3598,  3599,  3600,  3601,  3602,  3603,  3613,
2726:     3617,  3624,  3631,  3632,  3648,  3652,  3657,  3661,  3676,  3681,
2727:     3685,  3688,  3691,  3692,  3693,  3696,  3703,  3704,  3705,  3715,
2728:     3729,  3730,  3734,  3745,  3746,  3749,  3750,  3754,  3755,  3758,
2729:     3764,  3768,  3775,  3783,  3791,  3799,  3809,  3810,  3815,  3816,
2730:     3820,  3821,  3822,  3826,  3835,  3843,  3851,  3860,  3875,  3876,
2731:     3881,  3882,  3892,  3893,  3897,  3898,  3902,  3903,  3906,  3922,
2732:     3930,  3940,  3941,  3944,  3945,  3948,  3952,  3953,  3957,  3958,
2733:     3961,  3962,  3963,  3973,  3974,  3978,  3980,  3986,  3987,  3991,
2734:     3992,  3995,  4006,  4009,  4020,  4024,  4028,  4040,  4044,  4053,
2735:     4060,  4098,  4102,  4106,  4110,  4114,  4118,  4122,  4128,  4145,
2736:     4146,  4147,  4150,  4151,  4152,  4155,  4156,  4157,  4160,  4161,
2737:     4164,  4166,  4171,  4172,  4175,  4179,  4180,     7,    18,    19,
2738:       23,    24,    25,    26,    27,    28,     7,    26,    50,    73,
2739:       80,    85,    86,    87,    88,     8,    33,    62,    66,    67,
2740:       72,    73,    78,    79,    83,    84,    89,    90,     7,    16,
2741:       25,    34,    43,    52,     5,    12,    22,    23,     7,    15,
2742:       26,    27,    30,    31,    32,    33,    34,    35,    36,    37,
2743:       38,    39,     7,    19,    33,     9,    16,    26,    33,    44,
2744:       45,    50,    51,    52,    57,    58,    59,    60,    61,    62,
2745:       63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
2746:       73,    74,    75,    76,    77,    78,    79,    80,    81,    82,
2747:       83,    84,    85,    86,    87,    91,    92,    93,    98,    99,
2748:      104,   108,   116,   117,   122,   123,   124,   130,   135,   143,
2749:      144,    10,    16,    22,    28,    34,    44,    45,    53,    64,
2750:       76,    84,    95,   101,   105,   109,   124,   131,   132,   133,
2751:      137,   138,     7,    17,    26,    35,    46,    47,    49,    50,
2752:       53,    54,    55,     8,    22,    36,    48,    56,    70,    71,
2753:       72,    73,    74,    87,    88,    93,    94,    98,    99,     7,
2754:       18,    31,    35,    42,    53,    54,    60,    61,     9,    19,
2755:        7,    16,    28,    35,    42,    51,    52,    56,    57,     2,
2756:        7,    12,    17,    22,    31,    38,    48,    49,    56,     3,
2757:       10,    17,    24,    31,    38,    45,    52,    61,    61,    63,
2758:       63,    65,    65,    67,    68,    72,    73,     6,     8,    21,
2759:       34,    47,    65,    87,    88,    89,    90,    11,    24,    37,
2760:       54,    55,    56,    61,    74,    74,    74,    74,    74,    74,
2761:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2762:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2763:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2764:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2765:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2766:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2767:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2768:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2769:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2770:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2771:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2772:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2773:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2774:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2775:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2776:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2777:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2778:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2779:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2780:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2781:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2782:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2783:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2784:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2785:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2786:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2787:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2788:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2789:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2790:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2791:       74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
2792:       74,    74,    74,    74,    74,    74,    74,    74,    75,    75,
2793:       75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
2794:       75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
2795:       75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
2796:       75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
2797:       75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
2798:       75,    75,    76,    76,    76,    76,    76,    76,    76,    76,
2799:       76,    76,    76,    76,    76,    76,    76,    76,    76,    76,
2800:       76,    76,    76,    76,    76,    76,    76,    76,    76,    76,
2801:       77,    77,    77,    77,    77,    77,    77,    77,    77,    77,
2802:       77,    77,    77,    77,    77,    77,    77,    77,    77,    77,
2803:       77,    77,    77,    77,    77,    77,    77,    77,    77,    78,
2804:       78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
2805:       78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
2806:       78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
2807:       78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
2808:       78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
2809:       78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
2810:       78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
2811:       78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
2812:       79,    79,    79,    79,    79,    79,    79,    79,    79,    79,
2813:       79,    79,    79,    79,    79,    79,    79,    79,    79,    79,
2814:       79,    79,    79,    79,    79,    79,    79,    79,    79,    79,
2815:       79,    79,    80,    80,    80,    80,    80,    80,    80,    80,
2816:       80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
2817:       80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
2818:       80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
2819:       80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
2820:       80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
2821:       80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
2822:       80,    80,    80,    80,    80,    80,    80
2823: };
2824: #endif
2825: 
2826: #if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
2827: /* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
2828:    First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
2829: static const char *const yytname[] =
2830: {
2831:   "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
2832:   "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
2833:   "EQUALS_GREATER", "INTEGER_DIVISION", "POWER_OF", "LAMBDA_ARROW",
2834:   "DOUBLE_ARROW", "LESS_EQUALS", "GREATER_EQUALS", "NOT_EQUALS", "ABORT_P",
2835:   "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P", "ADMIN", "AFTER", "AGGREGATE",
2836:   "ALL", "ALSO", "ALTER", "ALWAYS", "ANALYSE", "ANALYZE", "AND", "ANTI",
2837:   "ANY", "ARRAY", "AS", "ASC_P", "ASOF", "ASSERTION", "ASSIGNMENT",
2838:   "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION", "BACKWARD",
2839:   "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT", "BOOLEAN_P",
2840:   "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE", "CASCADED", "CASE",
2841:   "CAST", "CATALOG_P", "CENTURIES_P", "CENTURY_P", "CHAIN", "CHAR_P",
2842:   "CHARACTER", "CHARACTERISTICS", "CHECK_P", "CHECKPOINT", "CLASS",
2843:   "CLOSE", "CLUSTER", "COALESCE", "COLLATE", "COLLATION", "COLUMN",
2844:   "COLUMNS", "COMMENT", "COMMENTS", "COMMIT", "COMMITTED", "COMPRESSION",
2845:   "CONCURRENTLY", "CONFIGURATION", "CONFLICT", "CONNECTION", "CONSTRAINT",
2846:   "CONSTRAINTS", "CONTENT_P", "CONTINUE_P", "CONVERSION_P", "COPY", "COST",
2847:   "CREATE_P", "CROSS", "CSV", "CUBE", "CURRENT_P", "CURSOR", "CYCLE",
2848:   "DATA_P", "DATABASE", "DAY_P", "DAYS_P", "DEALLOCATE", "DEC", "DECADE_P",
2849:   "DECADES_P", "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE",
2850:   "DEFERRED", "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS",
2851:   "DESC_P", "DESCRIBE", "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD",
2852:   "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH",
2853:   "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE",
2854:   "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE",
2855:   "EXISTS", "EXPLAIN", "EXPORT_P", "EXPORT_STATE", "EXTENSION",
2856:   "EXTENSIONS", "EXTERNAL", "EXTRACT", "FALSE_P", "FAMILY", "FETCH",
2857:   "FILTER", "FIRST_P", "FLOAT_P", "FOLLOWING", "FOR", "FORCE", "FOREIGN",
2858:   "FORWARD", "FREEZE", "FROM", "FULL", "FUNCTION", "FUNCTIONS",
2859:   "GENERATED", "GLOB", "GLOBAL", "GRANT", "GRANTED", "GROUP_P", "GROUPING",
2860:   "GROUPING_ID", "GROUPS", "HANDLER", "HAVING", "HEADER_P", "HOLD",
2861:   "HOUR_P", "HOURS_P", "IDENTITY_P", "IF_P", "IGNORE_P", "ILIKE",
2862:   "IMMEDIATE", "IMMUTABLE", "IMPLICIT_P", "IMPORT_P", "IN_P", "INCLUDE_P",
2863:   "INCLUDING", "INCREMENT", "INDEX", "INDEXES", "INHERIT", "INHERITS",
2864:   "INITIALLY", "INLINE_P", "INNER_P", "INOUT", "INPUT_P", "INSENSITIVE",
2865:   "INSERT", "INSTALL", "INSTEAD", "INT_P", "INTEGER", "INTERSECT",
2866:   "INTERVAL", "INTO", "INVOKER", "IS", "ISNULL", "ISOLATION", "JOIN",
2867:   "JSON", "KEY", "LABEL", "LANGUAGE", "LARGE_P", "LAST_P", "LATERAL_P",
2868:   "LEADING", "LEAKPROOF", "LEFT", "LEVEL", "LIKE", "LIMIT", "LISTEN",
2869:   "LOAD", "LOCAL", "LOCATION", "LOCK_P", "LOCKED", "LOGGED", "MACRO",
2870:   "MAP", "MAPPING", "MATCH", "MATERIALIZED", "MAXVALUE", "METHOD",
2871:   "MICROSECOND_P", "MICROSECONDS_P", "MILLENNIA_P", "MILLENNIUM_P",
2872:   "MILLISECOND_P", "MILLISECONDS_P", "MINUTE_P", "MINUTES_P", "MINVALUE",
2873:   "MODE", "MONTH_P", "MONTHS_P", "MOVE", "NAME_P", "NAMES", "NATIONAL",
2874:   "NATURAL", "NCHAR", "NEW", "NEXT", "NO", "NONE", "NOT", "NOTHING",
2875:   "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P", "NULLIF", "NULLS_P", "NUMERIC",
2876:   "OBJECT_P", "OF", "OFF", "OFFSET", "OIDS", "OLD", "ON", "ONLY",
2877:   "OPERATOR", "OPTION", "OPTIONS", "OR", "ORDER", "ORDINALITY", "OTHERS",
2878:   "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY", "OVERRIDING", "OWNED",
2879:   "OWNER", "PARALLEL", "PARSER", "PARTIAL", "PARTITION", "PASSING",
2880:   "PASSWORD", "PERCENT", "PERSISTENT", "PIVOT", "PIVOT_LONGER",
2881:   "PIVOT_WIDER", "PLACING", "PLANS", "POLICY", "POSITION", "POSITIONAL",
2882:   "PRAGMA_P", "PRECEDING", "PRECISION", "PREPARE", "PREPARED", "PRESERVE",
2883:   "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL", "PROCEDURE", "PROGRAM",
2884:   "PUBLICATION", "QUALIFY", "QUARTER_P", "QUARTERS_P", "QUOTE", "RANGE",
2885:   "READ_P", "REAL", "REASSIGN", "RECHECK", "RECURSIVE", "REF",
2886:   "REFERENCES", "REFERENCING", "REFRESH", "REINDEX", "RELATIVE_P",
2887:   "RELEASE", "RENAME", "REPEATABLE", "REPLACE", "REPLICA", "RESET",
2888:   "RESPECT_P", "RESTART", "RESTRICT", "RETURNING", "RETURNS", "REVOKE",
2889:   "RIGHT", "ROLE", "ROLLBACK", "ROLLUP", "ROW", "ROWS", "RULE", "SAMPLE",
2890:   "SAVEPOINT", "SCHEMA", "SCHEMAS", "SCOPE", "SCROLL", "SEARCH",
2891:   "SECOND_P", "SECONDS_P", "SECRET", "SECURITY", "SELECT", "SEMI",
2892:   "SEQUENCE", "SEQUENCES", "SERIALIZABLE", "SERVER", "SESSION", "SET",
2893:   "SETOF", "SETS", "SHARE", "SHOW", "SIMILAR", "SIMPLE", "SKIP",
2894:   "SMALLINT", "SNAPSHOT", "SOME", "SQL_P", "STABLE", "STANDALONE_P",
2895:   "START", "STATEMENT", "STATISTICS", "STDIN", "STDOUT", "STORAGE",
2896:   "STORED", "STRICT_P", "STRIP_P", "STRUCT", "SUBSCRIPTION", "SUBSTRING",
2897:   "SUMMARIZE", "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES",
2898:   "TABLESAMPLE", "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P",
2899:   "THEN", "TIES", "TIME", "TIMESTAMP", "TO", "TRAILING", "TRANSACTION",
2900:   "TRANSFORM", "TREAT", "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED",
2901:   "TRY_CAST", "TYPE_P", "TYPES_P", "UNBOUNDED", "UNCOMMITTED",
2902:   "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN", "UNLISTEN", "UNLOGGED",
2903:   "UNPIVOT", "UNTIL", "UPDATE", "USE_P", "USER", "USING", "VACUUM",
2904:   "VALID", "VALIDATE", "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR",
2905:   "VARIABLE_P", "VARIADIC", "VARYING", "VERBOSE", "VERSION_P", "VIEW",
2906:   "VIEWS", "VIRTUAL", "VOLATILE", "WEEK_P", "WEEKS_P", "WHEN", "WHERE",
2907:   "WHITESPACE_P", "WINDOW", "WITH", "WITHIN", "WITHOUT", "WORK", "WRAPPER",
2908:   "WRITE_P", "XML_P", "XMLATTRIBUTES", "XMLCONCAT", "XMLELEMENT",
2909:   "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES", "XMLPARSE", "XMLPI",
2910:   "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P", "YEARS_P", "YES_P",
2911:   "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
2912:   "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
2913:   "']'", "'('", "')'", "'.'", "';'", "','", "'?'", "'#'", "'$'", "'{'",
2914:   "'}'", "':'", "$accept", "stmtblock", "stmtmulti", "stmt",
2915:   "AlterTableStmt", "alter_identity_column_option_list",
2916:   "alter_column_default", "alter_identity_column_option",
2917:   "alter_generic_option_list", "alter_table_cmd", "alter_using",
2918:   "alter_generic_option_elem", "alter_table_cmds", "alter_generic_options",
2919:   "opt_set_data", "DeallocateStmt", "qualified_name", "ColId",
2920:   "ColIdOrString", "Sconst", "indirection", "indirection_el", "attr_name",
2921:   "ColLabel", "RenameStmt", "opt_column", "InsertStmt", "insert_rest",
2922:   "insert_target", "opt_by_name_or_position", "opt_conf_expr",
2923:   "opt_with_clause", "insert_column_item", "set_clause", "opt_or_action",
2924:   "opt_on_conflict", "index_elem", "returning_clause", "override_kind",
2925:   "set_target_list", "opt_collate", "opt_class", "insert_column_list",
2926:   "set_clause_list", "set_clause_list_opt_comma", "index_params",
2927:   "set_target", "CreateTypeStmt", "opt_enum_val_list", "enum_val_list",
2928:   "PragmaStmt", "CreateSeqStmt", "OptSeqOptList", "CreateSecretStmt",
2929:   "opt_secret_name", "opt_persist", "opt_storage_specifier",
2930:   "UpdateExtensionsStmt", "ExecuteStmt", "execute_param_expr",
2931:   "execute_param_list", "execute_param_clause", "AlterSeqStmt",
2932:   "SeqOptList", "opt_with", "NumericOnly", "SeqOptElem", "opt_by",
2933:   "SignedIconst", "DropSecretStmt", "opt_storage_drop_specifier",
2934:   "TransactionStmt", "opt_transaction", "opt_transaction_type", "UseStmt",
2935:   "CreateStmt", "ConstraintAttributeSpec", "def_arg",
2936:   "OptParenthesizedSeqOptList", "generic_option_arg", "key_action",
2937:   "ColConstraint", "ColConstraintElem", "GeneratedColumnType",
2938:   "opt_GeneratedColumnType", "GeneratedConstraintElem",
2939:   "generic_option_elem", "key_update", "key_actions", "OnCommitOption",
2940:   "reloptions", "opt_no_inherit", "TableConstraint", "TableLikeOption",
2941:   "reloption_list", "ExistingIndex", "ConstraintAttr", "OptWith",
2942:   "definition", "TableLikeOptionList", "generic_option_name",
2943:   "ConstraintAttributeElem", "columnDef", "def_list", "index_name",
2944:   "TableElement", "def_elem", "opt_definition", "OptTableElementList",
2945:   "columnElem", "opt_column_list", "ColQualList", "key_delete",
2946:   "reloption_elem", "columnList", "columnList_opt_comma", "func_type",
2947:   "ConstraintElem", "TableElementList", "key_match", "TableLikeClause",
2948:   "OptTemp", "generated_when", "DropStmt", "drop_type_any_name",
2949:   "drop_type_name", "any_name_list", "opt_drop_behavior",
2950:   "drop_type_name_on_any_name", "CreateFunctionStmt",
2951:   "table_macro_definition", "table_macro_definition_parens",
2952:   "table_macro_list_internal", "table_macro_list", "macro_definition",
2953:   "macro_definition_list", "macro_alias", "param_list", "UpdateStmt",
2954:   "CopyStmt", "copy_database_flag", "copy_from", "copy_delimiter",
2955:   "copy_generic_opt_arg_list", "opt_using", "opt_as", "opt_program",
2956:   "copy_options", "copy_generic_opt_arg", "copy_generic_opt_elem",
2957:   "opt_oids", "copy_opt_list", "opt_binary", "copy_opt_item",
2958:   "copy_generic_opt_arg_list_item", "copy_file_name",
2959:   "copy_generic_opt_list", "SelectStmt", "select_with_parens",
2960:   "select_no_parens", "select_clause", "opt_select", "simple_select",
2961:   "value_or_values", "pivot_keyword", "unpivot_keyword",
2962:   "pivot_column_entry", "pivot_column_list_internal", "pivot_column_list",
2963:   "with_clause", "cte_list", "common_table_expr", "opt_materialized",
2964:   "into_clause", "OptTempTableName", "opt_table", "all_or_distinct",
2965:   "by_name", "distinct_clause", "opt_all_clause", "opt_ignore_nulls",
2966:   "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
2967:   "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
2968:   "limit_clause", "offset_clause", "sample_count", "sample_clause",
2969:   "opt_sample_func", "tablesample_entry", "tablesample_clause",
2970:   "opt_tablesample_clause", "opt_repeatable_clause", "select_limit_value",
2971:   "select_offset_value", "select_fetch_first_value", "I_or_F_const",
2972:   "row_or_rows", "first_or_next", "group_clause", "group_by_list",
2973:   "group_by_list_opt_comma", "group_by_item", "empty_grouping_set",
2974:   "rollup_clause", "cube_clause", "grouping_sets_clause",
2975:   "grouping_or_grouping_id", "having_clause", "qualify_clause",
2976:   "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
2977:   "for_locking_item", "for_locking_strength", "locked_rels_list",
2978:   "opt_nowait_or_skip", "values_clause", "values_clause_opt_comma",
2979:   "from_clause", "from_list", "from_list_opt_comma", "table_ref",
2980:   "opt_pivot_group_by", "opt_include_nulls", "single_pivot_value",
2981:   "pivot_header", "pivot_value", "pivot_value_list", "unpivot_header",
2982:   "unpivot_value", "unpivot_value_list", "joined_table", "alias_clause",
2983:   "opt_alias_clause", "func_alias_clause", "join_type", "join_outer",
2984:   "join_qual", "relation_expr", "func_table", "rowsfrom_item",
2985:   "rowsfrom_list", "opt_col_def_list", "opt_ordinality", "where_clause",
2986:   "TableFuncElementList", "TableFuncElement", "opt_collate_clause",
2987:   "colid_type_list", "RowOrStruct", "opt_Typename", "Typename",
2988:   "qualified_typename", "opt_array_bounds", "SimpleTypename",
2989:   "ConstTypename", "GenericType", "opt_type_modifiers", "Numeric",
2990:   "opt_float", "Bit", "ConstBit", "BitWithLength", "BitWithoutLength",
2991:   "Character", "ConstCharacter", "CharacterWithLength",
2992:   "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
2993:   "ConstInterval", "opt_timezone", "year_keyword", "month_keyword",
2994:   "day_keyword", "hour_keyword", "minute_keyword", "second_keyword",
2995:   "millisecond_keyword", "microsecond_keyword", "week_keyword",
2996:   "quarter_keyword", "decade_keyword", "century_keyword",
2997:   "millennium_keyword", "opt_interval", "a_expr", "b_expr", "c_expr",
2998:   "d_expr", "indirection_expr_or_a_expr", "indirection_expr", "list_expr",
2999:   "struct_expr", "map_expr", "func_application", "func_expr",
3000:   "func_expr_windowless", "func_expr_common_subexpr",
3001:   "list_comprehension_lhs", "list_comprehension", "within_group_clause",
3002:   "filter_clause", "export_clause", "window_clause",
3003:   "window_definition_list", "window_definition", "over_clause",
3004:   "window_specification", "opt_existing_window_name",
3005:   "opt_partition_clause", "opt_frame_clause", "frame_extent",
3006:   "frame_bound", "opt_window_exclusion_clause", "qualified_row", "row",
3007:   "dict_arg", "dict_arguments", "dict_arguments_opt_comma", "map_arg",
3008:   "map_arguments", "map_arguments_opt_comma",
3009:   "opt_map_arguments_opt_comma", "sub_type", "all_Op", "MathOp", "qual_Op",
3010:   "qual_all_Op", "subquery_Op", "any_operator", "c_expr_list",
3011:   "c_expr_list_opt_comma", "expr_list", "expr_list_opt_comma",
3012:   "opt_expr_list_opt_comma", "func_arg_list", "func_arg_expr", "type_list",
3013:   "extract_list", "extract_arg", "overlay_list", "overlay_placing",
3014:   "position_list", "substr_list", "substr_from", "substr_for", "trim_list",
3015:   "in_expr", "case_expr", "when_clause_list", "when_clause",
3016:   "case_default", "case_arg", "columnrefList", "columnref",
3017:   "columnref_opt_indirection", "opt_slice_bound", "opt_indirection",
3018:   "opt_func_arguments", "extended_indirection_el",
3019:   "opt_extended_indirection", "opt_asymmetric",
3020:   "opt_target_list_opt_comma", "target_list", "target_list_opt_comma",
3021:   "target_el", "except_list", "opt_except_list", "replace_list_el",
3022:   "replace_list", "replace_list_opt_comma", "opt_replace_list",
3023:   "qualified_name_list", "name_list", "name_list_opt_comma",
3024:   "name_list_opt_comma_opt_bracket", "name", "func_name", "AexprConst",
3025:   "Iconst", "type_function_name", "function_name_token", "type_name_token",
3026:   "any_name", "attrs", "opt_name_list", "param_name", "ColLabelOrString",
3027:   "PrepareStmt", "prep_type_clause", "PreparableStmt", "CreateSchemaStmt",
3028:   "OptSchemaEltList", "schema_stmt", "IndexStmt", "access_method",
3029:   "access_method_clause", "opt_concurrently", "opt_index_name",
3030:   "opt_reloptions", "opt_unique", "AlterObjectSchemaStmt",
3031:   "CheckPointStmt", "opt_col_id", "CommentOnStmt", "comment_value",
3032:   "comment_on_type_any_name", "ExportStmt", "ImportStmt", "ExplainStmt",
3033:   "opt_verbose", "explain_option_arg", "ExplainableStmt",
3034:   "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
3035:   "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
3036:   "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
3037:   "var_value", "zone_value", "var_list", "LoadStmt", "opt_force",
3038:   "file_name", "opt_ext_version", "VacuumStmt", "vacuum_option_elem",
3039:   "opt_full", "vacuum_option_list", "opt_freeze", "DeleteStmt",
3040:   "relation_expr_opt_alias", "where_or_current_clause", "using_clause",
3041:   "AnalyzeStmt", "AttachStmt", "DetachStmt", "opt_database",
3042:   "opt_database_alias", "VariableResetStmt", "generic_reset", "reset_rest",
3043:   "VariableShowStmt", "describe_or_desc", "show_or_describe", "opt_tables",
3044:   "var_name", "table_id", "CallStmt", "ViewStmt", "opt_check_option",
3045:   "CreateAsStmt", "opt_with_data", "create_as_target",
3046:   "unreserved_keyword", "col_name_keyword", "func_name_keyword",
3047:   "type_name_keyword", "other_keyword", "type_func_name_keyword",
3048:   "reserved_keyword", 0
3049: };
3050: #endif
3051: 
3052: # ifdef YYPRINT
3053: /* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
3054:    token YYLEX-NUM.  */
3055: static const yytype_uint16 yytoknum[] =
3056: {
3057:        0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
3058:      265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
3059:      275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
3060:      285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
3061:      295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
3062:      305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
3063:      315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
3064:      325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
3065:      335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
3066:      345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
3067:      355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
3068:      365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
3069:      375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
3070:      385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
3071:      395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
3072:      405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
3073:      415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
3074:      425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
3075:      435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
3076:      445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
3077:      455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
3078:      465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
3079:      475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
3080:      485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
3081:      495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
3082:      505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
3083:      515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
3084:      525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
3085:      535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
3086:      545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
3087:      555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
3088:      565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
3089:      575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
3090:      585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
3091:      595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
3092:      605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
3093:      615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
3094:      625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
3095:      635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
3096:      645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
3097:      655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
3098:      665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
3099:      675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
3100:      685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
3101:      695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
3102:      705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
3103:      715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
3104:      725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
3105:      735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
3106:      745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
3107:      755,   756,   757,   758,   759,    60,    62,    61,   760,    43,
3108:       45,    42,    47,    37,    94,   761,    91,    93,    40,    41,
3109:       46,    59,    44,    63,    35,    36,   123,   125,    58
3110: };
3111: # endif
3112: 
3113: /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
3114: static const yytype_uint16 yyr1[] =
3115: {
3116:        0,   529,   530,   531,   531,   532,   532,   532,   532,   532,
3117:      532,   532,   532,   532,   532,   532,   532,   532,   532,   532,
3118:      532,   532,   532,   532,   532,   532,   532,   532,   532,   532,
3119:      532,   532,   532,   532,   532,   532,   532,   532,   532,   532,
3120:      532,   532,   532,   532,   532,   532,   532,   533,   533,   533,
3121:      533,   533,   533,   533,   533,   534,   534,   535,   535,   536,
3122:      536,   536,   536,   537,   537,   538,   538,   538,   538,   538,
3123:      538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
3124:      538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
3125:      538,   538,   538,   538,   539,   539,   540,   540,   540,   540,
3126:      541,   541,   542,   543,   543,   543,   544,   544,   544,   544,
3127:      545,   545,   546,   546,   546,   547,   547,   548,   549,   549,
3128:      550,   551,   552,   552,   552,   552,   553,   553,   553,   553,
3129:      553,   553,   553,   553,   553,   553,   553,   553,   553,   554,
3130:      554,   555,   556,   556,   556,   556,   556,   557,   557,   558,
3131:      558,   558,   559,   559,   559,   560,   560,   561,   562,   562,
3132:      563,   563,   563,   564,   564,   564,   565,   565,   565,   566,
3133:      566,   567,   567,   568,   568,   569,   569,   570,   570,   571,
3134:      571,   572,   572,   573,   573,   574,   574,   575,   576,   576,
3135:      576,   577,   577,   578,   578,   579,   579,   579,   580,   580,
3136:      580,   581,   581,   582,   582,   582,   583,   583,   584,   584,
3137:      584,   585,   585,   586,   587,   587,   587,   588,   588,   589,
3138:      589,   590,   590,   591,   591,   592,   592,   593,   593,   593,
3139:      594,   594,   594,   594,   595,   595,   595,   595,   595,   595,
3140:      595,   595,   595,   595,   595,   595,   595,   595,   596,   596,
3141:      597,   597,   597,   598,   598,   599,   599,   600,   600,   600,
3142:      600,   600,   600,   601,   601,   601,   602,   602,   602,   603,
3143:      604,   604,   604,   605,   605,   606,   606,   606,   606,   606,
3144:      606,   607,   607,   608,   609,   609,   609,   609,   609,   610,
3145:      610,   610,   610,   611,   611,   611,   611,   611,   611,   611,
3146:      611,   612,   612,   613,   613,   614,   614,   614,   615,   616,
3147:      617,   617,   617,   617,   617,   618,   618,   618,   618,   619,
3148:      620,   620,   621,   621,   622,   622,   622,   622,   622,   622,
3149:      622,   622,   623,   623,   624,   625,   625,   625,   625,   626,
3150:      626,   626,   626,   627,   628,   628,   628,   629,   630,   630,
3151:      630,   630,   630,   630,   631,   631,   632,   632,   633,   634,
3152:      634,   634,   635,   635,   636,   636,   637,   637,   637,   638,
3153:      639,   639,   640,   640,   641,   642,   642,   642,   642,   643,
3154:      643,   644,   644,   645,   645,   645,   646,   646,   646,   646,
3155:      646,   646,   647,   647,   648,   648,   648,   648,   649,   650,
3156:      650,   650,   650,   650,   650,   650,   650,   651,   651,   652,
3157:      652,   652,   652,   652,   652,   653,   653,   653,   653,   653,
3158:      653,   653,   653,   653,   653,   653,   653,   653,   653,   653,
3159:      653,   653,   653,   654,   654,   654,   654,   654,   654,   655,
3160:      655,   656,   656,   656,   657,   657,   657,   658,   658,   658,
3161:      658,   658,   658,   659,   660,   661,   661,   662,   662,   663,
3162:      664,   664,   665,   665,   666,   666,   667,   668,   668,   668,
3163:      669,   669,   669,   670,   670,   671,   671,   672,   672,   673,
3164:      673,   674,   674,   675,   675,   676,   676,   677,   677,   677,
3165:      677,   677,   677,   677,   677,   678,   679,   679,   680,   680,
3166:      681,   681,   682,   682,   682,   682,   682,   682,   682,   682,
3167:      682,   682,   682,   682,   682,   682,   682,   682,   683,   684,
3168:      684,   684,   684,   684,   685,   685,   686,   686,   687,   687,
3169:      687,   688,   688,   688,   688,   688,   688,   688,   688,   689,
3170:      689,   690,   690,   691,   691,   691,   691,   691,   691,   691,
3171:      691,   691,   691,   691,   691,   691,   691,   691,   691,   691,
3172:      691,   691,   692,   692,   693,   693,   694,   694,   695,   695,
3173:      695,   696,   696,   697,   697,   698,   698,   698,   699,   699,
3174:      700,   701,   701,   701,   702,   702,   703,   703,   703,   703,
3175:      703,   703,   703,   703,   703,   704,   704,   705,   705,   705,
3176:      706,   707,   707,   708,   708,   709,   709,   709,   710,   710,
3177:      711,   711,   712,   712,   713,   713,   714,   714,   714,   715,
3178:      715,   715,   716,   716,   716,   716,   717,   717,   718,   718,
3179:      718,   718,   719,   719,   720,   720,   720,   720,   720,   720,
3180:      721,   721,   722,   722,   723,   723,   723,   723,   724,   725,
3181:      725,   726,   726,   727,   727,   727,   727,   727,   728,   729,
3182:      729,   729,   730,   730,   731,   731,   732,   732,   733,   733,
3183:      733,   734,   734,   735,   735,   736,   736,   736,   736,   736,
3184:      737,   738,   739,   740,   741,   741,   742,   742,   743,   743,
3185:      744,   744,   745,   745,   746,   746,   747,   748,   748,   748,
3186:      748,   749,   749,   750,   750,   750,   751,   751,   752,   752,
3187:      753,   753,   754,   754,   755,   755,   756,   756,   756,   756,
3188:      756,   756,   756,   756,   756,   756,   757,   757,   758,   758,
3189:      758,   759,   759,   760,   760,   760,   760,   761,   761,   762,
3190:      762,   763,   763,   764,   765,   765,   766,   766,   766,   766,
3191:      766,   766,   766,   766,   766,   766,   766,   767,   767,   767,
3192:      767,   768,   768,   769,   769,   769,   769,   769,   770,   770,
3193:      770,   770,   770,   770,   771,   771,   772,   772,   773,   773,
3194:      773,   773,   774,   774,   775,   776,   776,   777,   777,   778,
3195:      778,   779,   779,   780,   780,   781,   782,   782,   783,   783,
3196:      784,   784,   785,   785,   786,   786,   786,   786,   786,   786,
3197:      786,   786,   786,   786,   787,   787,   788,   788,   788,   789,
3198:      789,   789,   789,   789,   789,   789,   790,   790,   790,   790,
3199:      791,   792,   792,   793,   793,   793,   793,   793,   793,   793,
3200:      793,   793,   793,   793,   794,   794,   795,   795,   796,   796,
3201:      797,   798,   799,   799,   800,   800,   801,   802,   803,   803,
3202:      803,   803,   803,   803,   804,   804,   805,   805,   805,   805,
3203:      806,   807,   807,   807,   808,   808,   809,   809,   810,   810,
3204:      811,   811,   812,   812,   813,   813,   814,   814,   815,   815,
3205:      816,   816,   817,   817,   818,   818,   819,   819,   820,   820,
3206:      821,   821,   821,   821,   821,   821,   821,   821,   821,   821,
3207:      821,   821,   821,   821,   821,   821,   821,   821,   821,   821,
3208:      821,   822,   822,   822,   822,   822,   822,   822,   822,   822,
3209:      822,   822,   822,   822,   822,   822,   822,   822,   822,   822,
3210:      822,   822,   822,   822,   822,   822,   822,   822,   822,   822,
3211:      822,   822,   822,   822,   822,   822,   822,   822,   822,   822,
3212:      822,   822,   822,   822,   822,   822,   822,   822,   822,   822,
3213:      822,   822,   822,   822,   822,   822,   822,   822,   822,   822,
3214:      822,   822,   822,   822,   822,   822,   822,   822,   822,   822,
3215:      822,   822,   823,   823,   823,   823,   823,   823,   823,   823,
3216:      823,   823,   823,   823,   823,   823,   823,   823,   823,   823,
3217:      823,   823,   823,   823,   823,   823,   823,   824,   824,   825,
3218:      825,   825,   825,   825,   825,   826,   826,   826,   827,   827,
3219:      827,   827,   827,   827,   827,   827,   827,   827,   827,   827,
3220:      828,   829,   830,   831,   831,   831,   831,   831,   831,   832,
3221:      832,   833,   833,   834,   834,   834,   834,   834,   834,   834,
3222:      834,   834,   834,   834,   834,   834,   834,   835,   836,   836,
3223:      837,   837,   838,   838,   838,   839,   839,   840,   840,   841,
3224:      841,   842,   843,   843,   843,   844,   845,   845,   846,   846,
3225:      847,   847,   847,   847,   848,   848,   849,   849,   849,   849,
3226:      849,   850,   850,   850,   850,   850,   851,   851,   852,   852,
3227:      853,   854,   854,   855,   855,   856,   857,   857,   858,   858,
3228:      859,   859,   860,   860,   860,   861,   861,   862,   862,   862,
3229:      862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
3230:      862,   863,   863,   864,   864,   865,   865,   865,   865,   865,
3231:      865,   865,   865,   866,   866,   867,   867,   868,   868,   869,
3232:      869,   870,   870,   871,   871,   872,   872,   873,   873,   873,
3233:      874,   874,   875,   875,   876,   876,   876,   876,   876,   876,
3234:      876,   876,   876,   876,   876,   876,   876,   876,   876,   877,
3235:      877,   878,   879,   879,   880,   880,   880,   880,   880,   880,
3236:      881,   882,   883,   883,   883,   884,   884,   884,   884,   885,
3237:      886,   886,   887,   888,   888,   889,   889,   890,   890,   891,
3238:      892,   892,   550,   550,   550,   550,   893,   893,   894,   894,
3239:      895,   895,   895,   896,   896,   896,   896,   896,   897,   897,
3240:      898,   898,   899,   899,   900,   900,   901,   901,   902,   902,
3241:      902,   903,   903,   904,   904,   905,   906,   906,   907,   907,
3242:      908,   908,   908,   909,   909,   910,   910,   911,   911,   912,
3243:      912,   913,   914,   914,   915,   915,   915,   915,   915,   915,
3244:      915,   915,   915,   915,   915,   915,   915,   915,   916,   917,
3245:      917,   917,   918,   918,   918,   919,   919,   919,   920,   920,
3246:      921,   921,   922,   922,   923,   924,   924,   925,   926,   926,
3247:      927,   927,   927,   927,   927,   927,   928,   928,   928,   929,
3248:      929,   930,   930,   930,   930,   931,   931,   932,   933,   933,
3249:      934,   934,   935,   935,   936,   936,   937,   937,   938,   938,
3250:      938,   938,   938,   938,   939,   939,   940,   940,   941,   941,
3251:      942,   942,   943,   943,   943,   943,   943,   943,   943,   943,
3252:      943,   943,   944,   944,   945,   946,   946,   946,   946,   947,
3253:      947,   948,   948,   948,   949,   949,   949,   949,   949,   949,
3254:      949,   949,   949,   949,   949,   949,   949,   949,   949,   949,
3255:      949,   949,   949,   949,   949,   949,   949,   949,   949,   949,
3256:      949,   949,   949,   949,   949,   950,   950,   950,   951,   951,
3257:      952,   952,   953,   953,   954,   954,   954,   954,   955,   956,
3258:      956,   957,   957,   957,   957,   957,   958,   958,   958,   958,
3259:      959,   959,   960,   961,   961,   961,   961,   961,   961,   961,
3260:      962,   962,   963,   963,   963,   963,   964,   964,   965,   965,
3261:      966,   966,   966,   967,   967,   967,   967,   967,   968,   968,
3262:      968,   968,   968,   969,   969,   970,   970,   971,   971,   972,
3263:      972,   973,   973,   973,   974,   974,   975,   975,   976,   976,
3264:      977,   977,   978,   978,   978,   979,   979,   980,   980,   981,
3265:      981,   981,   981,   981,   982,   982,   983,   983,   983,   984,
3266:      984,   984,   984,   984,   984,   984,   984,   985,   985,   986,
3267:      986,   987,   987,   988,   988,   989,   989,   990,   991,   991,
3268:      991,   991,   991,   992,   992,   992,   992,   993,   993,   993,
3269:      994,   994,   994,   995,   996,   996,   996,   996,   996,   996,
3270:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3271:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3272:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3273:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3274:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3275:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3276:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3277:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3278:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3279:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3280:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3281:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3282:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3283:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3284:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3285:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3286:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3287:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3288:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3289:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3290:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3291:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3292:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3293:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3294:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3295:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3296:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3297:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3298:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3299:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3300:      996,   996,   996,   996,   996,   996,   996,   996,   996,   996,
3301:      996,   996,   996,   996,   996,   996,   996,   996,   997,   997,
3302:      997,   997,   997,   997,   997,   997,   997,   997,   997,   997,
3303:      997,   997,   997,   997,   997,   997,   997,   997,   997,   997,
3304:      997,   997,   997,   997,   997,   997,   997,   997,   997,   997,
3305:      997,   997,   997,   997,   997,   997,   997,   997,   997,   997,
3306:      997,   997,   997,   997,   997,   997,   997,   997,   997,   997,
3307:      997,   997,   998,   998,   998,   998,   998,   998,   998,   998,
3308:      998,   998,   998,   998,   998,   998,   998,   998,   998,   998,
3309:      998,   998,   998,   998,   998,   998,   998,   998,   998,   998,
3310:      999,   999,   999,   999,   999,   999,   999,   999,   999,   999,
3311:      999,   999,   999,   999,   999,   999,   999,   999,   999,   999,
3312:      999,   999,   999,   999,   999,   999,   999,   999,   999,  1000,
3313:     1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,
3314:     1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,
3315:     1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,
3316:     1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,
3317:     1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,
3318:     1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,
3319:     1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,
3320:     1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,
3321:     1001,  1001,  1001,  1001,  1001,  1001,  1001,  1001,  1001,  1001,
3322:     1001,  1001,  1001,  1001,  1001,  1001,  1001,  1001,  1001,  1001,
3323:     1001,  1001,  1001,  1001,  1001,  1001,  1001,  1001,  1001,  1001,
3324:     1001,  1001,  1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,
3325:     1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,
3326:     1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,
3327:     1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,
3328:     1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,
3329:     1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,
3330:     1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,
3331:     1002,  1002,  1002,  1002,  1002,  1002,  1002
3332: };
3333: 
3334: /* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
3335: static const yytype_uint8 yyr2[] =
3336: {
3337:        0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
3338:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3339:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3340:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3341:        1,     1,     1,     1,     1,     1,     0,     4,     6,     4,
3342:        6,     4,     6,     4,     6,     1,     2,     3,     2,     1,
3343:        3,     2,     3,     1,     3,     2,     5,     3,     6,     4,
3344:        6,     6,     6,     5,     5,     6,     9,     4,     5,     7,
3345:        6,     4,     8,     4,     2,     4,     3,     6,     4,     2,
3346:        2,     2,     2,     1,     2,     0,     1,     2,     2,     2,
3347:        1,     3,     4,     2,     1,     0,     2,     3,     2,     3,
3348:        1,     2,     1,     1,     1,     1,     1,     1,     1,     2,
3349:        2,     1,     1,     1,     1,     1,     6,     6,     8,     6,
3350:        8,     6,     8,     6,     8,     8,    10,     8,    10,     1,
3351:        0,     9,     1,     4,     4,     7,     2,     1,     3,     2,
3352:        2,     0,     4,     3,     0,     1,     0,     2,     3,     5,
3353:        2,     2,     0,     8,     5,     0,     5,     5,     7,     2,
3354:        0,     1,     1,     1,     3,     2,     0,     1,     0,     1,
3355:        3,     1,     3,     1,     2,     1,     3,     2,     6,     8,
3356:        5,     1,     0,     1,     3,     2,     4,     5,     5,     8,
3357:        7,     1,     0,     8,    11,    10,     0,     1,     0,     1,
3358:        1,     0,     2,     4,     3,     9,    12,     1,     3,     1,
3359:        3,     3,     0,     4,     6,     1,     2,     1,     1,     0,
3360:        1,     2,     2,     1,     2,     2,     1,     2,     3,     2,
3361:        2,     2,     2,     3,     3,     3,     1,     3,     1,     0,
3362:        1,     2,     2,     5,     7,     0,     2,     2,     3,     3,
3363:        2,     2,     2,     1,     1,     0,     2,     2,     0,     2,
3364:        9,    12,    11,     0,     2,     1,     1,     1,     1,     1,
3365:        1,     3,     0,     1,     2,     1,     1,     2,     2,     3,
3366:        1,     1,     2,     2,     1,     2,     3,     5,     3,     2,
3367:        5,     1,     1,     1,     0,     5,     7,     5,     2,     3,
3368:        1,     1,     2,     2,     0,     3,     4,     4,     0,     3,
3369:        2,     0,     3,     1,     1,     1,     1,     1,     1,     1,
3370:        1,     1,     1,     3,     3,     1,     2,     2,     2,     2,
3371:        2,     2,     0,     3,     3,     3,     0,     1,     2,     1,
3372:        2,     2,     2,     2,     3,     4,     1,     3,     1,     1,
3373:        1,     1,     3,     1,     2,     0,     1,     2,     0,     1,
3374:        3,     0,     2,     0,     3,     3,     1,     5,     3,     1,
3375:        3,     1,     2,     1,     4,     5,     5,     6,     3,     7,
3376:        4,    11,     1,     3,     2,     2,     2,     0,     3,     1,
3377:        1,     2,     2,     2,     2,     1,     0,     1,     2,     6,
3378:        4,     6,     4,     6,     8,     1,     1,     1,     1,     2,
3379:        1,     2,     1,     2,     1,     1,     1,     1,     3,     3,
3380:        3,     3,     1,     2,     2,     1,     3,     1,     1,     1,
3381:        3,     1,     1,     0,     1,     1,     1,     5,     8,     7,
3382:        5,     8,     7,     4,     4,     1,     3,     1,     1,     3,
3383:        1,     3,     1,     1,     2,     3,     8,    11,     9,     7,
3384:        0,     3,     3,     1,     1,     3,     0,     1,     3,     1,
3385:        0,     1,     0,     1,     0,     1,     3,     1,     1,     1,
3386:        1,     3,     1,     1,     0,     2,     2,     0,     2,     0,
3387:        1,     0,     1,     1,     1,     3,     3,     1,     1,     3,
3388:        3,     3,     3,     3,     3,     4,     3,     2,     1,     1,
3389:        1,     1,     3,     1,     1,     3,     1,     1,     3,     3,
3390:        3,     1,     2,     4,     4,     2,     3,     5,     5,     1,
3391:        1,     3,     0,    11,    11,    10,    12,     1,     2,     5,
3392:        4,     4,     4,     4,     7,     5,     4,     7,     6,     9,
3393:        9,     4,     1,     1,     1,     1,     1,     1,     1,     5,
3394:        1,     1,     3,     1,     2,     2,     2,     3,     1,     3,
3395:        7,     1,     2,     0,     2,     0,     3,     3,     4,     4,
3396:        4,     4,     3,     2,     1,     1,     0,     1,     1,     0,
3397:        2,     1,     5,     1,     0,     2,     2,     0,     1,     0,
3398:        3,     5,     1,     3,     4,     3,     1,     1,     0,     2,
3399:        2,     0,     2,     2,     1,     1,     1,     0,     2,     4,
3400:        5,     4,     2,     3,     2,     2,     2,     2,     1,     2,
3401:        3,     0,     1,     0,     5,     1,     4,     6,     2,     1,
3402:        0,     4,     0,     1,     1,     2,     2,     2,     1,     1,
3403:        2,     2,     1,     1,     1,     1,     1,     1,     3,     3,
3404:        0,     1,     3,     1,     2,     1,     1,     1,     1,     1,
3405:        2,     4,     4,     5,     1,     1,     2,     0,     2,     0,
3406:        1,     3,     1,     0,     1,     2,     3,     2,     4,     2,
3407:        3,     2,     0,     1,     2,     0,     4,     5,     1,     2,
3408:        2,     0,     1,     3,     1,     2,     3,     3,     3,     3,
3409:        3,     3,     1,     4,     9,     9,     3,     0,     2,     2,
3410:        0,     5,     3,     0,     1,     1,     3,     5,     3,     1,
3411:        2,     1,     3,     5,     1,     2,     3,     4,     5,     4,
3412:        5,     4,     6,     5,     4,     5,     5,     5,     2,     4,
3413:        1,     1,     0,     1,     4,     5,     4,     0,     2,     2,
3414:        2,     1,     1,     1,     1,     0,     4,     2,     1,     2,
3415:        2,     4,     2,     6,     2,     1,     3,     4,     0,     2,
3416:        0,     2,     0,     1,     3,     3,     2,     0,     2,     4,
3417:        1,     1,     1,     0,     2,     3,     5,     6,     2,     3,
3418:        1,     5,     5,     5,     3,     3,     3,     4,     0,     1,
3419:        1,     1,     1,     1,     2,     4,     1,     1,     1,     1,
3420:        2,     3,     0,     1,     1,     1,     1,     1,     2,     2,
3421:        2,     2,     2,     1,     3,     0,     1,     1,     1,     1,
3422:        5,     2,     1,     1,     1,     1,     4,     1,     2,     2,
3423:        1,     3,     3,     2,     1,     0,     5,     2,     5,     2,
3424:        1,     3,     3,     0,     1,     1,     1,     1,     1,     1,
3425:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3426:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3427:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3428:        1,     1,     1,     3,     3,     3,     3,     3,     3,     3,
3429:        0,     1,     3,     3,     5,     2,     2,     3,     3,     3,
3430:        3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
3431:        3,     3,     2,     2,     3,     3,     2,     2,     3,     3,
3432:        5,     4,     6,     3,     5,     4,     6,     4,     6,     5,
3433:        7,     3,     2,     4,     3,     2,     3,     3,     3,     3,
3434:        4,     3,     4,     3,     4,     5,     6,     6,     7,     6,
3435:        7,     6,     7,     3,     4,     4,     6,     1,     5,     4,
3436:        3,     5,     1,     3,     2,     2,     3,     3,     3,     3,
3437:        3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
3438:        3,     2,     2,     5,     6,     6,     7,     1,     2,     1,
3439:        1,     1,     2,     2,     4,     3,     1,     1,     1,     1,
3440:        1,     1,     1,     1,     1,     1,     2,     4,     2,     2,
3441:        3,     3,     4,     3,     6,     7,     9,     7,     7,     5,
3442:        1,     1,     1,     5,     6,     6,     4,     4,     4,     4,
3443:        6,     5,     5,     5,     4,     6,     4,     1,     7,     9,
3444:        5,     0,     5,     4,     0,     1,     0,     2,     0,     1,
3445:        3,     3,     2,     2,     0,     6,     1,     0,     3,     0,
3446:        3,     3,     3,     0,     1,     4,     2,     2,     2,     2,
3447:        2,     3,     2,     2,     3,     0,     4,     3,     1,     5,
3448:        3,     1,     3,     1,     2,     3,     1,     3,     1,     2,
3449:        1,     0,     1,     1,     1,     1,     1,     1,     1,     1,
3450:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3451:        1,     1,     4,     1,     4,     1,     4,     1,     2,     1,
3452:        2,     1,     2,     1,     3,     1,     3,     1,     2,     1,
3453:        3,     1,     2,     1,     0,     1,     3,     1,     3,     3,
3454:        1,     3,     3,     0,     1,     1,     1,     1,     1,     1,
3455:        1,     1,     1,     1,     1,     1,     1,     1,     1,     4,
3456:        3,     2,     3,     0,     3,     3,     2,     2,     1,     0,
3457:        2,     2,     3,     2,     1,     1,     3,     1,     1,     5,
3458:        1,     2,     4,     2,     0,     1,     0,     1,     3,     1,
3459:        1,     2,     3,     5,     7,     7,     1,     0,     0,     2,
3460:        0,     2,     3,     3,     3,     5,     7,     7,     0,     2,
3461:        1,     0,     1,     0,     1,     3,     1,     2,     3,     2,
3462:        1,     4,     2,     1,     0,     3,     1,     3,     1,     2,
3463:        4,     2,     0,     1,     3,     1,     3,     1,     2,     1,
3464:        3,     1,     1,     2,     1,     1,     2,     1,     1,     2,
3465:        7,     2,     5,     3,     3,     1,     1,     1,     1,     1,
3466:        1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
3467:        2,     3,     3,     0,     1,     1,     1,     5,     3,     0,
3468:        1,     1,     1,     1,     1,     1,     4,     7,     6,     2,
3469:        0,     1,     1,     1,     1,    13,    16,     1,     2,     0,
3470:        1,     0,     1,     0,     2,     0,     1,     0,     6,     8,
3471:        6,     8,     6,     8,     3,     2,     1,     0,     6,     6,
3472:        1,     1,     1,     1,     1,     1,     2,     1,     1,     1,
3473:        1,     1,     4,     6,     3,     2,     4,     3,     5,     1,
3474:        0,     1,     1,     0,     1,     1,     1,     1,     1,     1,
3475:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3476:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3477:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3478:        1,     3,     1,     1,     1,     1,     1,     1,     2,     1,
3479:        1,     2,     3,     3,     3,     3,     1,     3,     3,     2,
3480:        3,     3,     1,     1,     1,     3,     5,     1,     1,     1,
3481:        1,     3,     2,     4,     6,     6,     0,     1,     1,     1,
3482:        0,     2,     2,     4,     6,     5,     4,     6,     1,     1,
3483:        1,     1,     1,     1,     0,     1,     3,     1,     0,     7,
3484:        3,     1,     2,     3,     2,     0,     2,     0,     2,     4,
3485:        5,     8,     2,     3,     5,     1,     0,     2,     0,     2,
3486:        3,     3,     3,     3,     1,     1,     1,     2,     3,     2,
3487:        2,     2,     2,     3,     4,     3,     1,     1,     1,     1,
3488:        1,     1,     0,     1,     3,     1,     3,     2,     9,    12,
3489:       11,    12,    14,     3,     4,     4,     0,     7,    10,     9,
3490:        2,     3,     0,     4,     1,     1,     1,     1,     1,     1,
3491:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3492:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3493:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3494:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3495:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3496:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3497:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3498:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3499:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3500:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3501:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3502:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3503:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3504:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3505:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3506:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3507:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3508:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3509:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3510:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3511:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3512:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3513:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3514:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3515:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3516:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3517:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3518:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3519:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3520:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3521:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3522:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3523:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3524:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3525:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3526:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3527:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3528:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3529:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3530:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3531:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3532:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3533:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3534:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3535:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3536:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3537:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3538:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3539:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3540:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3541:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3542:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3543:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3544:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3545:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3546:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3547:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3548:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3549:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3550:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3551:        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
3552:        1,     1,     1,     1,     1,     1,     1
3553: };
3554: 
3555: /* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
3556:    STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
3557:    means the default is an error.  */
3558: static const yytype_uint16 yydefact[] =
3559: {
3560:      156,   265,     0,  1413,  1412,  1486,   265,     0,  1347,     0,
3561:      265,   501,   406,     0,  1508,  1507,     0,   208,   265,     0,
3562:      156,     0,  1447,     0,     0,     0,   564,   567,   565,     0,
3563:        0,     0,   265,   604,     0,  1509,   265,     0,     0,   596,
3564:      566,     0,  1464,     0,     0,     0,     0,     0,     2,     4,
3565:        7,    21,    35,    31,     0,    20,    33,    18,    17,    38,
3566:       26,     6,    24,    37,    40,    19,    25,    15,    39,    13,
3567:       36,   540,   526,   609,   539,     0,     0,   155,   708,   547,
3568:       34,    16,    30,     5,    11,    12,    28,    29,    27,  1370,
3569:       43,    32,     0,    41,    22,     8,     9,    23,    42,    44,
3570:     1510,  1506,    10,    45,    14,   264,   263,   257,     0,     0,
3571:        0,     0,     0,  1485,     0,     0,   268,   112,  1534,  1535,
3572:     1536,  1537,  1538,  1539,  1540,  1541,  1542,  1543,  1544,  1912,
3573:     1545,  1546,  1547,  1548,  1549,  1913,  1550,  1551,  1552,  1858,
3574:     1859,  1914,  1860,  1861,  1553,  1554,  1555,  1556,  1557,  1558,
3575:     1559,  1560,  1561,  1562,  1862,  1863,  1563,  1564,  1565,  1566,
3576:     1567,  1864,  1915,  1865,  1568,  1569,  1570,  1571,  1572,  1916,
3577:     1573,  1574,  1575,  1576,  1577,  1578,  1579,  1580,  1581,  1917,
3578:     1582,  1583,  1584,  1585,  1586,  1587,  1588,  1589,  1590,  1591,
3579:     1866,  1592,  1593,  1867,  1594,  1595,  1596,  1597,  1598,  1599,
3580:     1600,  1601,  1602,  1603,  1604,  1605,  1606,  1607,  1608,  1609,
3581:     1610,  1611,  1612,  1613,  1614,  1615,  1616,  1617,  1618,  1619,
3582:     1620,  1868,  1621,  1622,  1623,  1624,  1625,  1626,  1869,  1627,
3583:     1628,  1629,  1870,  1630,  1631,  1632,  1918,  1919,  1633,  1634,
3584:     1871,  1921,  1635,  1636,  1872,  1873,  1637,  1638,  1639,  1640,
3585:     1641,  1642,  1643,  1644,  1645,  1922,  1646,  1647,  1648,  1649,
3586:     1650,  1651,  1652,  1653,  1654,  1655,  1656,  1657,  1923,  1874,
3587:     1658,  1659,  1660,  1661,  1662,  1875,  1876,  1877,  1663,  1924,
3588:     1925,  1664,  1926,  1665,  1666,  1667,  1668,  1669,  1670,  1671,
3589:     1927,  1672,  1928,  1673,  1674,  1675,  1676,  1677,  1678,  1679,
3590:     1680,  1878,  1681,  1682,  1683,  1684,  1685,  1686,  1687,  1688,
3591:     1689,  1690,  1691,  1692,  1693,  1694,  1695,  1696,  1697,  1698,
3592:     1699,  1700,  1879,  1930,  1880,  1701,  1702,  1703,  1881,  1704,
3593:     1705,  1931,  1706,  1882,  1707,  1883,  1708,  1709,  1710,  1711,
3594:     1712,  1713,  1714,  1715,  1716,  1717,  1884,  1932,  1718,  1933,
3595:     1885,  1719,  1720,  1721,  1722,  1723,  1724,  1725,  1726,  1727,
3596:     1728,  1729,  1730,  1731,  1886,  1934,  1732,  1733,  1887,  1734,
3597:     1735,  1736,  1737,  1738,  1739,  1740,  1741,  1742,  1743,  1744,
3598:     1745,  1746,  1747,  1888,  1748,  1749,  1750,  1751,  1752,  1753,
3599:     1754,  1755,  1756,  1757,  1758,  1759,  1760,  1761,  1762,  1763,
3600:     1764,  1765,  1766,  1935,  1767,  1768,  1769,  1889,  1770,  1771,
3601:     1772,  1773,  1774,  1775,  1776,  1777,  1778,  1779,  1780,  1781,
3602:     1782,  1783,  1784,  1785,  1786,  1787,  1788,  1890,  1789,  1790,
3603:     1936,  1791,  1792,  1891,  1793,  1794,  1795,  1796,  1797,  1798,
3604:     1799,  1800,  1801,  1802,  1803,  1804,  1805,  1892,  1806,  1893,
3605:     1807,  1808,  1809,  1938,  1810,  1811,  1812,  1813,  1814,  1815,
3606:     1894,  1895,  1816,  1817,  1896,  1818,  1897,  1819,  1820,  1898,
3607:     1821,  1822,  1823,  1824,  1825,  1826,  1827,  1828,  1829,  1830,
3608:     1831,  1832,  1833,  1834,  1835,  1836,  1837,  1899,  1900,  1838,
3609:     1839,  1939,  1840,  1841,  1842,  1843,  1844,  1845,  1846,  1847,
3610:     1848,  1849,  1850,  1851,  1852,  1853,  1901,  1902,  1903,  1904,
3611:     1905,  1906,  1907,  1908,  1909,  1910,  1911,  1854,  1855,  1856,
3612:     1857,     0,  1517,     0,  1272,   113,   114,  1294,   112,  1871,
3613:     1878,  1892,  1346,  1345,   113,     0,   260,   500,     0,     0,
3614:        0,     0,     0,     0,   210,     0,   400,   399,     0,  1336,
3615:      405,     0,     0,     0,   116,   108,  1734,   115,  1271,   106,
3616:      122,  2082,  2083,  2084,  2085,  1969,  2086,  2087,  2088,  2089,
3617:     1970,  2090,  1971,  1972,  1973,  1974,  1975,  1976,  2091,  2092,
3618:     2093,  1978,  1977,  2094,  1979,  2095,  1980,  2096,  1981,  1982,
3619:     2097,  2098,  1983,  1588,  1984,  1985,  2099,  2100,  2101,  2102,
3620:     2103,  2104,  2105,  2106,  2107,  1986,  1987,  2108,  2109,  1988,
3621:     2110,  2111,  1989,  2112,  1990,  1991,  1992,  2113,  2114,  1993,
3622:     1994,  2115,  1995,  2116,  2117,  1996,  1997,  2000,  1998,  2118,
3623:     1999,  2119,  2001,  2002,  2003,  2120,  2121,  2004,  2005,  2122,
3624:     2006,  2007,  2008,  2009,  2010,  2123,  2011,  2124,  2012,  2013,
3625:     2125,  2126,  2127,  2128,  2129,  2015,  2014,  2016,  2017,  2130,
3626:     2131,  2132,  2133,  2018,  2019,  2020,  2134,  2135,  2021,  2136,
3627:     2137,  2022,  2023,  2138,  2024,  2025,  2139,  2026,  2027,  2140,
3628:     2028,  2029,  2141,  2142,  2143,  2030,  2144,  2031,  2032,  2145,
3629:     2146,  2033,  2034,  2147,  2035,  2148,  2149,  2150,  2151,  2036,
3630:     2037,  2152,  2038,  2153,  2154,  2155,  2156,  2039,  2040,  2041,
3631:     2042,  2043,  2044,  2045,  2046,  2047,  2048,  2049,  1482,   124,
3632:      123,   125,     0,   424,   425,     0,   435,     0,   417,   422,
3633:      418,     0,   444,   437,   445,   426,   416,   438,   427,   415,
3634:      209,     0,   446,   432,   420,     0,     0,     0,     0,   261,
3635:      222,   406,     0,   156,     0,  1376,  1386,  1395,  1391,  1385,
3636:     1393,  1383,  1399,  1389,  1375,  1397,  1384,  1388,  1381,  1398,
3637:     1379,  1396,  1394,  1382,  1390,  1374,  1378,  1365,  1370,  1402,
3638:     1392,  1400,  1387,  1401,  1403,  1377,  1404,  1380,     0,  1347,
3639:        0,  1864,  1915,  1869,     0,  1882,     0,  1885,  1886,  1770,
3640:     1893,  1896,  1897,  1898,  1899,     0,   778,   115,   110,   762,
3641:        0,   542,   712,   722,   762,   767,  1051,   790,  1052,     0,
3642:      117,  1449,  1448,  1442,   195,  1309,  1495,  1635,  1675,  1787,
3643:     1894,  1816,  1838,  1513,  1496,  1489,  1494,   262,   603,   601,
3644:        0,  1243,  1635,  1675,  1774,  1787,  1894,  1838,  1421,  1426,
3645:        0,   268,  1515,  1500,     0,  1501,   115,   548,   595,     0,
3646:      269,  1463,     0,  1468,     0,  1750,   575,   578,  1303,   576,
3647:      540,     0,     0,     1,   156,     0,   162,     0,   599,   599,
3648:        0,   599,     0,   532,     0,     0,   540,   535,   539,   709,
3649:     1369,  1478,     0,  1512,  1894,  1816,  1499,  1502,  1644,     0,
3650:        0,  1644,     0,  1644,     0,  1644,     0,     0,  1488,     0,
3651:      258,  1227,     0,  1273,   118,     0,     0,  1358,  1354,  1359,
3652:     1355,  1360,  1353,  1352,  1361,  1357,     0,     0,     0,   371,
3653:      404,   403,   402,   401,   406,  1644,  1320,     0,   206,   462,
3654:      463,     0,     0,     0,     0,     0,  1331,   109,   107,  1644,
3655:     1483,   433,   434,     0,   423,   419,   421,     0,     0,  1644,
3656:     1298,   443,   439,  1644,   443,  1265,  1644,     0,     0,   214,
3657:        0,   399,  1367,  1405,  2036,  1419,     0,  1420,  1410,  1373,
3658:     1406,  1407,   156,     0,   499,  1344,     0,     0,     0,  1173,
3659:      762,   767,     0,     0,   780,     0,  1193,     0,  1199,     0,
3660:        0,     0,   762,   547,     0,   722,   779,   111,     0,   760,
3661:      761,   650,   650,   604,     0,   585,   772,     0,     0,   775,
3662:      773,     0,   775,     0,     0,     0,   775,   771,   730,     0,
3663:      650,     0,   760,   763,   650,     0,   782,  1364,     0,     0,
3664:        0,     0,  1492,  1490,  1491,  1497,     0,  1493,     0,     0,
3665:     1275,  1277,  1278,  1141,  1288,  1029,     0,  1859,  1860,  1861,
3666:     1216,  1862,  1863,  1865,  1866,  1867,   987,  1608,  1868,  1286,
3667:     1870,  1872,  1873,  1875,  1876,  1877,  1878,  1879,  1880,     0,
3668:     1287,  1883,  1713,  1888,  1889,  1891,  1894,  1895,  1285,  1900,
3669:        0,     0,     0,  1254,  1164,     0,  1028,     0,     0,     0,
3670:     1220,  1228,  1021,     0,     0,   826,   827,   848,   849,   828,
3671:      854,   855,   857,   829,     0,  1250,   921,  1017,  1238,  1026,
3672:     1034,  1030,  1031,  1071,  1032,  1050,  1035,  1108,  1027,     0,
3673:     1033,  1019,  1246,   585,  1244,     0,  1020,  1274,   585,  1242,
3674:     1424,  1422,  1429,  1423,     0,  1425,     0,     0,     0,   259,
3675:        0,   111,  1471,  1470,  1462,  1460,  1461,  1459,  1458,  1465,
3676:        0,  1467,  1370,  1159,  1161,     0,   577,     0,     0,     0,
3677:      529,   528,   530,     3,     0,     0,     0,  1625,     0,   597,
3678:      598,     0,     0,     0,     0,     0,     0,     0,     0,   693,
3679:      624,   625,   627,   690,   694,   702,     0,     0,     0,     0,
3680:        0,   536,     0,  1303,  1450,  1511,  1505,  1503,     0,     0,
3681:        0,   140,   140,     0,     0,     0,     0,     0,   100,    49,
3682:       93,     0,     0,     0,     0,   236,   249,     0,     0,     0,
3683:        0,     0,   246,     0,     0,   229,    51,   223,   225,     0,
3684:      140,     0,    47,     0,     0,     0,    53,  1486,     0,   499,
3685:      266,   267,  1226,     0,   120,   121,   119,   112,     0,  2050,
3686:     1912,  1913,  1914,  1915,  1865,  1916,  1917,     0,  1918,  1919,
3687:     1871,  1921,  1922,  1923,  1924,  1925,  1926,  1927,  1928,  1878,
3688:     1930,  1931,  1932,  1933,  1934,  1935,  2076,  1936,  1892,  1938,
3689:     1898,     0,  1939,  1043,  1167,   609,  1165,  1304,     0,   113,
3690:     1291,     0,  1356,     0,     0,     0,     0,   497,     0,     0,
3691:        0,     0,  1316,     0,  1644,   207,   211,     0,  1644,   202,
3692:     1644,   371,     0,  1644,   371,  1644,     0,  1330,  1333,     0,
3693:      436,   431,   429,   428,   430,  1644,   255,     0,     0,  1299,
3694:      441,   442,     0,   410,     0,     0,   412,     0,     0,   219,
3695:        0,   217,     0,   406,   156,     0,   230,  1415,  1416,  1414,
3696:        0,     0,  1409,  1372,   233,   250,  1418,  1408,  1417,  1371,
3697:     1366,     0,     0,  1362,   485,     0,     0,     0,  1174,   897,
3698:      896,   878,   879,   894,   895,   880,   881,   888,   889,   899,
3699:      898,   886,   887,   882,   883,   876,   877,   892,   893,   884,
3700:      885,   890,   891,   874,   875,  1188,  1175,  1176,  1177,  1178,
3701:     1179,  1180,  1181,  1182,  1183,  1184,  1185,  1186,  1187,     0,
3702:        0,   721,   719,     0,     0,     0,     0,     0,     0,  1220,
3703:        0,   992,  1027,     0,     0,     0,  1159,  1198,     0,     0,
3704:        0,     0,     0,     0,  1159,  1204,     0,     0,   746,   758,
3705:        0,   643,   649,   720,   718,     0,  1243,   713,     0,   792,
3706:        0,   772,     0,   771,     0,     0,   774,   768,     0,   769,
3707:        0,     0,     0,     0,   770,     0,     0,     0,     0,     0,
3708:      716,     0,   758,     0,   717,   789,  1432,  1440,   196,     0,
3709:     1295,  1940,  1941,  1942,   836,  1943,   865,   843,   865,   865,
3710:     1944,  1945,  1946,  1947,   832,   832,   845,  1948,  1949,  1950,
3711:     1951,  1952,   833,   834,   870,  1953,  1954,  1955,  1956,  1957,
3712:        0,     0,  1958,   865,  1959,   832,  1960,  1961,  1962,   837,
3713:     1963,   800,  1964,     0,  1965,   835,   801,  1966,   873,   873,
3714:     1967,     0,   860,  1968,     0,  1170,   810,   818,   819,   820,
3715:      821,   846,   847,   822,   852,   853,   823,   920,     0,   832,
3716:     1296,  1297,   156,  1498,  1514,     0,  1164,  1036,   864,   851,
3717:     1215,     0,   859,   858,     0,  1164,   841,   840,   839,  1023,
3718:        0,   838,  1121,   865,   865,   863,   946,   842,     0,     0,
3719:        0,     0,     0,   869,     0,   867,   947,   925,   926,     0,
3720:        0,  1253,  1262,  1159,  1163,     0,  1021,  1159,     0,  1038,
3721:     1039,     0,  1111,  1113,     0,     0,  1221,  1276,  1022,     0,
3722:     1281,     0,     0,   920,   920,  1249,  1141,     0,  1131,  1134,
3723:        0,     0,  1138,  1139,  1140,     0,     0,     0,  1241,     0,
3724:     1149,  1151,     0,     0,   962,  1147,     0,   965,     0,     0,
3725:        0,     0,  1135,  1136,  1137,  1127,  1128,  1129,  1130,  1132,
3726:     1133,  1145,  1126,   943,     0,  1018,     0,  1074,     0,   942,
3727:     1247,   711,     0,  1279,   711,  1434,  1438,  1439,  1433,  1437,
3728:        0,  1428,  1427,  1430,  1431,  1516,     0,  1472,  1456,     0,
3729:     1453,  1162,   706,   579,  1267,     0,   583,  1477,   161,   160,
3730:        0,   213,     0,   552,   551,   618,   610,   612,   618,     0,
3731:      550,     0,   666,   667,     0,     0,     0,     0,   699,   697,
3732:     1275,  1288,   654,   628,   653,     0,     0,   632,     0,   658,
3733:      921,   692,   534,   622,   623,   626,   533,     0,   695,     0,
3734:      705,     0,   571,   573,   556,   570,   568,   553,   561,   693,
3735:      627,     0,  1479,     0,     0,  1443,  1504,     0,     0,     0,
3736:        0,     0,  1644,     0,     0,   803,    84,    65,   323,   139,
3737:        0,     0,     0,     0,     0,     0,     0,    92,    89,    90,
3738:       91,     0,     0,     0,     0,  1295,   234,   235,   248,     0,
3739:      239,   240,   237,   241,   242,     0,     0,   227,   228,     0,
3740:        0,     0,     0,   226,     0,     0,     0,     0,     0,     0,
3741:        0,     0,     0,  1487,  1480,  1222,  1227,   609,   609,   609,
3742:        0,   607,   608,     0,     0,     0,     0,     0,   484,   369,
3743:      379,     0,     0,     0,  1320,   206,     0,     0,     0,     0,
3744:        0,     0,   406,  1323,  1321,  1319,  1322,  1324,  1614,   190,
3745:        0,     0,     0,     0,     0,   198,   201,     0,   368,   342,
3746:        0,     0,  1335,     0,     0,   457,   455,   458,   447,   460,
3747:      450,     0,  1644,   358,  1332,     0,  1484,     0,     0,   253,
3748:      443,  1300,     0,   440,   443,  1266,     0,   443,   221,     0,
3749:        0,  1368,  1411,   231,   251,   232,   252,   499,   494,   524,
3750:        0,   502,   507,   482,     0,   482,     0,   504,   508,   482,
3751:      503,     0,   482,   498,     0,  1066,     0,  1056,     0,     0,
3752:      781,     0,     0,  1057,   994,   995,     0,     0,     0,     0,
3753:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
3754:        0,     0,     0,     0,  1012,  1011,  1058,   785,     0,   788,
3755:        0,     0,  1196,  1197,     0,  1059,     0,     0,  1203,     0,
3756:        0,     0,  1064,     0,   723,     0,     0,     0,   638,   642,
3757:      645,     0,   648,   585,   541,  1635,  1675,     0,   596,   596,
3758:      596,   594,   584,     0,   670,     0,     0,     0,   747,     0,
3759:        0,   749,   751,     0,     0,   754,     0,   729,   728,     0,
3760:        0,     0,     0,   793,     0,  1271,     0,     0,   197,     0,
3761:        0,     0,   818,     0,     0,     0,   808,   804,     0,   900,
3762:      901,   902,   903,   904,   905,   906,   907,   908,   909,   910,
3763:      911,   912,   824,  1308,     0,   830,  1311,     0,  1312,  1313,
3764:     1310,  1307,  1314,  1315,     0,     0,     0,     0,  1214,  1210,
3765:        0,     0,     0,     0,  1116,  1118,  1120,     0,   862,   861,
3766:     1125,  1131,  1134,  1138,  1139,  1140,  1135,  1136,  1137,  1127,
3767:     1128,  1129,  1130,  1132,  1133,     0,  1153,     0,  1107,     0,
3768:        0,     0,     0,     0,     0,     0,  1252,     0,   990,     0,
3769:     1040,  1025,     0,     0,  1114,  1041,  1254,  1229,     0,     0,
3770:        0,  1284,  1283,   922,   931,   934,   966,   967,   938,   939,
3771:      940,   944,  1306,  1305,  1248,     0,  1240,     0,     0,   923,
3772:      948,   953,     0,  1205,  1208,   983,  1207,     0,   971,     0,
3773:      961,     0,   969,   973,   949,   964,     0,   945,     0,  1241,
3774:     1150,  1152,     0,  1148,     0,   935,   936,   937,   927,   928,
3775:      929,   930,   932,   933,   941,  1124,  1122,  1123,     0,  1227,
3776:        0,  1239,     0,     0,  1076,     0,     0,   968,  1245,     0,
3777:      792,   609,   792,     0,   920,  1473,  1303,  1466,  1303,  1455,
3778:     1160,  1268,  1302,   581,     0,     0,     0,  1475,   147,   151,
3779:        0,  1228,   181,   183,   711,     0,   616,   617,   621,     0,
3780:        0,   621,   600,   549,  1889,  1770,     0,     0,     0,     0,
3781:      659,   700,     0,   691,   656,   657,     0,   655,  1275,   660,
3782:     1274,   661,   664,   665,   633,  1263,   701,   703,     0,   696,
3783:        0,  1269,   555,   574,     0,     0,     0,     0,     0,   538,
3784:      537,   707,  1450,  1450,  1452,  1451,     0,    50,     0,  1644,
3785:       67,     0,     0,     0,     0,     0,     0,   273,     0,   373,
3786:      273,   105,  1644,   443,  1644,   443,  1538,  1609,  1788,     0,
3787:       63,   347,    96,     0,   133,   376,     0,   332,    86,   101,
3788:      126,     0,     0,    52,   224,   238,   243,   129,   247,   244,
3789:     1340,   245,   140,     0,    48,     0,   127,     0,  1338,     0,
3790:        0,    54,   131,  1342,  1488,     0,  1226,     0,   607,   607,
3791:      607,     0,  1166,     0,     0,     0,  1168,  1169,   961,  1350,
3792:     1349,  1351,  1348,   470,   483,     0,   370,     0,   496,   473,
3793:      474,   484,  1318,   211,     0,   202,   371,     0,   371,     0,
3794:     1320,     0,     0,   192,   188,   206,   212,     0,     0,     0,
3795:        0,     0,   369,   361,   359,   392,     0,   366,   360,     0,
3796:        0,   318,     0,  1532,     0,     0,     0,     0,   464,     0,
3797:        0,     0,     0,     0,     0,   255,   256,   409,  1301,   411,
3798:        0,   413,   220,   218,  1363,  2006,   490,  1164,     0,   488,
3799:      495,   489,   492,   493,   487,   486,     0,   481,     0,   517,
3800:        0,     0,     0,     0,     0,     0,     0,     0,  1053,  1172,
3801:        0,  1191,  1190,   993,  1000,  1003,  1007,  1008,  1009,  1192,
3802:        0,     0,     0,  1004,  1005,  1006,   996,   997,   998,   999,
3803:     1001,  1002,  1010,   790,     0,     0,   784,  1201,  1200,  1194,
3804:     1195,     0,  1061,  1062,  1063,  1202,     0,     0,   759,   636,
3805:      634,   637,   639,   635,     0,     0,   792,   596,   596,   596,
3806:      596,   593,     0,     0,     0,   791,     0,   687,   755,   753,
3807:        0,   777,     0,   750,   733,   756,     0,   741,     0,   748,
3808:      797,   764,     0,     0,   766,  1441,   814,     0,   809,   805,
3809:        0,     0,     0,   815,     0,     0,     0,     0,     0,     0,
3810:        0,  1171,     0,   602,  1037,     0,     0,     0,  1211,     0,
3811:      989,   831,   844,     0,  1119,  1042,     0,  1142,  1106,   872,
3812:      871,   873,   873,     0,     0,     0,     0,  1261,  1219,     0,
3813:     1067,  1217,  1160,  1110,  1112,  1262,  1024,   856,   920,     0,
3814:        0,     0,     0,     0,     0,     0,   972,   963,     0,   970,
3815:      974,     0,     0,     0,   957,     0,     0,   955,   984,   951,
3816:        0,     0,   985,  1226,     0,  1230,     0,     0,  1075,  1084,
3817:      714,   710,   670,   607,   670,     0,  1435,  1457,  1454,   582,
3818:      156,  1476,     0,   170,     0,     0,     0,     0,   173,   187,
3819:      184,  1475,     0,     0,   611,   613,     0,  1143,   621,   615,
3820:      663,   662,     0,   631,   698,   629,     0,   704,     0,   572,
3821:        0,   558,     0,   732,     0,     0,  1444,  1445,     0,     0,
3822:        0,   322,     0,     0,     0,   273,     0,   381,     0,   388,
3823:        0,     0,   373,   354,    85,     0,     0,     0,    59,   104,
3824:       77,    69,    55,    83,     0,     0,    88,     0,    81,    98,
3825:       99,    97,   102,     0,   283,   308,     0,     0,   319,     0,
3826:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
3827:      499,  1227,  1223,  1227,     0,     0,     0,   609,   605,   606,
3828:     1044,     0,   469,   523,   520,   521,   519,   229,   380,     0,
3829:        0,     0,   200,   368,     0,  1335,   449,   452,  1317,   406,
3830:        0,   193,     0,   191,   211,     0,     0,   202,   371,     0,
3831:      346,   342,   367,   340,   339,   341,     0,  1533,   222,     0,
3832:     1527,   371,  1334,     0,     0,   465,   456,     0,   461,     0,
3833:        0,   459,     0,  1329,   254,   443,     0,   477,   518,   525,
3834:      505,   510,     0,   516,   512,   511,   506,   514,   513,   509,
3835:     1054,  1065,  1189,     0,     0,     0,     0,   783,   786,     0,
3836:     1060,  1055,   757,     0,     0,   670,     0,     0,     0,     0,
3837:      587,   586,   592,     0,     0,  1078,   752,     0,     0,     0,
3838:      739,   727,   734,   735,     0,     0,     0,   795,   794,   765,
3839:      818,     0,   798,   818,     0,   818,     0,   816,     0,   825,
3840:      913,   914,   915,   916,   917,   918,   919,   850,     0,  1213,
3841:     1209,  1115,  1117,  1154,   868,   866,   988,  1251,  1159,  1256,
3842:     1258,     0,     0,     0,     0,  1109,   991,  1282,   924,     0,
3843:        0,   954,  1206,   975,     0,     0,     0,   950,  1142,     0,
3844:        0,     0,     0,     0,   959,     0,  1234,  1227,     0,  1233,
3845:        0,     0,     0,     0,  1049,   715,   687,     0,   687,     0,
3846:        0,  1474,     0,  1469,   148,   149,   150,     0,     0,     0,
3847:      165,   142,     0,     0,   182,   170,   158,   619,   620,     0,
3848:      614,   630,  1264,  1270,   557,     0,  1021,     0,     0,   554,
3849:        0,   134,   273,     0,     0,    66,     0,   390,   334,   382,
3850:      365,   349,     0,     0,     0,   274,     0,   407,     0,     0,
3851:      355,     0,     0,     0,     0,   335,     0,     0,   294,     0,
3852:        0,   365,     0,   372,   290,   291,     0,    58,    78,     0,
3853:       74,     0,   103,     0,     0,     0,     0,     0,    61,    73,
3854:        0,    56,     0,   443,   443,    64,  1295,  1940,  1941,  1942,
3855:     1943,  1944,  1945,  1946,  1947,  1948,  1949,  2060,  1950,  1951,
3856:     1952,  1953,  1954,  1955,  1956,  1957,  2069,  1958,   280,  1959,
3857:     1713,  1960,  1961,  1962,  1963,  1964,     0,  1965,   801,  1966,
3858:     1967,  2148,  1968,  1127,  1128,   279,   278,   375,   275,   383,
3859:      277,     0,  1296,   276,   378,   333,   130,  1341,     0,   128,
3860:        0,  1339,   137,   135,   132,  1343,  1481,     0,     0,  1047,
3861:     1048,  1045,   607,     0,     0,     0,   499,   476,     0,     0,
3862:        0,  1532,     0,     0,  1644,     0,   189,     0,     0,   203,
3863:     1335,   199,   368,     0,   398,   318,   393,     0,  1532,  1530,
3864:        0,  1335,  1526,   448,   451,     0,     0,   540,   453,     0,
3865:        0,     0,   414,   491,     0,   515,  1013,     0,     0,     0,
3866:        0,   646,     0,   652,   687,   591,   590,   589,   588,   669,
3867:     1583,  1872,  1769,     0,   673,   668,   671,   676,   678,   677,
3868:      679,   675,   686,     0,   689,   776,  1155,  1157,     0,     0,
3869:        0,     0,   740,   742,     0,   744,     0,   796,   812,     0,
3870:      813,     0,   811,   806,   817,  1212,  1259,  1260,  1255,     0,
3871:      921,  1218,   981,   979,   976,     0,   977,   958,     0,     0,
3872:      956,   952,     0,   986,     0,     0,  1231,     0,  1070,     0,
3873:     1073,  1087,  1083,  1082,  1078,  1044,  1078,  1436,   580,   169,
3874:      146,   172,   171,     0,  1228,   179,     0,     0,   170,     0,
3875:      174,   466,     0,     0,   569,   731,   562,   563,     0,   386,
3876:       68,     0,   365,     0,   273,   351,   350,   353,   348,   352,
3877:        0,   408,     0,     0,   292,     0,   299,   337,   338,   336,
3878:      293,   365,   371,   295,     0,     0,     0,    70,    60,    57,
3879:       62,    71,     0,     0,    72,    75,   797,    87,    80,  1295,
3880:     2069,  2078,     0,     0,     0,     0,     0,  1225,  1224,     0,
3881:      472,   471,   522,   468,   479,   229,     0,     0,     0,   342,
3882:     1529,     0,     0,     0,   368,   194,     0,     0,     0,     0,
3883:     1532,     0,     0,   270,     0,   315,     0,   215,  1531,     0,
3884:        0,  1518,     0,     0,  1327,  1328,     0,   478,  1014,     0,
3885:     1015,   787,     0,     0,   644,  1078,     0,     0,     0,   680,
3886:      674,     0,  1077,  1079,     0,   641,  1158,   736,     0,   738,
3887:        0,   762,     0,   762,   745,   807,   799,  1257,  1068,     0,
3888:      978,   982,   980,   960,  1227,  1235,  1227,  1232,  1072,  1086,
3889:     1089,   689,  1280,   689,     0,     0,   157,     0,     0,   154,
3890:      141,   159,  1144,   559,   560,     0,   273,     0,   364,   387,
3891:      304,   282,     0,     0,     0,   289,   296,   397,   298,     0,
3892:       79,    95,     0,     0,   377,   138,   136,  1046,   499,     0,
3893:      205,  1335,   318,  1526,     0,     0,     0,     0,   342,   222,
3894:     1528,   331,   324,   325,   326,   327,   328,   329,   330,   345,
3895:      344,   316,   317,     0,     0,     0,     0,   454,  1329,     0,
3896:      176,   185,     0,   176,  1016,   647,     0,   689,     0,     0,
3897:        0,   672,     0,     0,   688,     0,   545,  1156,     0,   726,
3898:      724,     0,   725,     0,     0,     0,     0,   609,   641,   641,
3899:      143,     0,   144,   180,     0,     0,     0,   371,   389,   363,
3900:        0,   356,   302,   301,   303,   307,     0,   305,     0,   321,
3901:        0,   314,   282,     0,    82,     0,   384,   467,   475,     0,
3902:      272,  1520,   368,     0,   204,  1526,   318,  1532,  1526,     0,
3903:     1523,     0,     0,     0,     0,   178,  1335,     0,   178,     0,
3904:      641,   682,     0,   681,  1081,  1080,   643,   737,     0,  1069,
3905:     1237,  1236,     0,  1093,   544,   543,     0,     0,     0,     0,
3906:      397,     0,   343,     0,     0,   304,     0,   297,   394,   395,
3907:      396,     0,   310,   300,   311,    76,    94,   385,     0,   368,
3908:     1521,   271,   216,  1519,  1524,  1525,     0,   176,   175,   618,
3909:      177,   792,   186,   618,   651,   546,   683,   640,   743,  1088,
3910:        0,     0,     0,     0,     0,   153,   792,   164,     0,   314,
3911:      362,   357,   281,   306,   320,     0,     0,     0,   312,     0,
3912:      313,  1526,     0,   178,   621,  1325,   621,  1858,  1584,  1823,
3913:        0,  1105,  1094,  1105,  1105,  1085,   145,   152,     0,   273,
3914:      286,     0,   285,     0,   374,   309,  1522,  1335,   618,   166,
3915:      167,     0,  1098,  1097,  1096,  1100,  1099,     0,  1092,  1090,
3916:     1091,   792,   391,   284,   288,   287,   792,   621,     0,     0,
3917:     1102,     0,  1103,   163,  1326,   168,  1095,  1101,  1104
3918: };
3919: 
3920: /* YYDEFGOTO[NTERM-NUM].  */
3921: static const yytype_int16 yydefgoto[] =
3922: {
3923:       -1,    47,    48,    49,   755,  2640,  2641,  2642,  2269,  1218,
3924:     3414,  2270,  1219,  1220,  2644,   756,   806,  1100,   808,  1101,
3925:     1618,   914,  1254,  1255,   757,  1771,   758,  2870,  2189,  2586,
3926:     3396,    54,  3145,  2192,  1176,  3148,  3361,  2863,  3143,  2587,
3927:     3435,  3489,  3146,  2193,  2194,  3362,  2195,   759,  2702,  2703,
3928:      760,   761,  1855,    58,  1316,   551,  1852,   762,   763,  1349,
3929:     1350,   969,   764,  1856,  1799,  2986,  1238,  1789,  1364,    62,
3930:     1879,   765,   107,   910,    64,   766,  2629,  2987,  3407,  2655,
3931:     3544,  2923,  2924,  3404,  3405,  2632,  2272,  3472,  3473,  2717,
3932:     1780,  3467,  2353,  3349,  2276,  2257,  2925,  2361,  3308,  3034,
3933:     2273,  2905,  2354,  3400,  1874,  2355,  3401,  3164,  2356,  1830,
3934:     1859,  2633,  3474,  2277,  1831,  2628,  2988,  1768,  2357,  3411,
3935:     2358,   552,  2909,   767,   746,   747,   961,  1343,   748,   768,
3936:     1865,  1866,  1867,  1868,  1869,  1870,   945,  1871,   769,   770,
3937:     2682,  2331,  3215,  2736,  3216,  2398,  2325,  1373,  2390,  1899,
3938:     1833,  1374,   540,  1913,  2737,  2687,  1900,   771,  1102,    72,
3939:       73,  1015,    74,  3158,    75,    76,  1742,  1743,  1744,   854,
3940:      866,   867,  2185,  1459,  1982,   859,  1181,  1711,   840,   841,
3941:     2315,   882,  1822,  1706,  1707,  2198,  2594,  1735,  1736,  1190,
3942:     1191,  1970,  3376,  1971,  1972,  1452,  1453,  3254,  1723,  1727,
3943:     1728,  2219,  2209,  1714,  2467,  3074,  3075,  3076,  3077,  3078,
3944:     3079,  3080,  1103,  2775,  3265,  1731,  1732,  1193,  1194,  1195,
3945:     1740,  2229,    78,    79,  2170,  2570,  2571,   812,  3091,  1478,
3946:     1745,  2779,  2780,  2781,  3094,  3095,  3096,   813,  1010,  1011,
3947:     1034,  1029,  1467,  1991,   814,   815,  1947,  1948,  2436,  1036,
3948:     1984,  2002,  2003,  2787,  2491,  1544,  2258,  1545,  1546,  2017,
3949:     1547,  1104,  1548,  1576,  1105,  1581,  1550,  1106,  1107,  1108,
3950:     1553,  1109,  1110,  1111,  1112,  1569,  1113,  1114,  1593,  2019,
3951:     2020,  2021,  2022,  2023,  2024,  2025,  2026,  2027,  2028,  2029,
3952:     2030,  2031,  2032,  1163,  1746,  1116,  1117,  1118,  1119,  1120,
3953:     1121,  1122,  1123,  1124,   817,  1125,  2529,  1126,  1667,  2164,
3954:     2569,  3084,  3262,  3263,  2854,  3133,  3290,  3387,  3503,  3531,
3955:     3532,  3558,  1127,  1128,  1612,  1613,  1614,  2054,  2055,  2056,
3956:     2057,  2158,  1661,  1662,  1129,  2990,  1664,  2077,  3087,  3088,
3957:     1164,  1445,  1605,  1295,  1296,  1558,  1419,  1420,  1426,  1922,
3958:     1434,  1438,  1952,  1953,  1446,  2125,  1130,  2048,  2049,  2509,
3959:     1571,  2530,  2531,  1131,  1253,  1617,  2849,  2161,  1665,  2118,
3960:     1138,  1132,  1139,  1134,  1601,  1602,  2527,  2820,  2821,  2088,
3961:     2226,  1694,  2231,  2232,   965,  1135,  1136,  1137,  1297,   524,
3962:     1559,  3490,  1339,  1169,  1298,  2114,   772,  1041,  2041,   773,
3963:     1312,  1845,   774,  3245,  3051,  1328,  1875,  2366,   553,   775,
3964:      776,   533,    85,  2320,   926,    86,    87,    88,   891,  1366,
3965:      777,  1367,  1368,   976,    89,  2738,   978,   979,   779,   848,
3966:      849,  1487,  1681,  1488,   780,    92,   823,  1755,   781,  1159,
3967:      863,  1160,  1162,   782,  1178,  2583,  2187,    95,    96,    97,
3968:      115,  1249,   783,   834,   835,   872,   100,   101,  1206,   836,
3969:      855,   785,   786,  3241,   787,  2720,  1322,   534,   526,   527,
3970:     1561,   720,  1300,   721
3971: };
3972: 
3973: /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
3974:    STATE-NUM.  */
3975: #define YYPACT_NINF -3017
3976: static const int yypact[] =
3977: {
3978:     6596,   -26,   739, -3017, -3017,   275,   -26, 49530, 64984,   350,
3979:      -26,   136,  2383, 51526, -3017, -3017, 46037,  3819,   -26, 55019,
3980:    72380,   321,   582, 31527,   552, 55518, -3017, -3017, -3017, 64984,
3981:    55019, 56017,   -26,   345, 65483, -3017,   -26, 34022, 52025,   337,
3982:    -3017, 55019,    67,   313, 56516, 55019,  2833,   854,   346, -3017,
3983:    -3017, -3017, -3017, -3017,   168, -3017, -3017, -3017, -3017, -3017,
3984:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
3985:    -3017,   156, -3017,   200,   166, 31527, 31527,    53,   376, -3017,
3986:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,   396,
3987:    -3017, -3017,   709, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
3988:    -3017, 33523, -3017, -3017, -3017, -3017, -3017, -3017, 57015, 55019,
3989:    57514, 52524, 58013, -3017,   672,   936,   612,   194, -3017, -3017,
3990:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
3991:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
3992:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
3993:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
3994:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
3995:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
3996:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
3997:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
3998:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
3999:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4000:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4001:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4002:      204, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4003:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4004:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4005:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4006:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4007:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4008:    -3017,   459, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4009:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4010:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4011:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4012:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4013:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4014:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4015:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4016:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4017:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4018:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4019:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4020:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4021:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4022:    -3017, -3017, -3017, -3017, -3017, -3017, -3017,   206, -3017, -3017,
4023:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4024:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4025:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4026:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4027:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4028:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4029:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4030:    -3017,   666, -3017,   516, -3017,   209, -3017, -3017, -3017, -3017,
4031:    -3017, -3017, -3017, -3017, -3017,   870, -3017, -3017,   998,  2691,
4032:    55019,   950,   986,   775, -3017, 58512, -3017,   756, 55019, -3017,
4033:    -3017,   819,   741,   999, -3017, -3017, 53023, -3017, -3017, -3017,
4034:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4035:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4036:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4037:    -3017, -3017, -3017, 46536, -3017, -3017, -3017, -3017, -3017, -3017,
4038:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4039:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4040:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4041:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4042:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4043:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4044:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4045:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4046:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4047:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4048:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4049:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4050:    -3017, -3017,  1004, -3017, -3017,   831, -3017,   148, -3017, -3017,
4051:      875,   820, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4052:    -3017,   923, -3017, -3017, -3017,   959, 65982, 59011, 59510, -3017,
4053:      827,  1658,  7978, 72398, 30527, -3017, -3017, -3017, -3017, -3017,
4054:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4055:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,   396, -3017,
4056:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, 55518, 64984,
4057:      833,   841,  1137,   850, 32026,   866, 34522,   873,   879,  1244,
4058:      912,   919,   932,   957,   313, 31027,   935,   666, -3017, 60009,
4059:    60009,   -28,  3241, -3017, 60009, 60508, -3017,   992, -3017,   936,
4060:    -3017, -3017, -3017, -3017,   342,   970, -3017, 61007, 61007, 61007,
4061:     1033,  1283, 61007, -3017, -3017, -3017,  1025, -3017, -3017,  1280,
4062:    19682, 19682, 66481, 66481,   936, 66481,  1073, 66481, -3017, -3017,
4063:       54,   612, -3017, -3017,    53,  1059,   666, -3017, -3017, 52025,
4064:    -3017, -3017,   316,  1423, 19682, 55019,  1076, -3017,  1086,  1076,
4065:     1091,  1097,  1099, -3017,  6596,  1464,  1344, 53522,   724,   724,
4066:     1582,   724,  1006,  1008,  5405,  2999, -3017,   196, -3017,  1125,
4067:    -3017, 55019, 55518,  1237,  1161,  1454, -3017,  1059,  1528,   147,
4068:     1334,  1571,  6090,  1594,   184,  1601,   483,  1602,  1676,    40,
4069:    -3017, 19682, 47035,   666, -3017, 11841, 19682, -3017, -3017, -3017,
4070:     1307, -3017, -3017, -3017, -3017, -3017, 55019, 64984,  1233,  1238,
4071:    -3017, -3017, -3017, -3017,   956,  1482, -3017,  1719, 66980, -3017,
4072:    -3017,  1290, 61506, 62005, 62504, 63003,  1674, -3017, -3017,  1609,
4073:    -3017, -3017, -3017,  1281, -3017, -3017, -3017,   195, 67479,  1612,
4074:     1246,   119, -3017,  1616,   198, -3017,  1619,  1480, 15490, -3017,
4075:     1417, -3017, -3017, -3017,   313, -3017,   284, -3017, -3017, 43138,
4076:    -3017, -3017, 72398,  1345,  1256, -3017, 19682, 19682,  1259,  8514,
4077:    60009, 60508, 19682, 55019, -3017, 19682, 24398,  1260, 19682, 19682,
4078:    12870, 19682, 29529, 60009,  3241,  1261, -3017,   791, 55019,  1264,
4079:    -3017,  1358,  1358,   345, 31527,  1561, -3017,   212,  1558,  1484,
4080:    -3017, 31527,  1484,  1030,  1268,  1562,  1484, -3017,   514,  1563,
4081:     1358, 35021,  1273, -3017,  1358,  1493, -3017, -3017, 19682, 15490,
4082:    69974,  1752, -3017, -3017, -3017, -3017,  1557, -3017, 64984,  1276,
4083:    -3017, -3017, -3017, -3017, -3017, -3017,   671,  1790,   175,  1791,
4084:    19682,   175,   175,  1279,   210,   210, -3017,  1474,  1288, -3017,
4085:      214,  1289,  1292,  1806,  1807,   176,   164,  1136,   175, 19682,
4086:    -3017,   210,  1296,  1810,  1302,  1816,   188,   222, -3017,   215,
4087:    19682, 19682, 19682,   310, 19682, 10793, -3017,  1818, 47035, 55019,
4088:      697, -3017,   666,  1310,   936, -3017, -3017, -3017, -3017, -3017,
4089:    -3017, -3017,  1312, -3017,   179,  6769, -3017, -3017, -3017, -3017,
4090:    -3017, -3017, -3017,  1351, -3017, -3017, -3017, -3017,  1523, 19682,
4091:    -3017, -3017,  1316,  1561, -3017,   218, -3017, -3017,  1561, -3017,
4092:    -3017, -3017, -3017, -3017,   249, -3017,  1731, 19682, 19682, -3017,
4093:    64984,   666, 67978, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4094:      395, -3017,   396, 44856,  1319,  1318,  1076, 55019, 55019,  1803,
4095:    -3017, -3017, -3017, -3017, 52025,   118,  1626,   158,  1460, -3017,
4096:    -3017,    53,    53, 16014,   812,   216,   491, 16538, 20206,  1684,
4097:     1565,   599,   614,  1686, -3017,  1573,  1800, 24398, 19682, 19682,
4098:     1006,  1008, 19682,  1086,   135, -3017, -3017, -3017,  1627, 55019,
4099:    50029,   787,   928,  1354,  1431,  1355,   262,  1775, -3017,  1352,
4100:    -3017,  1445, 55019, 71925,   273, -3017,  1819,   273,   273,   768,
4101:     1821,  1453,   258,  1615,    30,   371,  1352,  3469, -3017, 52025,
4102:      146,   141,  1352, 55019,  1456,   560,  1352,  1777, 64984,  1256,
4103:    -3017, -3017, 40704,  1360, -3017, -3017, -3017,   181, 15490, -3017,
4104:     1105,  1272,  1313,   387,   189,  1443,  1466, 15490,  1502,  1539,
4105:      187,  1564,  1572,  1574,  1576,  1579,  1583,  1586,  1589,   162,
4106:     1593,  1600,  1618,  1641,  1647,  1653, -3017,  1657,   191,  1662,
4107:      199, 15490,  1669, -3017, 44856,    24, -3017, -3017,  1672,   193,
4108:    -3017, 44956, -3017,  1667,  1459,  1461, 64984,  1413, 55019,  1514,
4109:      843,  1744,  1797, 70458,  1623, -3017,  1701, 55019,  1629,  3469,
4110:     1630,  1383,  1862,  1631,  1238,  1634,  1392, -3017, 68477, 47035,
4111:    -3017, -3017, -3017, -3017, -3017,  1766,  1755, 64984, 47035,  1420,
4112:    -3017, -3017, 64984, -3017, 55019, 55019, -3017, 55019, 64984, -3017,
4113:      576, 44856,  1935,   937, 72398, 48532, -3017, -3017, -3017, -3017,
4114:     1047,  1062, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4115:    -3017,   936, 47035, -3017,  3598, 43759,  1438, 19682, -3017, -3017,
4116:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4117:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4118:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4119:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,  1439,
4120:     1793, -3017, -3017,  5541,  1447, 44054,  1448, 24398, 24398,   666,
4121:     3938, -3017, -3017, 24398,  1449, 49031, 43673,  1428,  1451, 44239,
4122:    17062, 19682, 17062, 17062, 44305, -3017,  1452, 44394, 60009,  1444,
4123:    55019, 54021, -3017, -3017, -3017, 19682, 19682,  3241, 54520,  1492,
4124:    31527, -3017, 31527, -3017,  1747, 31527, -3017, -3017,  6913, -3017,
4125:    31527,  1750, 19682, 31527, -3017, 31527,  1697,  1699,  1465, 31527,
4126:    -3017, 55019,  1467, 55019, -3017, -3017, 44856, -3017,  1469,   632,
4127:     1468, -3017, -3017, -3017, -3017, -3017,  1520, -3017,  1520,  1520,
4128:    -3017, -3017, -3017, -3017,  1475,  1475,  1477, -3017, -3017, -3017,
4129:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4130:     1481,  1136, -3017,  1520, -3017,  1475, -3017, -3017, -3017, -3017,
4131:    -3017, -3017, -3017, 71925, -3017, -3017, -3017, -3017,   418,   620,
4132:    -3017,  1487, -3017, -3017,  1488, -3017,  1472,  1968, -3017, -3017,
4133:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, 41013,   644,  1475,
4134:    -3017, -3017,  5290, -3017, -3017, 19682, 19682, -3017, -3017,  1490,
4135:    44856,  1534, -3017, -3017, 19682, 19682, -3017, -3017, -3017, -3017,
4136:     2002, -3017, 19682,  1520,  1520, -3017, 43691, -3017, 39514, 17586,
4137:     1587,  1588,  2002, -3017,  2002, -3017, 43691,  2001,  2001,  1500,
4138:    37516, -3017,  1665, 44603, -3017,  1504,  1677,  7335,  1503, -3017,
4139:    -3017,  1494, -3017,  1506,  1499, 41641,   182,   666,   666, 19682,
4140:    -3017,  2002, 19682, 44045, 44045, -3017,   235, 69974, 19682, 19682,
4141:    19682, 19682, 19682, 19682, 19682, 19682, 45538,  1604,   177, 64984,
4142:    19682, 19682, 29024,  1239, -3017, 19682,  1749, -3017,  1512, 19682,
4143:     1603,   902, 19682, 19682, 19682, 19682, 19682, 19682, 19682, 19682,
4144:    19682, -3017, -3017, 28009,   240,   702,  1855,  1874,   -12,   302,
4145:    19682,  1870, 11841, -3017,  1870, -3017, -3017, -3017, -3017, -3017,
4146:      219, -3017, -3017,  1469,  1469, -3017, 64984, -3017, 55019,   316,
4147:    51027, 19682, -3017, -3017,  1521,  1533,   169,  1598, -3017, -3017,
4148:    55019, -3017, 38015,  1838, -3017,   356,  1536, -3017, 43634,  1794,
4149:     1838,    53, -3017, -3017, 25446,  1670,  1832,  1770, -3017, -3017,
4150:     1751,  1753, -3017,  1543, 45045, 20730, 20730, -3017,  1332, 44856,
4151:     1337, -3017, -3017, -3017, -3017, -3017, -3017,   528, -3017, 55019,
4152:      117, 35520, -3017,  1545,   106, -3017,  4724,  1887,  1850,  1684,
4153:      614,  1552, -3017, 55518, 55518, -3017, -3017,  1116,  1554, 68976,
4154:    55019,  1846,  1799,  1848,   328, 69974, -3017, -3017, -3017, -3017,
4155:    55019, 64984, 63502, 69475, 47534, 55019, 47035, -3017, -3017, -3017,
4156:    -3017, 55019,  1315, 55019,  7055, -3017, -3017, -3017, -3017,   273,
4157:    -3017, -3017, -3017, -3017, -3017, 64984, 55019, -3017, -3017,   273,
4158:    64984, 55019,   273, -3017,  1248, 55019, 55019, 55019, 55019,  1585,
4159:    55019, 55019,   936, -3017, -3017, -3017, 21254,   103,   103,  1780,
4160:    13394,   160, -3017, 19682, 19682,   304,   263, 64984,  1745, -3017,
4161:    -3017,   706,  1796,   114, -3017, 64984,  1608, 55019, 55019, 55019,
4162:    55019, 55019,  1854, -3017, -3017, -3017, -3017, -3017,  1570, -3017,
4163:     1938,  2090,  1578,  1580,  1942, -3017,  3469,  1945, 50528,   786,
4164:     1812,  1947,  1621,  1950, 13918, -3017, -3017,  1591, -3017, -3017,
4165:     1592,  2064,  1830, -3017, -3017,  1826, -3017, 64984,  2105, -3017,
4166:      119, -3017, 47035, -3017,   198, -3017,  1827,   220, -3017, 15490,
4167:    19682, -3017, -3017, -3017, -3017, -3017, -3017,  1256, 28519, -3017,
4168:      723, -3017, -3017,  2078,   936,  2078,   593, -3017, -3017,  2078,
4169:    -3017,  2060,  2078, -3017, 69974, -3017,  7532, -3017, 19682, 19682,
4170:    -3017, 19682,  1948, -3017,  2111,  2111, 69974, 24398, 24398, 24398,
4171:    24398, 24398, 24398,   524,  1296, 24398, 24398, 24398, 24398, 24398,
4172:    24398, 24398, 24398, 24398, 25970,   513, -3017, -3017,   779,  2083,
4173:    19682, 19682,  1958,  1948, 19682, -3017, 69974,  1607, -3017,  1611,
4174:     1613, 19682, -3017, 69974, -3017, 55019,  1620,    17,    26, -3017,
4175:     1622,  1628, -3017,  1561, -3017,  1018,  1022, 55019,  3231,  3817,
4176:     4493, -3017, -3017, 19682,  1956,  6913,  6913, 31527, -3017, 19682,
4177:     1632, -3017, -3017, 31527,  1974, -3017,  6913, -3017, -3017, 36019,
4178:     6913, 69974,   796, -3017, 55019, 69974,   801, 19682, -3017, 15490,
4179:     2141, 69974,  2106, 64984, 64984,  2144,  1635,  1638,  2002,  1725,
4180:    -3017,  1726,  1729,  1730, -3017, -3017, -3017, -3017, -3017, -3017,
4181:    -3017, -3017, -3017, -3017, 69974, -3017, -3017,   174, -3017, -3017,
4182:    -3017, -3017, -3017, -3017,  1644,  1648, 19682, 19682,   112, -3017,
4183:     7927,  1645,  1650,  4610, -3017,  1649, -3017,  1643, -3017, -3017,
4184:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4185:    -3017, -3017, -3017, -3017, -3017,  1654, -3017,  1656, -3017,  1659,
4186:     1679,  1681,  1664,  1671, 19682, 55019, -3017, 21778, -3017, 64984,
4187:    -3017, -3017, 19682, 19682, 55019, -3017,  2025, -3017,  1680,  1682,
4188:     8232, -3017, -3017, -3017,   230,   404,  7582,   302,  5399,  5399,
4189:     5399, 43691, -3017, -3017, -3017,  1683, -3017, 24398, 24398, -3017,
4190:     1225,  1709, 10793, -3017, -3017, -3017, -3017,  2005, -3017,   774,
4191:    -3017,  1668, -3017, -3017,  1944, -3017, 39514, 44153, 19682,   190,
4192:    -3017, 19682, 29024, 19682,  1764,  5399,  5399,  5399,   277,   277,
4193:      230,   230,   230,   404,   302, -3017, -3017, -3017,  1685, 19682,
4194:    47035, -3017,  1687,  1688,  2043,  1302, 19682, -3017, -3017, 31527,
4195:     1492,    24,  1492,  2002, 44045, -3017,  1086, -3017,  1086, -3017,
4196:    44856, 55019, -3017, -3017,  1954,  1689, 31527,  1723,  2172,  2154,
4197:    64984, -3017, -3017,  1692,  1870,  1708, -3017, -3017,  1721, 19682,
4198:     1185,  1721, -3017,  1838,    15,  1934,  1158,  1158,  1332,  1936,
4199:    -3017, -3017,  1776, -3017, -3017, -3017, 19682, 14442,  1341, -3017,
4200:     1343, -3017, -3017, -3017, -3017, -3017,  1710, -3017,  1991, -3017,
4201:    55019, -3017, -3017, 24398,  2179, 19682, 36518,  2180,  1977, -3017,
4202:    -3017, -3017,  1779,  1779, -3017, -3017,  1820,  1352, 19682,  1972,
4203:    -3017,   157,  1732,  2097,   343,  2050, 64984, -3017,   332,   344,
4204:    -3017,   776,  2103,   220,  2104,   220, 47035, 47035, 47035,   806,
4205:    -3017, -3017, -3017,   936, -3017,   -87,   815, -3017, -3017, -3017,
4206:    -3017,  1834,   692,  1352,  3469, -3017, -3017, -3017, -3017, -3017,
4207:    -3017, -3017,   221,   720,  1352,  1836, -3017,  1840, -3017,  1841,
4208:      764,  1352, -3017, -3017,  1676,  9217, 44856,   535,   160,   160,
4209:      160, 15490, -3017,  1976,  1981,  1754, 44856, 44856,   165, -3017,
4210:    -3017, -3017, -3017,  1758, -3017,   231, -3017, 64984, -3017, -3017,
4211:    -3017,  1745,  1797,  1701, 55019,  3469,  1760,  2240,  1238,  1392,
4212:    -3017,  1927,   913,  1851, -3017, 64984, -3017, 47035, 64984, 55019,
4213:    55019, 55019, 64001, -3017, -3017, -3017,  1767,  1763, -3017,    13,
4214:     2000,  1999, 55019,  1813, 55019,  1355,  2250, 55019, -3017,   824,
4215:     1392,  1392, 18110,  2145, 55019,  1755, -3017, -3017, -3017, -3017,
4216:    64984, -3017, -3017, 44856, -3017,  1773, -3017, 19682, 48033, -3017,
4217:    -3017, -3017, -3017, -3017, -3017, -3017, 47035, -3017,   936, -3017,
4218:      936,  2020, 64984, 42140,   936, 42639,   936,  1782, -3017, 44856,
4219:     8322, 44856,  1958, -3017,   232,  2111,   536,   536,   536,  5906,
4220:     2134,   363,  1789,   536,   536,   536,   283,   283,   232,   232,
4221:      232,  2111,   513,   992, 49031,  1801, -3017, 44856, 44856, -3017,
4222:    -3017,  1798, -3017, -3017, -3017, -3017,  1802,  1804, -3017, -3017,
4223:    -3017, -3017, -3017, -3017, 64984,  1168,  1492,   337,   337,   337,
4224:      337, -3017, 55019, 55019, 55019, 44856,  2249,  2123, -3017, -3017,
4225:     6913, 44856, 55019, -3017, 26999, -3017, 55019, -3017,  2148, -3017,
4226:     2238, -3017, 55019,   830, -3017, -3017, -3017,   834,  1817,  1638,
4227:    69974,   836,   842, -3017,  2002,   151,  1809,  1450,   924,   570,
4228:     1350, -3017, 52025, -3017, -3017,  1822, 44660, 19682, -3017,  2183,
4229:    -3017, -3017, -3017, 19682, 19682, -3017, 39514, -3017, -3017, -3017,
4230:    -3017,   -55,   -55,  8455,  1823, 10793, 44747, -3017, -3017,  2130,
4231:     1824, -3017,  8678, 44856, -3017,  1665, -3017, -3017, 44045, 19682,
4232:     2547,  5060, 19682,  1828, 19682,  2150, -3017, -3017,  1814, -3017,
4233:    -3017, 69974, 19682,  1829,  3859, 24398, 24398,  4710, -3017,  5386,
4234:    19682, 10793, -3017, 40791,  1811,  1825,  1780, 18634, -3017,  2048,
4235:     1831, -3017,  1956,   160,  1956,  1835, -3017, -3017, -3017, -3017,
4236:     5290, -3017, 19682,  1989, 64984,   542,  1872,   844, -3017,   666,
4237:    38015,  1723, 19682,   608, -3017, -3017,  1833, -3017,  1721, -3017,
4238:    -3017, -3017,  2065, -3017, -3017, -3017, 55019, -3017,  1839, -3017,
4239:    35520,  2176, 11317, -3017, 35520, 55019, -3017, -3017, 55019, 40021,
4240:     2207, -3017, 64984, 64984, 64984, -3017, 64984,  1842,  1843,   248,
4241:     1845,   389, -3017,  2194,   248,  2184,   247,  1355,   258,  2907,
4242:      461, -3017, -3017, -3017,  1919, 55019, -3017, 64984, -3017, -3017,
4243:    -3017, -3017, -3017, 47534, -3017, -3017, 39014, 47035, -3017, 47035,
4244:    55019, 55019, 55019, 55019, 55019, 55019, 55019, 55019, 55019, 55019,
4245:     1256, 19682, -3017, 19682,  1847,  1849,  1852,  1780, -3017, -3017,
4246:    -3017,   282, -3017,  1859, -3017, -3017, -3017,   371, -3017,   231,
4247:     1864,  1865, -3017, 50528,  2691,  1621, -3017,  1592,  1797,   680,
4248:    64485, -3017,  1866,  1869,  1701,   855,   867,  3469,  1868,  2330,
4249:    -3017,   786, 50528, -3017, -3017, -3017,  2298, -3017,   827,   228,
4250:    -3017,  1238, -3017,  2691,  1392, -3017, -3017,  2347, -3017,  2348,
4251:     2691, 44856, 64984,  1937, -3017,   220,   871, -3017, -3017, -3017,
4252:    -3017, -3017, 64984,  1871, -3017,  1871, -3017, -3017,  1871, -3017,
4253:    -3017, -3017, -3017, 24398,  2220,  1877, 69974, -3017, -3017, 55019,
4254:    -3017, -3017, -3017,   876,  1878,  1956, 55019, 55019, 55019, 55019,
4255:    -3017, -3017, -3017, 19158, 19682,  1917, -3017,  1881, 12365,  2203,
4256:    -3017, 26494, -3017, -3017,  1884, 36019, 64984, -3017, -3017, -3017,
4257:    -3017,  2002, -3017, -3017, 64984, -3017,  1888, -3017,  1894, -3017,
4258:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, 19682, 44856,
4259:    -3017, 44856, -3017, -3017, -3017, -3017, -3017, -3017,  7206, -3017,
4260:     1882,  1893, 64984, 19682, 64984, -3017, -3017, -3017,   391, 19682,
4261:    19682,  1225, -3017,  6514, 19682, 69974,   886,  1225,   267, 19682,
4262:     5646,  6346, 19682, 19682,  5456, 40060, -3017, 22302, 14966, -3017,
4263:     1897, 19682, 40099, 38514, -3017, 31527,  2123,  1898,  2123,   936,
4264:     1899, 44856, 19682, -3017, -3017, -3017, -3017,  1957,    -5, 33024,
4265:     2129, -3017,  1906, 64984, -3017,  1989, 44856, -3017, -3017, 39514,
4266:    -3017, -3017, -3017, -3017, -3017,  2363,  1012,  1904,  1907, -3017,
4267:     1269, -3017, -3017, 64984,  1909, -3017,  1912,   248, -3017, 64984,
4268:     1952, -3017,   271,  2228,   111, -3017, 19682, -3017,  2308,  2394,
4269:     2194,  1918, 64984, 55019, 24398, -3017,   285,   183, -3017,  2208,
4270:    55019,  1952,  2349, -3017, -3017, -3017,   389, -3017,  2246,  2159,
4271:    -3017,   273, -3017, 19682,   389,  2160,   154, 64984, -3017, -3017,
4272:     2370, -3017, 69974,   220,   220, -3017,  1468,  1921,  1922,  1923,
4273:     1924,  1925,  1928,  1929,  1931,  1932,  1939, -3017,  1940,  1941,
4274:     1943,  1946,  1953,  1955,  1961,  1966,  1481,  1967, -3017,  1970,
4275:     1833,  1973,  1975,  1978,  1982,  1983, 70942,  1984,  1985,  1992,
4276:     1993,  1487,  1994,  1047,  1062, -3017, -3017, -3017, -3017, -3017,
4277:    -3017,  1246,  1995, -3017,  1990, -3017, -3017, -3017,  2016, -3017,
4278:     2031, -3017, -3017, -3017, -3017, -3017, -3017,  1951,  1960, -3017,
4279:    -3017, -3017,   160,  1997,  2003, 64984,  1256,   121, 47035, 64984,
4280:     2006,  1813,  2425,  1211,  2217,  2008, -3017,   936,  2009, -3017,
4281:     1621, -3017, 50528,  2482,   268,  1999, -3017,   323,  1813, -3017,
4282:     2389,  1621,  2021, -3017,  1592,  2100, 19682,   150, -3017,  2219,
4283:    64984,  2010, -3017, -3017, 48033,  1871,  6153, 24398, 69974,   896,
4284:      920, -3017,  2511,  2167,  2123, -3017, -3017, -3017, -3017, -3017,
4285:     2011,    20,  2013, 10269,  2012, -3017, -3017, -3017, -3017, -3017,
4286:    -3017, 44856, 44856, 64984,  2188, -3017, -3017,  2014,  2019, 37017,
4287:     2474,  2024, -3017, -3017,  2340, -3017, 30028, -3017,  1638,  2023,
4288:     1638, 69974,  1638, -3017, -3017, 44856, 19682, -3017, -3017, 41088,
4289:     2358, -3017,  1225,  1225,  6514,   942, -3017,  1225, 19682, 19682,
4290:     1225,  1225, 19682, -3017,  9743,   540, -3017,   948, -3017, 40147,
4291:    -3017, 71426, -3017, -3017,  1917,   936,  1917, -3017, -3017,  2029,
4292:    -3017, -3017, -3017,  2094, -3017, -3017,   952,  2461,  1989, 19682,
4293:    -3017, -3017,  2038, 35520, -3017, -3017, -3017, -3017, 35520,   248,
4294:    -3017,  2212,  1952,  2046, -3017, -3017, -3017, -3017, -3017, -3017,
4295:    40186, -3017,   113, 19682, -3017,   944,  5906, -3017, -3017, -3017,
4296:    -3017,  1952,  1238, -3017, 55019,  2525,  2417, -3017, -3017, 44856,
4297:    -3017, -3017,  2002,  2002, -3017, -3017,  2238, -3017, -3017,  2051,
4298:    -3017, -3017,  1246,   587, 39014, 55019, 55019, -3017, -3017,  2054,
4299:    -3017, -3017, -3017, -3017, -3017,   371,  2446,   971,   978,   786,
4300:    -3017,  2691, 55019,  2422, 50528, -3017, 47035,  2536,  2058, 55019,
4301:     1813,   358,   358, -3017,  2209, -3017,  2210, -3017, -3017,  2540,
4302:      291, -3017,  1288, 55019, -3017, -3017, 32525, -3017,  6153,   979,
4303:    -3017, -3017,  2063,  2066, -3017,  1917, 19682,  2074, 19682, -3017,
4304:    22826,  2553,  2073, -3017, 19682,  2139, 27504, -3017, 19682, -3017,
4305:    55019, 60009,  2085, 60009, -3017, -3017, -3017, -3017, -3017, 19682,
4306:    -3017,  1225,  1225,  1225, 19682, -3017, 19682, -3017, -3017, -3017,
4307:     2297,  2188, -3017,  2188, 19682,  2691,   666,  3519, 64984,    35,
4308:    -3017, 44856, -3017, -3017, -3017, 55019, -3017, 47035, -3017,   248,
4309:      -11,  2095, 19682, 40539,  2328, -3017, -3017,  2365, -3017,  2426,
4310:    -3017,  2163,   597,  2174, -3017, -3017, -3017, -3017,  1256,   936,
4311:    -3017,  1621,  1999,  2021,  2109, 55019,   984,  2691,   786,   827,
4312:    -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017, -3017,
4313:    -3017, -3017, -3017,  2691,  2549,  2335,  2555, -3017,  1937, 19682,
4314:       94, -3017,   990,  2550, -3017, -3017,  2623,  2188,  2116, 22826,
4315:     2117, -3017,  2119, 64984, 44856,  2267, -3017, -3017,  2120, -3017,
4316:    -3017, 19682, -3017, 41145,  2127,  2128,  2588,  1780,  2139,  2139,
4317:    -3017,    -5, -3017, -3017,  2560, 32525,  2507,  1238,   248,  2151,
4318:     1021, -3017, -3017, -3017, -3017, -3017,  3469, -3017, 40626,  2375,
4319:      217,  2371,  2095, 19682, -3017,  2213, -3017, -3017, -3017,  2620,
4320:    -3017, -3017, 50528,  2147, -3017,  2021,  1999,  1813,  2021,  2369,
4321:    -3017,  2374,  2152, 40665, 64984, 64984,  1621, 32525, 64984,  2149,
4322:     2139, -3017,  2153, -3017, -3017, -3017, 54021, -3017,  2157, -3017,
4323:    -3017, -3017, 19682,   735, -3017, -3017,  2201, 55019,  1028,    65,
4324:     2365, 39014, -3017, 47035,  1442,   -11,  2464, -3017, -3017, -3017,
4325:    -3017,   115,  2381, -3017,  2390, -3017, 44856, -3017,  2691, 50528,
4326:    -3017, -3017, -3017, -3017, -3017, -3017, 32525,  2550, -3017,   356,
4327:    -3017,  1492, -3017,   356, -3017, -3017, -3017, -3017, -3017,  1428,
4328:    23350, 23350, 23350,  2164,  2691, -3017,  1492, -3017,  2284,  2371,
4329:    -3017, -3017, -3017, -3017, -3017,   269,   269,  2557, -3017,  2232,
4330:    -3017,  2021,  1035, 64984,  1721, -3017,  1721, 24922,  2320,   293,
4331:    43712,  2548, -3017,  2548,  2548, -3017, -3017, -3017, 38015, -3017,
4332:    -3017,  2670, -3017,   260, -3017, -3017, -3017,  1621,   356, -3017,
4333:    -3017,  2662, -3017, -3017, -3017, -3017, -3017,   159, -3017, -3017,
4334:    -3017,  1492,   248, -3017, -3017, -3017,  1492,  1721, 23874,  2333,
4335:    -3017,  2408, -3017, -3017, -3017, -3017, -3017, -3017, -3017
4336: };
4337: 
4338: /* YYPGOTO[NTERM-NUM].  */
4339: static const yytype_int16 yypgoto[] =
4340: {
4341:    -3017, -3017, -3017,  1837,    82, -3017, -3017,    68, -3017,   930,
4342:    -3017,    61,  -789,   452, -3017,    86,  2920,  2581,  3525,  1263,
4343:     -518,  -887, -1258,    28,    88, -1146,    10, -3017, -3017, -3017,
4344:    -3017, -1498,  -583,   126, -3017, -3017,  -720, -2539,  -673, -3017,
4345:    -2953, -2678, -3017, -3017,  -808, -3016, -2069,    90, -3017, -3017,
4346:       95,     2, -2117, -3017, -1676,    64, -2104,    96,    97,   846,
4347:    -3017, -2620,   100,  -895, -1200,  -912, -1207, -3017,  -205, -3017,
4348:      357,   101,  1251,  1885, -3017,     4, -2197, -2867,  -679, -3017,
4349:     -779, -3017,  -437, -3017,  -726, -3017,  -947,  -734,  -768, -2858,
4350:    -1145, -3017,  1532,  -489, -3017,   490, -3017, -2589, -3017, -3017,
4351:      478, -3017, -1163, -3017, -2234,    36,  -713, -2411, -2567, -2178,
4352:     -898,   120,  -721,    98, -2131, -1255, -3017,   502, -3017,  -705,
4353:    -3017,  -891, -2495,   102, -3017, -3017,  1421,  -930, -3017,   109,
4354:    -3017,   390, -3017, -2149,   388, -2106,  1455,  -630,    19,    21,
4355:    -3017, -3017, -3017, -3017, -3017,  -748,   430, -1216, -3017,   366,
4356:    -3017, -3017, -3017, -3017,  -290,    79, -2268,    11,  3003,   -31,
4357:      -37, -3017,   -32, -3017, -3017, -3017,   537, -3017, -3017,    18,
4358:       42,  1605, -3017, -1027, -3017, -1634,   690, -3017,  1762,  1768,
4359:    -2165,  -879,   -49, -3017,   577, -1671, -2144,  -640,  1027,  1595,
4360:     1590,   327, -2965, -3017,  -663, -3017,    46, -3017, -3017,   568,
4361:     1071, -1562, -1558, -3017, -2201, -3017,  -582,  -472, -3017, -3017,
4362:    -3017, -3017, -3017, -2529, -2138,  -635,  1040, -3017,  1597, -3017,
4363:    -3017, -3017, -3017,    60, -1503,  2768,   606,   -48, -3017, -3017,
4364:    -3017, -3017,    14, -3017,   794,  -302, -3017,  2004,  -669,  -801,
4365:     1805,  -611,   237, -1705,   -18,  2017,   368, -3017, -3017,   367,
4366:    -2062, -1421,   322,  -391,   798, -3017, -3017, -1253, -3017, -1865,
4367:    -1191, -3017, -3017,  -732,  1014, -3017, -3017, -3017,  1151,  1778,
4368:    -3017, -3017,  2774,  2790, -3017,  -900,  3151,  1176, -1037,  1844,
4369:     -931,  1856,  -933,  -935,  -938,  1857,  1858,  1860,  1861,  1863,
4370:     1867,  1876, -1539,  4950,  1052,   945, -2215, -3017, -1583,   915,
4371:      916,   917,    48, -3017, -1399,    76, -3017, -3017, -3017, -3017,
4372:    -3017, -2758, -3017,  -563, -3017,  -555, -3017, -3017, -3017, -1759,
4373:    -2749, -1789, -3017,  4393,   725, -3017, -3017,   306, -3017, -3017,
4374:    -3017, -3017, -1535, -3017,  5761,   621, -3017, -2017, -3017, -3017,
4375:     -981,  -850,  -731,  -998, -1217, -1938, -3017, -3017, -3017, -3017,
4376:    -3017, -3017, -1513, -1780,  -208,   682, -3017, -3017,   778, -3017,
4377:    -3017, -3017,     6, -1434, -1755, -2116, -3017, -3017, -3017,   698,
4378:     1373,   -19,  -839, -1621, -3017,   755, -2371, -3017, -3017,   318,
4379:    -3017,  -599, -1122, -2457,    59,    16, -3017,   689, -2551, -3017,
4380:    -3017,  -740, -2691, -1138,  -892, -3017,   116, -3017,   274,   127,
4381:    -1651, -3017,     5, -3017,  -501, -3017, -3017, -2588, -3017,   128,
4382:      129,  2069, -3017,  1034, -3017, -3017, -3017, -3017,  -581, -3017,
4383:     -620,  -614, -3017, -3017,    32,  -902,  1511, -3017,   131,   434,
4384:    -3017,   852, -3017,   601,   132, -3017,  1969,  -492,   134,  1178,
4385:    -3017, -3017, -3017,    29,  -602,   278, -3017,  1180, -3017, -3017,
4386:     1646,   564,   138, -3017,   420,    22, -3017, -3017, -3017,    84,
4387:     2777,   139,    12, -2389,   142, -2800, -1683,    -7, -3017, -3017,
4388:    -3017,  -729, -3017, -2526
4389: };
4390: 
4391: /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
4392:    positive, shift that token.  If negative, reduce the rule which
4393:    number is the opposite.  If zero, do what YYDEFACT says.
4394:    If YYTABLE_NINF, syntax error.  */
4395: #define YYTABLE_NINF -2082
4396: static const yytype_int16 yytable[] =
4397: {
4398:      525,  1133,    57,   913,    65,    82,   962,  1237,  1200,   719,
4399:       53,    70,   103,  1030,  1165,   871,   525,  1437,    77,    68,
4400:      857,    69,    99,   523,   883,   981,  1256,   884,   885,    94,
4401:     1803,  1307,  1786,  1814,  1346,  1802,  1949,  2201,    77,   523,
4402:      887,  1489,   784,  1310,   718,   888,  1695,  1767,   853,  2168,
4403:     1595,  1411,   778,  2076,  1410,   522,  1409,  2599,  1407,  2124,
4404:     1849,  2307,  2006,  2634,  2037,  1752,  1773,  1363,   525,   525,
4405:     1777,   816,   559,  2487,  1819,  2589,  1352,  1369,   750,  2705,
4406:     1881,   745,    50,   810,  2101,  2102,    51,   869,    52,   825,
4407:       55,   523,   523,   904,  1807,    56,    59,    60,  3038,   818,
4408:       61,    63,    66,   868,   868,  2991,  1671,  3022,  2572,    67,
4409:     2574,  1674,   896,  1236,  1608,  1242,    80,  1246,   850,  2553,
4410:     1256,  2588,  3035,   816,   816,  2627,  3020,    81,    83,    84,
4411:     2993,    90,    91,   972,    93,   810,   810,  1376,    98,   102,
4412:      975,  1012,   104,  2674,  2675,  2676,  1033,  2489,   964,  2688,
4413:     -454,   818,   818,  2884,  2819,  2337,  -527,  2889,  -371,  2333,
4414:     1054,  1572,  1573,  1054,  2221, -1351,  -531, -1929,   900, -1929,
4415:     2224,  2172,  2439,  1210,  3434, -2069, -2069,  3233,  1585,  1211,
4416:     -865,  -870,  1340,  2332,   820,  -870, -1292, -1273,  1054,  1421,
4417:     2696,   537, -1920,  -873, -1289, -1289, -1937,   982, -1293, -1292,
4418:    -2060, -2060, -2055, -2055, -2078, -2078, -1290, -1290,  2126, -1920,
4419:     1210, -1937, -2080, -2080, -1293,  -832,  1211,  2706,  2692,  -845,
4420:     -860,  3220,  2116,   820,   820,    23,  1146,  -873,  1769,  2690,
4421:     3168,  1758,  1679,  2697,  2683,  2116,   820,  3515,  3237,  1805,
4422:      861,  1627,  1189,  1926,  1604,  -480,  1629,  1192,  1928,  1461,
4423:      981,  2507,  1675,  1356,   820,   953,  -527,  1153,  1054,  2782,
4424:     1817,  1340,  -229,  3569,  1256, -1125,  -531,  -229,   820,  1818,
4425:     2155,  2743,  2745, -1125,  2748,  1778,  1637,  1356,  2156,  1701,
4426:     2468,  2469,  1054,  1340,  1212,  1331,  2329,  2234,  1627,  1007,
4427:      875,  2475,  1628,  1629,  1926,  2479,   875, -1146,  1927,  1928,
4428:     3203,  2713,  3179,  1769,  3311, -1146,  -664,  1753,   538,   820,
4429:     1639,  1698,  1787,  1627,  2662,  1790,  1791,  1628,  1629,  1154,
4430:      880,  1212,  1033,  1637,  1332,  3394,  1761,  3134,  1966,  3136,
4431:     2449,  1250,  3540,  1577,  1012,  3039,  3151,  3324,  1151,  2451,
4432:     3570,  3507,  2012,   878,  2462,  2463,  2464,   878,  1637,  1587,
4433:        3,     4,  1751,  2313,  1013,  3354,  2165,  1639,  -609,  1747,
4434:     1748,  1966,  1370,  -609,  2927,  3355,  1676,  2901,    26,    27,
4435:       28,  2856,  2630,  2858,  2103,   838,  3291,  3564,  3293,  3458,
4436:     1712,   876,  1639,   113,  -802,  1019,  1778,   876,  3341,  3013,
4437:     3468,  3165,  2898,  1599,  2765,  2452,  2227,  2196,  3402,   880,
4438:    -2054, -2054,  1627,  1801,  2564,  3177,  1464,   105,  2857,  2412,
4439:     3438,  3257,  1471,  3141,   879,  1627,  1821,  3231,   879,  2183,
4440:     2656,  1020,  2907,  3454,  3455,  3202,  1862,  1590,  2897,   788,
4441:     3340,  3185,  3571,  2657,  -609,    33,  2127,  1462,  2928,  3190,
4442:     2440,  1213,  3227,  3342,  2184,  3234,  -527,  1022,  2908,  1591,
4443:     1637,  3142,  3343,  3239,  2880,  2902,  -531,   106,  1600,  3553,
4444:     3235,  3403,  1310,  3180,  2128,  3228,  3166,   114,  1514,  3232,
4445:     3522,  1639,    38,  1699,  3420,  3495,  3344,   839,  1213,  1341,
4446:     3178,  1779,  2197,  -609,  1639,  1147,  1763,  1155,  1713,  1156,
4447:     1677,  2627,   880,  2627,  1014,  2754,   880,  3367,  3049,  2813,
4448:     1214,  3040,  1595,  1333,  1215,    40,  2166,  1778,  2631,  1210,
4449:     3183,  3322,  2259,  2228,  1808,  1211,    43,  -527,  2314,  3508,
4450:     -802,  2903,  2929,  2904,  1926,  1251,  3469,  -531,  1927,  1928,
4451:     2450,  1776,  3356,  1589,  3523,  3255,  1216,  1240,  -684,  2453,
4452:     3565,  1215,  3541,  2321,  1053,  2330,  1820,  1926,  1776,  3345,
4453:      928,  1927,  1928,  3395,   988, -2082, -2082, -2082,  1341,  2124,
4454:     1749,  1148,  3346,  2235,  3064,  1750,  2782,   954,  3481,  3516,
4455:     3169,    46,  1697,  1241,  1048,  3043,  1026,  1806,  3214,  2129,
4456:     1341,  1690,  1616,  2483,  2318,   862,   719,  3572,  2047,  2131,
4457:     3031,  1958,  1779,  2117,  3510,  1463,  2250,   962,  1572,  1573,
4458:     3028,  2076,  1883,  2312,  1754,  1764,  2555,  1217,  1887,  3300,
4459:      911,  3055,  3470,  2836,   912,   948,  1973,  3554,  3044,  1334,
4460:     1212,   950,   877,  1585,  2378,  2009,   981,  3482,  2502,  3542,
4461:     3332,  3312,  2752,  1994, -1125,  2576,  -527,  2684,  2685,  2157,
4462:      535,  1342,  1568,   881,  1217,  2221,  -531,   881,  2755,  1803,
4463:     2602,  3236,  2663,  2991,   539,  3014,  2420,   789,  3543,  1776,
4464:      819,  2407,  1476,  3192,  3193,  2597, -1146,  2709,  2797,  2704,
4465:     1590,  -454,  -454,  2413,  2171,  -527,  1306,  -527,  2993,  -371,
4466:    -1929,  2384, -1929,  2058,  2059,  -531, -1351,  -531,  1582,  2698,
4467:     1582,  2591,  1591,  -865,  -870,  3159,  3303,  1622,   911, -1292,
4468:    -1273,  3304,   912,  2441,  1590, -1920,  1592,  1574,  2126, -1937,
4469:     2446, -1293, -1292,  1779,  1477,  2044,  1604,  1001,  1715,  3427,
4470:     1345,  2688, -1920,   871, -1937,  1604,  1591, -1293,  1575,  1256,
4471:     2097,  1256,  1580,  -860,  1891,  3277,  1672,  2173,  1797,  2079,
4472:     1594,   975,  2132,  3419,  1660,  1884,  1943,   980,  2480,  3426,
4473:     3217,  3306,  2480,  2133,  1179,  1715,   858,  1004,  1360,  1361,
4474:     3493,  1185,  1798,  3347,  1716,  2776,  3348,  -229,  -229,  2098,
4475:     3316,    77,  2877,  1577,   871,   784,  1185,  1213,  3551,  1964,
4476:     1776,  2501,  1360,  1361,  1157,  2255,   977,   525,  1657,  1658,
4477:     1659,  1660,  2312,  1587,  1940,  1941,  1942,  1943,   525,  2421,
4478:     2255,  1716,  2635,  1354,  3150,  1778,  1355,   967,  2865,  2422,
4479:      523,  1655,  1656,  1657,  1658,  1659,  1660,   887,  3059,  3576,
4480:     2638,   523,   888,  2766,  2767,  2768,  2769,  2035,  1934,  1393,
4481:     1394,   864,  1717,   525,   525,  2045,  1244,  1187,  1201,  2878,
4482:     1215,  1152,   816,  2447,  2051,  3548,  2256,  3209,  3491,  1038,
4483:     2940,  1797,  1187,   816,   873,  3020,  1180,   525,   541,  1152,
4484:     1039,  2624,  3152,  2866,   890,  1003,  2369,   874,  2401,  1769,
4485:      818,  1709,  1245,  2402,  1792,  1798,    57,  2285,    65,    82,
4486:     1770,   818,  2447,  1718,    53,    70,   103,  2288,  3218,  2284,
4487:     2291,  2783,    77,    68,  1158,    69,    99,  3115,   889,  2119,
4488:     1590,  1188,  2565,    94,   525,   719,  2545,  1166,  1299,   525,
4489:     2991,  1616,  3228,  2636,  1688,   939,  3007,  1689,  3008,  3500,
4490:     1718,   542,  1591,   892,   868,  3098,   850,   850,  3100,   850,
4491:     3102,   850,  2403,  1811,  2546,  2993,  1592,  1778,  2308,  2309,
4492:     2310,   820,   108,  1217,  3421,  1719,  2456,   907,  1399,  1400,
4493:     2377,  2342,   916,   909,  2379,  2139,    50,  2381,  3336,  3566,
4494:       51,  1299,    52,  2524,    55,  1778,  1457,  3309,  2247,    56,
4495:       59,    60,   980,  1468,    61,    63,    66, -1929,   917,   525,
4496:      525,  2076,  1719,    67,    23,   525,  2389,   940,   525,   525,
4497:       80,   525,   525,   525,   525,  2283,  2394,  1352,  1309,  2827,
4498:       77,    81,    83,    84,   784,    90,    91,   525,    93,  1778,
4499:     1769,  1779,    98,   102,   525,  2294,   104,   939,  2911,  1793,
4500:     2301,  1772,  1938,  1939,  1940,  1941,  1942,  1943,  3296,  1794,
4501:      523,   525,  1299,  1560,   915,  1949,  3480,   523,  2577,  3483,
4502:     2578, -2082, -2082, -2082,   918,  1938,  1939,  1940,  1941,  1942,
4503:     1943,  1893,  2672,   525,  2547,  2286,  1054,  3285,  1454,  2548,
4504:     2289,  2914,   816,  2673,   871,  2661,  1895,  1461,  3286,   816,
4505:     1213,  1054,   525,   919,   810,  3501,  1480,  1803,  1776,  2140,
4506:     1484,   810,  2037,   525,   525,   525,   941,   525,   525,   940,
4507:      818,   719,  3125,  2665,  2677,  1888,  2141,   818,  1889,  2259,
4508:     3323,  2142,  1590,   546,  3502,   971,   927,  1882,  2608,  3398,
4509:     3415,  2445,   109,  1385,  1386,   541,   920,  1882, -2051, -2051,
4510:     3249,  2597,   525,   110,  1591,   942,  1610,    26,    27,    28,
4511:      934,   550,  3546,  2637,   541,  2638,  -209,  2669,  1594,  2143,
4512:      525,   525,  1210,  1779,  1703,  1704,  2664,  1710,  1211,   888,
4513:      888,  2008,   888,  3388,  2009,  3389,  1152,  2400,   111,  -540,
4514:      943,  2404,  2600,  2033,  2406,  2639,  2034,  1054,  1185,   981,
4515:     -608,  1779,  1967,  1186,  -540,  -608,   525,  1968,   542,  -540,
4516:      525,   525,   911,  1393,  1394,  1608,   912,  1566,  1836,    46,
4517:      525,   525,   525,  2060,    33,   525,  2505,   542,  2783,   938,
4518:     2061,  2062,   946,  1019,  2063,  2064,  2065,  1583,  1584,   112,
4519:     1776,   944,  2549,   911,  2714,  1779,  1560,  1615,  2159,  3314,
4520:     2722,  1804,  2160,  2550,  2918,  2326,   868,  1837,  2327,  3440,
4521:     -540,    38,  1957,  1626,  1959,  1960,  1627,  2792,  1776,  1020,
4522:     1628,  1629,  2395,   921,  1187,  2396,  -608,  1042,  1043,  1044,
4523:     -540,  1299,  1047,  1212,   922,  1470,   951,   116,   941,  1469,
4524:     1299,   536,  1838,  1474,    40,  1022,  2359,   952,  2360,   749,
4525:      544,  1637,  2543,  2919,  1210,    43,  1140,  1141, -2082,  1143,
4526:     1211,  1145,  1776,   837,  1299, -2052, -2052,   851,   822,   923,
4527:      956,  2920,  2573,  1188,   955,  -608,  2144,   942,  2433,  -540,
4528:      957,  2434,  1399,  1400,   988,  1639,  1560,   911,  -540, -1273,
4529:     1308,   912,   924,  1839,  1843,  2481,  1844,  1846,  2482,  2649,
4530:     2484,  2651,   719,  2482,  1847,  2652, -2053, -2053,  2653,  1308,
4531:       46,   719,  2700,  2646,  2658,  2648,  -208,  2659,  3060,   958,
4532:      925,  1210,  3562,  2725,  2076,   968,  2009,  1211,   980,  2789,
4533:     2777,   986,  2482,  2790,  2784,  2793,  2034,  1876,  2794,   987,
4534:      546,  2795,   971,  2872,  2794,   719,  2873,  2894,   989,  2896,
4535:      525,  2127,    77,   930,  3029,   931,   784,  2396,   908,   546,
4536:     3549,   547,  3550,   944,   992,  1212,  3030,   977,   550,  2327,
4537:     3053,   995,  2921,  3054,  1026,  3061,  2611,   996,  3062,  2128,
4538:     1898,  2922, -2082,  2989,  1885,  3116,  1886,   550,  2034,   932,
4539:     1213,   933,  1985,  1463,  1986,  3250,   997,  1988,  2034, -2082,
4540:      525,   525,  1992,  3575, -2082,  1995,   525,  1996,   525,  3525,
4541:      998,  2000,  2938,   525,   525,   525,   525,   999,  2931,  3251,
4542:     2695,  2457,  2482,  2458,  3537,  2459,  1006,  2460,   525,   525,
4543:     1000,   523,  1212,   525,  3006,   525, -2056, -2056,   525,  -540,
4544:     2895,  3280, -2082,   525,  2034,   525,   525,  3287,   525,  2246,
4545:     2009,  3297,   525,  1215,  3298,  1001,   523,  2596,   523, -2057,
4546:    -2057,   523,  1223,   816,  2814,  2815,   523,  3016,  1040,   523,
4547:     3330,   523,  2930,  2396,  2939,   523,  1035,  3331,  3364,  3573,
4548:     2327,  2034,  1224,  3424,  3574,  1216,  2396,  1046,   816,  3436,
4549:      816,   818,  3437,   816,  2129, -2058, -2058,  1648,   816,  2130,
4550:      810,   816,   810,   816,  2131,   810,  1560,   816,   911,  3384,
4551:      810,  3385,   912,   810,  1045,   810,   818,  1604,   818,   810,
4552:     3462,   818,  1213,  3463,  1608,  1048,   818,  3506,  1225,   818,
4553:     3437,   818, -2059, -2059,  3547,   818,  1836,  3437,   525,   525,
4554:     2803,  2805,  2806,  2802,  2804,  2801,  2800,   525,   525,  1182,
4555:     1049,  1184,  2036,  2040,  1144,   525,  1217, -2061, -2061,  1150,
4556:       77,  2038,   525,  2039,  2043, -2062, -2062, -2063, -2063, -2064,
4557:    -2064,  2042, -2065, -2065,  1161,  1837, -2066, -2066,  1167, -2067,
4558:    -2067,  2292, -2068, -2068,  1168,  1215, -2070, -2070,   719,  1213,
4559:     1170,  1210,   525, -2071, -2071,   525,  1171,  1211,  1172, -2082,
4560:     1560,   525,   525,   525,   525,   525,   525,   525,   525,   719,
4561:     3222, -2072, -2072,   525,   525,   525,  1174,  2293,   525,  1175,
4562:     2735,  1183,   525,  1202,  1226,   525,   525,   525,   525,   525,
4563:      525,   525,   525,   525, -2073, -2073,   525,  1205,   523,   981,
4564:    -2074, -2074,  1207,   525,  2113,  1299, -2075, -2075,  1365,  2597,
4565:    -2077, -2077,  1215,  2168,  2203, -2079, -2079,  2132,  1208,   888,
4566:     1209,  1839, -2081, -2081,   525,  1823,  1824,  1221,  2133,  3196,
4567:     2066,  2067,  2068,  1227,  2069,  2070,  2071,  2072,  2073,  2074,
4568:     2222,  2223,  2097,  1228,  1216,  -659,  -659,   525,  1217,  -663,
4569:     -663,  -662,  -662,  1395,  1396,  1229,  1248,  1626,   525,   525,
4570:     1627,  1158,  1212,  1222,  1628,  1629,  1302, -2082,  1399,  1400,
4571:     3160,  3156,  3157,  2938,  1655,  1656,  1657,  1658,  1659,  1660,
4572:     2727,  2729,  3533,  3534,  3559,  3560,  1239,  1230,  1683,  1684,
4573:     2616,  2617,  1305,  1243,  1247,  1637,  1306,  1311,  1560,  1313,
4574:     1317,  1329, -2082,  1327,  1337,  1330,  1338,   719,  1344,   719,
4575:     1348,  1347,  1353,  2888,  1372,  1217,  1371,  1377,  1435,  1451,
4576:     1448,  1458,  1450,  1465,  1466,  2012,  1472,  1473,  1479,  1639,
4577:     1485,  1483,  1562,  1563,  1565,  -836,  -843,  1574,  3012,  1578,
4578:     3213,  1232,  2271,  1624,  2275,  3052,    46,  -684,  3023,   525,
4579:     -685,  -833,  -834,  1299,  1588,  -837,   525,   525,  3524,  2251,
4580:     1589,  -835,  3526,  3041,  -540,  1668,  1233,  1609,  1619,  2260,
4581:     1621,  2263,  1666,  1365,  2274,  1682,   541,  1692,  1670,  -540,
4582:     2278,  1691,  2280,  1696,  -540,  1235,  1700,  3363,  3276,  1702,
4583:     3127,  1186,  1188,  1737,  2542,  2287,   820,  1299,  1739,  1741,
4584:     2290, -1337,  1775,  1756,  2295,  2296,  2297,  2298,  1781,  2302,
4585:     2303,  2363,  1774,  1776,  1782,   719,  1783,  3567,  1788,  1213,
4586:     1795,  1800,  1299,   525,  1796,   113, -2082,  1810,  1816,  1826,
4587:     1827,   980,  1828,  1832,  1835,  -540,  1841,  1842,  1850,   542,
4588:     1851,  1858,  1860, -2082,  1854,  1857,  1861,  1560, -2082,  1863,
4589:     1864,   525,   525,  1365,   525,  -540,  1365,  1365,  1877,  1560,
4590:      525,   525,   525,   525,   525,   525,  2597,  1878,   525,   525,
4591:      525,   525,   525,   525,   525,   525,   525,   525,  2299,  2470,
4592:     1882,  1431,  1215,   525,   525,  2473, -2082,   525,  1890,  1560,
4593:     1954,  2989,  1626,   970,   525,  1627,  1560,  1915,  1917,  1628,
4594:     1629,  3512,  1965,  2362,  -540,  1918,  1920,  1923,  1946,  1983,
4595:     1955,  1962,  1987,  -540,  2300,  1993,   525,    14,    15,  1997,
4596:      525,  1998,   525,  1999,    23,  2004,   525,  1568,  2010,  2867,
4597:     1637,  2007,  2015,  1575,  1560,  1580,  3363, -2082,  1560,  2011,
4598:      525,  1648,  1299,   523,  1560,  2013,  2014,  2016,  2046,   523,
4599:     2047,  1054,  1627,  3197,  3198,  3328,  2080,  2081,  2084,  3188,
4600:     2087,  2090,  2093,    23,  1639,  2092,  2095,  1560,  2094,  2135,
4601:     2136,   545,   541,  2115,  2138,   816,  2162,  2163,  3363,   525,
4602:      525,   816,  2169,  2181,    23,  1217,  3097,   810,  1430,  1894,
4603:     1896,   984,  2182,   810,  1549,  2186,   879, -1337,  2199,  2212,
4604:     2202,  2213,  2211,   818,  2214,  2216,  2215,  2233,  2237,   818,
4605:     2238,  2241,  2248,  2252,  2253,  2254,   880,   525,  2334,  2324,
4606:      525,   546,  1037,   971,  2328,   525,   525,  3363,  2343,  2552,
4607:     2345,   871,  1608,  2346,  2349,   542,  2347,  2350,  2348,  2364,
4608:      548,  2365,  2367, -2082,  2372,  2373,   549,  1142,  2376,   550,
4609:      525,   525,  3417,  2370,  2371,   525,  2374,  2380,  2397,  2405,
4610:     1951, -2082,  1926,  2435,  -540,  1950,  2442,    26,    27,    28,
4611:     2443,   525,  2444,  1730,   525,   525,   525,  2466, -2082,  2448,
4612:     2454,  2474,  1431, -2082,  2486,  2488,  2455,  2493,  3379,  2341,
4613:     2472,  2494,   525,   719,  2495,   822,  2497,  2498,   523,   525,
4614:     2499,  2500,   525,  2503,  2511,  2504,    26,    27,    28,  2512,
4615:     2515,  2514,  3174,  1600,  2516,  2517,  2868,  2544,  2518,   525,
4616:     2519, -2082,  2520,  2521,  2539,   523,  2551,    26,    27,    28,
4617:     2522,  1551,   525,   911,    33,  2560,  1170,   912,  2568,  2536,
4618:     2582,  2537,   523,  2561,  2579,  2566,  2567,  2580,  2989,   525,
4619:      525, -2082,  2584,  2585,  2590,  2592,  1557,   816,  1655,  1656,
4620:     1657,  1658,  1659,  1660,  2593,  -665,   525,  2603,   525,   810,
4621:     2604,    38,  2606,    33,   816,  2607,  1648,  1549,  2610,  2614,
4622:     1885,   525,  1362,  2615,    35,   818,   810,  2620,  1754,  2623,
4623:     2622,  2618,  1405,  2626,    33,  2645,  2647,  1803,  2678,   719,
4624:      719,   719,   818,  2679,    40,  2660,    37,  2666,  2911,  2052,
4625:       38,  2667,  2668,  2680,  2912,    43,  2681,   546,  2693,   971,
4626:     2694,  2082,  2699,  2083,  3317,  2712,  2711,  2913,  2715,  2716,
4627:     2723,    38,    44,  2719,  2271,  2271,  2271,  2732,   525,  1582,
4628:     2742,  2750,   549,    40,  1299,   550,  2753,  2756,  2773,  2774,
4629:     2099,  2914,   871,  2915,    43,  2785,    45,  2760,  2786,  2759,
4630:     1680,  2761,  2834,  2762,    40,   981,  2810,  1549,  2799,  2823,
4631:       46,    44,  2835,  2791,  1843,    43,  1844,  1846, -2082,  2847,
4632:      719,  2807,  2817,  2848,  1847,  1560,  2824,  2832,  2838,  2853,
4633:     2862,  2879,    44,  2855,  2859,    45,  2881,  2885,  2883,  2893,
4634:     2926,  2942,  2900,  2906,  2899,   525,  3009,  1620,  3010,    46,
4635:     3033,  3011,  1431,  1431,  1551,  1898,    45,  1623,  1431,  3015,
4636:      525,   980,  3018,  3019,  3037,  3026,  3032,  3045,  3046,   719,
4637:     2869,  3027,  3057,  2327,  3050,  3058,  3083,  3063,  1673,  1557,
4638:     3085,  2916,  3089,  3093,  3106,  3103,  3368,  1678,  3370,  2097,
4639:     1223,  3104,  3107,  3149,  2220,  2220,  3128,  3135,  3138,  3147,
4640:     3140,  2718,  3153,  3154,  1898,  3171,  3155,   525,  3161,  3378,
4641:     1224,  3162,  3163,  3167,  3172,  3181,  3173,  3184,  3186,  3187,
4642:     3191, -2050, -2051, -2052, -2053, -2054, -2082,  3205, -2055, -2056,
4643:      523, -2057, -2058,  1655,  1656,  1657,  1658,  1659,  1660, -2059,
4644:    -2061, -2062,  3206, -2063,  1551,  3221, -2064,   525,  3207,  2917,
4645:     3380,  3499,  3382, -2065,  2918, -2066,  1225,  3208,  1365,  1924,
4646:     1925, -2067,   816,  1560,  1152,  1945, -2068, -2070,  1365,  1557,
4647:    -2071,  1365,  3223, -2072,   871, -2073,  3238,  3204, -2074,  3460,
4648:      525,  3240, -2075, -2076, -2077, -2078,   525,   525,  3453,  3243,
4649:      818,  3464, -2079, -2080, -2081, -1290,  3210,  2850,   525,  3242,
4650:     3252,  3253,  3211,  2919,  3264,  3219,  3224,  3226,  3246,  3256,
4651:      871,  3258,   525,  3270,  3260,   525,  3266,   525,  3267,  3272,
4652:     3275,  2920,  3448,  3271,  1560,   525,  2934,  1549,   525,   525,
4653:     3279,  3294,  3299,   525,   525,  1053,  3295,  3302,  1926,  3305,
4654:      525,   541,  1927,  1928,  3307,  3319,  1929,  1930,  1931,  3320,
4655:     3329, -1289,  1226,  3327,  3335,   525,  3337,  3338,  3351,  3352,
4656:     3353,  2887,  3365,  2829,  3366,   525, -1337,  1365,   521,   532,
4657:     2036,  2040,  3369,  3372,   557,  3373,  3375,  2871,    77,  2038,
4658:      557,  2039,  2043,  3381,   807,   525,   821,  3386,  3180,  2042,
4659:      824,   557,   833,  3406,  3410,   833,  3416,  3412,   852,   856,
4660:     3413,  1227,   856,  3429,   542,   557,   557,  3422,  3430,  3431,
4661:     3434,  1228,  3439,  3229,  1897,  3441,  3443,  3131,  3446,  3447,
4662:     3459,  1549,  2921,  1229,  3450,  3451,   719,  3452,  3466,  2992,
4663:      719,  2922,   719,  3457,    23,  3477,   807,   807,  3461,  2210,
4664:     3478,  3471,  3484,  3504,   525,  3479,   525,  3485,  3494,  3514,
4665:     3486,  3517,  3496,  3538,  2890,  1230,  3498,  2891,   543,  3515,
4666:     3519,  2271,   852,  3535,  1551,  2994,  3516,  2275,  3552,   856,
4667:      557,   856,   856,   856,  3488,  3563,  3557,   544,  3568,  3048,
4668:     1843,  3577,  1844,  1846,  2943,  3021,  3578,  2496,  2941,  1557,
4669:     1847,  1173,  2279,  2643,  2945,  3393,  2874,  3492,  3456,  2996,
4670:     2997,  2998,  2999,  3000,  3001,  3002,  3003,  3004,  3005,  1232,
4671:     3561,  3194,  2734,  3475,  3042,  2382,  1149,  3545,  3315,  3513,
4672:     3520,  3539,  1766,  3350,  2625,  2650,   525,   871,  3036,  1560,
4673:     3511,  3518,  2910,  2621,  1233,  3509,   545,  2995,  1880,  2728,
4674:     2726,  2689,  2739,  -208,  3247,  1840,   525,   525,  3017,  1933,
4675:     2609,   525,  1693,  1235,   525,  1455,  2595,  2240,  1551,  1549,
4676:     1733,  1456,  2764,  3497,  2605,  2208,  1734,  3442,  3371,  2239,
4677:     1738,   811,  2581,  2478,  3274,  3092,  1422,    26,    27,    28,
4678:     2757,   525,  2758,  1557,  2788,  3321,   546,  1457,   547,  1005,
4679:     3445,   991,  2492,  2391,  2392,  2393,   525,  3444,  1552,  2534,
4680:     2812,  2598,   525,   525,  2558,   548,  2508,   525,  1560,  1974,
4681:     3111,   549,   525,  1406,   550,   525,   525,  2556,   871,  1934,
4682:      525,  1299,   913,  3139,   525,  1408,  1412,  1413,   525,  1414,
4683:     1415,  2535,  1416,  2826,  2860,   525,  1417,  3432,   985,  2485,
4684:     2322,  1204,  2575,    23,    33,  1418,  1892,  2177,  2670,  2875,
4685:     2179,   523,  1431,  1431,  1431,  1431,  1431,  1431,   897,     0,
4686:     1431,  1431,  1431,  1431,  1431,  1431,  1431,  1431,  1431,  1431,
4687:        0,     0,     0,  1812,     0,  2601,  2601,     0,     0,   525,
4688:        0,    38,     0,   816,     0,     0,     0,   525,     0,     0,
4689:        0,     0,     0,     0,     0,   810,  1551,     0,     0,     0,
4690:        0,     0,     0,     0,     0,     0,   525,     0,  1549,     0,
4691:        0,   818,     0,     0,    40,  1560,     0,     0,     0,     0,
4692:     1549,  1557,     0,  2174,     0,    43,     0,  1223,     0,     0,
4693:        0,     0,     0,     0,     0,     0,     0,     0,     0,    14,
4694:       15,   860,    44,     0,     0,     0,     0,  1224,     0,  2992,
4695:     1549,     0,  3175,     0,     0,     0,     0,  1549,     0,  2414,
4696:     2415,  2416,  2417,  2418,  2419,     0,    45,  2423,  2424,  2425,
4697:     2426,  2427,  2428,  2429,  2430,  2431,  2432,     0,     0,     0,
4698:       46,  1552,     0,    71,     0,    23,    26,    27,    28,     0,
4699:        0,   719,     0,  1225,  2932,  1549,  2243,  2245,     0,  1549,
4700:        0,     0,     0,    71,  2933,  1549,   809,     0,   899,     0,
4701:      902,     0,   906,     0,     0,     0,  1016,     0,     0,   525,
4702:       71,  1017,   871,     0,  3230,     0,  1898,   980,  1549,   870,
4703:      525,  1560,  1935,  1936,  1937,     0,  1938,  1939,  1940,  1941,
4704:     1942,  1943,  1431,  1431,     0,  1551,   525,     0,     0,     0,
4705:        0,     0,     0,    33,     0,  2304,     0,  1551,   809,   809,
4706:      886,     0,     0,  2934,     0,     0,     0,     0,  2319,  2319,
4707:     1557,  1552,     0,     0,  1560,     0,     0,     0,     0,   525,
4708:     1018,     0,  1557,     0,    71,     0,     0,  1551,     0,  1226,
4709:       38,   525,   525,     0,  1551,   525,     0,   525,     0,     0,
4710:        0,   856,     0,     0,     0,     0,   856,     0,     0,   856,
4711:        0,     0,  1557,     0,     0,     0,     0,   557,     0,  1557,
4712:        0,     0,   525,    40,     0,     0,     0,     0,    26,    27,
4713:       28,     0,  1551,     0,    43,     0,  1551,     0,  1227,     0,
4714:        0,  1362,  1551,     0,     0,     0,   525,  2399,  1228,  2540,
4715:     2541,    44,  1019,     0,     0,     0,     0,  1557,  1431,     0,
4716:     1229,  1557,  2935,  2796,  2798,  1551,     0,  1557,     0,     0,
4717:        0,     0,     0,     0,     0,    45,     0,  2992,     0,     0,
4718:        0,     0,     0,     0,     0,     0,     0,     0,  1020,    46,
4719:     1557,     0,  1230,     0,     0,    33,     0,     0,     0,   719,
4720:        0,     0,     0,     0,  1021,     0,    35,     0,     0,     0,
4721:        0, -1811,  3333,     0,  1022,     0,     0,     0,     0,   525,
4722:        0,     0,     0,  3318,     0,     0,     0,     0,    37,   525,
4723:        0,   525,    38,   525,  1898,     0,     0,   525,     0,   525,
4724:        0,   525,   523,     0,  3325,  3326,  1232,     0,  1023,     0,
4725:        0,     0,   525,     0,     0,     0,     0,   525,  1016,   525,
4726:        0,     0,     0,  1017,     0,    40,     0,   525,  3339,  1199,
4727:        0,  1233,     0,     0,   816,     0,    43,     0,     0,     0,
4728:      719,     0,     0,     0,     0,   525,  3390,     0,  3392,     0,
4729:     1235,  1552,  2936,    44,  1024,  2937,     0,     0,     0,     0,
4730:        0,  1025,   818,     0,     0,     0,     0,   960,   557,   557,
4731:        0, -1811,     0,     0,     0,  3399,     0,    45,     0,     0,
4732:        0,     0,  1018,     0,     0,  1365,     0,     0,  3425,     0,
4733:        0,    46,   525,     0,     0,     0,     0,     0,     0,     0,
4734:        0,     0,   525,  1026,  3428,     0,  1549,     0,     0,   983,
4735:      532,     0,     0,     0,   525,   521,     0,   856, -1811,     0,
4736:        0,     0,  1027,     0,     0,     0,   807,     0,   525,     0,
4737:     1009,  1009,     0, -1811,     0,  1009,  1032,     0, -1811,     0,
4738:        0,     0,     0, -1811,     0,  1552,   525,     0,   833,   833,
4739:      833,   523, -1811,   833,  1019,     0,     0, -1811,     0,     0,
4740:        0,     0,     0,   833,   833,  1776,   833,     0,   833,     0,
4741:      525,     0,     0,     0,     0,     0,     0,     0,     0,     0,
4742:      856,     0,     0,   816,     0,   525,   557,     0,     0, -1811,
4743:     1020,  1028,     0,   523,  2992,     0,   719,     0,   856,     0,
4744:      929,     0,     0,     0,     0,   936,  1021,     0,   937, -1811,
4745:        0,   818,   856,   821,     0,     0,  1022,     0,     0,   525,
4746:     3099,     0,     0,     0,     0,   816,     0,     0,     0,  3521,
4747:        0,  3399,     0,   525,   525,   525,     0,     0,     0,     0,
4748:     1431,  1431,   523,  1551,  1549,     0,     0,   856,  1304,  1223,
4749:     1023,     0,     0,   818,     0,  3536,  3505,     0, -1811,  1315,
4750:      525, -1811,     0,   856,   856,   856,   856, -1811,  1557,  1224,
4751:        0,     0,     0,     0,   816,     0,  2654,     0,   558,  1336,
4752:        0,     0,    71,  1552,   558,     0,     0,     0,     0,     0,
4753:        0,     0,     0,     0,     0,   558,  1024,     0,     0,     0,
4754:        0,   525,   818,  1025,     0,  1549,     0, -1811,     0,   558,
4755:      558,  1009,  1032,     0,   856,  1225,     0,  1429,     0,     0,
4756:        0,     0,     0,  1009,  1009,     0,     0,     0,  2686,   557,
4757:        0,     0, -1811,     0,     0,   807,     0,     0,     0,     0,
4758:        0,     0,   807,     0,     0,  1026,  2701,  2840,  2841,     0,
4759:        0,     0,   557,     0,     0,     0,     0,     0,     0,     0,
4760:     1365,     0,     0,     0,  1027,  1365,     0,     0,     0,  1564,
4761:        0,     0,     0,     0,   558,     0,     0,     0,     0,     0,
4762:        0,  1551,     0,     0,     0,     0,     0,     0,     0,     0,
4763:      858,  1362,     0,  1901,     0,     0,     0,     0,     0,     0,
4764:        0,  2740,     0,  2741,     0,     0,  1557,  2746,     0,  2749,
4765:     1549,  1226,  1894,  1896,     0,     0,     0,     0, -1811,     0,
4766:      557,     0,     0,     0,     0,     0,     0,     0, -1811,     0,
4767:        0,    23,  1552,  1028,     0,     0,     0,     0,  1431,     0,
4768:     1902,     0,  1551,     0,  1552,     0,     0,     0, -1811,     0,
4769:    -1811, -1811,     0,     0,     0,     0,   994,     0,     0,     0,
4770:     1227,  1903,     0,  3086,     0,     0,     0,  1557,     0,     0,
4771:     1228,  1685,     0,  1687,  1552,     0,     0,     0,     0,  1904,
4772:        0,  1552,  1229,  1905,     0,     0,     0, -1811,   557,   557,
4773:    -1811, -1811, -1811,     0,     0,   856,    71,   870,     0,     0,
4774:        0,     0,     0,     0,     0,     0,  1906,     0,  3110,  1907,
4775:     1549,     0,     0,     0,  1230,     0,     0,     0,  1429,  1552,
4776:        0,     0,     0,  1552,     0,  1908,     0,     0,     0,  1552,
4777:      856,  1765,     0,     0,     0,     0,     0,   990,     0,     0,
4778:        0,     0,     0,   856,     0,  3056,     0,  1551,  1002,     0,
4779:        0,  1203,  1552,     0,  1554,     0,     0, -1813,     0,     0,
4780:      856,     0,     0,  3391,   856,     0,     0,     0,  1232,  1813,
4781:     1555,     0,  1557,     0,    26,    27,    28,     0,     0,     0,
4782:        0,     0,     0,   722,     0,     0,  1303,     0,     0,  1549,
4783:        0,     0,     0,  1233,     0,     0,     0,   886,     0,  1431,
4784:        0,     0,  1319,  1321,  1324,  1326,     0,  1626,     0,     0,
4785:     1627,     0,  1235,     0,  1628,  1629,     0,    71,  1909,     0,
4786:        0,  1894,  1896,     0,     0,     0,  1910,  1829,     0,   856,
4787:        0,     0,     0,  1365,     0,     0,     0,     0,   856,     0,
4788:      723,    33,     0,     0,     0,  1637,     0,  1551,  1911,  1873,
4789:        0,     0, -2082,  1424,     0,     0,   724, -1813,   960,  2985,
4790:        0,     0,     0,   960,     0,   557,   557,     0,   557,   960,
4791:        0,     0,  1557,     0,     0,     0,     0,  1912,    38,  1639,
4792:        0,     0,     0,     0,     0,     0,  1053,     0,     0,  1926,
4793:        0,     0,  2686,  1927,  1928,     0,  1549,  1929,  1930,  1931,
4794:        0,     0,     0,     0, -1813,   725,  3176,     0,     0,     0,
4795:        0,    40,     0,     0,     0,   726,     0,     0,     0, -1813,
4796:        0,     0,    43,     0, -1813,    71,  1551,     0,   727, -1813,
4797:     1549,     0,     0,   728,     0,     0,     0,  1554, -1813,    44,
4798:        0,     0,  1431, -1813,  2839,     0,     0,     0,  1429,  1429,
4799:        0,  1557,     0,  1555,  1429,     0,   521,   809,     0,     0,
4800:        0,     0,   729,    45,   809,     0,     0,     0,     0,  1009,
4801:        0,   557,  1969,     0,     0, -1813, -2082,    46,     0,   856,
4802:        0,   807,     0,   807,     0,     0,   807,     0,     0,     0,
4803:        0,   807,     0, -2082,   807, -1813,   807,     0, -2082,  1567,
4804:      807,     0,   557,     0,   557,   730,     0,     0,     0,   731,
4805:        0,  1579,  1549,     0,     0,     0,     0,     0,     0,     0,
4806:        0,   558,     0,     0,     0,     0,     0,  1554,     0,     0,
4807:        0,     0,     0,  1551,     0,     0, -2082,     0,  1606,     0,
4808:        0,     0,     0,  1555, -1813,     0,     0, -1813,     0,  3248,
4809:        0,     0,     0, -1813,     0,  1549,     0,     0,  1557,     0,
4810:        0,     0,  3137,     0,     0,     0,     0,  1551,     0,  1757,
4811:     1552,     0,     0,   544,     0,     0,     0,  1932,     0,   732,
4812:        0,     0,  1784,     0,     0,     0,     0,     0,     0,     0,
4813:     1365,  1648,  1557, -1813,   733,     0,     0,     0,     0,     0,
4814:     1933,     0,     0,  1809,     0,     0,     0,     0,     0,  2075,
4815:        0,     0,     0,     0,     0,     0,     0,     0, -1813,     0,
4816:        0,  2086,     0,     0,   886,   886,     0,   886,     0,   734,
4817:        0,  1556,   735,     0,     0,     0,     0,     0,     0,     0,
4818:        0,     0,     0,   736,     0,     0,   737,     0,     0,  1551,
4819:        0,  3377,     0,     0,     0,     0,     0,     0,  1549,     0,
4820:      960,     0,     0,  1429,   738,     0,     0,     0,  1834,     0,
4821:     1934,     0,     0,     0,  1557,     0,   858,  1853,   739,     0,
4822:        0,     0,     0,     0,   740,   741,     0,     0,     0,     0,
4823:        0,     0,  1551, -2082,     0,   742,     0,     0,     0,     0,
4824:        0,   743,     0,     0, -1813,     0,     0,  2175,  1552,   856,
4825:        0,   856,   558,   558, -1813,     0,     0,  1557,     0,     0,
4826:        0,   856,     0,  2191,     0,     0,     0,     0,     0,   744,
4827:     3225,     0,     0,     0, -1813,  1429, -1813, -1813,     0,     0,
4828:        0,     0,     0,     0,     0,     0,     0,  1554,     0,     0,
4829:        0,     0,     0,     0,     0,     0,     0,  1362,     0,     0,
4830:      856,     0,   557,  1555,     0,     0,     0,     0,     0,  1552,
4831:        0,     0,     0, -1813,  2242,  2244, -1813, -1813, -1813,     0,
4832:     1765,   557,     0,     0,     0,     0,     0,     0,     0,     0,
4833:        0,   557,  2261,   557,  2265,  1551,   557,    71,     0,     0,
4834:        0, -2082,   557,     0,   557,     0,     0,     0,  1655,  1656,
4835:     1657,  1658,  1659,  1660,  1556,     0,   960,   557,  1981,     0,
4836:     1557,   960,   557,     0,     0,     0,   557,   557,   557,   557,
4837:      558,   557,   557,     0,     0,     0,     0,     0,  3292,     0,
4838:        0,  1554,     0,     0,     0,     0,     0,     0,  2323,     0,
4839:        0,     0,     0,     0,     0,     0,  1315,  1555,   856,   856,
4840:      856,   856,   856,     0,     0,     0,     0,     0,     0,     0,
4841:        0,     0,     0,     0,  1552,     0,     0,     0,     0,  2352,
4842:        0,     0,     0,  1935,  1936,  1937,     0,  1938,  1939,  1940,
4843:     1941,  1942,  1943,     0,     0,     0,     0,     0,  2375,     0,
4844:        0,     0,     0,   809,  1556,   809,     0,  2985,   809,     0,
4845:        0,     0,     0,   809,     0,  1549,   809,     0,   809,     0,
4846:        0,     0,   809,     0,     0,     0,     0,     0,     0,     0,
4847:        0,     0,     0, -1828,     0,     0,     0,     0,     0,     0,
4848:        0,     0,     0,     0,     0,     0,     0,     0,  1429,  1429,
4849:     1429,  1429,  1429,  1429,     0,     0,  1429,  1429,  1429,  1429,
4850:     1429,  1429,  1429,  1429,  1429,  1429,     0,     0,     0,     0,
4851:        0,     0,     0,  1449,  1552,     0,     0,     0,     0,  1554,
4852:        0,     0,     0,     0,     0,     0,   557,     0,     0,     0,
4853:        0,     0,     0,     0,     0,  1555,  1482,     0,   856,     0,
4854:        0,     0,     0,     0,     0,    71,     0,     0,   807,     0,
4855:        0,     0,     0,     0,   807,     0,     0,     0,     0,     0,
4856:      557,     0,     0,     0,     0,   557,     0,     0,     0,     0,
4857:        0,     0,  3418, -1828,  2490,  2490,     0,     0,     0,     0,
4858:        0,     0,     0,     0,     0,     0,     0,     0,  2176,     0,
4859:     2178,     0,  1551,  1552,     0,     0,     0,     0,  1626,     0,
4860:     2188,  1627,     0,     0,  1611,  1628,  1629,  1630,  1631,  1632,
4861:     1633,  1634,     0,     0,     0,     0,     0,  1557,     0,     0,
4862:    -1828,     0,     0,     0,     0,  2123,  1635,     0,     0,     0,
4863:        0,     0,     0,     0,     0, -1828,  1637,     0,     0,  2225,
4864:    -1828,     0,     0,  1638,     0, -1828,   557,     0,     0,     0,
4865:     2528,     0,     0,     0, -1828,   557,     0,     0,     0, -1828,
4866:        0,     0,     0,     0,  1556,     0,     0,     0,  1554,     0,
4867:     1639,     0,   558,   558,     0,     0,     0,     0,  1429,  1429,
4868:     1554,     0,     0,     0,  1555,     0,     0,     0,     0,     0,
4869:        0, -1828,     0,     0,   886,     0,  1555,  2075,  1626,     0,
4870:     1552,  1627,     0,  1429,  2985,  1628,  1629,     0,     0,     0,
4871:     1554, -1828,  1053,     0,     0,  1926,     0,  1554,     0,  1927,
4872:     1928,     0,     0,  1929,  1930,  1931,  1555,     0,     0,     0,
4873:      807,     0,     0,  1555,  1552,     0,  1637,  2335,  2336,  2338,
4874:     2339,  2340,   557, -2082,     0,     0,     0,   807,     0,     0,
4875:        0,  2191,     0,     0,     0,  1554,     0,     0,  1556,  1554,
4876:    -1828,     0,     0, -1828,     0,  1554,     0,  1640,     0, -1828,
4877:     1639,  1555,     0,     0,     0,  1555,     0,     0,     0,     0,
4878:        0,  1555,     0,     0,  1641,     0,     0,     0,  1554,  1642,
4879:        0,   557,     0,     0,  1429,     0,     0,   557,     0,     0,
4880:        0,     0,     0,     0,  1555,     0,     0,     0,     0, -1828,
4881:        0,     0,  1643,  1644,     0,     0,  1552,  1829,     0,     0,
4882:        0,     0,     0,     0,     0,     0,     0,  1645,     0,     0,
4883:        0,  2344,     0,     0, -1828,  2842,     0,     0,     0,     0,
4884:        0,     0,     0,    71,     0,     0,     0,     0,     0,   558,
4885:      558,     0,   558,     0,     0,     0,     0,     0,     0,  1552,
4886:        0,     0,     0,     0,     0,  1646,     0, -2082,  1647,     0,
4887:        0,     0,     0,     0,     0,     0,     0,  2461,     0,     0,
4888:        0,     0,  1648,     0, -2082,  1649,     0,     0,  1829, -2082,
4889:        0,     0,   858,     0,     0,   856,  1556,     0,     0,     0,
4890:        0,     0,     0,  2236,     0,     0,  1315,     0,     0,  1829,
4891:      856,   856,   856,     0,     0,     0,     0,     0,     0,     0,
4892:    -1828,     0,     0,   557,     0,   856,  1933, -2082,   856,     0,
4893:    -1828,     0,     0,     0,     0,   856,     0,     0,     0,     0,
4894:        0,   960,     0,     0,     0,     0,     0,     0,     0,     0,
4895:    -1828,     0, -1828, -1828,     0,   558,     0,     0,     0,     0,
4896:        0,     0,  1552,  1829,  1829,     0,  1829,     0,     0,     0,
4897:      809,     0,     0,     0,     0,     0,   809,     0,     0,     0,
4898:        0,     0,  1648,     0,  1650,     0,  2001,     0,  2005, -1828,
4899:        0,     0, -1828, -1828, -1828,   521,  1934,     0,     0,     0,
4900:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
4901:        0,     0,     0,     0,     0,  2763,     0,     0,     0,     0,
4902:        0,     0,     0,   856,   856,   856,     0,     0,     0,     0,
4903:        0,     0,     0,   557,     0,  1429,     0,   557,     0,     0,
4904:        0,     0,     0,   557,     0,  1556,     0,     0,  1053,     0,
4905:        0,  1926,     0,     0,     0,  1927,  1928,  1556,     0,  1929,
4906:     1930,  1931,     0,   856,     0,     0,     0,     0,     0,     0,
4907:        0,     0,     0,     0,     0,     0,  2830,  2075,     0,     0,
4908:        0,     0,     0,     0, -2082,     0,     0,  1556,     0,     0,
4909:        0,     0,  1651,     0,  1556,  1652,  1653,  1654,     0,  1655,
4910:     1656,  1657,  1658,  1659,  1660,  1606,  1554,     0,     0,     0,
4911:        0,     0,     0,     0,     0,     0,  1429,  1429,  2513,     0,
4912:        0,     0,  1555,     0,     0,  2123,     0,     0,     0,     0,
4913:        0,     0,  1556,     0,     0,     0,  1556,     0,     0,     0,
4914:        0,  2562,  1556,     0,     0,  2864,     0,     0,     0,     0,
4915:        0,  2191,   809,     0,     0,     0,     0,     0,     0,     0,
4916:        0,     0,     0,     0,     0,  1556,     0,   856,     0,   809,
4917:        0,   557,     0,     0,     0,   557,   557,     0,     0,   557,
4918:        0,     0,     0,  1829,  1765,  1829,     0,  1873,     0,     0,
4919:        0,     0, -2082,     0,     0,     0,     0,     0,     0,  1655,
4920:     1656,  1657,  1658,  1659,  1660,     0,   557,     0,  2944,  1935,
4921:     1936,  1937,     0,  1938,  1939,  1940,  1941,  1942,  1943,  1552,
4922:        0,   557,   557,   557,   557,   557,   557,   557,   557,   557,
4923:      557,     0,     0,     0,  2691,     0,     0,     0,     0,     0,
4924:        0,     0,     0,     0,  1554,     0,   558,     0,     0,  2707,
4925:     2708,  2710,     0,     0,  2352,     0,     0,     0,     0,     0,
4926:     1555,   856,  1933,     0,  2721,   558,     0,  2724,     0,     0,
4927:        0,     0,     0,  1765,  2733,   558,     0,   558,     0,     0,
4928:      558,     0,     0,     0,     0,     0,   558,     0,   558,     0,
4929:        0,     0,     0,  1873,     0,     0,     0,     0,     0,     0,
4930:        0,   558,     0,  1829,     0,  1554,   558,     0,     0,     0,
4931:      558,   558,   558,   558,  1429,   558,   558,     0,     0,     0,
4932:      557,  1555,     0,     0,     0,     0,   870,   856,   856,   856,
4933:      856,     0,  1934,     0,     0,     0,     0,     0,     0,  1429,
4934:        0,     0,  1429,     0,     0,     0,   557,   960,     0,     0,
4935:        0,     0,     0,     0,     0,  3101,     0,     0,     0,     0,
4936:        0,     0,  2770,  2771,  2772,     0,     0,     0,    11,  1432,
4937:        0,     0,     0,     0,  1626,     0,     0,  1627,     0,     0,
4938:        0,  1628,  1629,  3108,     0,  2528,     0,  1626,     0,     0,
4939:     1627,     0,     0,     0,  1628,  1629,    14,    15, -2082, -2082,
4940:    -2082,     0,     0,     0,     0,     0,     0,     0,     0,     0,
4941:     1554,     0,  1637,     0,  3132,     0,   807,     0,     0, -2082,
4942:        0,     0,  1016,     0,     0,  1637,  1555,  1017,     0,     0,
4943:     3144,     0,  1638,     0,  2191,     0,     0,     0,     0,     0,
4944:     2075,     0,    23,     0,  1626,     0,  1639,  1627,     0,     0,
4945:        0,  1628,  1629,     0,  1765,     0,     0,     0,     0,  1639,
4946:     1829,     0,     0,     0,     0,     0,     0,     0,     0,     0,
4947:      558,     0,     0,   960,   557,  1429,     0,     0,     0,     0,
4948:        0,   856,  1637,  1556,     0,     0,  1018,     0,     0, -2082,
4949:        0,     0,     0,     0,     0,     0,     0,     0,  3195,     0,
4950:        0,     0,     0,     0,  2477,     0,  2882,     0,  1606,  2005,
4951:     1554,  2843,     0,     0,     0,     0,  1639,     0,     0,     0,
4952:        0,     0,     0,     0,     0,     0,  1555,     0,     0,  1626,
4953:        0,     0,  1627,     0,     0,     0,  1628,  1629,  1630,  1631,
4954:     1632,  1633,  1634, -2082,  1606,  1935,  1936,  1937,     0,  1938,
4955:     1939,  1940,  1941,  1942,  1943,     0,  1640,  1635,  1019,     0,
4956:    -2082,     0,     0,    71,     0, -2082,  1196,  1637,     0,    71,
4957:     1432,     0,     0,  1641,  1638,     0,  3212,     0,  1642,     0,
4958:     1829,  3122,     0,     0,     0,    26,    27,    28,     0,  1554,
4959:      558,     0,     0,  2352,  1020,  2886,     0,     0,     0,  1611,
4960:     3025,  1639,     0, -2082,     0,  1555,     0,     0,     0,     0,
4961:     1021,  3244,     0, -2082,     0,     0,  1645,     0,  1429,     0,
4962:     1022,  1556,     0,     0,     0,     0,     0,     0,     0,     0,
4963:    -2082,     0,     0,     0,  1053, -2082,     0,  1926,     0,     0,
4964:        0,  1927,  1928,     0,  3261,  1929,  1930,  1931,     0,     0,
4965:      557,     0,    33,     0,  1023,     0,     0,   557,  1648,     0,
4966:        0,     0,  3118,    35,     0,     0,  3065,  3066,  3067,  3068,
4967:        0,  1648,     0, -2082,     0,  1197,     0,    71,     0,     0,
4968:        0,     0,  1556,     0,     0,    37,   558,     0,     0,    38,
4969:        0,     0,  3289,     0,     0,     0,  1554,     0,  1640,     0,
4970:     1024,     0,     0,     0,     0,     0,    71,  1025,     0,    39,
4971:        0,     0,  1555,  3047,   557,  1641,     0,     0,     0,   557,
4972:     1642,     0,    40,     0,     0,     0,     0,     0,  1648,     0,
4973:     1554,     0,     0,    43,     0,   558,     0,     0,     0,     0,
4974:        0,  2613,     0,  1643,  1644,   557,  1555,     0,     0,  1026,
4975:       44,     0,     0,     0,     0,     0,     0,     0,  1645,     0,
4976:    -2082,  1606,     0,     0,     0,     0,   557,   557,  1027,     0,
4977:     1115,  1115,     0,  1650,    45,     0,     0,     0,     0,     0,
4978:        0,     0,     0,   856,     0,  1765,     0,  1556,    46,     0,
4979:      557,     0,     0,     0,     0,     0,  1646,     0,     0,  1647,
4980:     1432,  1432,     0,     0,   856,     0,  1432,  3360,     0,     0,
4981:        0,     0,  1554,  1648,     0,     0,  1649,     0,     0,     0,
4982:     3182,     0,     0,     0,     0,     0,     0,  1429,  1555,     0,
4983:    -2082,   557,  1009,     0,  1009,     0,     0,  1028,   809,     0,
4984:        0,  1252,  1198,     0,     0,  1294,  1301,     0,  1933,     0,
4985:        0,     0,   870,     0,     0,  1554,     0,     0,     0,  3144,
4986:        0,     0,     0,     0,     0,     0,   856,   558, -2082,     0,
4987:        0,  1555,     0,     0,     0,  1655,  1656,  1657,  1658,  1659,
4988:     1660,  1651,     0,     0, -2082, -2082, -2082,  1556,  1655,  1656,
4989:     1657,  1658,  1659,  1660,  1053,     0,   856,  1926,  1351,     0,
4990:        0,  1927,  1928,     0,     0,  1929,  1930,  1931,     0,     0,
4991:        0,     0,     0,     0,     0,  1650,  1375,     0,  1934,     0,
4992:        0,     0,  1423,     0,     0,  1425,     0,     0,  1436,  1439,
4993:     1444,  1447,     0,     0,  3261,     0,     0,     0, -2082,     0,
4994:        0,     0,     0,     0,     0,  1655,  1656,  1657,  1658,  1659,
4995:     1660,     0,     0,     0,     0,     0,  3360,     0,  1554,     0,
4996:        0,     0,     0,     0,     0,     0,  1556,     0,  1486,  1294,
4997:        0,     0,     0,     0,  1555,     0,     0,   558,     0,     0,
4998:        0,   558,     0,  1765,     0,     0,     0,  2001,     0,     0,
4999:     1570,     0,     0,     0,     0,   960,   960,     0,  3360,   960,
5000:        0,     0,     0,     0,     0,     0,     0,  1969,     0,  1586,
5001:        0,     0,     0,     0,     0,     0,    71,     0,   557,     0,
5002:     1596,  1597,  1598,  1651,  1603,  1607,  1652,  1653,  1654,     0,
5003:     1655,  1656,  1657,  1658,  1659,  1660,     0,     0,     0,     0,
5004:     1765,  2167,     0,  1919,     0,     0,     0,  3360,     0,     0,
5005:        0,     0,     0,     0,     0,     0,  1606,     0,     0,  1669,
5006:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5007:        0,     0,     0,  1556,     0,     0,     0,  1486,  1486,     0,
5008:        0,     0,     0,     0,   960,     0,     0,  1432,     0,     0,
5009:        0,     0,     0,     0,     0,     0,  1210,     0,     0,  2191,
5010:        0,     0,  1211,     0,     0,     0,     0,  1556,  1933,     0,
5011:     1223,     0,     0,  1708,     0,   558,     0,  1724,  1729,   558,
5012:      558,     0,  3334,   558,     0,     0,     0,     0,  1115,  1115,
5013:     1224,  1935,  1936,  1937,     0,  1938,  1939,  1940,  1941,  1942,
5014:     1943,  1053,     0,  3358,  1926,     0,     0,     0,  1927,  1928,
5015:      558,     0,  1929,  1930,  1931,     0,     0,     0,     0,     0,
5016:        0,     0,     0,     0,     0,   558,   558,   558,   558,   558,
5017:      558,   558,   558,   558,   558,     0,  1225,     0,  1934,     0,
5018:        0,     0,     0,     0,     0,     0,     0,     0,  1294,  1556,
5019:        0,     0,     0,     0,     0,     0,     0,  1294,     0,     0,
5020:        0,     0,     0,     0,    71,  3397,     0,  1212,     0,     0,
5021:        0,     0,     0,     0,     0,  1554,     0,     0,     0,     0,
5022:        0,  1294,     0,     0,     0,  3357,     0,     0,     0,     0,
5023:        0,  1555,  1556,     0,     0,  3423,     0,     0,     0,     0,
5024:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5025:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5026:        0,     0,     0,     0,  2001,     0,     0,     0,     0,     0,
5027:        0,     0,  1226,     0,     0,     0,     0,     0,    71,     0,
5028:       71,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5029:     2477,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5030:     1432,  1432,  1432,  1432,  1432,  1432,     0,  1916,  1432,  1432,
5031:     1432,  1432,  1432,  1432,  1432,  1432,  1432,  1432,     0,     0,
5032:       71,  1227,     0,     0,     0,     0,     0,     0,     0,     0,
5033:        0,  1228,     0,     0,  1053,  1556,    71,  1926,     0,     0,
5034:        0,  1927,  1928,  1229,     0,  1929,  1930,  1931,     0,     0,
5035:        0,     0,     0,     0,     0, -2082,     0,     0,     0,     0,
5036:        0,     0,  3119,     0,  1213,     0,     0,     0,     0,     0,
5037:     1444,     0,  1444,  1444,     0,  1230,     0,     0,     0,     0,
5038:        0,     0,     0,     0,     0,  1115,  1115,     0,     0,     0,
5039:        0,  1935,  1936,  1937,     0,  1938,  1939,  1940,  1941,  1942,
5040:     1943,     0,  1115,     0,     0,     0,     0,     0,     0,     0,
5041:        0,     0,     0,     0,     0,     0,     0,     0,   558,     0,
5042:        0,     0,     0,  1231,     0,  1934,     0,  1215,     0,  1232,
5043:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5044:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5045:        0,     0,     0,     0,  1233,     0,     0,     0,     0,  1234,
5046:        0,    71,     0,     0,     0,     0,     0,     0,     0,     0,
5047:        0,     0,     0,  1235,     0,     0,     0,     0,     0,     0,
5048:        0,     0,     0,     0,     0,     0,     0,    71,     0,     0,
5049:     1432,  1432,     0,     0,     0,     0,     0,     0,     0,     0,
5050:        0,     0,  1626,     0,  2050,  1627,     0,     0,     0,  1628,
5051:     1629,     0,  2053,  1632,  1633,  1634,     0,     0,     0,     0,
5052:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5053:     1217,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5054:     1637,     0,     0,     0,     0,     0,     0,  1638,  1933,     0,
5055:        0,     0,  2100,     0,     0,     0,     0,     0,  2104,  2105,
5056:     2106,  2107,  2108,  2109,  2110,  2111,     0,     0,     0,     0,
5057:     2120,  2121,     0,     0,  1639,  2134,   -46,     0,     0,  2137,
5058:        0,     0,  2145,  2146,  2147,  2148,  2149,  2150,  2151,  2152,
5059:     2153,     0,  1556,  2154,  3269,     0,     0,     0,     1,     0,
5060:     1115,  2477,  1294,     0,     0,     0,  1432,     0,     2,     0,
5061:        3,     4,     0,     0,     0,     0,     0,     0,  1934,     0,
5062:        0,  2180,     0,     5,     0,     0,     0,     0,     6,     0,
5063:        0,     0,     0,     0,     0,     0,     0,     7,  1935,  1936,
5064:     1937,     0,  1938,  1939,  1940,  1941,  1942,  1943,     0,     0,
5065:        0,     8,     0,     0,     0,  1597,  1598,     0,   558,     0,
5066:        9,     0,    10,   558,     0,     0,     0,     0,     0,     0,
5067:        0,  1640,     0,     0,    11,     0,    12,     0,     0,     0,
5068:        0,     0,     0,     0,     0,     0,     0,    13,  1641,   558,
5069:        0,     0,     0,  1642,     0,     0,     0,     0,     0,     0,
5070:        0,     0,    14,    15,    16,     0,     0,     0,     0,     0,
5071:      558,   558,     0,    17,     0,     0, -2082, -2082,     0,    18,
5072:        0,     0,     0,     0,     0,     0,     0,    19,     0,    20,
5073:       21,  1645,     0,     0,   558,     0,     0,  1433,     0,     0,
5074:        0,     0,     0,     0,    22,     0,  2306,     0,    23,     0,
5075:     1294,     0,  1625,  2316,  2317,     0,     0,  1626,     0,     0,
5076:     1627,     0,     0,     0,  1628,  1629,  1630,  1631,  1632,  1633,
5077:     1634,     0, -2082,     0,    24,   558,     0,     0,     0,     0,
5078:        0,     0,     0,     0,     0,  1635,  1648,     0,     0,  1636,
5079:    -1446,     0,     0,     0,  1294,  1637,     0,     0,     0,     0,
5080:        0,     0,  1638,     0,     0,     0,     0,     0,     0,     0,
5081:        0,     0,     0,     0,     0,     0,    25,     0,     0,  1351,
5082:     2383,     0,     0,     0,     0,     0,     0,     0,     0,  1639,
5083:        0,  1935,  1936,  1937,     0,  1938,  1939,  1940,  1941,  1942,
5084:     1943,     0,     0,     0,     0,     0,     0,     0,  2409,  2410,
5085:        0,  2411,     0,     0,     0,     0,  1663,     0,     0,     0,
5086:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5087:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5088:     2437,  2438,     0,     0,  2180,     0,     0,     0,  1650,     0,
5089:        0,    26,    27,    28,     0,     0,     0,     0,     0,    29,
5090:        0,     0,    30,     0,  1663,     0,     0,     0,     0,     0,
5091:        0,     0,     0,  2465,     0,     0,     0,     0,     0,  2471,
5092:        0,     0,     0,     0,     0,     0,  1640,     0,  1432,  1432,
5093:     1016,     0,     0,    31,     0,  1017,     0,  1486,  1433,  1294,
5094:        0,     0,    32,  1641,     0,     0,     0,     0,  1642,     0,
5095:        0,     0,     0,     0,     0,     0,     0,     0,    33,     0,
5096:        0,     0,   558,     0,     0,    34,     0,     0,     0,    35,
5097:        0,  1643,  1644,     0,     0,     0,     0,  2506,     0,    36,
5098:        0,     0,     0,     0,     0,     0,  1645,     0,     0,     0,
5099:        0,    37,     0,  1663,  1018,    38,  1651,     0,     0,  1652,
5100:     1653,  1654,     0,  1655,  1656,  1657,  1658,  1659,  1660,     0,
5101:        0,     0,     0,     0,  2523,    39,     0,  2526,     0,     0,
5102:        0,     0,  2532,  2533,  1646,     0,     0,  1647,    40,     0,
5103:        0,    41,     0,     0,    42,  1663,     0,     0,     0,    43,
5104:        0,  1648,  1663,     0,  1649,     0,     0,     0,     0,     0,
5105:        0,     0,     0,     0,     0,     0,    44,     0,     0,     0,
5106:        0,  1210,     0,     0,     0,     0,  1019,  1211,  2554,     0,
5107:        0,  2557,     0,  2559,     0,  1223,     0,     0,     0,     0,
5108:       45,     0,     0,     0,     0,     0,     0,     0,     0,  2563,
5109:        0,     0,  1663,     0,    46,  1224,     0,   -46,     0,     0,
5110:        0,     0,  1020,     0,     0,     0,     0,     0,     0,     0,
5111:        0,     0,     0,     0,     0,     0,  1663,     0,  1021,     0,
5112:        0,     0,     0,     0,     0,     0,  1432,     0,  1022,  1708,
5113:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5114:        0,  1225,     0,  1650,     0,     0,  1729,  2152,     0,     0,
5115:        0,  1432,     0,     0,     0,     0,     0,     0,     0,     0,
5116:        0,     0,  1023,     0,  1663,  1115,  1663,     0,  1433,  1433,
5117:        0,  1944,  1212,     0,  1433,     0,     0,  1663,  2619,     0,
5118:     1663,     0,     0,  1989,     0,  1663,     0,     0,  1663,     0,
5119:        0,     0,     0,     0,  1626,     0,     0,  1627,     0,     0,
5120:        0,  1628,  1629,  1630,  1631,  1632,  1633,  1634,  1024,     0,
5121:        0,     0,     0,     0,     0,  1025,     0,     0,     0,     0,
5122:        0,     0,  1635,     0,     0,     0,  2822,  1663,     0,     0,
5123:        0,     0,  1637,     0,     0,  1598,     0,  1226,     0,  1638,
5124:        0,  1294,     0,     0,     0,     0,     0,     0,     0,     0,
5125:        0,  1651,     0,     0,  1652,  1653,  1654,  1026,  1655,  1656,
5126:     1657,  1658,  1659,  1660,     0,     0,  1639,     0,     0,     0,
5127:        0,     0,     0,     0,     0,     0,  1027,     0,     0,     0,
5128:        0,     0,     0,     0,     0,     0,  1227,  1432,     0,     0,
5129:        0,     0,     0,     0,     0,     0,  1228,     0,     0,     0,
5130:        0,     0,  2731,     0,     0,     0,     0,     0,  1229,     0,
5131:        0,  1663,     0,     0,     0,     0,     0,     0,     0,     0,
5132:        0,     0,     0,  1626,     0,     0,  1627,  1663,     0,  1213,
5133:     1628,  1629,  1630,  1631,  1632,  1633,  1634,  1663,  1663,  1663,
5134:     1230,     0,     0,     0,  1663,  1028,     0,     0,  1663,     0,
5135:     1990,  1635,     0,     0,     0,     0,     0,     0,     0,     0,
5136:        0,  1637,     0,  1640,     0,     0,     0,     0,  1638,     0,
5137:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5138:     1641,     0,     0,     0,     0,  1642,     0,     0,  2281,     0,
5139:        0,     0,  1215,     0,  1232,  1639,     0,     0,     0,     0,
5140:        0,     0,     0,     0,     0,     0,     0,     0,  1643,  1644,
5141:     1663,     0,     0,     0,     0,     0,     0,     0,     0,  1233,
5142:        0,     0,     0,  1645,  2282,     0,     0,     0,     0,     0,
5143:     1432,     0,     0,     0,     0,     0,     0,  2809,  1235,     0,
5144:        0,     0,     0,  2811,  2053,     0,     0,     0,     0,  1663,
5145:        0,     0,     0,     0,     0,  2818,     0,     0,     0,     0,
5146:        0,  1646,     0,     0,  1647,  1663,     0,     0,     0,  2828,
5147:     1663,     0,  2831,     0,  2833,     0,     0,     0,  1648,     0,
5148:        0,  1649,  2837,     0,     0,     0,     0,  1944,     0,     0,
5149:     2844,  2845,  1640,     0,     0,  1217,     0,  2852,     0,     0,
5150:        0,     0,     0,     0,     0,     0,     0,     0,     0,  1641,
5151:        0,     0,  2861,     0,  1642,     0,     0,     0,     0,     0,
5152:     1626,     0,  2876,  1627,     0,     0,     0,  1628,  1629,  1630,
5153:     1631,  1632,  1633,  1634,     0,     0,     0,  1643,  1644,     0,
5154:        0,     0,  1115,     0,     0,     0,     0,     0,  1635,     0,
5155:        0,     0,  1645,     0,     0,     0,     0,     0,  1637,     0,
5156:        0,     0,     0,     0,     0,  1638,     0,     0,     0,     0,
5157:     1626,     0,     0,  1627,     0,     0,     0,  1628,  1629,     0,
5158:     1650,  1632,  1633,  1634,     0,     0,     0,     0,     0,     0,
5159:     1646,     0,  1639,  1647,     0,     0,     0,     0,  1635,     0,
5160:        0,  2306,     0,  2306,     0,     0,     0,  1648,  1637,     0,
5161:     1649,     0,     0,     0,     0,  1638,     0,     0,     0,     0,
5162:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5163:        0,     0,     0,     0,     0,     0,     0,     0,     0,  1432,
5164:        0,     0,  1639,     0,     0,     0,     0,     0,     0,     0,
5165:        0,     0,     0,     0,     0,     0,     0,  1663,     0,     0,
5166:        0,     0,     0,     0,     0,  1944,  1944,     0,  1433,  1433,
5167:     1433,  1433,  1433,  1433,     0,     0,  1433,  1433,  1433,  1433,
5168:     1433,  1433,  1433,  1433,  1433,  1433,  1944,     0,  1651,  1640,
5169:        0,  1652,  1653,  1654,     0,  1655,  1656,  1657,  1658,  1659,
5170:     1660,     0,     0,  3081,  3082,  2091,  1641,     0,     0,  1650,
5171:        0,  1642,     0,     0,     0,     0,     0,     0,     0,     0,
5172:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5173:        0,     0,     0,     0,  1643,  1644,     0,     0,  3105,  1640,
5174:        0,     0,     0,     0,     0,     0,     0,     0,     0,  1645,
5175:        0,     0,     0,  3109,     0,     0,  1641,     0,     0,  3112,
5176:     3113,  1642,     0,     0,  3114,     0,     0,     0,     0,  3117,
5177:        0,     0,  3120,  3121,     0,     0,     0,  2306,  1294,     0,
5178:        0,  3129,     0,     0,  1643,  1644,     0,  1646,     0,     0,
5179:     1647,  1663,  1115,     0,  1663,     0,     0,     0,     0,  1645,
5180:        0,     0,     0,     0,  1648,     0,     0,  1649,     0,     0,
5181:        0,     0,     0,     0,     0,     0,     0,  1651,     0,     0,
5182:     1652,  1653,  1654,     0,  1655,  1656,  1657,  1658,  1659,  1660,
5183:        0,     0,     0,     0,  2091,     0,  3170,  1646,     0,     0,
5184:     1647,  1663,     0,     0,     0,  1663,  1663,  1663,  1663,  1663,
5185:     1663,  1663,  1663,     0,  1648,     0,     0,  1649,  1433,  1433,
5186:        0,  1663,  1663,  3189,     0,     0,     0,     0,     0,     0,
5187:        0,     0,     0,     0,     0,  1663,     0,     0,  1663,     0,
5188:        0,     0,     0,     0,     0,     0,  1663,  1663,  1663,  1663,
5189:     1663,  1663,  1663,  1663,  1663,  1663,     0,     0,     0,     0,
5190:        0,     0,     0,     0,     0,     0,  1650,     0,     0,     0,
5191:        0,     0,     0,     0,     0,  1626,     0,     0,  1627,     0,
5192:        0,  1663,  1628,  1629,  1630,  1631,  1632,  1633,  1634,     0,
5193:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5194:        0,     0,     0,  1635,     0,     0,     0,     0,     0,     0,
5195:        0,     0,     0,  1637,     0,     0,  1650,     0,     0,     0,
5196:     1638,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5197:        0,     0,     0,     0,  1433,     0,  2731,     0,     0,     0,
5198:        0,     0,   722,     0,     0,     0,     0,  1639,     0,     0,
5199:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5200:        0,     0,     0,  1607,     0,     0,     0,     0,     0,     0,
5201:        0,     0,     0,     0,  1651,     0,     0,  1652,  1653,  1654,
5202:        0,  1655,  1656,  1657,  1658,  1659,  1660,     0,     0,     0,
5203:        0,  2408,     0,     0,     0,     0,  2526,     0,     0,   723,
5204:        0,     0,     0,     0,     0,     0,     0,  1663,  3281,  3282,
5205:        0,     0,  3283,     0,  1598,   724,     0,  1663,  1663,     0,
5206:        0,     0,     0,     0,  1651,     0,     0,  1652,  1653,  1654,
5207:        0,  1655,  1656,  1657,  1658,  1659,  1660,     0,     0,  3301,
5208:        0,     0,     0,     0,  1640,     0,     0,     0,     0,     0,
5209:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5210:        0,  1641,     0,  3313,   725,     0,  1642,     0,     0,     0,
5211:        0,     0,     0,     0,   726,     0,     0,     0,     0,     0,
5212:        0,     0,     0,     0,  1663,     0,     0,   727,     0,  1643,
5213:     1644,     0,   728,     0,     0,     0,     0,     0,     0,     0,
5214:        0,     0,     0,     0,  1645,     0,     0,     0,     0,     0,
5215:     1663,  1663,  1663,     0,     0,  1944,  1944,  1944,  1944,  1944,
5216:     1944,   729,     0,     0,  1944,  1944,  1944,  1944,  1944,  1944,
5217:     1944,  1944,  1944,  1944,     0,     0,     0,     0,  1663,  1663,
5218:        0,     0,  1646,     0,     0,  1647,     0,     0,     0,     0,
5219:     3081,     0,     0,     0,  3374,     0,     0,     0,  1115,  1648,
5220:        0,     0,  1649,     0,   730,     0,  1663,     0,   731,  3383,
5221:        0,     0,  1663,     0,  2306,     0,  2306,     0,     0,     0,
5222:     1626,     0,     0,  1627,  1115,     0,     0,  1628,  1629,  1630,
5223:     1631,  1632,  1633,  1634,     0,     0,     0,     0,     0,     0,
5224:        0,     0,  3408,     0,     0,     0,     0,  1663,  1635,     0,
5225:        0,     0,     0,     0,     0,     0,     0,     0,  1637,     0,
5226:        0,     0,     0,     0,  1663,  1638,     0,  1663,     0,     0,
5227:        0,     0,     0,  1663,  1663,     0,     0,     0,   732,     0,
5228:        0,  1944,  1944,     0,     0,     0,     0,     0,     0,  3433,
5229:        0,     0,  1639,   733,     0,  1663,  1433,  1433,  1663,  3081,
5230:     1663,  1650,     0,     0,  1663,     0,     0,     0,     0,     0,
5231:     1626,  1115,     0,  1627,     0,     0,     0,  1628,  1629,  1630,
5232:     1631,  1632,  1633,  1634,     0,     0,     0,     0,   734,     0,
5233:        0,   735,     0,     0,     0,     0,     0,     0,  1635,     0,
5234:        0,     0,   736,  3476,     0,   737,     0,     0,  1637,     0,
5235:        0,     0,     0,     0,     0,  1638,     0,     0,     0,     0,
5236:     1663,     0,     0,   738,     0,     0,     0,     0,     0,     0,
5237:        0,     0,     0,     0,     0,     0,     0,   739,     0,     0,
5238:        0,     0,  1639,     0,   741,     0,     0,     0,     0,  1640,
5239:        0,     0,     0,     0,   742,     0,     0,     0,     0,     0,
5240:      743,     0,     0,     0,     0,     0,  1641,     0,     0,  1651,
5241:        0,  1642,  1652,  1653,  1654,     0,  1655,  1656,  1657,  1658,
5242:     1659,  1660,     0,     0,     0,     0,  2510,     0,   744,     0,
5243:     3530,  3530,  3530,     0,  1643,  1644,     0,     0,     0,     0,
5244:        0,     0,     0,  1626,     0,     0,  1627,     0,     0,  1645,
5245:     1628,  1629,  1630,  1631,  1632,  1633,  1634,  3530,     0,     0,
5246:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5247:        0,  1635,  1663,     0,     0,     0,     0,     0,     0,  1640,
5248:        0,  1637,     0,     0,     0,     0,     0,  1646,  1638,     0,
5249:     1647,     0,     0,     0,  1433,     0,  1641,  1378,  3530,   820,
5250:        0,  1642,     0,     0,  1648,     0,     0,  1649,     0,     0,
5251:        0,     0,     0,     0,     0,  1639,     0,     0,     0,     0,
5252:        0,     0,     0,     0,  1643,  1644,     0,     0,     0,     0,
5253:        0,     0,     0,     0,     0,     0,     0,     0,     0,  1645,
5254:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5255:     1663,     0,  1663,     0,     0,     0,     0,     0,     0,  1663,
5256:        0,     0,  1379,  1380,     0,     0,     0,     0,     0,  1663,
5257:        0,     0,  1663,     0,  1663,     0,     0,  1646,  1663,     0,
5258:     1647,  1944,  1944,     0,     0,  1663,  1663,     0,     0,     0,
5259:        0,     0,     0,  1663,  1648,     0,     0,  1649,     0,     0,
5260:        0,     0,  1663,  1381,  1382,     0,  1650,  1383,  1384,     0,
5261:        0,     0,  1640,     0,     0,     0,     0,  1663,     0,     0,
5262:        0,     0,     0,     0,     0,     0,     0,     0,     0,  1641,
5263:        0,     0,     0,     0,  1642,     0,     0,     0,     0,     0,
5264:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5265:        0,     0,     0,     0,     0,  1433,     0,  1643,  1644,     0,
5266:        0,     0,     0,     0,     0,     0,  1626,     0,     0,  1627,
5267:        0,     0,  1645,  1628,  1629,  1630,  1631,  1632,  1633,  1634,
5268:        0,     0,     0,  1385,  1386,     0,     0,     0,     0,     0,
5269:        0,     0,     0,     0,  1635,     0,  1650,     0,     0,     0,
5270:        0,     0,     0,     0,  1637,     0,     0,     0,     0,     0,
5271:     1646,  1638,     0,  1647,  1651,     0,     0,  1652,  1653,  1654,
5272:        0,  1655,  1656,  1657,  1658,  1659,  1660,  1648,     0,     0,
5273:     1649,  2538,     0,     0,     0,     0,     0,     0,  1639,     0,
5274:        0,     0,     0,     0,     0,     0,     0,  1387,  1388,  1389,
5275:     1390,  1391,  1392,  1393,  1394,     0,     0,  1395,  1396,     0,
5276:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5277:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5278:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5279:        0,     0,     0,     0,     0,     0,     0,  1944,  1433,     0,
5280:        0,     0,     0,     0,  1651,     0,     0,  1652,  1653,  1654,
5281:        0,  1655,  1656,  1657,  1658,  1659,  1660,     0,     0,     0,
5282:        0,  2751,  1663,  1663,     0,     0,     0,     0,     0,  1650,
5283:        0,  1397,  1398,     0,     0,  1640,     0,     0,     0,     0,
5284:        0,     0,     0,     0,     0,     0,  1663,     0,     0,     0,
5285:     1663,     0,  1641,  1663,  1663,  1663,     0,  1642,  1663,     0,
5286:        0,  1663,  1663,     0,     0,     0,     0,     0,     0,     0,
5287:     1663,     0,  1399,  1400,     0,     0,     0,     0,     0,     0,
5288:     1643,  1644,     0,     0,     0,     0,     0,     0,     0,     0,
5289:        0,     0,     0,     0,     0,  1645,     0,     0,     0,     0,
5290:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5291:        0,  1663,     0,     0,     0,     0,     0,  1944,     0,     0,
5292:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5293:     1663,     0,     0,  1646,     0,     0,  1647,  1651,     0,     0,
5294:     1652,  1653,  1654,     0,  1655,  1656,  1657,  1658,  1659,  1660,
5295:     1648,     0,     0,  1649,  2816,     0,     0,     0,     0,     0,
5296:        0,     0,     0,     0,     0,     0,     0,     0,  1401,  1402,
5297:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5298:        0,     0,     0,     0,     0,     0,     0,     0,     0,  1944,
5299:        0,     0,  1403,  1404,     0,     0,     0,     0,     0,     0,
5300:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5301:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5302:        0,     0,  1663,  1663,  1663,     0,     0,     0,     0,     0,
5303:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5304:        0,     0,  1663,     0,     0,     0,     0,     0,     0,     0,
5305:        0,     0,  1650,     0,  1663,     0,     0,     0,     0,     0,
5306:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5307:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5308:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5309:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5310:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5311:        0,     0,     0,     0,     0,  1663,     0,     0,     0,     0,
5312:        0,     0,     0,     0,  1663,     0,     0,     0,     0,     0,
5313:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5314:        0,     0,     0,     0,     0,     0,     0,     0,     0,  1663,
5315:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5316:     1651,     0,     0,  1652,  1653,  1654,     0,  1655,  1656,  1657,
5317:     1658,  1659,  1660,     0,  1663,     0,     0,  2825,     0,     0,
5318:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5319:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5320:      117,  1050,   820,  1051,  1052,  1053,  1054,  1055,     0,     0,
5321:        0,     0,     0,     0,     0,     0,     0,  1663,     0,   118,
5322:      119,   120,   121,   122,   123,   124,   125,     0,   126,   127,
5323:      128,     0,     0,     0,     0,     0,  1056,     0,     0,   129,
5324:      130,   131,     0,   132,   133,   134,   135,   136,   137,   138,
5325:      139,  1057,   141,  1058,  1059,     0,   144,   145,   146,   147,
5326:      148,   149,  1060,   790,   150,   151,   152,   153,  1061,  1062,
5327:      156,  1663,   157,   158,   159,   160,   791,     0,   792,     0,
5328:     1063,   164,   165,   166,   167,   168,   169,   170,   171,   172,
5329:        0,   173,   174,   175,   176,   177,   178,     0,   179,   180,
5330:      181,   182,   183,   184,   185,   186,   187,   188,   189,  1064,
5331:      191,   192,  1065,   194,  1066,   195,     0,   196,   197,   198,
5332:      199,   200,   201,     0,     0,   202,   203,   204,   205,     0,
5333:        0,   206,   207,  1067,   209,   210,     0,   211,   212,   213,
5334:        0,   214,   215,   216,     0,   217,   218,   219,   220,  1068,
5335:      222,   223,   224,   225,   226,   227,   793,  1069,   229,     0,
5336:      230,   231,  1070,   233,     0,   234,     0,   235,   236,     0,
5337:      237,   238,   239,   240,   241,   242,     0,   243,     0,  1071,
5338:     1072,   246,   247,     0,   248,   249,   250,   251,   252,   253,
5339:      254,   255,   256,   257,   258,   259,     0,   260,   261,   262,
5340:      263,   264,   265,   266,     0,   267,   268,   269,   270,   271,
5341:      272,   273,   274,  1073,  1074,     0,  1075,     0,   278,   279,
5342:      280,   281,   282,   283,   284,   285,   286,   287,   288,     0,
5343:        0,   289,   290,   291,   292,     0,   293,   294,   295,   296,
5344:      297,   298,   299,   300,  1076,   302,   303,   304,   305,   306,
5345:      307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
5346:      317,   318,   319,   320,   321,  1077,   323,  1078,   325,   326,
5347:      327,   328,  1079,   329,   330,   331,   332,  1080,   795,   334,
5348:     1081,   336,   337,   338,     0,   339,   340,     0,     0,  1082,
5349:      342,   343,     0,     0,   344,   345,   346,   347,   348,   349,
5350:      797,   351,   352,   353,   354,   355,   356,   357,   358,   359,
5351:      360,   361,     0,     0,     0,     0,   362,   363,   798,   365,
5352:      366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
5353:      375,   376,   377,     0,   378,   379,   380,   381,   382,  1083,
5354:      384,   385,   386,   387,     0,   388,   389,   390,   391,   392,
5355:      393,   394,   395,   396,   397,   398,   399,   400,     0,   401,
5356:      402,   403,   404,   405,   406,  1084,   408,   409,   410,   411,
5357:      412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
5358:        0,   421,   422,   423,   424,   425,   426,   427,   428,   429,
5359:        0,   430,   431,   432,  1085,   434,     0,   435,   436,   437,
5360:      438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
5361:      448,   800,     0,     0,   450,   451,     0,   452,   453,   454,
5362:      455,   456,   457,   458,     0,   459,  1086,  1087,     0,     0,
5363:      462,   463,   801,   465,   802,  1088,   467,   468,   803,   470,
5364:      471,   472,   473,   474,     0,     0,   475,   476,   477,     0,
5365:      478,   479,   480,   481,     0,   482,   483,   484,   485,   486,
5366:      487,  1089,   489,     0,   490,   491,   492,   493,   494,   495,
5367:      496,   497,   498,     0,     0,   499,     0,     0,   500,   501,
5368:      502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
5369:      512,   513,   514,   515,   516,   517,   518,   519,   520,  1090,
5370:        0,     0,     0,     0,     0,     0,  1091,  1092,  1093,     0,
5371:        0,     0,     0,  1094,     0,  1095,     0,     0,     0,     0,
5372:     1096,  1097,  1098,  1099,     0,  2671,   117,  1050,   820,  1051,
5373:     1052,  1053,  1054,  1055,     0,     0,     0,     0,     0,     0,
5374:        0,     0,     0,     0,     0,   118,   119,   120,   121,   122,
5375:      123,   124,   125,     0,   126,   127,   128,     0,     0,     0,
5376:        0,     0,  1056,     0,     0,   129,   130,   131,     0,   132,
5377:      133,   134,   135,   136,   137,   138,   139,  1057,   141,  1058,
5378:     1059,     0,   144,   145,   146,   147,   148,   149,  1060,   790,
5379:      150,   151,   152,   153,  1061,  1062,   156,     0,   157,   158,
5380:      159,   160,   791,     0,   792,     0,  1063,   164,   165,   166,
5381:      167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
5382:      176,   177,   178,     0,   179,   180,   181,   182,   183,   184,
5383:      185,   186,   187,   188,   189,  1064,   191,   192,  1065,   194,
5384:     1066,   195,     0,   196,   197,   198,   199,   200,   201,     0,
5385:        0,   202,   203,   204,   205,     0,     0,   206,   207,  1067,
5386:      209,   210,     0,   211,   212,   213,     0,   214,   215,   216,
5387:        0,   217,   218,   219,   220,  1068,   222,   223,   224,   225,
5388:      226,   227,   793,  1069,   229,     0,   230,   231,  1070,   233,
5389:        0,   234,     0,   235,   236,     0,   237,   238,   239,   240,
5390:      241,   242,     0,   243,     0,  1071,  1072,   246,   247,     0,
5391:      248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
5392:      258,   259,     0,   260,   261,   262,   263,   264,   265,   266,
5393:        0,   267,   268,   269,   270,   271,   272,   273,   274,  1073,
5394:     1074,     0,  1075,     0,   278,   279,   280,   281,   282,   283,
5395:      284,   285,   286,   287,   288,     0,     0,   289,   290,   291,
5396:      292,     0,   293,   294,   295,   296,   297,   298,   299,   300,
5397:     1076,   302,   303,   304,   305,   306,   307,   308,   309,   310,
5398:      311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
5399:      321,  1077,   323,  1078,   325,   326,   327,   328,  1079,   329,
5400:      330,   331,   332,  1080,   795,   334,  1081,   336,   337,   338,
5401:        0,   339,   340,     0,     0,  1082,   342,   343,     0,     0,
5402:      344,   345,   346,   347,   348,   349,   797,   351,   352,   353,
5403:      354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
5404:        0,     0,   362,   363,   798,   365,   366,   367,   368,   369,
5405:      370,   371,     0,   372,   373,   374,   375,   376,   377,     0,
5406:      378,   379,   380,   381,   382,  1083,   384,   385,   386,   387,
5407:        0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
5408:      397,   398,   399,   400,     0,   401,   402,   403,   404,   405,
5409:      406,  1084,   408,   409,   410,   411,   412,   413,   414,   415,
5410:      416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
5411:      424,   425,   426,   427,   428,   429,     0,   430,   431,   432,
5412:     1085,   434,     0,   435,   436,   437,   438,   439,   440,   441,
5413:      442,   443,   444,   445,   446,   447,   448,   800,     0,     0,
5414:      450,   451,     0,   452,   453,   454,   455,   456,   457,   458,
5415:        0,   459,  1086,  1087,     0,     0,   462,   463,   801,   465,
5416:      802,  1088,   467,   468,   803,   470,   471,   472,   473,   474,
5417:        0,     0,   475,   476,   477,     0,   478,   479,   480,   481,
5418:        0,   482,   483,   484,   485,   486,   487,  1089,   489,     0,
5419:      490,   491,   492,   493,   494,   495,   496,   497,   498,     0,
5420:        0,   499,     0,     0,   500,   501,   502,   503,   504,   505,
5421:      506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
5422:      516,   517,   518,   519,   520,  1090,     0,     0,     0,     0,
5423:        0,     0,  1091,  1092,  1093,     0,     0,     0,     0,  1094,
5424:        0,  1095,     0,     0,     0,     0,  1096,  1097,  1098,  1099,
5425:        0,  3284,   117,  1050,   820,  1051,  1052,  1053,  1054,  1055,
5426:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5427:        0,   118,   119,   120,   121,   122,   123,   124,   125,     0,
5428:      126,   127,   128,     0,     0,     0,     0,     0,  1056,     0,
5429:        0,   129,   130,   131,     0,   132,   133,   134,   135,   136,
5430:      137,   138,   139,  1057,   141,  1058,  1059,     0,   144,   145,
5431:      146,   147,   148,   149,  1060,   790,   150,   151,   152,   153,
5432:     1061,  1062,   156,     0,   157,   158,   159,   160,   791,     0,
5433:      792,     0,  1063,   164,   165,   166,   167,   168,   169,   170,
5434:      171,   172,     0,   173,   174,   175,   176,   177,   178,     0,
5435:      179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
5436:      189,  1064,   191,   192,  1065,   194,  1066,   195,     0,   196,
5437:      197,   198,   199,   200,   201,    14,    15,   202,   203,   204,
5438:      205,     0,     0,   206,   207,  1067,   209,   210,     0,   211,
5439:      212,   213,     0,   214,   215,   216,     0,   217,   218,   219,
5440:      220,  1068,   222,   223,   224,   225,   226,   227,   793,  1069,
5441:      229,     0,   230,   231,  1070,   233,     0,   234,     0,   235,
5442:      236,    23,   237,   238,   239,   240,   241,   242,     0,   243,
5443:        0,  1071,  1072,   246,   247,     0,   248,   249,   250,   251,
5444:      252,   253,   254,   255,   256,   257,   258,   259,     0,   260,
5445:      261,   262,   263,   264,   265,   266,     0,   267,   268,   269,
5446:      270,   271,   272,   273,   274,  1073,  1074,     0,  1075,     0,
5447:      278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
5448:      288,     0,     0,   289,   290,   291,   292,     0,   293,   294,
5449:      295,   296,   297,   298,   299,   300,  1076,   302,   303,   304,
5450:      305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
5451:      315,   316,   317,   318,   319,   320,   321,  1077,   323,  1078,
5452:      325,   326,   327,   328,  1079,   329,   330,   331,   332,  1080,
5453:      795,   334,  1081,   336,   337,   338,     0,   339,   340,     0,
5454:        0,  1082,   342,   343,     0,     0,   344,   345,   346,   347,
5455:      348,   349,   797,   351,   352,   353,   354,   355,   356,   357,
5456:      358,   359,   360,   361,    26,    27,    28,     0,   362,   363,
5457:      798,   365,   366,   367,   368,   369,   370,   371,     0,   372,
5458:      373,   374,   375,   376,   377,     0,   378,   379,   380,   381,
5459:      382,  1083,   384,   385,   386,   387,     0,   388,   389,   390,
5460:      391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
5461:        0,   401,   402,   403,   404,   405,   406,  1084,   408,   409,
5462:      410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
5463:      420,    33,     0,   421,   422,   423,   424,   425,   426,   427,
5464:      428,   429,    35,   430,   431,   432,  1085,   434,     0,   435,
5465:      436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
5466:      446,   447,   448,   800,    37,     0,   450,   451,    38,   452,
5467:      453,   454,   455,   456,   457,   458,     0,   459,  1086,  1087,
5468:        0,     0,   462,   463,   801,   465,   802,  1088,   467,   468,
5469:      803,   470,   471,   472,   473,   474,     0,     0,   475,   476,
5470:      477,    40,   478,   479,   480,   481,     0,   482,   483,   484,
5471:      485,   486,   804,  1089,   489,     0,   490,   491,   492,   493,
5472:      494,   495,   496,   497,   498,     0,     0,   499,     0,    44,
5473:      500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
5474:      510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
5475:      520,  1090,     0,    45,     0,     0,     0,     0,  1091,  1092,
5476:     1093,     0,     0,     0,     0,  1094,     0,  1095,  3259,     0,
5477:        0,     0,  1096,  1097,  1098,  1099,   117,  1050,   820,  1051,
5478:     1052,  1053,  1054,  1055,     0,     0,     0,     0,     0,     0,
5479:        0,     0,     0,     0,     0,   118,   119,   120,   121,   122,
5480:      123,   124,   125,     0,   126,   127,   128,     0,     0,     0,
5481:        0,     0,  1056,     0,     0,   129,   130,   131,     0,   132,
5482:      133,   134,   135,   136,   137,   138,   139,  1057,   141,  1058,
5483:     1059,     0,   144,   145,   146,   147,   148,   149,  1060,   790,
5484:      150,   151,   152,   153,  1061,  1062,   156,     0,   157,   158,
5485:      159,   160,   791,     0,   792,     0,  1063,   164,   165,   166,
5486:      167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
5487:      176,   177,   178,     0,   179,   180,   181,   182,   183,   184,
5488:      185,   186,   187,   188,   189,  1064,   191,   192,  1065,   194,
5489:     1066,   195,     0,   196,   197,   198,   199,   200,   201,    14,
5490:       15,   202,   203,   204,   205,     0,     0,   206,   207,  1067,
5491:      209,   210,     0,   211,   212,   213,     0,   214,   215,   216,
5492:        0,   217,   218,   219,   220,  1068,   222,   223,   224,   225,
5493:      226,   227,   793,  1069,   229,     0,   230,   231,  1070,   233,
5494:        0,   234,     0,   235,   236,    23,   237,   238,   239,   240,
5495:      241,   242,     0,   243,     0,  1071,  1072,   246,   247,     0,
5496:      248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
5497:      258,   259,     0,   260,   261,   262,   263,   264,   265,   266,
5498:        0,   267,   268,   269,   270,   271,   272,   273,   274,  1073,
5499:     1074,     0,  1075,     0,   278,   279,   280,   281,   282,   283,
5500:      284,   285,   286,   287,   288,     0,     0,   289,   290,   291,
5501:      292,     0,   293,   294,   295,   296,   297,   298,   299,   300,
5502:     1076,   302,   303,   304,   305,   306,   307,   308,   309,   310,
5503:      311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
5504:      321,  1077,   323,  1078,   325,   326,   327,   328,  1079,   329,
5505:      330,   331,   332,  1080,   795,   334,  1081,   336,   337,   338,
5506:        0,   339,   340,     0,     0,  1082,   342,   343,     0,     0,
5507:      344,   345,   346,   347,   348,   349,   797,   351,   352,   353,
5508:      354,   355,   356,   357,   358,   359,   360,   361,    26,    27,
5509:       28,     0,   362,   363,   798,   365,   366,   367,   368,   369,
5510:      370,   371,     0,   372,   373,   374,   375,   376,   377,     0,
5511:      378,   379,   380,   381,   382,  1083,   384,   385,   386,   387,
5512:        0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
5513:      397,   398,   399,   400,     0,   401,   402,   403,   404,   405,
5514:      406,  1084,   408,   409,   410,   411,   412,   413,   414,   415,
5515:      416,   417,   418,   419,   420,    33,     0,   421,   422,   423,
5516:      424,   425,   426,   427,   428,   429,    35,   430,   431,   432,
5517:     1085,   434,     0,   435,   436,   437,   438,   439,   440,   441,
5518:      442,   443,   444,   445,   446,   447,   448,   800,    37,     0,
5519:      450,   451,    38,   452,   453,   454,   455,   456,   457,   458,
5520:        0,   459,  1086,  1087,     0,     0,   462,   463,   801,   465,
5521:      802,  1088,   467,   468,   803,   470,   471,   472,   473,   474,
5522:        0,     0,   475,   476,   477,    40,   478,   479,   480,   481,
5523:        0,   482,   483,   484,   485,   486,   804,  1089,   489,     0,
5524:      490,   491,   492,   493,   494,   495,   496,   497,   498,     0,
5525:        0,   499,     0,    44,   500,   501,   502,   503,   504,   505,
5526:      506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
5527:      516,   517,   518,   519,   520,  1090,     0,    45,     0,     0,
5528:        0,     0,  1091,  1092,  1093,     0,     0,     0,     0,  1094,
5529:        0,  1095,     0,     0,     0,     0,  1096,  1097,  1098,  1099,
5530:      117,  1050,   820,  1051,  1052,  1053,  1054,  1055,     0,     0,
5531:        0,     0,     0,     0,     0,     0,     0,     0,     0,   118,
5532:      119,   120,   121,   122,   123,   124,   125,     0,   126,   127,
5533:      128,     0,     0,     0,     0,     0,  1056,     0,     0,   129,
5534:      130,   131,     0,   132,   133,   134,   135,   136,   137,   138,
5535:      139,  1057,   141,  1058,  1059,     0,   144,   145,   146,   147,
5536:      148,   149,  1060,   790,   150,   151,   152,   153,  1061,  1062,
5537:      156,     0,   157,   158,   159,   160,   791,     0,   792,     0,
5538:     1063,   164,   165,   166,   167,   168,   169,   170,   171,   172,
5539:        0,   173,   174,   175,   176,   177,   178,     0,   179,   180,
5540:      181,   182,   183,   184,   185,   186,   187,   188,   189,  1064,
5541:      191,   192,  1065,   194,  1066,   195,     0,   196,   197,   198,
5542:      199,   200,   201,     0,     0,   202,   203,   204,   205,     0,
5543:        0,   206,   207,  1067,   209,   210,     0,   211,   212,   213,
5544:        0,   214,   215,   216,     0,   217,   218,   219,   220,  1068,
5545:      222,   223,   224,   225,   226,   227,   793,  1069,   229,     0,
5546:      230,   231,  1070,   233,     0,   234,     0,   235,   236,    23,
5547:      237,   238,   239,   240,   241,   242,     0,   243,     0,  1071,
5548:     1072,   246,   247,     0,   248,   249,   250,   251,   252,   253,
5549:      254,   255,   256,   257,   258,   259,     0,   260,   261,   262,
5550:      263,   264,   265,   266,     0,   267,   268,   269,   270,   271,
5551:      272,   273,   274,  1073,  1074,     0,  1075,     0,   278,   279,
5552:      280,   281,   282,   283,   284,   285,   286,   287,   288,     0,
5553:        0,   289,   290,   291,   292,     0,   293,   294,   295,   296,
5554:      297,   298,   299,   300,  1076,   302,   303,   304,   305,   306,
5555:      307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
5556:      317,   318,   319,   320,   321,  1077,   323,  1078,   325,   326,
5557:      327,   328,  1079,   329,   330,   331,   332,  1080,   795,   334,
5558:     1081,   336,   337,   338,     0,   339,   340,     0,     0,  1082,
5559:      342,   343,     0,     0,   344,   345,   346,   347,   348,   349,
5560:      797,   351,   352,   353,   354,   355,   356,   357,   358,   359,
5561:      360,   361,    26,    27,    28,     0,   362,   363,   798,   365,
5562:      366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
5563:      375,   376,   377,     0,   378,   379,   380,   381,   382,  1083,
5564:      384,   385,   386,   387,     0,   388,   389,   390,   391,   392,
5565:      393,   394,   395,   396,   397,   398,   399,   400,     0,   401,
5566:      402,   403,   404,   405,   406,  1084,   408,   409,   410,   411,
5567:      412,   413,   414,   415,   416,   417,   418,   419,   420,    33,
5568:        0,   421,   422,   423,   424,   425,   426,   427,   428,   429,
5569:        0,   430,   431,   432,  1085,   434,     0,   435,   436,   437,
5570:      438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
5571:      448,   800,     0,     0,   450,   451,    38,   452,   453,   454,
5572:      455,   456,   457,   458,     0,   459,  1086,  1087,     0,     0,
5573:      462,   463,   801,   465,   802,  1088,   467,   468,   803,   470,
5574:      471,   472,   473,   474,     0,     0,   475,   476,   477,    40,
5575:      478,   479,   480,   481,     0,   482,   483,   484,   485,   486,
5576:      804,  1089,   489,     0,   490,   491,   492,   493,   494,   495,
5577:      496,   497,   498,     0,     0,   499,     0,    44,   500,   501,
5578:      502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
5579:      512,   513,   514,   515,   516,   517,   518,   519,   520,  1090,
5580:        0,    45,     0,     0,     0,     0,  1091,  1092,  1093,     0,
5581:        0,     0,     0,  1094,     0,  1095,     0,     0,     0,     0,
5582:     1096,  1097,  1098,  1099,  1257,  1050,   820,  1051,  1052,  1053,
5583:     1054,  1055,     0,     0,     0,     0,     0,     0,     0,     0,
5584:        0,     0,     0,   118,   119,   120,   121,   122,   123,   124,
5585:      125,  1258,   126,   127,   128,     0,     0,     0,  1259,     0,
5586:     1056,     0,     0,  1260,   130,   131,     0,   132,   133,   134,
5587:     1261,   136,   137,   138,   139,  1057,  1262,  1058,  1059,     0,
5588:      144,   145,   146,   147,   148,   149,  1060,   790,   150,   151,
5589:      152,   153,  1061,  1062,   156,     0,   157,   158,   159,   160,
5590:      791,     0,  1263,     0,  1264,   164,   165,   166,   167,   168,
5591:     1265,   170,   171,   172,     0,   173,   174,   175,   176,   177,
5592:      178,     0,  1266,   180,   181,   182,   183,   184,   185,   186,
5593:      187,   188,   189,  1064,   191,   192,  1065,   194,  1066,   195,
5594:        0,   196,   197,   198,   199,   200,   201,     0,     0,   202,
5595:      203,   204,   205,  1267,     0,   206,   207,  1067,   209,   210,
5596:        0,   211,   212,   213,     0,   214,   215,   216,     0,   217,
5597:      218,   219,   220,  1068,   222,   223,   224,   225,   226,   227,
5598:      793,  1069,   229,     0,   230,   231,  1070,   233,     0,   234,
5599:        0,   235,  1268,     0,  1269,   238,   239,  1270,  1271,   242,
5600:        0,   243,     0,  1071,  1072,   246,   247,     0,   248,   249,
5601:      250,   251,   252,   253,   254,  1272,   256,   257,   258,   259,
5602:        0,   260,   261,   262,   263,   264,   265,   266,     0,   267,
5603:     1273,   269,   270,   271,   272,   273,   274,  1073,  1074,     0,
5604:     1075,     0,   278,  1274,  1275,   281,  1276,   283,   284,   285,
5605:      286,   287,   288,     0,     0,   289,  1277,   291,  1278,     0,
5606:      293,   294,   295,   296,   297,   298,   299,   300,  1279,   302,
5607:      303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
5608:      313,   314,   315,   316,   317,   318,   319,   320,   321,  1077,
5609:     1280,  1078,   325,   326,   327,   328,  1079,   329,   330,  1281,
5610:      332,  1080,   795,   334,  1081,   336,   337,   338,     0,   339,
5611:      340,     0,     0,  1082,   342,   343,     0,     0,   344,   345,
5612:      346,  1282,   348,  1283,   797,   351,   352,   353,   354,   355,
5613:      356,   357,   358,   359,   360,   361,     0,     0,     0,     0,
5614:      362,   363,   798,  1284,   366,   367,   368,   369,   370,   371,
5615:        0,   372,   373,   374,   375,   376,   377,     0,   378,   379,
5616:      380,   381,   382,  1083,   384,   385,   386,   387,     0,   388,
5617:      389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
5618:      399,   400,     0,   401,   402,  1285,   404,   405,   406,  1084,
5619:      408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
5620:      418,   419,   420,     0,  1286,   421,   422,   423,   424,   425,
5621:      426,   427,   428,   429,     0,  1287,   431,   432,  1085,   434,
5622:        0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
5623:      444,   445,   446,  1288,   448,   800,     0,     0,   450,   451,
5624:        0,   452,  1289,   454,   455,   456,   457,   458,     0,   459,
5625:     1086,  1087,     0,     0,   462,   463,   801,   465,   802,  1088,
5626:      467,   468,  1290,   470,   471,   472,   473,   474,     0,     0,
5627:      475,   476,   477,     0,   478,   479,   480,   481,     0,   482,
5628:      483,   484,   485,   486,   487,  1089,   489,  1291,   490,  1292,
5629:      492,   493,   494,   495,   496,   497,   498,     0,     0,   499,
5630:        0,     0,   500,   501,   502,   503,   504,   505,   506,   507,
5631:      508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
5632:      518,   519,   520,  1090,     0,     0,     0,     0,     0,     0,
5633:     1091,  1092,  1093,     0,     0,     0,     0,  1094,     0,  1095,
5634:     1293,     0,     0,     0,  1096,  1097,  1098,  1099,   117,  1050,
5635:      820,  1051,  1052,     0,  1054,  1055,     0,     0,     0,     0,
5636:        0,     0,     0,     0,     0,     0,     0,   118,   119,   120,
5637:      121,   122,   123,   124,   125,     0,   126,   127,   128,     0,
5638:        0,     0,     0,     0,  1056,     0,     0,   129,   130,   131,
5639:        0,   132,   133,   134,   135,   136,   137,   138,   139,  1057,
5640:      141,  1058,  1059,     0,   144,   145,   146,   147,   148,   149,
5641:     1060,   790,   150,   151,   152,   153,  1061,  1062,   156,     0,
5642:      157,   158,   159,   160,   791,     0,   792,     0,   163,   164,
5643:      165,   166,   167,   168,   169,   170,   171,   172,     0,   173,
5644:      174,   175,   176,   177,   178,     0,   179,   180,   181,   182,
5645:      183,   184,   185,   186,   187,   188,   189,  1064,   191,   192,
5646:     1065,   194,     0,   195,     0,   196,   197,   198,   199,   200,
5647:      201,    14,    15,   202,   203,   204,   205,     0,     0,   206,
5648:      207,  1067,   209,   210,     0,   211,   212,   213,     0,   214,
5649:      215,   216,     0,   217,   218,   219,   220,  1068,   222,   223,
5650:      224,   225,   226,   227,   793,  1069,   229,     0,   230,   231,
5651:     1070,   233,     0,   234,     0,   235,   236,    23,   237,   238,
5652:      239,   240,   241,   242,     0,   243,     0,  1071,  1072,   246,
5653:      247,     0,   248,   249,   250,   251,   252,   253,   254,   255,
5654:      256,   257,   258,   259,     0,   260,   261,   262,   263,   264,
5655:      265,   266,     0,   267,   268,   269,   270,   271,   272,   273,
5656:      274,  1073,  1074,     0,  1075,     0,   278,   279,   280,   281,
5657:      282,   283,   284,   285,   286,   287,   288,     0,     0,   289,
5658:      290,   291,   292,     0,   293,   294,   295,   296,   297,   298,
5659:      299,   300,  1076,   302,   303,   304,   305,   306,   307,   308,
5660:      309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
5661:      319,   320,   321,  1077,   323,  1078,   325,   326,   327,   328,
5662:        0,   329,   330,   331,   332,  1080,   795,   334,  1081,   336,
5663:      337,   338,     0,   339,   340,     0,     0,   341,   342,   343,
5664:        0,     0,   344,   345,   346,   347,   348,   349,   797,   351,
5665:      352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
5666:       26,    27,    28,     0,   362,   363,   798,   365,   366,   367,
5667:      368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
5668:      377,     0,   378,   379,   380,   381,   382,  1083,   384,   385,
5669:      386,   387,     0,   388,   389,   390,   391,   392,   393,   394,
5670:      395,   396,   397,   398,   399,   400,     0,   401,   402,   403,
5671:      404,   405,   406,  1084,   408,   409,   410,   411,   412,   413,
5672:      414,   415,   416,   417,   418,   419,   420,    33,     0,   421,
5673:      422,   423,   424,   425,   426,   427,   428,   429,    35,   430,
5674:      431,   432,  1085,   434,     0,   435,   436,   437,   438,   439,
5675:      440,   441,   442,   443,   444,   445,   446,   447,   448,   800,
5676:       37,     0,   450,   451,    38,   452,   453,   454,   455,   456,
5677:      457,   458,     0,   459,  1086,  1087,     0,     0,   462,   463,
5678:      801,   465,   802,  1088,   467,   468,   803,   470,   471,   472,
5679:      473,   474,     0,     0,   475,   476,   477,    40,   478,   479,
5680:      480,   481,     0,   482,   483,   484,   485,   486,   804,  1089,
5681:      489,     0,   490,   491,   492,   493,   494,   495,   496,   497,
5682:      498,     0,     0,   499,     0,    44,   500,   501,   502,   503,
5683:      504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
5684:      514,   515,   516,   517,   518,   519,   520,     0,     0,    45,
5685:        0,     0,     0,   117,  1050,   820,  1051,  1052,  1053,  1054,
5686:     1055,  1094,     0,  1095,     0,     0,     0,     0,  1096,  1097,
5687:     1098,  1099,   118,   119,   120,   121,   122,   123,   124,   125,
5688:        0,   126,   127,   128,     0,     0,     0,     0,     0,  1056,
5689:        0,     0,   129,   130,   131,     0,   132,   133,   134,   135,
5690:      136,   137,   138,   139,  1057,   141,  1058,  1059,  1440,   144,
5691:      145,   146,   147,   148,   149,  1060,   790,   150,   151,   152,
5692:      153,  1061,  1062,   156,     0,   157,   158,   159,   160,   791,
5693:        0,   792,     0,  1063,   164,   165,   166,   167,   168,   169,
5694:      170,   171,   172,     0,   173,   174,   175,   176,   177,   178,
5695:        0,   179,   180,   181,   182,   183,   184,   185,   186,   187,
5696:      188,   189,  1064,   191,   192,  1065,   194,  1066,   195,     0,
5697:      196,   197,   198,   199,   200,   201,     0,     0,   202,   203,
5698:      204,   205,     0,     0,   206,   207,  1067,   209,   210,     0,
5699:      211,   212,   213,     0,   214,   215,   216,     0,   217,   218,
5700:      219,   220,  1068,   222,   223,   224,   225,   226,   227,   793,
5701:     1069,   229,     0,   230,   231,  1070,   233,     0,   234,     0,
5702:      235,   236,  1441,   237,   238,   239,   240,   241,   242,     0,
5703:      243,     0,  1071,  1072,   246,   247,     0,   248,   249,   250,
5704:      251,   252,   253,   254,   255,   256,   257,   258,   259,     0,
5705:      260,   261,   262,   263,   264,   265,   266,     0,   267,   268,
5706:      269,   270,   271,   272,   273,   274,  1073,  1074,     0,  1075,
5707:        0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
5708:      287,   288,     0,  1442,   289,   290,   291,   292,     0,   293,
5709:      294,   295,   296,   297,   298,   299,   300,  1076,   302,   303,
5710:      304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
5711:      314,   315,   316,   317,   318,   319,   320,   321,  1077,   323,
5712:     1078,   325,   326,   327,   328,  1079,   329,   330,   331,   332,
5713:     1080,   795,   334,  1081,   336,   337,   338,     0,   339,   340,
5714:        0,     0,  1082,   342,   343,     0,     0,   344,   345,   346,
5715:      347,   348,   349,   797,   351,   352,   353,   354,   355,   356,
5716:      357,   358,   359,   360,   361,     0,     0,     0,     0,   362,
5717:      363,   798,   365,   366,   367,   368,   369,   370,   371,     0,
5718:      372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
5719:      381,   382,  1083,   384,   385,   386,   387,     0,   388,   389,
5720:      390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
5721:      400,     0,   401,   402,   403,   404,   405,   406,  1084,   408,
5722:      409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
5723:      419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
5724:      427,   428,   429,     0,   430,   431,   432,  1085,   434,     0,
5725:      435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
5726:      445,   446,   447,   448,   800,     0,     0,   450,   451,     0,
5727:      452,   453,   454,   455,   456,   457,   458,     0,   459,  1086,
5728:     1087,     0,  1443,   462,   463,   801,   465,   802,  1088,   467,
5729:      468,   803,   470,   471,   472,   473,   474,     0,     0,   475,
5730:      476,   477,     0,   478,   479,   480,   481,     0,   482,   483,
5731:      484,   485,   486,   487,  1089,   489,     0,   490,   491,   492,
5732:      493,   494,   495,   496,   497,   498,     0,     0,   499,     0,
5733:        0,   500,   501,   502,   503,   504,   505,   506,   507,   508,
5734:      509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
5735:      519,   520,  1090,     0,     0,     0,     0,     0,     0,  1091,
5736:     1092,  1093,     0,     0,     0,     0,  1094,     0,  1095,     0,
5737:        0,     0,     0,  1096,  1097,  1098,  1099,  1257,  1050,   820,
5738:     1051,  1052,  1053,  1054,  1055,     0,     0,     0,     0,     0,
5739:        0,     0,     0,     0,     0,     0,   118,   119,   120,   121,
5740:      122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
5741:        0,  1259,     0,  1056,     0,     0,  1260,   130,   131,     0,
5742:      132,   133,   134,  1261,   136,   137,   138,   139,  1057,  1262,
5743:     1058,  1059,     0,   144,   145,   146,   147,   148,   149,  1060,
5744:      790,   150,   151,   152,   153,  1061,  1062,   156,     0,   157,
5745:      158,   159,   160,   791,     0,  1263,     0,  1264,   164,   165,
5746:      166,   167,   168,  1265,   170,   171,   172,     0,   173,   174,
5747:      175,   176,   177,   178,     0,  1266,   180,   181,   182,   183,
5748:      184,   185,   186,   187,   188,   189,  1064,   191,   192,  1065,
5749:      194,  1066,   195,     0,   196,   197,   198,   199,   200,   201,
5750:        0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
5751:     1067,   209,   210,     0,   211,   212,   213,     0,   214,   215,
5752:      216,     0,   217,   218,   219,   220,  1068,   222,   223,   224,
5753:      225,   226,   227,   793,  1069,   229,     0,   230,   231,  1070,
5754:      233,     0,   234,     0,   235,  1268,     0,  1269,   238,   239,
5755:     1270,  1271,   242,     0,   243,     0,  1071,  1072,   246,   247,
5756:        0,   248,   249,   250,   251,   252,   253,   254,  1272,   256,
5757:      257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
5758:      266,     0,   267,  1273,   269,   270,   271,   272,   273,   274,
5759:     1073,  1074,     0,  1075,     0,   278,  1274,  1275,   281,  1276,
5760:      283,   284,   285,   286,   287,   288,     0,     0,   289,  1277,
5761:      291,  1278,     0,   293,   294,   295,   296,   297,   298,   299,
5762:      300,  1279,   302,   303,   304,   305,   306,   307,   308,   309,
5763:      310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
5764:      320,   321,  1077,  1280,  1078,   325,   326,   327,   328,  1079,
5765:      329,   330,  1281,   332,  1080,   795,   334,  1081,   336,   337,
5766:      338,     0,   339,   340,     0,     0,  1082,   342,   343,     0,
5767:        0,   344,   345,   346,  1282,   348,  1283,   797,   351,   352,
5768:      353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
5769:        0,     0,     0,   362,   363,   798,  1284,   366,   367,   368,
5770:      369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
5771:        0,   378,   379,   380,   381,   382,  1083,   384,   385,   386,
5772:      387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
5773:      396,   397,   398,   399,   400,     0,   401,   402,  1285,   404,
5774:      405,   406,  1084,   408,   409,   410,   411,   412,   413,   414,
5775:      415,   416,   417,   418,   419,   420,     0,  1286,   421,   422,
5776:      423,   424,   425,   426,   427,   428,   429,     0,  1287,   431,
5777:      432,  1085,   434,     0,   435,   436,   437,   438,   439,   440,
5778:      441,   442,   443,   444,   445,   446,  1288,   448,   800,     0,
5779:        0,   450,   451,     0,   452,  1289,   454,   455,   456,   457,
5780:      458,     0,   459,  1086,  1087,     0,     0,   462,   463,   801,
5781:      465,   802,  1088,   467,   468,  1290,   470,   471,   472,   473,
5782:      474,     0,     0,   475,   476,   477,     0,   478,   479,   480,
5783:      481,     0,   482,   483,   484,   485,   486,   487,  1089,   489,
5784:     2311,   490,  1292,   492,   493,   494,   495,   496,   497,   498,
5785:        0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
5786:      505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
5787:      515,   516,   517,   518,   519,   520,  1090,     0,     0,     0,
5788:        0,     0,     0,  1091,  1092,  1093,     0,     0,     0,     0,
5789:     1094,     0,  1095,     0,     0,     0,     0,  1096,  1097,  1098,
5790:     1099,  1257,  1050,   820,  1051,  1052,  1053,  1054,  1055,     0,
5791:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5792:      118,   119,   120,   121,   122,   123,   124,   125,     0,   126,
5793:      127,   128,     0,     0,     0,  1259,     0,  1056,     0,     0,
5794:     1260,   130,   131,     0,   132,   133,   134,  1261,   136,   137,
5795:      138,   139,  1057,  1262,  1058,  1059,     0,   144,   145,   146,
5796:      147,   148,   149,  1060,   790,   150,   151,   152,   153,  1061,
5797:     1062,   156,     0,   157,   158,   159,   160,   791,     0,  1263,
5798:        0,  1264,   164,   165,   166,   167,   168,  1265,   170,   171,
5799:      172,     0,   173,   174,   175,   176,   177,   178,     0,  1266,
5800:      180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
5801:     1064,   191,   192,  1065,   194,  1066,   195,     0,   196,   197,
5802:      198,   199,   200,   201,     0,     0,   202,   203,   204,   205,
5803:        0,     0,   206,   207,  1067,   209,   210,     0,   211,   212,
5804:      213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
5805:     1068,   222,   223,   224,   225,   226,   227,   793,  1069,   229,
5806:        0,   230,   231,  1070,   233,     0,   234,     0,   235,  1268,
5807:        0,  1269,   238,   239,  1270,  1271,   242,     0,   243,     0,
5808:     1071,  1072,   246,   247,     0,   248,   249,   250,   251,   252,
5809:      253,   254,  1272,   256,   257,   258,   259,     0,   260,   261,
5810:      262,   263,   264,   265,   266,     0,   267,  1273,   269,   270,
5811:      271,   272,   273,   274,  1073,  1074,     0,  1075,     0,   278,
5812:     1274,  1275,   281,  1276,   283,   284,   285,   286,   287,   288,
5813:        0,     0,   289,  1277,   291,  1278,     0,   293,   294,   295,
5814:      296,   297,   298,   299,   300,  1279,   302,   303,   304,   305,
5815:      306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
5816:      316,   317,   318,   319,   320,   321,  1077,  1280,  1078,   325,
5817:      326,   327,   328,  1079,   329,   330,  1281,   332,  1080,   795,
5818:      334,  1081,   336,   337,   338,     0,   339,   340,     0,     0,
5819:     1082,   342,   343,     0,     0,   344,   345,   346,  1282,   348,
5820:     1283,   797,   351,   352,   353,   354,   355,   356,   357,   358,
5821:      359,   360,   361,     0,     0,     0,     0,   362,   363,   798,
5822:     1284,   366,   367,   368,   369,   370,   371,     0,   372,   373,
5823:      374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
5824:     1083,   384,   385,   386,   387,     0,   388,   389,   390,   391,
5825:      392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
5826:      401,   402,  1285,   404,   405,   406,  1084,   408,   409,   410,
5827:      411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
5828:        0,  1286,   421,   422,   423,   424,   425,   426,   427,   428,
5829:      429,     0,  1287,   431,   432,  1085,   434,     0,   435,   436,
5830:      437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
5831:     1288,   448,   800,     0,     0,   450,   451,     0,   452,  1289,
5832:      454,   455,   456,   457,   458,     0,   459,  1086,  1087,     0,
5833:        0,   462,   463,   801,   465,   802,  1088,   467,   468,  1290,
5834:      470,   471,   472,   473,   474,     0,     0,   475,   476,   477,
5835:        0,   478,   479,   480,   481,     0,   482,   483,   484,   485,
5836:      486,   487,  1089,   489,     0,   490,  1292,   492,   493,   494,
5837:      495,   496,   497,   498,     0,     0,   499,     0,     0,   500,
5838:      501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
5839:      511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
5840:     1090,     0,     0,     0,     0,     0,     0,  1091,  1092,  1093,
5841:        0,     0,     0,     0,  1094,     0,  1095,  2368,     0,     0,
5842:        0,  1096,  1097,  1098,  1099,   117,  1050,   820,  1051,  1052,
5843:     1053,  1054,  1055,     0,     0,     0,     0,     0,     0,     0,
5844:        0,     0,     0,     0,   118,   119,   120,   121,   122,   123,
5845:      124,   125, -1132,   126,   127,   128,     0,     0,     0,     0,
5846:    -1132,  1056,     0,     0,   129,   130,   131,     0,   132,   133,
5847:      134,   135,   136,   137,   138,   139,  1057,   141,  1058,  1059,
5848:        0,   144,   145,   146,   147,   148,   149,  1060,   790,   150,
5849:      151,   152,   153,  1061,  1062,   156,     0,   157,   158,   159,
5850:      160,   791,     0,   792,     0,  1063,   164,   165,   166,   167,
5851:      168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
5852:      177,   178,     0,   179,   180,   181,   182,   183,   184,   185,
5853:      186,   187,   188,   189,  1064,   191,   192,  1065,   194,  1066,
5854:      195,     0,   196,   197,   198,   199,   200,   201,     0,     0,
5855:      202,   203,   204,   205,     0,     0,   206,   207,  1067,   209,
5856:      210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
5857:      217,   218,   219,   220,  1068,   222,   223,   224,   225,   226,
5858:      227,   793,  1069,   229,     0,   230,   231,  1070,   233,     0,
5859:      234,     0,   235,   236,     0,   237,   238,   239,   240,   241,
5860:      242,     0,   243,     0,  1071,  1072,   246,   247,     0,   248,
5861:      249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
5862:      259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
5863:      267,   268,   269,   270,   271,   272,   273,   274,  1073,  1074,
5864:        0,  1075,     0,   278,   279,   280,   281,   282,   283,   284,
5865:      285,   286,   287,   288,     0,     0,   289,   290,   291,   292,
5866:        0,   293,   294,   295,   296,   297,   298,   299,   300,  1076,
5867:      302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
5868:      312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
5869:     1077,   323,  1078,   325,   326,   327,   328,  1079,   329,   330,
5870:      331,   332,  1080,   795,   334,  1081,   336,   337,   338,     0,
5871:      339,   340,     0,     0,  1082,   342,   343,     0,     0,   344,
5872:      345,   346,   347,   348,   349,   797,   351,   352,   353,   354,
5873:      355,   356,   357,   358,   359,   360,   361,     0,     0,     0,
5874:        0,   362,   363,   798,   365,   366,   367,   368,   369,   370,
5875:      371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
5876:      379,   380,   381,   382,  1083,   384,   385,   386,   387,     0,
5877:      388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
5878:      398,   399,   400,     0,   401,   402,   403,   404,   405,   406,
5879:     1084,   408,   409,   410,   411,   412,   413,   414,   415,   416,
5880:      417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
5881:      425,   426,   427,   428,   429,     0,   430,   431,   432,  1085,
5882:      434, -1132,   435,   436,   437,   438,   439,   440,   441,   442,
5883:      443,   444,   445,   446,   447,   448,   800,     0,     0,   450,
5884:      451,     0,   452,   453,   454,   455,   456,   457,   458,     0,
5885:      459,  1086,  1087,     0,     0,   462,   463,   801,   465,   802,
5886:     1088,   467,   468,   803,   470,   471,   472,   473,   474,     0,
5887:        0,   475,   476,   477,     0,   478,   479,   480,   481,     0,
5888:      482,   483,   484,   485,   486,   487,  1089,   489,     0,   490,
5889:      491,   492,   493,   494,   495,   496,   497,   498,     0,     0,
5890:      499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
5891:      507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
5892:      517,   518,   519,   520,  1090,     0,     0,     0,     0,     0,
5893:        0,  1091,  1092,  1093,     0,     0,     0,     0,  1094,     0,
5894:     1095,     0,     0,     0,     0,  1096,  1097,  1098,  1099,  1257,
5895:     1050,   820,  1051,  1052,  1053,  1054,  1055,     0,     0,     0,
5896:        0,     0,     0,     0,     0,     0,     0,     0,   118,   119,
5897:      120,   121,   122,   123,   124,   125,     0,   126,   127,   128,
5898:        0,     0,     0,  1259,     0,  1056,     0,     0,  1260,   130,
5899:      131,     0,   132,   133,   134,  1261,   136,   137,   138,   139,
5900:     1057,  1262,  1058,  1059,     0,   144,   145,   146,   147,   148,
5901:      149,  1060,   790,   150,   151,   152,   153,  1061,  1062,   156,
5902:        0,   157,   158,   159,   160,   791,     0,  1263,     0,  1264,
5903:      164,   165,   166,   167,   168,  1265,   170,   171,   172,     0,
5904:      173,   174,   175,   176,   177,   178,     0,  1266,   180,   181,
5905:      182,   183,   184,   185,   186,   187,   188,   189,  1064,   191,
5906:      192,  1065,   194,  1066,   195,     0,   196,   197,   198,   199,
5907:      200,   201,     0,     0,   202,   203,   204,   205,     0,     0,
5908:      206,   207,  1067,   209,   210,     0,   211,   212,   213,     0,
5909:      214,   215,   216,     0,   217,   218,   219,   220,  1068,   222,
5910:      223,   224,   225,   226,   227,   793,  1069,   229,     0,   230,
5911:      231,  1070,   233,     0,   234,     0,   235,  1268,     0,  1269,
5912:      238,   239,  1270,  1271,   242,     0,   243,     0,  1071,  1072,
5913:      246,   247,     0,   248,   249,   250,   251,   252,   253,   254,
5914:     1272,   256,   257,   258,   259,     0,   260,   261,   262,   263,
5915:      264,   265,   266,     0,   267,  1273,   269,   270,   271,   272,
5916:      273,   274,  1073,  1074,     0,  1075,     0,   278,  1274,  1275,
5917:      281,  1276,   283,   284,   285,   286,   287,   288,     0,     0,
5918:      289,  1277,   291,  1278,     0,   293,   294,   295,   296,   297,
5919:      298,   299,   300,  1279,   302,   303,   304,   305,   306,   307,
5920:      308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
5921:      318,   319,   320,   321,  1077,  1280,  1078,   325,   326,   327,
5922:      328,  1079,   329,   330,  1281,   332,  1080,   795,   334,  1081,
5923:      336,   337,   338,     0,   339,   340,     0,     0,  1082,   342,
5924:      343,     0,     0,   344,   345,   346,  1282,   348,  1283,   797,
5925:      351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
5926:      361,     0,     0,     0,     0,   362,   363,   798,  1284,   366,
5927:      367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
5928:      376,   377,     0,   378,   379,   380,   381,   382,  1083,   384,
5929:      385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
5930:      394,   395,   396,   397,   398,   399,   400,     0,   401,   402,
5931:     1285,   404,   405,   406,  1084,   408,   409,   410,   411,   412,
5932:      413,   414,   415,   416,   417,   418,   419,   420,     0,  1286,
5933:      421,   422,   423,   424,   425,   426,   427,   428,   429,     0,
5934:     1287,   431,   432,  1085,   434,     0,   435,   436,   437,   438,
5935:      439,   440,   441,   442,   443,   444,   445,   446,  1288,   448,
5936:      800,     0,     0,   450,   451,     0,   452,  1289,   454,   455,
5937:      456,   457,   458,     0,   459,  1086,  1087,     0,     0,   462,
5938:      463,   801,   465,   802,  1088,   467,   468,  1290,   470,   471,
5939:      472,   473,   474,     0,     0,   475,   476,   477,     0,   478,
5940:      479,   480,   481,     0,   482,   483,   484,   485,   486,   487,
5941:     1089,   489,     0,   490,  1292,   492,   493,   494,   495,   496,
5942:      497,   498,     0,     0,   499,     0,     0,   500,   501,   502,
5943:      503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
5944:      513,   514,   515,   516,   517,   518,   519,   520,  1090,     0,
5945:        0,     0,     0,     0,     0,  1091,  1092,  1093,     0,     0,
5946:        0,     0,  1094,     0,  1095,  3126,     0,     0,     0,  1096,
5947:     1097,  1098,  1099,  1257,  1050,   820,  1051,  1052,  1053,  1054,
5948:     1055,     0,     0,     0,     0,     0,     0,     0,     0,     0,
5949:        0,     0,   118,   119,   120,   121,   122,   123,   124,   125,
5950:        0,   126,   127,   128,     0,     0,     0,  1259,     0,  1056,
5951:        0,     0,  1260,   130,   131,     0,   132,   133,   134,  1261,
5952:      136,   137,   138,   139,  1057,  1262,  1058,  1059,     0,   144,
5953:      145,   146,   147,   148,   149,  1060,   790,   150,   151,   152,
5954:      153,  1061,  1062,   156,     0,   157,   158,   159,   160,   791,
5955:        0,  1263,     0,  1264,   164,   165,   166,   167,   168,  1265,
5956:      170,   171,   172,     0,   173,   174,   175,   176,   177,   178,
5957:        0,  1266,   180,   181,   182,   183,   184,   185,   186,   187,
5958:      188,   189,  1064,   191,   192,  1065,   194,  1066,   195,     0,
5959:      196,   197,   198,   199,   200,   201,     0,     0,   202,   203,
5960:      204,   205,     0,     0,   206,   207,  1067,   209,   210,     0,
5961:      211,   212,   213,     0,   214,   215,   216,     0,   217,   218,
5962:      219,   220,  1068,   222,   223,   224,   225,   226,   227,   793,
5963:     1069,   229,     0,   230,   231,  1070,   233,     0,   234,     0,
5964:      235,  1268,     0,  1269,   238,   239,  1270,  1271,   242,     0,
5965:      243,     0,  1071,  1072,   246,   247,     0,   248,   249,   250,
5966:      251,   252,   253,   254,  1272,   256,   257,   258,   259,     0,
5967:      260,   261,   262,   263,   264,   265,   266,     0,   267,  1273,
5968:      269,   270,   271,   272,   273,   274,  1073,  1074,     0,  1075,
5969:        0,   278,  1274,  1275,   281,  1276,   283,   284,   285,   286,
5970:      287,   288,     0,     0,   289,  1277,   291,  1278,     0,   293,
5971:      294,   295,   296,   297,   298,   299,   300,  1279,   302,   303,
5972:      304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
5973:      314,   315,   316,   317,   318,   319,   320,   321,  1077,  1280,
5974:     1078,   325,   326,   327,   328,  1079,   329,   330,  1281,   332,
5975:     1080,   795,   334,  1081,   336,   337,   338,     0,   339,   340,
5976:        0,     0,  1082,   342,   343,     0,     0,   344,   345,   346,
5977:     1282,   348,  1283,   797,   351,   352,   353,   354,   355,   356,
5978:      357,   358,   359,   360,   361,     0,     0,     0,     0,   362,
5979:      363,   798,  1284,   366,   367,   368,   369,   370,   371,     0,
5980:      372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
5981:      381,   382,  1083,   384,   385,   386,   387,     0,   388,   389,
5982:      390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
5983:      400,     0,   401,   402,  1285,   404,   405,   406,  1084,   408,
5984:      409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
5985:      419,   420,     0,  1286,   421,   422,   423,   424,   425,   426,
5986:      427,   428,   429,     0,  1287,   431,   432,  1085,   434,     0,
5987:      435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
5988:      445,   446,  1288,   448,   800,     0,     0,   450,   451,     0,
5989:      452,  1289,   454,   455,   456,   457,   458,     0,   459,  1086,
5990:     1087,     0,     0,   462,   463,   801,   465,   802,  1088,   467,
5991:      468,  1290,   470,   471,   472,   473,   474,     0,     0,   475,
5992:      476,   477,     0,   478,   479,   480,   481,     0,   482,   483,
5993:      484,   485,   486,   487,  1089,   489,     0,   490,  1292,   492,
5994:      493,   494,   495,   496,   497,   498,     0,     0,   499,     0,
5995:        0,   500,   501,   502,   503,   504,   505,   506,   507,   508,
5996:      509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
5997:      519,   520,  1090,     0,     0,     0,     0,     0,     0,  1091,
5998:     1092,  1093,     0,     0,     0,     0,  1094,     0,  1095,     0,
5999:        0,     0,     0,  1096,  1097,  1098,  1099,   117,  1050,   820,
6000:     1051,  1052,  1053,  1054,  1055,     0,     0,     0,     0,     0,
6001:        0,     0,     0,     0,     0,     0,   118,   119,   120,   121,
6002:      122,   123,   124,   125,  1705,   126,   127,   128,     0,     0,
6003:        0,     0,     0,  1056,     0,     0,   129,   130,   131,     0,
6004:      132,   133,   134,   135,   136,   137,   138,   139,  1057,   141,
6005:     1058,  1059,     0,   144,   145,   146,   147,   148,   149,  1060,
6006:      790,   150,   151,   152,   153,  1061,  1062,   156,     0,   157,
6007:      158,   159,   160,   791,     0,   792,     0,  1063,   164,   165,
6008:      166,   167,   168,   169,   170,   171,   172,     0,   173,   174,
6009:      175,   176,   177,   178,     0,   179,   180,   181,   182,   183,
6010:      184,   185,   186,   187,   188,   189,  1064,   191,   192,  1065,
6011:      194,  1066,   195,     0,   196,   197,   198,   199,   200,   201,
6012:        0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
6013:     1067,   209,   210,     0,   211,   212,   213,     0,   214,   215,
6014:      216,     0,   217,   218,   219,   220,  1068,   222,   223,   224,
6015:      225,   226,   227,   793,  1069,   229,     0,   230,   231,  1070,
6016:      233,     0,   234,     0,   235,   236,     0,   237,   238,   239,
6017:      240,   241,   242,     0,   243,     0,  1071,  1072,   246,   247,
6018:        0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
6019:      257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
6020:      266,     0,   267,   268,   269,   270,   271,   272,   273,   274,
6021:     1073,  1074,     0,  1075,     0,   278,   279,   280,   281,   282,
6022:      283,   284,   285,   286,   287,   288,     0,     0,   289,   290,
6023:      291,   292,     0,   293,   294,   295,   296,   297,   298,   299,
6024:      300,  1076,   302,   303,   304,   305,   306,   307,   308,   309,
6025:      310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
6026:      320,   321,  1077,   323,  1078,   325,   326,   327,   328,  1079,
6027:      329,   330,   331,   332,  1080,   795,   334,  1081,   336,   337,
6028:      338,     0,   339,   340,     0,     0,  1082,   342,   343,     0,
6029:        0,   344,   345,   346,   347,   348,   349,   797,   351,   352,
6030:      353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
6031:        0,     0,     0,   362,   363,   798,   365,   366,   367,   368,
6032:      369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
6033:        0,   378,   379,   380,   381,   382,  1083,   384,   385,   386,
6034:      387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
6035:      396,   397,   398,   399,   400,     0,   401,   402,   403,   404,
6036:      405,   406,  1084,   408,   409,   410,   411,   412,   413,   414,
6037:      415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
6038:      423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
6039:      432,  1085,   434,     0,   435,   436,   437,   438,   439,   440,
6040:      441,   442,   443,   444,   445,   446,   447,   448,   800,     0,
6041:        0,   450,   451,     0,   452,   453,   454,   455,   456,   457,
6042:      458,     0,   459,  1086,  1087,     0,     0,   462,   463,   801,
6043:      465,   802,  1088,   467,   468,   803,   470,   471,   472,   473,
6044:      474,     0,     0,   475,   476,   477,     0,   478,   479,   480,
6045:      481,     0,   482,   483,   484,   485,   486,   487,  1089,   489,
6046:        0,   490,   491,   492,   493,   494,   495,   496,   497,   498,
6047:        0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
6048:      505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
6049:      515,   516,   517,   518,   519,   520,  1090,     0,     0,     0,
6050:        0,     0,     0,  1091,  1092,  1093,     0,     0,     0,     0,
6051:     1094,     0,  1095,     0,     0,     0,     0,  1096,  1097,  1098,
6052:     1099,   117,  1720,   820,  1051,  1052,  1053,  1721,  1055,     0,
6053:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
6054:      118,   119,   120,   121,   122,   123,   124,   125,  1722,   126,
6055:      127,   128,     0,     0,     0,     0,     0,  1056,     0,     0,
6056:      129,   130,   131,     0,   132,   133,   134,   135,   136,   137,
6057:      138,   139,  1057,   141,  1058,  1059,     0,   144,   145,   146,
6058:      147,   148,   149,  1060,   790,   150,   151,   152,   153,  1061,
6059:     1062,   156,     0,   157,   158,   159,   160,   791,     0,   792,
6060:        0,  1063,   164,   165,   166,   167,   168,   169,   170,   171,
6061:      172,     0,   173,   174,   175,   176,   177,   178,     0,   179,
6062:      180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
6063:     1064,   191,   192,  1065,   194,  1066,   195,     0,   196,   197,
6064:      198,   199,   200,   201,     0,     0,   202,   203,   204,   205,
6065:        0,     0,   206,   207,  1067,   209,   210,     0,   211,   212,
6066:      213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
6067:     1068,   222,   223,   224,   225,   226,   227,   793,  1069,   229,
6068:        0,   230,   231,  1070,   233,     0,   234,     0,   235,   236,
6069:        0,   237,   238,   239,   240,   241,   242,     0,   243,     0,
6070:     1071,  1072,   246,   247,     0,   248,   249,   250,   251,   252,
6071:      253,   254,   255,   256,   257,   258,   259,     0,   260,   261,
6072:      262,   263,   264,   265,   266,     0,   267,   268,   269,   270,
6073:      271,   272,   273,   274,  1073,  1074,     0,  1075,     0,   278,
6074:      279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
6075:        0,     0,   289,   290,   291,   292,     0,   293,   294,   295,
6076:      296,   297,   298,   299,   300,  1076,   302,   303,   304,   305,
6077:      306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
6078:      316,   317,   318,   319,   320,   321,  1077,   323,  1078,   325,
6079:      326,   327,   328,  1079,   329,   330,   331,   332,  1080,   795,
6080:      334,  1081,   336,   337,   338,     0,   339,   340,     0,     0,
6081:     1082,   342,   343,     0,     0,   344,   345,   346,   347,   348,
6082:      349,   797,   351,   352,   353,   354,   355,   356,   357,   358,
6083:      359,   360,   361,     0,     0,     0,     0,   362,   363,   798,
6084:      365,   366,   367,   368,   369,   370,   371,     0,   372,   373,
6085:      374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
6086:     1083,   384,   385,   386,   387,     0,   388,   389,   390,   391,
6087:      392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
6088:      401,   402,   403,   404,   405,   406,  1084,   408,   409,   410,
6089:      411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
6090:        0,     0,   421,   422,   423,   424,   425,   426,   427,   428,
6091:      429,     0,   430,   431,   432,  1085,   434,     0,   435,   436,
6092:      437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
6093:      447,   448,   800,     0,     0,   450,   451,     0,   452,   453,
6094:      454,   455,   456,   457,   458,     0,   459,  1086,  1087,     0,
6095:        0,   462,   463,   801,   465,   802,  1088,   467,   468,   803,
6096:      470,   471,   472,   473,   474,     0,     0,   475,   476,   477,
6097:        0,   478,   479,   480,   481,     0,   482,   483,   484,   485,
6098:      486,   487,  1089,   489,     0,   490,   491,   492,   493,   494,
6099:      495,   496,   497,   498,     0,     0,   499,     0,     0,   500,
6100:      501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
6101:      511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
6102:     1090,     0,     0,     0,     0,     0,     0,  1091,  1092,  1093,
6103:        0,     0,     0,     0,  1094,     0,  1095,     0,     0,     0,
6104:        0,  1096,  1097,  1098,  1099,   117,  1050,   820,  1051,  1052,
6105:     1053,  1054,  1055,     0,     0,     0,     0,     0,     0,     0,
6106:        0,     0,     0,     0,   118,   119,   120,   121,   122,   123,
6107:      124,   125,     0,   126,   127,   128,     0,     0,     0,     0,
6108:        0,  1056,     0,     0,   129,   130,   131,     0,   132,   133,
6109:      134,   135,   136,   137,   138,   139,  1057,   141,  1058,  1059,
6110:        0,   144,   145,   146,   147,   148,   149,  1060,   790,   150,
6111:      151,   152,   153,  1061,  1062,   156,     0,   157,   158,   159,
6112:      160,   791,     0,   792,     0,  1063,   164,   165,   166,   167,
6113:      168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
6114:      177,   178,     0,   179,   180,   181,   182,   183,   184,   185,
6115:      186,   187,   188,   189,  1064,   191,   192,  1065,   194,  1066,
6116:      195,     0,   196,   197,   198,   199,   200,   201,     0,     0,
6117:      202,   203,   204,   205,     0,     0,   206,   207,  1067,   209,
6118:      210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
6119:      217,   218,   219,   220,  1068,   222,   223,   224,   225,   226,
6120:      227,   793,  1069,   229,     0,   230,   231,  1070,   233,     0,
6121:      234,     0,   235,   236,  1441,   237,   238,   239,   240,   241,
6122:      242,     0,   243,     0,  1071,  1072,   246,   247,     0,   248,
6123:      249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
6124:      259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
6125:      267,   268,   269,   270,   271,   272,   273,   274,  1073,  1074,
6126:        0,  1075,     0,   278,   279,   280,   281,   282,   283,   284,
6127:      285,   286,   287,   288,     0,     0,   289,   290,   291,   292,
6128:        0,   293,   294,   295,   296,   297,   298,   299,   300,  1076,
6129:      302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
6130:      312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
6131:     1077,   323,  1078,   325,   326,   327,   328,  1079,   329,   330,
6132:      331,   332,  1080,   795,   334,  1081,   336,   337,   338,     0,
6133:      339,   340,     0,     0,  1082,   342,   343,     0,     0,   344,
6134:      345,   346,   347,   348,   349,   797,   351,   352,   353,   354,
6135:      355,   356,   357,   358,   359,   360,   361,     0,     0,     0,
6136:        0,   362,   363,   798,   365,   366,   367,   368,   369,   370,
6137:      371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
6138:      379,   380,   381,   382,  1083,   384,   385,   386,   387,     0,
6139:      388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
6140:      398,   399,   400,     0,   401,   402,   403,   404,   405,   406,
6141:     1084,   408,   409,   410,   411,   412,   413,   414,   415,   416,
6142:      417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
6143:      425,   426,   427,   428,   429,     0,   430,   431,   432,  1085,
6144:      434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
6145:      443,   444,   445,   446,   447,   448,   800,     0,     0,   450,
6146:      451,     0,   452,   453,   454,   455,   456,   457,   458,     0,
6147:      459,  1086,  1087,     0,     0,   462,   463,   801,   465,   802,
6148:     1088,   467,   468,   803,   470,   471,   472,   473,   474,     0,
6149:        0,   475,   476,   477,     0,   478,   479,   480,   481,     0,
6150:      482,   483,   484,   485,   486,   487,  1089,   489,     0,   490,
6151:      491,   492,   493,   494,   495,   496,   497,   498,     0,     0,
6152:      499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
6153:      507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
6154:      517,   518,   519,   520,  1090,     0,     0,     0,     0,     0,
6155:        0,  1091,  1092,  1093,     0,     0,     0,     0,  1094,     0,
6156:     1095,     0,     0,     0,     0,  1096,  1097,  1098,  1099,   117,
6157:     1050,   820,  1051,  1052,  1053,  1054,  1055,     0,     0,     0,
6158:        0,     0,     0,     0,     0,     0,     0,     0,   118,   119,
6159:      120,   121,   122,   123,   124,   125,     0,   126,   127,   128,
6160:        0,     0,     0,     0,     0,  1056,     0,     0,   129,   130,
6161:      131,     0,   132,   133,   134,   135,   136,   137,   138,   139,
6162:     1057,   141,  1058,  1059,     0,   144,   145,   146,   147,   148,
6163:      149,  1060,   790,   150,   151,   152,   153,  1061,  1062,   156,
6164:        0,   157,   158,   159,   160,   791,     0,   792,     0,  1063,
6165:      164,   165,   166,   167,   168,   169,   170,   171,   172,     0,
6166:      173,   174,   175,   176,   177,   178,     0,   179,   180,   181,
6167:      182,   183,   184,   185,   186,   187,   188,   189,  1064,   191,
6168:      192,  1065,   194,  1066,   195,     0,   196,   197,   198,   199,
6169:      200,   201,     0,     0,   202,   203,   204,   205,     0,     0,
6170:      206,   207,  1067,   209,   210,     0,   211,   212,   213,     0,
6171:      214,   215,   216,     0,   217,   218,   219,   220,  1068,   222,
6172:      223,   224,   225,   226,   227,   793,  1069,   229,     0,   230,
6173:      231,  1070,   233,     0,   234,     0,   235,   236,     0,   237,
6174:      238,   239,   240,   241,   242,     0,   243,     0,  1071,  1072,
6175:      246,   247,     0,   248,   249,   250,   251,   252,   253,   254,
6176:      255,   256,   257,   258,   259,     0,   260,   261,   262,   263,
6177:      264,   265,   266,     0,   267,   268,   269,   270,   271,   272,
6178:      273,   274,  1073,  1074,     0,  1075,     0,   278,   279,   280,
6179:      281,   282,   283,   284,   285,   286,   287,   288,     0,     0,
6180:      289,   290,   291,   292,     0,   293,   294,   295,   296,   297,
6181:      298,   299,   300,  1076,   302,   303,   304,   305,   306,   307,
6182:      308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
6183:      318,   319,   320,   321,  1077,   323,  1078,   325,   326,   327,
6184:      328,  1079,   329,   330,   331,   332,  1080,   795,   334,  1081,
6185:      336,   337,   338,     0,   339,   340,     0,     0,  1082,   342,
6186:      343,     0,     0,   344,   345,   346,   347,   348,   349,   797,
6187:      351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
6188:      361,     0,     0,     0,     0,   362,   363,   798,   365,   366,
6189:      367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
6190:      376,   377,     0,   378,   379,   380,   381,   382,  1083,   384,
6191:      385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
6192:      394,   395,   396,   397,   398,   399,   400,     0,   401,   402,
6193:      403,   404,   405,   406,  1084,   408,   409,   410,   411,   412,
6194:      413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
6195:      421,   422,   423,   424,   425,   426,   427,   428,   429,     0,
6196:      430,   431,   432,  1085,   434,     0,   435,   436,   437,   438,
6197:      439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
6198:      800,     0,     0,   450,   451,     0,   452,   453,   454,   455,
6199:      456,   457,   458,     0,   459,  1086,  1087,     0,     0,   462,
6200:      463,   801,   465,   802,  1088,   467,   468,   803,   470,   471,
6201:      472,   473,   474,     0,     0,   475,   476,   477,     0,   478,
6202:      479,   480,   481,     0,   482,   483,   484,   485,   486,   487,
6203:     1089,   489,     0,   490,   491,   492,   493,   494,   495,   496,
6204:      497,   498,     0,     0,   499,     0,     0,   500,   501,   502,
6205:      503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
6206:      513,   514,   515,   516,   517,   518,   519,   520,  1090,     0,
6207:        0,     0,     0,     0,     0,  1091,  1092,  1093,     0,     0,
6208:        0,     0,  1094,     0,  1095,  2078,     0,     0,     0,  1096,
6209:     1097,  1098,  1099,   117,  1050,   820,  1051,  1052,  1053,  1054,
6210:     1055,     0,     0,     0,     0,     0,     0,     0,     0,     0,
6211:        0,     0,   118,   119,   120,   121,   122,   123,   124,   125,
6212:        0,   126,   127,   128,     0,     0,     0,     0,     0,  1056,
6213:        0,     0,   129,   130,   131,     0,   132,   133,   134,   135,
6214:      136,   137,   138,   139,  1057,   141,  1058,  1059,     0,   144,
6215:      145,   146,   147,   148,   149,  1060,   790,   150,   151,   152,
6216:      153,  1061,  1062,   156,     0,   157,   158,   159,   160,   791,
6217:        0,   792,     0,  1063,   164,   165,   166,   167,   168,   169,
6218:      170,   171,   172,     0,   173,   174,   175,   176,   177,   178,
6219:        0,   179,   180,   181,   182,   183,   184,   185,   186,   187,
6220:      188,   189,  1064,   191,   192,  1065,   194,  1066,   195,     0,
6221:      196,   197,   198,   199,   200,   201,     0,     0,   202,   203,
6222:      204,   205,     0,     0,   206,   207,  1067,   209,   210,     0,
6223:      211,   212,   213,     0,   214,   215,   216,     0,   217,   218,
6224:      219,   220,  1068,   222,   223,   224,   225,   226,   227,   793,
6225:     1069,   229,     0,   230,   231,  1070,   233,     0,   234,     0,
6226:      235,   236,     0,   237,   238,   239,   240,   241,   242,     0,
6227:      243,     0,  1071,  1072,   246,   247,     0,   248,   249,   250,
6228:      251,   252,   253,   254,   255,   256,   257,   258,   259,     0,
6229:      260,   261,   262,   263,   264,   265,   266,     0,   267,   268,
6230:      269,   270,   271,   272,   273,   274,  1073,  1074,     0,  1075,
6231:        0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
6232:      287,   288,     0,     0,   289,   290,   291,   292,     0,   293,
6233:      294,   295,   296,   297,   298,   299,   300,  1076,   302,   303,
6234:      304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
6235:      314,   315,   316,   317,   318,   319,   320,   321,  1077,   323,
6236:     1078,   325,   326,   327,   328,  1079,   329,   330,   331,   332,
6237:     1080,   795,   334,  1081,   336,   337,   338,     0,   339,   340,
6238:        0,     0,  1082,   342,   343,     0,     0,   344,   345,   346,
6239:      347,   348,   349,   797,   351,   352,   353,   354,   355,   356,
6240:      357,   358,   359,   360,   361,     0,     0,     0,     0,   362,
6241:      363,   798,   365,   366,   367,   368,   369,   370,   371,     0,
6242:      372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
6243:      381,   382,  1083,   384,   385,   386,   387,     0,   388,   389,
6244:      390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
6245:      400,     0,   401,   402,   403,   404,   405,   406,  1084,   408,
6246:      409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
6247:      419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
6248:      427,   428,   429,     0,   430,   431,   432,  1085,   434,     0,
6249:      435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
6250:      445,   446,   447,   448,   800,     0,     0,   450,   451,  2730,
6251:      452,   453,   454,   455,   456,   457,   458,     0,   459,  1086,
6252:     1087,     0,     0,   462,   463,   801,   465,   802,  1088,   467,
6253:      468,   803,   470,   471,   472,   473,   474,     0,     0,   475,
6254:      476,   477,     0,   478,   479,   480,   481,     0,   482,   483,
6255:      484,   485,   486,   487,  1089,   489,     0,   490,   491,   492,
6256:      493,   494,   495,   496,   497,   498,     0,     0,   499,     0,
6257:        0,   500,   501,   502,   503,   504,   505,   506,   507,   508,
6258:      509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
6259:      519,   520,  1090,     0,     0,     0,     0,     0,     0,  1091,
6260:     1092,  1093,     0,     0,     0,     0,  1094,     0,  1095,     0,
6261:        0,     0,     0,  1096,  1097,  1098,  1099,   117,  1050,   820,
6262:     1051,  1052,  1053,  1054,  1055,     0,     0,     0,     0,     0,
6263:        0,     0,     0,     0,     0,     0,   118,   119,   120,   121,
6264:      122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
6265:        0,     0,     0,  1056,     0,     0,   129,   130,   131,     0,
6266:      132,   133,   134,   135,   136,   137,   138,   139,  1057,   141,
6267:     1058,  1059,     0,   144,   145,   146,   147,   148,   149,  1060,
6268:      790,   150,   151,   152,   153,  1061,  1062,   156,     0,   157,
6269:      158,   159,   160,   791,     0,   792,     0,  1063,   164,   165,
6270:      166,   167,   168,   169,   170,   171,   172,     0,   173,   174,
6271:      175,   176,   177,   178,     0,   179,   180,   181,   182,   183,
6272:      184,   185,   186,   187,   188,   189,  1064,   191,   192,  1065,
6273:      194,  1066,   195,     0,   196,   197,   198,   199,   200,   201,
6274:        0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
6275:     1067,   209,   210,     0,   211,   212,   213,     0,   214,   215,
6276:      216,     0,   217,   218,   219,   220,  1068,   222,   223,   224,
6277:      225,   226,   227,   793,  1069,   229,     0,   230,   231,  1070,
6278:      233,     0,   234,     0,   235,   236,     0,   237,   238,   239,
6279:      240,   241,   242,     0,   243,     0,  1071,  1072,   246,   247,
6280:        0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
6281:      257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
6282:      266,     0,   267,   268,   269,   270,   271,   272,   273,   274,
6283:     1073,  1074,     0,  1075,     0,   278,   279,   280,   281,   282,
6284:      283,   284,   285,   286,   287,   288,     0,     0,   289,   290,
6285:      291,   292,     0,   293,   294,   295,   296,   297,   298,   299,
6286:      300,  1076,   302,   303,   304,   305,   306,   307,   308,   309,
6287:      310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
6288:      320,   321,  1077,   323,  1078,   325,   326,   327,   328,  1079,
6289:      329,   330,   331,   332,  1080,   795,   334,  1081,   336,   337,
6290:      338,     0,   339,   340,     0,     0,  1082,   342,   343,     0,
6291:        0,   344,   345,   346,   347,   348,   349,   797,   351,   352,
6292:      353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
6293:        0,     0,     0,   362,   363,   798,   365,   366,   367,   368,
6294:      369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
6295:        0,   378,   379,   380,   381,   382,  1083,   384,   385,   386,
6296:      387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
6297:      396,   397,   398,   399,   400,     0,   401,   402,   403,   404,
6298:      405,   406,  1084,   408,   409,   410,   411,   412,   413,   414,
6299:      415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
6300:      423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
6301:      432,  1085,   434,     0,   435,   436,   437,   438,   439,   440,
6302:      441,   442,   443,   444,   445,   446,   447,   448,   800,     0,
6303:        0,   450,   451,     0,   452,   453,   454,   455,   456,   457,
6304:      458,     0,   459,  1086,  1087,     0,     0,   462,   463,   801,
6305:      465,   802,  1088,   467,   468,   803,   470,   471,   472,   473,
6306:      474,     0,     0,   475,   476,   477,     0,   478,   479,   480,
6307:      481,     0,   482,   483,   484,   485,   486,   487,  1089,   489,
6308:        0,   490,   491,   492,   493,   494,   495,   496,   497,   498,
6309:        0,  2851,   499,     0,     0,   500,   501,   502,   503,   504,
6310:      505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
6311:      515,   516,   517,   518,   519,   520,  1090,     0,     0,     0,
6312:        0,     0,     0,  1091,  1092,  1093,     0,     0,     0,     0,
6313:     1094,     0,  1095,     0,     0,     0,     0,  1096,  1097,  1098,
6314:     1099,   117,  1050,   820,  1051,  1052,  1053,  1054,  1055,     0,
6315:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
6316:      118,   119,   120,   121,   122,   123,   124,   125,  3069,   126,
6317:      127,   128,     0,     0,     0,     0,     0,  1056,     0,     0,
6318:      129,   130,   131,     0,   132,   133,   134,   135,   136,   137,
6319:      138,   139,  1057,   141,  1058,  1059,     0,   144,   145,   146,
6320:      147,   148,   149,  1060,   790,   150,   151,   152,   153,  1061,
6321:     1062,   156,     0,   157,   158,   159,   160,   791,     0,   792,
6322:        0,  1063,   164,   165,   166,   167,   168,   169,   170,   171,
6323:      172,     0,   173,   174,   175,   176,   177,   178,     0,   179,
6324:      180,  3070,   182,   183,   184,   185,   186,   187,   188,   189,
6325:     1064,   191,   192,  1065,   194,  1066,   195,     0,   196,   197,
6326:      198,   199,   200,   201,     0,     0,   202,   203,   204,   205,
6327:        0,     0,   206,   207,  1067,   209,   210,     0,   211,   212,
6328:      213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
6329:     1068,   222,   223,   224,   225,   226,   227,   793,  1069,   229,
6330:        0,   230,   231,  1070,   233,     0,   234,     0,   235,   236,
6331:        0,   237,   238,   239,   240,   241,   242,     0,   243,     0,
6332:     3071,  1072,   246,   247,     0,   248,   249,   250,   251,   252,
6333:      253,   254,   255,   256,   257,   258,   259,     0,   260,   261,
6334:      262,   263,   264,   265,   266,     0,   267,   268,   269,   270,
6335:      271,   272,   273,   274,  1073,  1074,     0,  1075,     0,   278,
6336:      279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
6337:        0,     0,   289,   290,   291,   292,     0,   293,   294,   295,
6338:      296,   297,   298,   299,   300,  1076,   302,   303,   304,   305,
6339:      306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
6340:      316,   317,   318,   319,   320,   321,  1077,   323,  1078,   325,
6341:      326,   327,   328,  1079,   329,   330,   331,   332,  1080,   795,
6342:      334,  1081,   336,   337,   338,     0,   339,   340,     0,     0,
6343:     1082,   342,   343,     0,     0,   344,   345,   346,   347,   348,
6344:      349,   797,   351,   352,   353,   354,   355,   356,   357,   358,
6345:      359,   360,   361,     0,     0,     0,     0,   362,   363,   798,
6346:      365,   366,   367,   368,   369,   370,   371,     0,   372,   373,
6347:      374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
6348:     1083,   384,   385,   386,   387,     0,   388,   389,   390,   391,
6349:      392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
6350:      401,   402,   403,   404,   405,  3072,  1084,   408,   409,   410,
6351:      411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
6352:        0,     0,   421,   422,   423,   424,   425,   426,   427,   428,
6353:      429,     0,   430,   431,   432,  1085,   434,     0,   435,   436,
6354:      437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
6355:      447,   448,   800,     0,     0,   450,   451,     0,   452,   453,
6356:      454,   455,   456,   457,   458,     0,   459,  1086,  1087,     0,
6357:        0,   462,   463,   801,   465,   802,  1088,   467,   468,   803,
6358:      470,   471,   472,   473,   474,     0,     0,   475,   476,   477,
6359:        0,   478,   479,   480,   481,     0,   482,   483,   484,   485,
6360:      486,   487,  1089,   489,     0,   490,   491,   492,   493,   494,
6361:      495,   496,   497,   498,     0,     0,   499,     0,     0,   500,
6362:      501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
6363:      511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
6364:     1090,     0,     0,     0,     0,     0,     0,  1091,  1092,  1093,
6365:        0,     0,     0,     0,  1094,     0,  3073,     0,     0,     0,
6366:        0,  1096,  1097,  1098,  1099,   117,  1050,   820,  1051,  1052,
6367:     1053,  1054,  1055,     0,     0,     0,     0,     0,     0,     0,
6368:        0,     0,     0,     0,   118,   119,   120,   121,   122,   123,
6369:      124,   125,     0,   126,   127,   128,     0,     0,     0,     0,
6370:        0,  1056,     0,     0,   129,   130,   131,     0,   132,   133,
6371:      134,   135,   136,   137,   138,   139,  1057,   141,  1058,  1059,
6372:        0,   144,   145,   146,   147,   148,   149,  1060,   790,   150,
6373:      151,   152,   153,  1061,  1062,   156,     0,   157,   158,   159,
6374:      160,   791,     0,   792,     0,  1063,   164,   165,   166,   167,
6375:      168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
6376:      177,   178,     0,   179,   180,   181,   182,   183,   184,   185,
6377:      186,   187,   188,   189,  1064,   191,   192,  1065,   194,  1066,
6378:      195,     0,   196,   197,   198,   199,   200,   201,     0,     0,
6379:      202,   203,   204,   205,     0,     0,   206,   207,  1067,   209,
6380:      210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
6381:      217,   218,   219,   220,  1068,   222,   223,   224,   225,   226,
6382:      227,   793,  1069,   229,     0,   230,   231,  1070,   233,     0,
6383:      234,     0,   235,   236,     0,   237,   238,   239,   240,   241,
6384:      242,     0,   243,     0,  1071,  1072,   246,   247,     0,   248,
6385:      249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
6386:      259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
6387:      267,   268,   269,   270,   271,   272,   273,   274,  1073,  1074,
6388:        0,  1075,     0,   278,   279,   280,   281,   282,   283,   284,
6389:      285,   286,   287,   288,     0,     0,   289,   290,   291,   292,
6390:        0,   293,   294,   295,   296,   297,   298,   299,   300,  1076,
6391:      302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
6392:      312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
6393:     1077,   323,  1078,   325,   326,   327,   328,  1079,   329,   330,
6394:      331,   332,  1080,   795,   334,  1081,   336,   337,   338,     0,
6395:      339,   340,     0,     0,  1082,   342,   343,     0,     0,   344,
6396:      345,   346,   347,   348,   349,   797,   351,   352,   353,   354,
6397:      355,   356,   357,   358,   359,   360,   361,     0,     0,     0,
6398:        0,   362,   363,   798,   365,   366,   367,   368,   369,   370,
6399:      371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
6400:      379,   380,   381,   382,  1083,   384,   385,   386,   387,     0,
6401:      388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
6402:      398,   399,   400,     0,   401,   402,   403,   404,   405,   406,
6403:     1084,   408,   409,   410,   411,   412,   413,   414,   415,   416,
6404:      417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
6405:      425,   426,   427,   428,   429,     0,   430,   431,   432,  1085,
6406:      434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
6407:      443,   444,   445,   446,   447,   448,   800,     0,     0,   450,
6408:      451,     0,   452,   453,   454,   455,   456,   457,   458,     0,
6409:      459,  1086,  1087,     0,     0,   462,   463,   801,   465,   802,
6410:     1088,   467,   468,   803,   470,   471,   472,   473,   474,     0,
6411:        0,   475,   476,   477,     0,   478,   479,   480,   481,     0,
6412:      482,   483,   484,   485,   486,   487,  1089,   489,     0,   490,
6413:      491,   492,   493,   494,   495,   496,   497,   498,     0,     0,
6414:      499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
6415:      507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
6416:      517,   518,   519,   520,  1090,     0,     0,     0,     0,     0,
6417:        0,  1091,  1092,  1093,     0,     0,     0,     0,  1094,     0,
6418:     1095,     0,     0,     0,     0,  1096,  1097,  1098,  1099,   117,
6419:     1050,   820,  1051,  1052,  1053,  1054,  1055,     0,     0,     0,
6420:        0,     0,     0,     0,     0,     0,     0,     0,   118,   119,
6421:      120,   121,   122,   123,   124,   125,     0,   126,   127,   128,
6422:        0,     0,     0,     0,     0,  1056,     0,     0,   129,   130,
6423:      131,     0,   132,   133,   134,   135,   136,   137,   138,   139,
6424:     1057,   141,  1058,  1059,     0,   144,   145,   146,   147,   148,
6425:      149,  1060,   790,   150,   151,   152,   153,  1061,  1062,   156,
6426:        0,   157,   158,   159,   160,   791,     0,   792,     0,  1063,
6427:      164,   165,   166,   167,   168,   169,   170,   171,   172,     0,
6428:      173,   174,   175,   176,   177,   178,     0,   179,   180,   181,
6429:      182,   183,   184,   185,   186,   187,   188,   189,  1064,   191,
6430:      192,  1065,   194,  1066,   195,     0,   196,   197,   198,   199,
6431:      200,   201,     0,     0,   202,   203,   204,   205,     0,     0,
6432:      206,   207,  1067,   209,   210,     0,   211,   212,   213,     0,
6433:      214,   215,   216,     0,   217,   218,   219,   220,  1068,   222,
6434:      223,   224,   225,   226,   227,   793,  1069,   229,     0,   230,
6435:      231,  1070,   233,     0,   234,     0,   235,   236,     0,   237,
6436:      238,   239,   240,   241,   242,     0,   243,     0,  1071,  1072,
6437:      246,   247,     0,   248,   249,   250,   251,   252,   253,   254,
6438:      255,   256,   257,   258,   259,     0,   260,   261,   262,   263,
6439:      264,   265,   266,     0,   267,   268,   269,   270,   271,   272,
6440:      273,   274,  1073,  1074,     0,  1075,     0,   278,   279,   280,
6441:      281,   282,   283,   284,   285,   286,   287,   288,     0,     0,
6442:      289,   290,   291,   292,     0,   293,   294,   295,   296,   297,
6443:      298,   299,   300,  1076,   302,   303,   304,   305,   306,   307,
6444:      308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
6445:      318,   319,   320,   321,  1077,   323,  1078,   325,   326,   327,
6446:      328,  1079,   329,   330,   331,   332,  1080,   795,   334,  1081,
6447:      336,   337,   338,     0,   339,   340,     0,     0,  1082,   342,
6448:      343,     0,     0,   344,   345,   346,   347,   348,   349,   797,
6449:      351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
6450:      361,     0,     0,     0,     0,   362,   363,   798,   365,   366,
6451:      367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
6452:      376,   377,     0,   378,   379,   380,   381,   382,  1083,   384,
6453:      385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
6454:      394,   395,   396,   397,   398,   399,   400,     0,   401,   402,
6455:      403,   404,   405,   406,  1084,   408,   409,   410,   411,   412,
6456:      413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
6457:      421,   422,   423,   424,   425,   426,   427,   428,   429,     0,
6458:      430,   431,   432,  1085,   434,     0,   435,   436,   437,   438,
6459:      439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
6460:      800,     0,     0,   450,   451,     0,   452,   453,   454,   455,
6461:      456,   457,   458,     0,   459,  1086,  1087,     0,     0,   462,
6462:      463,   801,   465,   802,  1088,   467,   468,   803,   470,   471,
6463:      472,   473,   474,     0,     0,   475,   476,   477,     0,   478,
6464:      479,   480,   481,     0,   482,   483,   484,   485,   486,   487,
6465:     1089,   489,     0,   490,   491,   492,   493,   494,   495,   496,
6466:      497,   498,     0,     0,   499,     0,     0,   500,   501,   502,
6467:      503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
6468:      513,   514,   515,   516,   517,   518,   519,   520,  1090,     0,
6469:        0,     0,     0,     0,     0,  1725,  1726,  1093,     0,     0,
6470:        0,     0,  1094,     0,  1095,     0,     0,     0,     0,  1096,
6471:     1097,  1098,  1099,   117,  2218,   820,  1051,  1052,  1053,  1054,
6472:     1055,     0,     0,     0,     0,     0,     0,     0,     0,     0,
6473:        0,     0,   118,   119,   120,   121,   122,   123,   124,   125,
6474:        0,   126,   127,   128,     0,     0,     0,     0,     0,  1056,
6475:        0,     0,   129,   130,   131,     0,   132,   133,   134,   135,
6476:      136,   137,   138,   139,  1057,   141,  1058,  1059,     0,   144,
6477:      145,   146,   147,   148,   149,  1060,   790,   150,   151,   152,
6478:      153,  1061,  1062,   156,     0,   157,   158,   159,   160,   791,
6479:        0,   792,     0,  1063,   164,   165,   166,   167,   168,   169,
6480:      170,   171,   172,     0,   173,   174,   175,   176,   177,   178,
6481:        0,   179,   180,   181,   182,   183,   184,   185,   186,   187,
6482:      188,   189,  1064,   191,   192,  1065,   194,  1066,   195,     0,
6483:      196,   197,   198,   199,   200,   201,     0,     0,   202,   203,
6484:      204,   205,     0,     0,   206,   207,  1067,   209,   210,     0,
6485:      211,   212,   213,     0,   214,   215,   216,     0,   217,   218,
6486:      219,   220,  1068,   222,   223,   224,   225,   226,   227,   793,
6487:     1069,   229,     0,   230,   231,  1070,   233,     0,   234,     0,
6488:      235,   236,     0,   237,   238,   239,   240,   241,   242,     0,
6489:      243,     0,  1071,  1072,   246,   247,     0,   248,   249,   250,
6490:      251,   252,   253,   254,   255,   256,   257,   258,   259,     0,
6491:      260,   261,   262,   263,   264,   265,   266,     0,   267,   268,
6492:      269,   270,   271,   272,   273,   274,  1073,  1074,     0,  1075,
6493:        0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
6494:      287,   288,     0,     0,   289,   290,   291,   292,     0,   293,
6495:      294,   295,   296,   297,   298,   299,   300,  1076,   302,   303,
6496:      304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
6497:      314,   315,   316,   317,   318,   319,   320,   321,  1077,   323,
6498:     1078,   325,   326,   327,   328,  1079,   329,   330,   331,   332,
6499:     1080,   795,   334,  1081,   336,   337,   338,     0,   339,   340,
6500:        0,     0,  1082,   342,   343,     0,     0,   344,   345,   346,
6501:      347,   348,   349,   797,   351,   352,   353,   354,   355,   356,
6502:      357,   358,   359,   360,   361,     0,     0,     0,     0,   362,
6503:      363,   798,   365,   366,   367,   368,   369,   370,   371,     0,
6504:      372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
6505:      381,   382,  1083,   384,   385,   386,   387,     0,   388,   389,
6506:      390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
6507:      400,     0,   401,   402,   403,   404,   405,   406,  1084,   408,
6508:      409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
6509:      419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
6510:      427,   428,   429,     0,   430,   431,   432,  1085,   434,     0,
6511:      435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
6512:      445,   446,   447,   448,   800,     0,     0,   450,   451,     0,
6513:      452,   453,   454,   455,   456,   457,   458,     0,   459,  1086,
6514:     1087,     0,     0,   462,   463,   801,   465,   802,  1088,   467,
6515:      468,   803,   470,   471,   472,   473,   474,     0,     0,   475,
6516:      476,   477,     0,   478,   479,   480,   481,     0,   482,   483,
6517:      484,   485,   486,   487,  1089,   489,     0,   490,   491,   492,
6518:      493,   494,   495,   496,   497,   498,     0,     0,   499,     0,
6519:        0,   500,   501,   502,   503,   504,   505,   506,   507,   508,
6520:      509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
6521:      519,   520,  1090,     0,     0,     0,     0,     0,     0,  1091,
6522:     1092,  1093,     0,     0,     0,     0,  1094,     0,  1095,     0,
6523:        0,     0,     0,  1096,  1097,  1098,  1099,   117,  1050,   820,
6524:     1051,  1052,  1053,  1054,  1055,     0,     0,     0,     0,     0,
6525:        0,     0,     0,     0,     0,     0,   118,   119,   120,   121,
6526:      122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
6527:        0,     0,     0,  1056,     0,     0,   129,   130,   131,     0,
6528:      132,   133,   134,   135,   136,   137,   138,   139,  1057,   141,
6529:     1058,  1059,     0,   144,   145,   146,   147,   148,   149,  1060,
6530:      790,   150,   151,   152,   153,  1061,  1062,   156,     0,   157,
6531:      158,   159,   160,   791,     0,   792,     0,  1063,   164,   165,
6532:      166,   167,   168,   169,   170,   171,   172,     0,   173,   174,
6533:      175,   176,   177,   178,     0,   179,   180,   181,   182,   183,
6534:      184,   185,   186,   187,   188,   189,  1064,   191,   192,  1065,
6535:      194,  1066,   195,     0,   196,   197,   198,   199,   200,   201,
6536:        0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
6537:     1067,   209,   210,     0,   211,   212,   213,     0,   214,   215,
6538:      216,     0,   217,   218,   219,   220,  1068,   222,   223,   224,
6539:      225,   226,   227,   793,  1069,   229,     0,   230,   231,  1070,
6540:      233,     0,   234,     0,   235,   236,     0,   237,   238,   239,
6541:      240,   241,   242,     0,   243,     0,  1071,  1072,   246,   247,
6542:        0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
6543:      257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
6544:      266,     0,   267,   268,   269,   270,   271,   272,   273,   274,
6545:     1073,  1074,     0,  1075,     0,   278,   279,   280,   281,   282,
6546:      283,   284,   285,   286,   287,   288,     0,     0,   289,   290,
6547:      291,   292,     0,   293,   294,   295,   296,   297,   298,   299,
6548:      300,  1076,   302,   303,   304,   305,   306,   307,   308,   309,
6549:      310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
6550:      320,   321,  1077,   323,  1078,   325,   326,   327,   328,  1079,
6551:      329,   330,   331,   332,  1080,   795,   334,  1081,   336,   337,
6552:      338,     0,   339,   340,     0,     0,  1082,   342,   343,     0,
6553:        0,   344,   345,   346,   347,   348,   349,   797,   351,   352,
6554:      353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
6555:        0,     0,     0,   362,   363,   798,   365,   366,   367,   368,
6556:      369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
6557:        0,   378,   379,   380,   381,   382,  1083,   384,   385,   386,
6558:      387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
6559:      396,   397,   398,   399,   400,     0,   401,   402,   403,   404,
6560:      405,   406,  1084,   408,   409,   410,   411,   412,   413,   414,
6561:      415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
6562:      423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
6563:      432,  1085,   434,     0,   435,   436,   437,   438,   439,   440,
6564:      441,   442,   443,   444,   445,   446,   447,   448,   800,     0,
6565:        0,   450,   451,     0,   452,   453,   454,   455,   456,   457,
6566:      458,     0,   459,  1086,  1087,     0,     0,   462,   463,   801,
6567:      465,   802,  1088,   467,   468,   803,   470,   471,   472,   473,
6568:      474,     0,     0,   475,   476,   477,     0,   478,   479,   480,
6569:      481,     0,   482,   483,   484,   485,   486,   487,  1089,   489,
6570:        0,   490,   491,   492,   493,   494,   495,   496,   497,   498,
6571:        0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
6572:      505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
6573:      515,   516,   517,   518,   519,   520,  1090,     0,     0,     0,
6574:        0,     0,     0,  1091,  2305,  1093,     0,     0,     0,     0,
6575:     1094,     0,  1095,     0,     0,     0,     0,  1096,  1097,  1098,
6576:     1099,   117,  1050,   820,  1051,  1052,  1053,  1054,  1055,     0,
6577:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
6578:      118,   119,   120,   121,   122,   123,   124,   125,     0,   126,
6579:      127,   128,     0,     0,     0,     0,     0,  1056,     0,     0,
6580:      129,   130,   131,     0,   132,   133,   134,   135,   136,   137,
6581:      138,   139,  1057,   141,  1058,  1059,     0,   144,   145,   146,
6582:      147,   148,   149,  1060,   790,   150,   151,   152,   153,  1061,
6583:     1062,   156,     0,   157,   158,   159,   160,   791,     0,   792,
6584:        0,  1063,   164,   165,   166,   167,   168,   169,   170,   171,
6585:      172,     0,   173,   174,   175,   176,   177,   178,     0,   179,
6586:      180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
6587:     1064,   191,   192,  1065,   194,  1066,   195,     0,   196,   197,
6588:      198,   199,   200,   201,     0,     0,   202,   203,   204,   205,
6589:        0,     0,   206,   207,  1067,   209,   210,     0,   211,   212,
6590:      213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
6591:     1068,   222,   223,   224,   225,   226,   227,   793,  1069,   229,
6592:        0,   230,   231,  1070,   233,     0,   234,     0,   235,   236,
6593:        0,   237,   238,   239,   240,   241,   242,     0,   243,     0,
6594:     1071,  1072,   246,   247,     0,   248,   249,   250,   251,   252,
6595:      253,   254,   255,   256,   257,   258,   259,     0,   260,   261,
6596:      262,   263,   264,   265,   266,     0,   267,   268,   269,   270,
6597:      271,   272,   273,   274,  1073,  1074,     0,  1075,     0,   278,
6598:      279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
6599:        0,     0,   289,   290,   291,   292,     0,   293,   294,   295,
6600:      296,   297,   298,   299,   300,  1076,   302,   303,   304,   305,
6601:      306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
6602:      316,   317,   318,   319,   320,   321,  1077,   323,  1078,   325,
6603:      326,   327,   328,  1079,   329,   330,   331,   332,  1080,   795,
6604:      334,  1081,   336,   337,   338,     0,   339,   340,     0,     0,
6605:     1082,   342,   343,     0,     0,   344,   345,   346,   347,   348,
6606:      349,   797,   351,   352,   353,   354,   355,   356,   357,   358,
6607:      359,   360,   361,     0,     0,     0,     0,   362,   363,   798,
6608:      365,   366,   367,   368,   369,   370,   371,     0,   372,   373,
6609:      374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
6610:     1083,   384,   385,   386,   387,     0,   388,   389,   390,   391,
6611:      392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
6612:      401,   402,   403,   404,   405,   406,  1084,   408,   409,   410,
6613:      411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
6614:        0,     0,   421,   422,   423,   424,   425,   426,   427,   428,
6615:      429,     0,   430,   431,   432,  1085,   434,     0,   435,   436,
6616:      437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
6617:      447,   448,   800,     0,     0,   450,   451,     0,   452,   453,
6618:      454,   455,   456,   457,   458,     0,   459,  1086,  1087,     0,
6619:        0,   462,   463,   801,   465,   802,  1088,   467,   468,   803,
6620:      470,   471,   472,   473,   474,     0,     0,   475,   476,   477,
6621:        0,   478,   479,   480,   481,     0,   482,   483,   484,   485,
6622:      486,   487,  1089,   489,     0,   490,   491,   492,   493,   494,
6623:      495,   496,   497,   498,     0,     0,   499,     0,     0,   500,
6624:      501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
6625:      511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
6626:     1090,     0,     0,     0,     0,     0,     0,  1091,  1092,  1093,
6627:        0,     0,     0,     0,  1094,     0,  2525,     0,     0,     0,
6628:        0,  1096,  1097,  1098,  1099,   117,  1050,   820,  1051,  1052,
6629:     1053,  1054,  1055,     0,     0,     0,     0,     0,     0,     0,
6630:        0,     0,     0,     0,   118,   119,   120,   121,   122,   123,
6631:      124,   125,     0,   126,   127,   128,     0,     0,     0,     0,
6632:        0,  1056,     0,     0,   129,   130,   131,     0,   132,   133,
6633:      134,   135,   136,   137,   138,   139,  1057,   141,  1058,  1059,
6634:        0,   144,   145,   146,   147,   148,   149,  1060,   790,   150,
6635:      151,   152,   153,  1061,  1062,   156,     0,   157,   158,   159,
6636:      160,   791,     0,   792,     0,  1063,   164,   165,   166,   167,
6637:      168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
6638:      177,   178,     0,   179,   180,   181,   182,   183,   184,   185,
6639:      186,   187,   188,   189,  1064,   191,   192,  1065,   194,  1066,
6640:      195,     0,   196,   197,   198,   199,   200,   201,     0,     0,
6641:      202,   203,   204,   205,     0,     0,   206,   207,  1067,   209,
6642:      210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
6643:      217,   218,   219,   220,  1068,   222,   223,   224,   225,   226,
6644:      227,   793,  1069,   229,     0,   230,   231,  1070,   233,     0,
6645:      234,     0,   235,   236,     0,   237,   238,   239,   240,   241,
6646:      242,     0,   243,     0,  1071,  1072,   246,   247,     0,   248,
6647:      249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
6648:      259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
6649:      267,   268,   269,   270,   271,   272,   273,   274,  1073,  1074,
6650:        0,  1075,     0,   278,   279,   280,   281,   282,   283,   284,
6651:      285,   286,   287,   288,     0,     0,   289,   290,   291,   292,
6652:        0,   293,   294,   295,   296,   297,   298,   299,   300,  1076,
6653:      302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
6654:      312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
6655:     1077,   323,  1078,   325,   326,   327,   328,  1079,   329,   330,
6656:      331,   332,  1080,   795,   334,  1081,   336,   337,   338,     0,
6657:      339,   340,     0,     0,  1082,   342,   343,     0,     0,   344,
6658:      345,   346,   347,   348,   349,   797,   351,   352,   353,   354,
6659:      355,   356,   357,   358,   359,   360,   361,     0,     0,     0,
6660:        0,   362,   363,   798,   365,   366,   367,   368,   369,   370,
6661:      371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
6662:      379,   380,   381,   382,  1083,   384,   385,   386,   387,     0,
6663:      388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
6664:      398,   399,   400,     0,   401,   402,   403,   404,   405,   406,
6665:     1084,   408,   409,   410,   411,   412,   413,   414,   415,   416,
6666:      417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
6667:      425,   426,   427,   428,   429,     0,   430,   431,   432,  1085,
6668:      434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
6669:      443,   444,   445,   446,   447,   448,   800,     0,     0,   450,
6670:      451,     0,   452,   453,   454,   455,   456,   457,   458,     0,
6671:      459,  1086,  1087,     0,     0,   462,   463,   801,   465,   802,
6672:     1088,   467,   468,   803,   470,   471,   472,   473,   474,     0,
6673:        0,   475,   476,   477,     0,   478,   479,   480,   481,     0,
6674:      482,   483,   484,   485,   486,   487,  1089,   489,     0,   490,
6675:      491,   492,   493,   494,   495,   496,   497,   498,     0,     0,
6676:      499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
6677:      507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
6678:      517,   518,   519,   520,  1090,     0,     0,     0,     0,     0,
6679:        0,  1091,  3124,  1093,     0,     0,     0,     0,  1094,     0,
6680:     1095,     0,     0,     0,     0,  1096,  1097,  1098,  1099,   117,
6681:     1050,   820,  1051,  1052,  1053,  1054,  1055,     0,     0,     0,
6682:        0,     0,     0,     0,     0,     0,     0,     0,   118,   119,
6683:      120,   121,   122,   123,   124,   125,     0,   126,   127,   128,
6684:        0,     0,     0,     0,     0,  1056,     0,     0,   129,   130,
6685:      131,     0,   132,   133,   134,   135,   136,   137,   138,   139,
6686:     1057,   141,  1058,  1059,     0,   144,   145,   146,   147,   148,
6687:      149,  1060,   790,   150,   151,   152,   153,  1061,  1062,   156,
6688:        0,   157,   158,   159,   160,   791,     0,   792,     0,  1063,
6689:      164,   165,   166,   167,   168,   169,   170,   171,   172,     0,
6690:      173,   174,   175,   176,   177,   178,     0,   179,   180,  3070,
6691:      182,   183,   184,   185,   186,   187,   188,   189,  1064,   191,
6692:      192,  1065,   194,  1066,   195,     0,   196,   197,   198,   199,
6693:      200,   201,     0,     0,   202,   203,   204,   205,     0,     0,
6694:      206,   207,  1067,   209,   210,     0,   211,   212,   213,     0,
6695:      214,   215,   216,     0,   217,   218,   219,   220,  1068,   222,
6696:      223,   224,   225,   226,   227,   793,  1069,   229,     0,   230,
6697:      231,  1070,   233,     0,   234,     0,   235,   236,     0,   237,
6698:      238,   239,   240,   241,   242,     0,   243,     0,  3071,  1072,
6699:      246,   247,     0,   248,   249,   250,   251,   252,   253,   254,
6700:      255,   256,   257,   258,   259,     0,   260,   261,   262,   263,
6701:      264,   265,   266,     0,   267,   268,   269,   270,   271,   272,
6702:      273,   274,  1073,  1074,     0,  1075,     0,   278,   279,   280,
6703:      281,   282,   283,   284,   285,   286,   287,   288,     0,     0,
6704:      289,   290,   291,   292,     0,   293,   294,   295,   296,   297,
6705:      298,   299,   300,  1076,   302,   303,   304,   305,   306,   307,
6706:      308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
6707:      318,   319,   320,   321,  1077,   323,  1078,   325,   326,   327,
6708:      328,  1079,   329,   330,   331,   332,  1080,   795,   334,  1081,
6709:      336,   337,   338,     0,   339,   340,     0,     0,  1082,   342,
6710:      343,     0,     0,   344,   345,   346,   347,   348,   349,   797,
6711:      351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
6712:      361,     0,     0,     0,     0,   362,   363,   798,   365,   366,
6713:      367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
6714:      376,   377,     0,   378,   379,   380,   381,   382,  1083,   384,
6715:      385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
6716:      394,   395,   396,   397,   398,   399,   400,     0,   401,   402,
6717:      403,   404,   405,  3072,  1084,   408,   409,   410,   411,   412,
6718:      413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
6719:      421,   422,   423,   424,   425,   426,   427,   428,   429,     0,
6720:      430,   431,   432,  1085,   434,     0,   435,   436,   437,   438,
6721:      439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
6722:      800,     0,     0,   450,   451,     0,   452,   453,   454,   455,
6723:      456,   457,   458,     0,   459,  1086,  1087,     0,     0,   462,
6724:      463,   801,   465,   802,  1088,   467,   468,   803,   470,   471,
6725:      472,   473,   474,     0,     0,   475,   476,   477,     0,   478,
6726:      479,   480,   481,     0,   482,   483,   484,   485,   486,   487,
6727:     1089,   489,     0,   490,   491,   492,   493,   494,   495,   496,
6728:      497,   498,     0,     0,   499,     0,     0,   500,   501,   502,
6729:      503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
6730:      513,   514,   515,   516,   517,   518,   519,   520,  1090,     0,
6731:        0,     0,     0,     0,     0,  1091,  1092,  1093,     0,     0,
6732:        0,     0,  1094,     0,  3073,     0,     0,     0,     0,  1096,
6733:     1097,  1098,  1099,   117,  1050,   820,  1051,  1052,  1053,  1054,
6734:     1055,     0,     0,     0,     0,     0,     0,     0,     0,     0,
6735:        0,     0,   118,   119,   120,   121,   122,   123,   124,   125,
6736:        0,   126,   127,   128,     0,     0,     0,     0,     0,  1056,
6737:        0,     0,   129,   130,   131,     0,   132,   133,   134,   135,
6738:      136,   137,   138,  3527,  1057,   141,  1058,  1059,     0,   144,
6739:      145,   146,   147,   148,   149,  1060,   790,   150,   151,   152,
6740:      153,  1061,  1062,   156,     0,   157,   158,   159,   160,   791,
6741:        0,   792,     0,  1063,   164,   165,   166,   167,   168,   169,
6742:      170,   171,   172,     0,   173,   174,   175,   176,   177,   178,
6743:        0,   179,   180,   181,  3528,   183,   184,   185,   186,   187,
6744:      188,   189,  1064,   191,   192,  1065,   194,  1066,   195,     0,
6745:      196,   197,   198,   199,   200,   201,     0,     0,   202,   203,
6746:      204,   205,     0,     0,   206,   207,  1067,   209,   210,     0,
6747:      211,   212,   213,     0,   214,   215,   216,     0,   217,   218,
6748:      219,   220,  1068,   222,   223,   224,   225,   226,   227,   793,
6749:     1069,   229,     0,   230,   231,  1070,   233,     0,   234,     0,
6750:      235,   236,     0,   237,   238,   239,   240,   241,   242,     0,
6751:      243,     0,  1071,  1072,   246,   247,     0,   248,   249,   250,
6752:      251,   252,   253,   254,   255,   256,   257,   258,   259,     0,
6753:      260,   261,   262,   263,   264,   265,   266,     0,   267,   268,
6754:      269,   270,   271,   272,   273,   274,  1073,  1074,     0,  1075,
6755:        0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
6756:      287,   288,     0,     0,   289,   290,   291,   292,     0,   293,
6757:      294,   295,   296,   297,   298,   299,   300,  1076,   302,   303,
6758:      304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
6759:      314,   315,   316,   317,   318,   319,   320,   321,  1077,   323,
6760:     1078,   325,   326,   327,   328,  1079,   329,   330,   331,   332,
6761:     1080,   795,   334,  1081,   336,   337,   338,     0,   339,   340,
6762:        0,     0,  1082,   342,   343,     0,     0,   344,   345,   346,
6763:      347,   348,   349,   797,   351,   352,   353,   354,   355,   356,
6764:      357,   358,   359,   360,   361,     0,     0,     0,     0,   362,
6765:      363,   798,   365,   366,   367,   368,   369,   370,   371,     0,
6766:      372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
6767:      381,   382,  1083,   384,   385,   386,   387,     0,   388,   389,
6768:      390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
6769:      400,     0,   401,   402,   403,   404,   405,   406,  1084,   408,
6770:      409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
6771:      419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
6772:      427,   428,   429,     0,   430,   431,   432,  1085,   434,     0,
6773:      435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
6774:      445,   446,   447,   448,   800,     0,     0,   450,   451,     0,
6775:      452,   453,   454,   455,   456,   457,   458,     0,   459,  1086,
6776:     1087,     0,     0,   462,   463,   801,   465,   802,  1088,   467,
6777:      468,   803,   470,   471,  3529,   473,   474,     0,     0,   475,
6778:      476,   477,     0,   478,   479,   480,   481,     0,   482,   483,
6779:      484,   485,   486,   487,  1089,   489,     0,   490,   491,   492,
6780:      493,   494,   495,   496,   497,   498,     0,     0,   499,     0,
6781:        0,   500,   501,   502,   503,   504,   505,   506,   507,   508,
6782:      509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
6783:      519,   520,  1090,     0,     0,     0,     0,     0,     0,  1091,
6784:     1092,  1093,     0,     0,     0,     0,  1094,     0,  1095,     0,
6785:        0,     0,     0,  1096,  1097,  1098,  1099,   117,  1050,   820,
6786:     1051,  1052,  1053,  1054,  1055,     0,     0,     0,     0,     0,
6787:        0,     0,     0,     0,     0,     0,   118,   119,   120,   121,
6788:      122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
6789:        0,     0,     0,  1056,     0,     0,   129,   130,   131,     0,
6790:      132,   133,   134,   135,   136,   137,   138,   139,  1057,   141,
6791:     1058,  1059,     0,   144,   145,   146,   147,   148,   149,  1060,
6792:      790,   150,   151,   152,   153,  1061,  1062,   156,     0,   157,
6793:      158,   159,   160,   791,     0,   792,     0,  1063,   164,   165,
6794:      166,   167,   168,   169,   170,   171,   172,     0,   173,   174,
6795:      175,   176,   177,   178,     0,   179,   180,   181,  3528,   183,
6796:      184,   185,   186,   187,   188,   189,  1064,   191,   192,  1065,
6797:      194,  1066,   195,     0,   196,   197,   198,   199,   200,   201,
6798:        0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
6799:     1067,   209,   210,     0,   211,   212,   213,     0,   214,   215,
6800:      216,     0,   217,   218,   219,   220,  1068,   222,   223,   224,
6801:      225,   226,   227,   793,  1069,   229,     0,   230,   231,  1070,
6802:      233,     0,   234,     0,   235,   236,     0,   237,   238,   239,
6803:      240,   241,   242,     0,   243,     0,  1071,  1072,   246,   247,
6804:        0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
6805:      257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
6806:      266,     0,   267,   268,   269,   270,   271,   272,   273,   274,
6807:     1073,  1074,     0,  1075,     0,   278,   279,   280,   281,   282,
6808:      283,   284,   285,   286,   287,   288,     0,     0,   289,   290,
6809:      291,   292,     0,   293,   294,   295,   296,   297,   298,   299,
6810:      300,  1076,   302,   303,   304,   305,   306,   307,   308,   309,
6811:      310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
6812:      320,   321,  1077,   323,  1078,   325,   326,   327,   328,  1079,
6813:      329,   330,   331,   332,  1080,   795,   334,  1081,   336,   337,
6814:      338,     0,   339,   340,     0,     0,  1082,   342,   343,     0,
6815:        0,   344,   345,   346,   347,   348,   349,   797,   351,   352,
6816:      353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
6817:        0,     0,     0,   362,   363,   798,   365,   366,   367,   368,
6818:      369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
6819:        0,   378,   379,   380,   381,   382,  1083,   384,   385,   386,
6820:      387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
6821:      396,   397,   398,   399,   400,     0,   401,   402,   403,   404,
6822:      405,   406,  1084,   408,   409,   410,   411,   412,   413,   414,
6823:      415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
6824:      423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
6825:      432,  1085,   434,     0,   435,   436,   437,   438,   439,   440,
6826:      441,   442,   443,   444,   445,   446,   447,   448,   800,     0,
6827:        0,   450,   451,     0,   452,   453,   454,   455,   456,   457,
6828:      458,     0,   459,  1086,  1087,     0,     0,   462,   463,   801,
6829:      465,   802,  1088,   467,   468,   803,   470,   471,  3529,   473,
6830:      474,     0,     0,   475,   476,   477,     0,   478,   479,   480,
6831:      481,     0,   482,   483,   484,   485,   486,   487,  1089,   489,
6832:        0,   490,   491,   492,   493,   494,   495,   496,   497,   498,
6833:        0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
6834:      505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
6835:      515,   516,   517,   518,   519,   520,  1090,     0,     0,     0,
6836:        0,     0,     0,  1091,  1092,  1093,     0,     0,     0,     0,
6837:     1094,     0,  1095,     0,     0,     0,     0,  1096,  1097,  1098,
6838:     1099,   117,  1050,   820,  1051,  1052,  1053,  1054,  1055,     0,
6839:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
6840:      118,   119,   120,   121,   122,   123,   124,   125,     0,   126,
6841:      127,   128,     0,     0,     0,     0,     0,  1056,     0,     0,
6842:      129,   130,   131,     0,   132,   133,   134,   135,   136,   137,
6843:      138,   139,  1057,   141,  1058,  1059,     0,   144,   145,   146,
6844:      147,   148,   149,  1060,   790,   150,   151,   152,   153,  1061,
6845:     1062,   156,     0,   157,   158,   159,   160,   791,     0,   792,
6846:        0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
6847:      172,     0,   173,   174,   175,   176,   177,   178,     0,   179,
6848:      180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
6849:     1064,   191,   192,  1065,   194,     0,   195,     0,   196,   197,
6850:      198,   199,   200,   201,     0,     0,   202,   203,   204,   205,
6851:        0,     0,   206,   207,  1067,   209,   210,     0,   211,   212,
6852:      213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
6853:     1068,   222,   223,   224,   225,   226,   227,   793,  1069,   229,
6854:        0,   230,   231,  1070,   233,     0,   234,     0,   235,   236,
6855:        0,   237,   238,   239,   240,   241,   242,     0,   243,     0,
6856:     1071,  1072,   246,   247,     0,   248,   249,   250,   251,   252,
6857:      253,   254,   255,   256,   257,   258,   259,     0,   260,   261,
6858:      262,   263,   264,   265,   266,     0,   267,   268,   269,   270,
6859:      271,   272,   273,   274,  1073,  1074,     0,  1075,     0,   278,
6860:      279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
6861:        0,     0,   289,   290,   291,   292,     0,   293,   294,   295,
6862:      296,   297,   298,   299,   300,  1076,   302,   303,   304,   305,
6863:      306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
6864:      316,   317,   318,   319,   320,   321,  1077,   323,  1078,   325,
6865:      326,   327,   328,     0,   329,   330,   331,   332,  1080,   795,
6866:      334,  1081,   336,   337,   338,     0,   339,   340,     0,     0,
6867:     1082,   342,   343,     0,     0,   344,   345,   346,   347,   348,
6868:      349,   797,   351,   352,   353,   354,   355,   356,   357,   358,
6869:      359,   360,   361,     0,     0,     0,     0,   362,   363,   798,
6870:      365,   366,   367,   368,   369,   370,   371,     0,   372,   373,
6871:      374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
6872:     1083,   384,   385,   386,   387,     0,   388,   389,   390,   391,
6873:      392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
6874:      401,   402,   403,   404,   405,   406,  1084,   408,   409,   410,
6875:      411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
6876:        0,     0,   421,   422,   423,   424,   425,   426,   427,   428,
6877:      429,     0,   430,   431,   432,  1085,   434,     0,   435,   436,
6878:      437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
6879:      447,   448,   800,     0,     0,   450,   451,     0,   452,   453,
6880:      454,   455,   456,   457,   458,     0,   459,  1086,  1087,     0,
6881:        0,   462,   463,   801,   465,   802,  1088,   467,   468,   803,
6882:      470,   471,   472,   473,   474,     0,     0,   475,   476,   477,
6883:        0,   478,   479,   480,   481,     0,   482,   483,   484,   485,
6884:      486,   487,  1089,   489,     0,   490,   491,   492,   493,   494,
6885:      495,   496,   497,   498,     0,     0,   499,     0,     0,   500,
6886:      501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
6887:      511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
6888:        0,     0,     0,     0,     0,     0,     0,  1427,  1428,     0,
6889:        0,     0,     0,     0,  1094,     0,  1095,     0,     0,     0,
6890:        0,  1096,  1097,  1098,  1099,   117,  1050,   820,  1051,  1052,
6891:     1053,  1054,  1055,     0,     0,     0,     0,     0,     0,     0,
6892:        0,     0,     0,     0,   118,   119,   120,   121,   122,   123,
6893:      124,   125,     0,   126,   127,   128,     0,     0,     0,     0,
6894:        0,  1056,     0,     0,   129,   130,   131,     0,   132,   133,
6895:      134,   135,   136,   137,   138, -2082,  1057,   141,  1058,  1059,
6896:        0,   144,   145,   146,   147,   148,   149,  1060,   790,   150,
6897:      151,   152,   153,  1061,  1062,   156,     0,   157,   158,   159,
6898:      160,   791,     0,   792,     0,  1063,   164,   165,   166,   167,
6899:      168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
6900:      177,   178,     0,   179,   180,   181,  3528,   183,   184,   185,
6901:      186,   187,   188,   189,  1064,   191,   192,  1065,   194,  1066,
6902:      195,     0,   196,   197,   198,   199,   200,   201,     0,     0,
6903:      202,   203,   204,   205,     0,     0,   206,   207,  1067,   209,
6904:      210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
6905:      217,   218,   219,   220,  1068,   222,   223,   224,   225,   226,
6906:      227,   793,  1069,   229,     0,   230,   231,  1070,   233,     0,
6907:      234,     0,   235,   236,     0,   237,   238,   239,   240, -2082,
6908:      242,     0,   243,     0,  1071,  1072,   246,   247,     0,   248,
6909:      249,   250,   251,   252,   253,   254, -2082,   256,   257,   258,
6910:      259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
6911:      267,   268,   269,   270,   271,   272,   273,   274,  1073,  1074,
6912:        0,  1075,     0,   278,     0,     0,   281,   282,   283,   284,
6913:      285,   286,   287,   288,     0,     0,   289,   290,   291, -2082,
6914:        0,   293,   294,   295,   296,   297,   298,   299,   300,  1076,
6915:      302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
6916:      312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
6917:     1077,   323,  1078,   325,   326,   327,   328,     0,   329,   330,
6918:        0,   332,  1080,   795,   334,  1081,   336,   337,   338,     0,
6919:      339,   340,     0,     0,  1082,   342,   343,     0,     0,   344,
6920:      345,   346,   347,   348,   349,   797,   351,   352,   353,   354,
6921:      355,   356,   357,   358,   359,   360,   361,     0,     0,     0,
6922:        0,   362,   363,   798,   365,   366,   367,   368,   369,   370,
6923:      371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
6924:      379,   380,   381,   382,  1083,   384,   385,   386,   387,     0,
6925:      388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
6926:      398,   399,   400,     0,   401,   402,   403,   404,   405,   406,
6927:     1084,   408,   409,   410,   411,   412,   413,   414,   415,   416,
6928:      417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
6929:      425,   426,   427,   428,   429,     0, -2082,   431,   432,  1085,
6930:      434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
6931:      443,   444,   445,   446,   447,   448,   800,     0,     0,   450,
6932:      451,     0,   452,   453,   454,   455,   456,   457,   458,     0,
6933:      459,  1086,  1087,     0,     0,   462,   463,   801,   465,   802,
6934:     1088,   467,   468,   803,   470,   471,  3529,   473,   474,     0,
6935:        0,   475,   476,   477,     0,   478,   479,   480,   481,     0,
6936:      482,   483,   484,   485,   486,   487,  1089,   489,     0,   490,
6937:      491,   492,   493,   494,   495,   496,   497,   498,     0,     0,
6938:      499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
6939:      507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
6940:      517,   518,   519,   520, -2082,     0,     0,     0,     0,     0,
6941:        0,  1091,  1092,  1093,     0,     0,     0,     0,  1094,     0,
6942:     1095,     0,     0,     0,     0,  1096,  1097,  1098,  1099,   117,
6943:     1050,   820,  1051,  1052,     0,  1054,  1055,     0,     0,     0,
6944:        0,     0,     0,     0,     0,     0,     0,     0,   118,   119,
6945:      120,   121,   122,   123,   124,   125,     0,   126,   127,   128,
6946:        0,     0,     0,     0,     0,  1056,     0,     0,   129,   130,
6947:      131,     0,   132,   133,   134,   135,   136,   137,   138,   139,
6948:     1057,   141,  1058,  1059,     0,   144,   145,   146,   147,   148,
6949:      149,  1060,   790,   150,   151,   152,   153,  1061,  1062,   156,
6950:        0,   157,   158,   159,   160,   791,     0,   792,     0,   163,
6951:      164,   165,   166,   167,   168,   169,   170,   171,   172,     0,
6952:      173,   174,   175,   176,   177,   178,     0,   179,   180,   181,
6953:      182,   183,   184,   185,   186,   187,   188,   189,  1064,   191,
6954:      192,  1065,   194,     0,   195,     0,   196,   197,   198,   199,
6955:      200,   201,     0,     0,   202,   203,   204,   205,     0,     0,
6956:      206,   207,  1067,   209,   210,     0,   211,   212,   213,     0,
6957:      214,   215,   216,     0,   217,   218,   219,   220,  1068,   222,
6958:      223,   224,   225,   226,   227,   793,  1069,   229,     0,   230,
6959:      231,  1070,   233,     0,   234,     0,   235,   236,     0,   237,
6960:      238,   239,   240,   241,   242,     0,   243,     0,  1071,  1072,
6961:      246,   247,     0,   248,   249,   250,   251,   252,   253,   254,
6962:      255,   256,   257,   258,   259,     0,   260,   261,   262,   263,
6963:      264,   265,   266,     0,   267,   268,   269,   270,   271,   272,
6964:      273,   274,  1073,  1074,     0,  1075,     0,   278,   279,   280,
6965:      281,   282,   283,   284,   285,   286,   287,   288,     0,     0,
6966:      289,   290,   291,   292,     0,   293,   294,   295,   296,   297,
6967:      298,   299,   300,  1076,   302,   303,   304,   305,   306,   307,
6968:      308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
6969:      318,   319,   320,   321,  1077,   323,  1078,   325,   326,   327,
6970:      328,     0,   329,   330,   331,   332,  1080,   795,   334,  1081,
6971:      336,   337,   338,     0,   339,   340,     0,     0,   341,   342,
6972:      343,     0,     0,   344,   345,   346,   347,   348,   349,   797,
6973:      351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
6974:      361,     0,     0,     0,     0,   362,   363,   798,   365,   366,
6975:      367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
6976:      376,   377,     0,   378,   379,   380,   381,   382,  1083,   384,
6977:      385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
6978:      394,   395,   396,   397,   398,   399,   400,     0,   401,   402,
6979:      403,   404,   405,   406,  2204,  2205,   409,   410,   411,   412,
6980:      413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
6981:      421,   422,   423,   424,   425,   426,   427,   428,   429,     0,
6982:      430,   431,   432,  1085,   434,     0,   435,   436,   437,   438,
6983:      439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
6984:      800,     0,     0,   450,   451,     0,   452,   453,   454,   455,
6985:      456,   457,   458,     0,   459,  1086,  1087,     0,     0,   462,
6986:      463,   801,   465,   802,  1088,   467,   468,   803,   470,   471,
6987:      472,   473,   474,     0,     0,   475,   476,   477,     0,   478,
6988:      479,   480,   481,     0,   482,   483,   484,   485,   486,   487,
6989:     1089,   489,     0,   490,   491,   492,   493,   494,   495,   496,
6990:      497,   498,     0,     0,   499,     0,     0,   500,   501,   502,
6991:      503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
6992:      513,   514,   515,   516,   517,   518,   519,   520,     0,     0,
6993:        0,     0,     0,     0,     0,  2206,  2207,     0,     0,     0,
6994:        0,     0,  1094,     0,  1095,     0,     0,     0,     0,  1096,
6995:     1097,  1098,  1099,   117,  1050,   820,  1051,  1052,  1053,  1054,
6996:     1055,     0,     0,     0,     0,     0,     0,     0,     0,     0,
6997:        0,     0,   118,   119,   120,   121,   122,   123,   124,   125,
6998:        0,   126,   127,   128,     0,     0,     0,     0,     0,  1056,
6999:        0,     0,   129,   130,   131,     0,   132,   133,   134,   135,
7000:      136,   137,   138,   139,  1057,   141,  1058,  1059,     0,   144,
7001:      145,   146,   147,   148,   149,  1060,   790,   150,   151,   152,
7002:      153,  1061,  1062,   156,     0,   157,   158,   159,   160,   791,
7003:        0,   792,     0,   163,   164,   165,   166,   167,   168,   169,
7004:      170,   171,   172,     0,   173,   174,   175,   176,   177,   178,
7005:        0,   179,   180,   181,   182,   183,   184,   185,   186,   187,
7006:      188,   189,  1064,   191,   192,  1065,   194,     0,   195,     0,
7007:      196,   197,   198,   199,   200,   201,     0,     0,   202,   203,
7008:      204,   205,     0,     0,   206,   207,  1067,   209,   210,     0,
7009:      211,   212,   213,     0,   214,   215,   216,     0,   217,   218,
7010:      219,   220,  1068,   222,   223,   224,   225,   226,   227,   793,
7011:     1069,   229,     0,   230,   231,  1070,   233,     0,   234,     0,
7012:      235,   236,     0,   237,   238,   239,   240,   241,   242,     0,
7013:      243,     0,  1071,  1072,   246,   247,     0,   248,   249,   250,
7014:      251,   252,   253,   254,   255,   256,   257,   258,   259,     0,
7015:      260,   261,   262,   263,   264,   265,   266,     0,   267,   268,
7016:      269,   270,   271,   272,   273,   274,  1073,  1074,     0,  1075,
7017:        0,   278,     0,   280,   281,   282,   283,   284,   285,   286,
7018:      287,   288,     0,     0,   289,   290,   291,   292,     0,   293,
7019:      294,   295,   296,   297,   298,   299,   300,  1076,   302,   303,
7020:      304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
7021:      314,   315,   316,   317,   318,   319,   320,   321,  1077,   323,
7022:     1078,   325,   326,   327,   328,     0,   329,   330,   331,   332,
7023:     1080,   795,   334,  1081,   336,   337,   338,     0,   339,   340,
7024:        0,     0,  1082,   342,   343,     0,     0,   344,   345,   346,
7025:      347,   348,   349,   797,   351,   352,   353,   354,   355,   356,
7026:      357,   358,   359,   360,   361,     0,     0,     0,     0,   362,
7027:      363,   798,   365,   366,   367,   368,   369,   370,   371,     0,
7028:      372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
7029:      381,   382,  1083,   384,   385,   386,   387,     0,   388,   389,
7030:      390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
7031:      400,     0,   401,   402,   403,   404,   405,   406,  1084,   408,
7032:      409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
7033:      419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
7034:      427,   428,   429,     0,   430,   431,   432,  1085,   434,     0,
7035:      435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
7036:      445,   446,   447,   448,   800,     0,     0,   450,   451,     0,
7037:      452,   453,   454,   455,   456,   457,   458,     0,   459,  1086,
7038:     1087,     0,     0,   462,   463,   801,   465,   802,  1088,   467,
7039:      468,   803,   470,   471,   472,   473,   474,     0,     0,   475,
7040:      476,   477,     0,   478,   479,   480,   481,     0,   482,   483,
7041:      484,   485,   486,   487,  1089,   489,     0,   490,   491,   492,
7042:      493,   494,   495,   496,   497,   498,     0,     0,   499,     0,
7043:        0,   500,   501,   502,   503,   504,   505,   506,   507,   508,
7044:      509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
7045:      519,   520,     0,     0,     0,     0,     0,     0,     0,  1427,
7046:     1428,     0,     0,     0,     0,     0,  1094,     0,  1095,     0,
7047:        0,     0,     0,  1096,  1097,  1098,  1099,   117,  1050,   820,
7048:     1051,  1052,     0,  1054,  1055,     0,     0,     0,     0,     0,
7049:        0,     0,     0,     0,     0,     0,   118,   119,   120,   121,
7050:      122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
7051:        0,     0,     0,  1056,     0,     0,   129,   130,   131,     0,
7052:      132,   133,   134,   135,   136,   137,   138,   139,  1057,   141,
7053:     1058,  1059,     0,   144,   145,   146,   147,   148,   149,  1060,
7054:      790,   150,   151,   152,   153,  1061,  1062,   156,     0,   157,
7055:      158,   159,   160,   791,     0,   792,     0,   163,   164,   165,
7056:      166,   167,   168,   169,   170,   171,   172,     0,   173,   174,
7057:      175,   176,   177,   178,     0,   179,   180,   181,   182,   183,
7058:      184,   185,   186,   187,   188,   189,  1064,   191,   192,  1065,
7059:      194,     0,   195,     0,   196,   197,   198,   199,   200,   201,
7060:        0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
7061:     1067,   209,   210,     0,   211,   212,   213,     0,   214,   215,
7062:      216,     0,   217,   218,   219,   220,  1068,   222,   223,   224,
7063:      225,   226,   227,   793,  1069,   229,     0,   230,   231,  1070,
7064:      233,     0,   234,     0,   235,   236,     0,   237,   238,   239,
7065:      240,   241,   242,     0,   243,  3090,  1071,  1072,   246,   247,
7066:        0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
7067:      257,   258,   259,  -733,   260,   261,   262,   263,   264,   265,
7068:      266,     0,   267,   268,   269,   270,   271,   272,   273,   274,
7069:     1073,  1074,     0,  1075,     0,   278,   279,   280,   281,   282,
7070:      283,   284,   285,   286,   287,   288,     0,     0,   289,   290,
7071:      291,   292,     0,   293,   294,   295,   296,   297,   298,   299,
7072:      300,  1076,   302,   303,   304,   305,   306,   307,   308,   309,
7073:      310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
7074:      320,   321,  1077,   323,  1078,   325,   326,   327,   328,     0,
7075:      329,   330,   331,   332,  1080,   795,   334,  1081,   336,   337,
7076:      338,     0,   339,   340,     0,     0,   341,   342,   343,     0,
7077:        0,   344,   345,   346,   347,   348,   349,   797,   351,   352,
7078:      353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
7079:        0,     0,     0,   362,   363,   798,   365,   366,   367,   368,
7080:      369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
7081:        0,   378,   379,   380,   381,   382,  1083,   384,   385,   386,
7082:      387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
7083:      396,   397,   398,   399,   400,     0,   401,   402,   403,   404,
7084:      405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
7085:      415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
7086:      423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
7087:      432,  1085,   434,     0,   435,   436,   437,   438,   439,   440,
7088:      441,   442,   443,   444,   445,   446,   447,   448,   800,     0,
7089:        0,   450,   451,     0,   452,   453,   454,   455,   456,   457,
7090:      458,     0,   459,  1086,  1087,     0,     0,   462,   463,   801,
7091:      465,   802,  1088,   467,   468,   803,   470,   471,   472,   473,
7092:      474,     0,     0,   475,   476,   477,     0,   478,   479,   480,
7093:      481,     0,   482,   483,   484,   485,   486,   487,  1089,   489,
7094:        0,   490,   491,   492,   493,   494,   495,   496,   497,   498,
7095:        0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
7096:      505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
7097:      515,   516,   517,   518,   519,   520,     0,     0,     0,     0,
7098:        0,     0,   117,  1050,   820,  1051,  1052,     0,  1054,  1055,
7099:     1094,     0,  2778,     0,     0,     0,     0,  1096,  1097,  1098,
7100:     1099,   118,   119,   120,   121,   122,   123,   124,   125,     0,
7101:      126,   127,   128,     0,     0,     0,     0,     0,  1056,     0,
7102:        0,   129,   130,   131,     0,   132,   133,   134,   135,   136,
7103:      137,   138,   139,  1057,   141,  1058,  1059,     0,   144,   145,
7104:      146,   147,   148,   149,  1060,   790,   150,   151,   152,   153,
7105:     1061,  1062,   156,     0,   157,   158,   159,   160,   791,     0,
7106:      792,     0,   163,   164,   165,   166,   167,   168,   169,   170,
7107:      171,   172,     0,   173,   174,   175,   176,   177,   178,     0,
7108:      179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
7109:      189,  1064,   191,   192,  1065,   194,     0,   195,     0,   196,
7110:      197,   198,   199,   200,   201,     0,     0,   202,   203,   204,
7111:      205,     0,     0,   206,   207,  1067,   209,   210,     0,   211,
7112:      212,   213,     0,   214,   215,   216,     0,   217,   218,   219,
7113:      220,  1068,   222,   223,   224,   225,   226,   227,   793,  1069,
7114:      229,     0,   230,   231,  1070,   233,     0,   234,     0,   235,
7115:      236,     0,   237,   238,   239,   240,   241,   242,     0,   243,
7116:        0,  1071,  1072,   246,   247,     0,   248,   249,   250,   251,
7117:      252,   253,   254,   255,   256,   257,   258,   259,     0,   260,
7118:      261,   262,   263,   264,   265,   266,     0,   267,   268,   269,
7119:      270,   271,   272,   273,   274,  1073,  1074,     0,  1075,     0,
7120:      278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
7121:      288,     0,     0,   289,   290,   291,   292,     0,   293,   294,
7122:      295,   296,   297,   298,   299,   300,  1076,   302,   303,   304,
7123:      305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
7124:      315,   316,   317,   318,   319,   320,   321,  1077,   323,  1078,
7125:      325,   326,   327,   328,     0,   329,   330,   331,   332,  1080,
7126:      795,   334,  1081,   336,   337,   338,     0,   339,   340,     0,
7127:        0,   341,   342,   343,     0,     0,   344,   345,   346,   347,
7128:      348,   349,   797,   351,   352,   353,   354,   355,   356,   357,
7129:      358,   359,   360,   361,     0,     0,     0,     0,   362,   363,
7130:      798,   365,   366,   367,   368,   369,   370,   371,     0,   372,
7131:      373,   374,   375,   376,   377,     0,   378,   379,   380,   381,
7132:      382,  1083,   384,   385,   386,   387,     0,   388,   389,   390,
7133:      391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
7134:        0,   401,   402,   403,   404,   405,   406,   407,   408,   409,
7135:      410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
7136:      420,     0,     0,   421,   422,   423,   424,   425,   426,   427,
7137:      428,   429,     0,   430,   431,   432,  1085,   434,     0,   435,
7138:      436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
7139:      446,   447,   448,   800,     0,     0,   450,   451,     0,   452,
7140:      453,   454,   455,   456,   457,   458,     0,   459,  1086,  1087,
7141:        0,     0,   462,   463,   801,   465,   802,  1088,   467,   468,
7142:      803,   470,   471,   472,   473,   474,     0,     0,   475,   476,
7143:      477,     0,   478,   479,   480,   481,     0,   482,   483,   484,
7144:      485,   486,   487,  1089,   489,     0,   490,   491,   492,   493,
7145:      494,   495,   496,   497,   498,     0,     0,   499,     0,     0,
7146:      500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
7147:      510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
7148:      520,     0,     0,     0,     0,     0,     0,   117,  1050,   820,
7149:     1051,  1052,     0,  1054,  1055,  1094,     0,  2778,     0,     0,
7150:        0,     0,  1096,  1097,  1098,  1099,   118,   119,   120,   121,
7151:      122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
7152:        0,     0,     0,  1056,     0,     0,   129,   130,   131,     0,
7153:      132,   133,   134,   135,   136,   137,   138,   139,  1057,   141,
7154:     1058,  1059,     0,   144,   145,   146,   147,   148,   149,  1060,
7155:      790,   150,   151,   152,   153,  1061,  1062,   156,     0,   157,
7156:      158,   159,   160,   791,     0,   792,     0,   163,   164,   165,
7157:      166,   167,   168,   169,   170,   171,   172,     0,   173,   174,
7158:      175,   176,   177,   178,     0,   179,   180,   181,   182,   183,
7159:      184,   185,   186,   187,   188,   189,  1064,   191,   192,  1065,
7160:      194,     0,   195,     0,   196,   197,   198,   199,   200,   201,
7161:        0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
7162:     1067,   209,   210,     0,   211,   212,   213,     0,   214,   215,
7163:      216,     0,   217,   218,   219,   220,  1068,   222,   223,   224,
7164:      225,   226,   227,   793,  1069,   229,     0,   230,   231,  1070,
7165:      233,     0,   234,     0,   235,   236,     0,   237,   238,   239,
7166:      240,   241,   242,     0,   243,     0,  1071,  1072,   246,   247,
7167:        0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
7168:      257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
7169:      266,     0,   267,   268,   269,   270,   271,   272,   273,   274,
7170:     1073,  1074,     0,  1075,     0,   278,   279,   280,   281,   282,
7171:      283,   284,   285,   286,   287,   288,     0,     0,   289,   290,
7172:      291,   292,     0,   293,   294,   295,   296,   297,   298,   299,
7173:      300,  1076,   302,   303,   304,   305,   306,   307,   308,   309,
7174:      310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
7175:      320,   321,  1077,   323,  1078,   325,   326,   327,   328,     0,
7176:      329,   330,   331,   332,  1080,   795,   334,  1081,   336,   337,
7177:      338,     0,   339,   340,     0,     0,   341,   342,   343,     0,
7178:        0,   344,   345,   346,   347,   348,   349,   797,   351,   352,
7179:      353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
7180:        0,     0,     0,   362,   363,   798,   365,   366,   367,   368,
7181:      369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
7182:        0,   378,   379,   380,   381,   382,  1083,   384,   385,   386,
7183:      387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
7184:      396,   397,   398,   399,   400,     0,   401,   402,   403,   404,
7185:      405,   406,  1084,   408,   409,   410,   411,   412,   413,   414,
7186:      415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
7187:      423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
7188:      432,  1085,   434,     0,   435,   436,   437,   438,   439,   440,
7189:      441,   442,   443,   444,   445,   446,   447,   448,   800,     0,
7190:        0,   450,   451,     0,   452,   453,   454,   455,   456,   457,
7191:      458,     0,   459,  1086,  1087,     0,     0,   462,   463,   801,
7192:      465,   802,  1088,   467,   468,   803,   470,   471,   472,   473,
7193:      474,     0,     0,   475,   476,   477,     0,   478,   479,   480,
7194:      481,     0,   482,   483,   484,   485,   486,   487,  1089,   489,
7195:        0,   490,   491,   492,   493,   494,   495,   496,   497,   498,
7196:        0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
7197:      505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
7198:      515,   516,   517,   518,   519,   520,     0,     0,     0,     0,
7199:        0,     0,   117,  1050,   820,  1051,  1052,  1053,  1054,  1055,
7200:     1094,     0,  1095,     0,     0,     0,     0,  1096,  1097,  1098,
7201:     1099,   118,   119,   120,   121,   122,   123,   124,   125,     0,
7202:      126,   127,   128,     0,     0,     0,     0,     0,  1056,     0,
7203:        0,   129,   130,   131,     0,   132,   133,   134,   135,   136,
7204:      137,   138,     0,  1057,   141,  1058,  1059,     0,   144,   145,
7205:      146,   147,   148,   149,  1060,   790,   150,   151,   152,   153,
7206:     1061,  1062,   156,     0,   157,   158,   159,   160,   791,     0,
7207:      792,     0,  1063,   164,   165,   166,   167,   168,   169,   170,
7208:      171,   172,     0,   173,   174,   175,   176,   177,   178,     0,
7209:      179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
7210:      189,  1064,   191,   192,  1065,   194,  1066,   195,     0,   196,
7211:      197,   198,   199,   200,   201,     0,     0,   202,   203,   204,
7212:      205,     0,     0,   206,   207,  1067,   209,   210,     0,   211,
7213:      212,   213,     0,   214,     0,   216,     0,   217,   218,   219,
7214:      220,  1068,   222,   223,   224,   225,   226,   227,   793,  1069,
7215:      229,     0,   230,   231,  1070,   233,     0,   234,     0,   235,
7216:      236,     0,   237,   238,   239,   240,     0,   242,     0,   243,
7217:        0,  1071,  1072,   246,   247,     0,   248,   249,   250,   251,
7218:      252,   253,   254,     0,   256,   257,   258,   259,     0,   260,
7219:      261,   262,   263,   264,   265,   266,     0,   267,   268,   269,
7220:      270,   271,   272,   273,   274,  1073,  1074,     0,  1075,     0,
7221:      278,     0,     0,   281,   282,   283,   284,   285,   286,   287,
7222:      288,     0,     0,   289,   290,   291,     0,     0,   293,   294,
7223:      295,   296,   297,   298,   299,   300,  1076,   302,   303,   304,
7224:      305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
7225:      315,   316,   317,   318,   319,   320,   321,  1077,   323,  1078,
7226:      325,   326,   327,   328,     0,   329,   330,     0,   332,  1080,
7227:      795,   334,  1081,   336,   337,   338,     0,   339,   340,     0,
7228:        0,  1082,   342,   343,     0,     0,   344,   345,   346,   347,
7229:      348,   349,   797,   351,   352,   353,   354,   355,   356,   357,
7230:      358,   359,   360,   361,     0,     0,     0,     0,   362,   363,
7231:      798,   365,   366,   367,   368,   369,   370,   371,     0,   372,
7232:      373,   374,   375,   376,   377,     0,   378,   379,   380,   381,
7233:      382,  1083,   384,   385,   386,   387,     0,   388,   389,   390,
7234:      391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
7235:        0,   401,   402,   403,   404,   405,   406,  1084,   408,   409,
7236:      410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
7237:      420,     0,     0,   421,   422,   423,   424,   425,   426,   427,
7238:      428,   429,     0,     0,   431,   432,  1085,   434,     0,   435,
7239:      436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
7240:      446,   447,   448,   800,     0,     0,   450,   451,     0,   452,
7241:      453,   454,   455,   456,   457,   458,     0,   459,  1086,  1087,
7242:        0,     0,   462,   463,   801,   465,   802,  1088,   467,   468,
7243:      803,   470,   471,   472,   473,   474,     0,     0,   475,   476,
7244:      477,     0,   478,   479,   480,   481,     0,   482,   483,   484,
7245:      485,   486,   487,  1089,   489,     0,   490,   491,   492,   493,
7246:      494,   495,   496,   497,   498,     0,     0,   499,     0,     0,
7247:      500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
7248:      510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
7249:      520,     0,     0,     0,     0,     0,     0,     0,  1091,  1092,
7250:     1093,     0,   973,  1356,   820,  1094,     0,  1095,  1054,     0,
7251:        0,     0,  1096,  1097,  1098,  1099,     0,     0,     0,     0,
7252:        0,   118,   119,   120,   121,   122,   123,   124,   125,     0,
7253:      126,   127,   128,     0,     0,     0,   565,     0,     0,     0,
7254:        0,   570,   130,   131,     0,   132,   133,   134,   572,   136,
7255:      137,   138,   573,   574,   575,   576,   577,     0,   144,   145,
7256:      146,   147,   148,   149,     0,     0,   150,   151,   152,   153,
7257:      581,   582,   156,     0,   157,   158,   159,   160,   584,     0,
7258:      586,     0,   588,   164,   165,   166,   167,   168,   589,   170,
7259:      171,   172,     0,   173,   174,   175,   176,   177,   178,     0,
7260:      592,   180,   181,   182,   183,   184,   185,   186,   187,   188,
7261:      189,   594,   191,   192,   595,   194,     0,   195,     0,   196,
7262:      197,   198,   199,   200,   201,     0,     0,   202,   203,   204,
7263:      205,     0,     0,   206,   207,   208,   209,   210,     0,   211,
7264:      212,   213,     0,   214,   215,   216,     0,   217,   218,   219,
7265:      220,   605,   222,   223,   224,   225,   226,   227,   606,  1357,
7266:      229,     0,   230,   231,   609,   233,     0,   234,     0,   235,
7267:      612,     0,   614,   238,   239,   615,   616,   242,     0,   243,
7268:        0,   619,   620,   246,   247,     0,   248,   249,   250,   251,
7269:      252,   253,   254,   622,   256,   257,   258,   259,     0,   260,
7270:      261,   262,   263,   264,   265,   266,     0,   267,   625,   626,
7271:      270,   271,   272,   273,   274,   627,   628,     0,   630,     0,
7272:      278,   632,   633,   281,   634,   283,   284,   285,   286,   287,
7273:      288,     0,     0,   289,   637,   291,   638,     0,   293,   294,
7274:      295,   296,   297,   298,   299,   300,  2385,   302,   303,   304,
7275:      305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
7276:      315,   316,   317,   318,   319,   320,   321,   641,   642,   643,
7277:      325,   326,   327,   644,     0,   329,   330,   646,   332,     0,
7278:      648,   334,   649,   336,   337,   338,     0,   339,   340,  1358,
7279:        0,   341,   342,   343,     0,     0,   344,   345,   655,   656,
7280:      348,   657,   658,   351,   352,   353,   354,   355,   356,   357,
7281:      358,   359,   360,   361,     0,     0,     0,     0,   362,   363,
7282:      663,   664,   366,   367,   665,   369,   370,   371,     0,   372,
7283:      373,   374,   375,   376,   377,     0,   378,   379,   380,   381,
7284:      382,   668,   384,   385,   386,   387,     0,   388,   389,   390,
7285:      391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
7286:        0,   401,   402,   671,   404,   405,   406,   672,   408,   409,
7287:      410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
7288:      420,     0,   674,   421,   422,   423,   424,   425,   426,   675,
7289:      428,   429,     0,   677,   431,   432,   678,   434,     0,   435,
7290:      436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
7291:      446,   680,   448,   681,     0,     0,   450,   451,     0,   452,
7292:      685,   454,   455,   456,   457,   458,     0,   459,   687,   688,
7293:        0,     0,   462,   463,   691,   465,   692,  1359,   467,   468,
7294:      694,   470,   471,   472,   473,   474,     0,     0,   475,   476,
7295:      477,     0,   478,   479,   480,   481,     0,   482,   483,   484,
7296:      485,   486,   699,   700,   489,     0,   490,   702,   492,   493,
7297:      494,   495,   496,   497,   498,     0,     0,   499,     0,     0,
7298:      500,   501,   502,   503,   504,   505,   707,   708,   709,   710,
7299:      711,   712,   713,   714,   715,   716,   717,   517,   518,   519,
7300:      520,     0,     0,     0,     0,     0,     0,   117,  1360,  1361,
7301:     2386,     0,     0,     0,  1055,  2387,     0,  2388,     0,     0,
7302:        0,     0,     0,     0,     0,  1099,   118,   119,   120,   121,
7303:      122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
7304:        0,     0,     0,  1056,     0,     0,   129,   130,   131,     0,
7305:      132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
7306:      142,   143,     0,   144,   145,   146,   147,   148,   149,  1060,
7307:      790,   150,   151,   152,   153,   154,   155,   156,     0,   157,
7308:      158,   159,   160,   791,     0,   792,     0,   163,   164,   165,
7309:      166,   167,   168,   169,   170,   171,   172,     0,   173,   174,
7310:      175,   176,   177,   178,     0,   179,   180,   181,   182,   183,
7311:      184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
7312:      194,     0,   195,     0,   196,   197,   198,   199,   200,   201,
7313:        0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
7314:      208,   209,   210,     0,   211,   212,   213,     0,   214,   215,
7315:      216,     0,   217,   218,   219,   220,   221,   222,   223,   224,
7316:      225,   226,   227,   793,     0,   229,     0,   230,   231,   232,
7317:      233,     0,   234,     0,   235,   236,     0,   237,   238,   239,
7318:      240,   241,   242,     0,   243,     0,   244,   245,   246,   247,
7319:        0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
7320:      257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
7321:      266,     0,   267,   268,   269,   270,   271,   272,   273,   274,
7322:      275,   276,     0,   277,     0,   278,   279,   280,   281,   282,
7323:      283,   284,   285,   286,   287,   288,     0,     0,   289,   290,
7324:      291,   292,     0,   293,   294,   295,   296,   297,   298,   299,
7325:      300,  1076,   302,   303,   304,   305,   306,   307,   308,   309,
7326:      310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
7327:      320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
7328:      329,   330,   331,   332,     0,   795,   334,   335,   336,   337,
7329:      338,     0,   339,   340,     0,     0,   341,   342,   343,     0,
7330:        0,   344,   345,   346,   347,   348,   349,   797,   351,   352,
7331:      353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
7332:        0,     0,     0,   362,   363,   798,   365,   366,   367,   368,
7333:      369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
7334:        0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
7335:      387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
7336:      396,   397,   398,   399,   400,     0,   401,   402,   403,   404,
7337:      405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
7338:      415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
7339:      423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
7340:      432,   433,   434,     0,   435,   436,   437,   438,   439,   440,
7341:      441,   442,   443,   444,   445,   446,   447,   448,   800,     0,
7342:        0,   450,   451,     0,   452,   453,   454,   455,   456,   457,
7343:      458,     0,   459,   460,   461,     0,     0,   462,   463,   801,
7344:      465,   802,     0,   467,   468,   803,   470,   471,   472,   473,
7345:      474,     0,     0,   475,   476,   477,     0,   478,   479,   480,
7346:      481,     0,   482,   483,   484,   485,   486,   487,   488,   489,
7347:        0,   490,   491,   492,   493,   494,   495,   496,   497,   498,
7348:        0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
7349:      505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
7350:      515,   516,   517,   518,   519,   520,     0,     0,     0,     0,
7351:        0,     0,   528,     0,     0,     0,     0,     0,     0,     0,
7352:     1094,     0,  2122,     0,     0,     0,     0,  1096,  1097,  1098,
7353:     1099,   118,   119,   120,   121,   122,   123,   124,   125,     0,
7354:      126,   127,   128,     0,     0,     0,     0,     0,     0,  1008,
7355:        0,     0,   130,   131,     0,   132,   133,   134,     0,   136,
7356:      137,   138,   139,   140,     0,   142,   143,     0,   144,   145,
7357:      146,   147,   148,   149,     0,     0,   150,   151,   152,   153,
7358:      154,   155,   156,     0,   157,   158,   159,   160,   161,     0,
7359:        0,     0,   163,   164,   165,   166,   167,   168,     0,   170,
7360:      171,   172,     0,   173,   174,   175,   176,   177,   178,     0,
7361:        0,   180,   181,   182,   183,   184,   185,   186,   187,   188,
7362:      189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
7363:      197,   198,   199,   200,   201,     0,     0,   202,   203,   204,
7364:      205,     0,     0,   206,   207,   208,   209,   210,     0,   211,
7365:      212,   213,     0,   214,   215,   216,  -540,   217,   218,   219,
7366:      220,   221,   222,   223,   224,   225,   226,   227,   228,     0,
7367:      229,  -540,   230,   231,   232,   233,  -540,   234,     0,   235,
7368:        0,     0,     0,   238,   239,   529,     0,   242,     0,   243,
7369:        0,   244,   245,   246,   247,     0,   248,   249,   250,   251,
7370:      252,   253,   254,     0,   256,   257,   258,   259,     0,   260,
7371:      261,   262,   263,   264,   265,   266,     0,   267,     0,   269,
7372:      270,   271,   272,   273,   274,   275,   276,  -540,   277,     0,
7373:      278,     0,     0,   281,     0,   283,   284,   285,   286,   287,
7374:      288,     0,     0,   289,     0,   291,     0,  -540,   293,   294,
7375:      295,   296,   297,   298,   299,   300,   530,   302,   303,   304,
7376:      305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
7377:      315,   316,   317,   318,   319,   320,   321,   322,     0,   324,
7378:      325,   326,   327,   328,     0,   329,   330,     0,   332,     0,
7379:      333,   334,   335,   336,   337,   338,  -540,   339,   340,     0,
7380:        0,   341,   342,   343,     0,  -540,   344,   345,   346,     0,
7381:      348,     0,   350,   351,   352,   353,   354,   355,   356,   357,
7382:      358,   359,   360,   361,     0,     0,     0,     0,   362,   363,
7383:      364,     0,   366,   367,   368,   369,   370,   371,     0,   372,
7384:      373,   374,   375,   376,   377,     0,   378,   379,   380,   381,
7385:      382,   383,   384,   385,   386,   387,     0,   388,   389,   390,
7386:      391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
7387:        0,   401,   402,     0,   404,   405,   406,   407,   408,   409,
7388:      410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
7389:      420,     0,     0,   421,   422,   423,   424,   425,   426,   427,
7390:      428,   429,     0,     0,   431,   432,   433,   434,     0,   435,
7391:      436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
7392:      446,   531,   448,   449,     0,     0,   450,   451,     0,   452,
7393:        0,   454,   455,   456,   457,   458,     0,   459,   460,   461,
7394:        0,     0,   462,   463,   464,   465,   466,     0,   467,   468,
7395:      469,   470,   471,   472,   473,   474,  -540,     0,   475,   476,
7396:      477,     0,   478,   479,   480,   481,     0,   482,   483,   484,
7397:      485,   486,   487,   488,   489,     0,   490,     0,   492,   493,
7398:      494,   495,   496,   497,   498,     0,     0,   499,     0,     0,
7399:      500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
7400:      510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
7401:      520,   528,     0,   554,     0,     0,     0,     0,     0,     0,
7402:        0,     0,     0,     0,     0,     0,     0,     0,  1170,     0,
7403:      118,   119,   120,   121,   122,   123,   124,   125,     0,   126,
7404:      127,   128,     0,     0,     0,     0,     0,     0,     0,     0,
7405:        0,   130,   131,     0,   132,   133,   134,     0,   136,   137,
7406:      138,   139,   140,     0,   142,   143,     0,   144,   145,   146,
7407:      147,   148,   149,     0,     0,   150,   151,   152,   153,   154,
7408:      155,   156,     0,   157,   158,   159,   160,   161,     0,     0,
7409:        0,   163,   164,   165,   166,   167,   168,     0,   170,   171,
7410:      172,     0,   173,   174,   175,   176,   177,   178,     0,     0,
7411:      180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
7412:      190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
7413:      198,   199,   200,   201,     0,     0,   202,   203,   204,   205,
7414:        0,     0,   206,   207,   208,   209,   210,     0,   211,   212,
7415:      213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
7416:      221,   222,   223,   224,   225,   226,   227,   228,     0,   229,
7417:        0,   230,   231,   232,   233,     0,   234,     0,   235,     0,
7418:        0,     0,   238,   239,   529,     0,   242,     0,   243,     0,
7419:      244,   245,   246,   247,     0,   248,   249,   250,   251,   252,
7420:      253,   254,     0,   256,   257,   258,   259,     0,   260,   261,
7421:      262,   263,   264,   265,   266,     0,   267,     0,   269,   270,
7422:      271,   272,   273,   274,   275,   276,     0,   277,     0,   278,
7423:        0,     0,   281,     0,   283,   284,   285,   286,   287,   288,
7424:        0,     0,   289,     0,   291,     0,     0,   293,   294,   295,
7425:      296,   297,   298,   299,   300,   530,   302,   303,   304,   305,
7426:      306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
7427:      316,   317,   318,   319,   320,   321,   322,     0,   324,   325,
7428:      326,   327,   328,     0,   329,   330,     0,   332,     0,   333,
7429:      334,   335,   336,   337,   338,     0,   339,   340,     0,     0,
7430:      341,   342,   343,     0,     0,   344,   345,   346,     0,   348,
7431:        0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
7432:      359,   360,   361,     0,     0,     0,     0,   362,   363,   364,
7433:        0,   366,   367,   368,   369,   370,   371,     0,   372,   373,
7434:      374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
7435:      383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
7436:      392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
7437:      401,   402,     0,   404,   405,   406,   407,   408,   409,   410,
7438:      411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
7439:        0,     0,   421,   422,   423,   424,   425,   426,   427,   428,
7440:      429,     0,     0,   431,   432,   433,   434,     0,   435,   436,
7441:      437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
7442:      531,   448,   449,     0,     0,   450,   451,     0,   452,     0,
7443:      454,   455,   456,   457,   458,     0,   459,   460,   461,     0,
7444:        0,   462,   463,   464,   465,   466,     0,   467,   468,   469,
7445:      470,   471,   472,   473,   474,     0,     0,   475,   476,   477,
7446:        0,   478,   479,   480,   481,     0,   482,   483,   484,   485,
7447:      486,   487,   488,   489,     0,   490,     0,   492,   493,   494,
7448:      495,   496,   497,   498,     0,     0,   499,     0,     0,   500,
7449:      501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
7450:      511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
7451:      973,     0,     0,     0,     0,     0,     0,     0,     0,     0,
7452:        0,     0,     0,     0,     0,     0,  2476,  3273,     0,   118,
7453:      119,   120,   121,   122,   123,   124,   125,     0,   126,   127,
7454:      128,     3,     4,     0,   565,     0,     0,     0,     0,   570,
7455:      130,   131,     0,   132,   133,   134,   572,   136,   137,   138,
7456:      573,   574,   575,   576,   577,     0,   144,   145,   146,   147,
7457:      148,   149,     0,     0,   150,   151,   152,   153,   581,   582,
7458:      156,     0,   157,   158,   159,   160,   584,     0,   586,     0,
7459:      588,   164,   165,   166,   167,   168,   589,   170,   171,   172,
7460:        0,   173,   174,   175,   176,   177,   178,     0,   592,   180,
7461:      181,   182,   183,   184,   185,   186,   187,   188,   189,   594,
7462:      191,   192,   595,   194,     0,   195,     0,   196,   197,   198,
7463:      199,   200,   201,    14,    15,   202,   203,   204,   205,     0,
7464:        0,   206,   207,   208,   209,   210,     0,   211,   212,   213,
7465:        0,   214,   215,   216,     0,   217,   218,   219,   220,   605,
7466:      222,   223,   224,   225,   226,   227,   606,     0,   229,     0,
7467:      230,   231,   609,   233,     0,   234,     0,   235,   612,    23,
7468:      614,   238,   239,   615,   616,   242,     0,   243,     0,   619,
7469:      620,   246,   247,     0,   248,   249,   250,   251,   252,   253,
7470:      254,   622,   256,   257,   258,   259,     0,   260,   261,   262,
7471:      263,   264,   265,   266,     0,   267,   625,   626,   270,   271,
7472:      272,   273,   274,   627,   628,     0,   630,     0,   278,   632,
7473:      633,   281,   634,   283,   284,   285,   286,   287,   288,     0,
7474:        0,   289,   637,   291,   638,     0,   293,   294,   295,   296,
7475:      297,   298,   299,   300,   640,   302,   303,   304,   305,   306,
7476:      307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
7477:      317,   318,   319,   320,   321,   641,   642,   643,   325,   326,
7478:      327,   644,     0,   329,   330,   646,   332,     0,   648,   334,
7479:      649,   336,   337,   338,     0,   339,   340,     0,     0,   341,
7480:      342,   343,     0,     0,   344,   345,   655,   656,   348,   657,
7481:      658,   351,   352,   353,   354,   355,   356,   357,   358,   359,
7482:      360,   361,    26,    27,    28,     0,   362,   363,   663,   664,
7483:      366,   367,   665,   369,   370,   371,     0,   372,   373,   374,
7484:      375,   376,   377,     0,   378,   379,   380,   381,   382,   668,
7485:      384,   385,   386,   387,     0,   388,   389,   390,   391,   392,
7486:      393,   394,   395,   396,   397,   398,   399,   400,     0,   401,
7487:      402,   671,   404,   405,   406,   672,   408,   409,   410,   411,
7488:      412,   413,   414,   415,   416,   417,   418,   419,   420,    33,
7489:      674,   421,   422,   423,   424,   425,   426,   675,   428,   429,
7490:       35,   677,   431,   432,   678,   434,     0,   435,   436,   437,
7491:      438,   439,   440,   441,   442,   443,   444,   445,   446,   680,
7492:      448,   681,    37,     0,   450,   451,    38,   452,   685,   454,
7493:      455,   456,   457,   458,     0,   459,   687,   688,     0,     0,
7494:      462,   463,   691,   465,   692,     0,   467,   468,   694,   470,
7495:      471,   472,   473,   474,     0,     0,   475,   476,   477,    40,
7496:      478,   479,   480,   481,     0,   482,   483,   484,   485,   486,
7497:      974,   700,   489,     0,   490,   702,   492,   493,   494,   495,
7498:      496,   497,   498,     0,     0,   499,     0,    44,   500,   501,
7499:      502,   503,   504,   505,   707,   708,   709,   710,   711,   712,
7500:      713,   714,   715,   716,   717,   517,   518,   519,   520,     0,
7501:      117,    45,   554,     0,     0,     0,     0,     0,     0,     0,
7502:        0,     0,     0,     0,     0,    46,     0,     0,     0,   118,
7503:      119,   120,   121,   122,   123,   124,   125,     0,   126,   127,
7504:      128,     0,     0,     0,     0,     0,     0,     0,     0,   129,
7505:      130,   131,     0,   132,   133,   134,   135,   136,   137,   138,
7506:      139,   140,   141,   142,   143,     0,   144,   145,   146,   147,
7507:      148,   149,     0,   790,   150,   151,   152,   153,   154,   155,
7508:      156,     0,   157,   158,   159,   160,   791,     0,   792,     0,
7509:      163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
7510:        0,   173,   174,   175,   176,   177,   178,     0,   179,   180,
7511:      181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
7512:      191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
7513:      199,   200,   201,    14,    15,   202,   203,   204,   205,     0,
7514:        0,   206,   207,   208,   209,   210,     0,   211,   212,   213,
7515:        0,   214,   215,   216,     0,   217,   218,   219,   220,   221,
7516:      222,   223,   224,   225,   226,   227,   793,     0,   229,     0,
7517:      230,   231,   232,   233,     0,   234,     0,   235,   236,    23,
7518:      237,   238,   239,   240,   241,   242,     0,   243,     0,   244,
7519:      245,   246,   247,     0,   248,   249,   250,   251,   252,   253,
7520:      254,   255,   256,   257,   258,   259,     0,   260,   261,   262,
7521:      263,   264,   265,   266,     0,   267,   268,   269,   270,   271,
7522:      272,   273,   274,   275,   276,     0,   277,     0,   278,   279,
7523:      280,   281,   282,   283,   284,   285,   286,   287,   288,   794,
7524:        0,   289,   290,   291,   292,     0,   293,   294,   295,   296,
7525:      297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
7526:      307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
7527:      317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
7528:      327,   328,     0,   329,   330,   331,   332,     0,   795,   334,
7529:      335,   336,   337,   338,     0,   339,   340,     0,   796,   341,
7530:      342,   343,     0,     0,   344,   345,   346,   347,   348,   349,
7531:      797,   351,   352,   353,   354,   355,   356,   357,   358,   359,
7532:      360,   361,    26,    27,    28,     0,   362,   363,   798,   365,
7533:      366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
7534:      375,   376,   377,     0,   378,   379,   380,   381,   382,   383,
7535:      384,   385,   386,   387,     0,   388,   389,   390,   391,   392,
7536:      393,   394,   395,   396,   397,   398,   399,   400,     0,   401,
7537:      402,   403,   404,   405,   406,   407,   799,   409,   410,   411,
7538:      412,   413,   414,   415,   416,   417,   418,   419,   420,    33,
7539:        0,   421,   422,   423,   424,   425,   426,   427,   428,   429,
7540:       35,   430,   431,   432,   433,   434,     0,   435,   436,   437,
7541:      438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
7542:      448,   800,    37,     0,   450,   451,    38,   452,   453,   454,
7543:      455,   456,   457,   458,     0,   459,   460,   461,     0,     0,
7544:      462,   463,   801,   465,   802,     0,   467,   468,   803,   470,
7545:      471,   472,   473,   474,     0,     0,   475,   476,   477,    40,
7546:      478,   479,   480,   481,     0,   482,   483,   484,   485,   486,
7547:      804,   488,   489,     0,   490,   491,   492,   493,   494,   495,
7548:      496,   497,   498,     0,     0,   499,     0,    44,   500,   501,
7549:      502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
7550:      512,   513,   514,   515,   516,   517,   518,   519,   520,     0,
7551:      117,    45,   554,     0,     0,     0,     0,     0,     0,     0,
7552:        0,     0,     0,     0,     0,   805,     0,     0,     0,   118,
7553:      119,   120,   121,   122,   123,   124,   125,     0,   126,   127,
7554:      128,     0,     0,     0,     0,     0,     0,     0,     0,   129,
7555:      130,   131,     0,   132,   133,   134,   135,   136,   137,   138,
7556:      139,   140,   141,   142,   143,     0,   144,   145,   146,   147,
7557:      148,   149,     0,   790,   150,   151,   152,   153,   154,   155,
7558:      156,     0,   157,   158,   159,   160,   791,     0,   792,     0,
7559:      163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
7560:        0,   173,   174,   175,   176,   177,   178,     0,   179,   180,
7561:      181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
7562:      191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
7563:      199,   200,   201,     0,     0,   202,   203,   204,   205,     0,
7564:        0,   206,   207,   208,   209,   210,     0,   211,   212,   213,
7565:        0,   214,   215,   216,     0,   217,   218,   219,   220,   221,
7566:      222,   223,   224,   225,   226,   227,   793,     0,   229,     0,
7567:      230,   231,   232,   233,     0,   234,     0,   235,   236,     0,
7568:      237,   238,   239,   240,   241,   242,     0,   243,     0,   244,
7569:      245,   246,   247,     0,   248,   249,   250,   251,   252,   253,
7570:      254,   255,   256,   257,   258,   259,     0,   260,   261,   262,
7571:      263,   264,   265,   266,     0,   267,   268,   269,   270,   271,
7572:      272,   273,   274,   275,   276,     0,   277,     0,   278,   279,
7573:      280,   281,   282,   283,   284,   285,   286,   287,   288,   794,
7574:        0,   289,   290,   291,   292,     0,   293,   294,   295,   296,
7575:      297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
7576:      307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
7577:      317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
7578:      327,   328,     0,   329,   330,   331,   332,     0,   795,   334,
7579:      335,   336,   337,   338,     0,   339,   340,     0,   796,   341,
7580:      342,   343,     0,     0,   344,   345,   346,   347,   348,   349,
7581:      797,   351,   352,   353,   354,   355,   356,   357,   358,   359,
7582:      360,   361,     0,     0,     0,     0,   362,   363,   798,   365,
7583:      366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
7584:      375,   376,   377,     0,   378,   379,   380,   381,   382,   383,
7585:      384,   385,   386,   387,     0,   388,   389,   390,   391,   392,
7586:      393,   394,   395,   396,   397,   398,   399,   400,     0,   401,
7587:      402,   403,   404,   405,   406,   407,   799,   409,   410,   411,
7588:      412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
7589:        0,   421,   422,   423,   424,   425,   426,   427,   428,   429,
7590:        0,   430,   431,   432,   433,   434,     0,   435,   436,   437,
7591:      438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
7592:      448,   800,     0,     0,   450,   451,     0,   452,   453,   454,
7593:      455,   456,   457,   458,     0,   459,   460,   461,     0,     0,
7594:      462,   463,   801,   465,   802,     0,   467,   468,   803,   470,
7595:      471,   472,   473,   474,     0,     0,   475,   476,   477,     0,
7596:      478,   479,   480,   481,     0,   482,   483,   484,   485,   486,
7597:      804,   488,   489,     0,   490,   491,   492,   493,   494,   495,
7598:      496,   497,   498,     0,     0,   499,     0,     0,   500,   501,
7599:      502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
7600:      512,   513,   514,   515,   516,   517,   518,   519,   520,   117,
7601:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
7602:        0,     0,     0,     0,     0,   805,     0,     0,   118,   119,
7603:      120,   121,   122,   123,   124,   125,     0,   126,   127,   128,
7604:        0,     0,     0,     0,     0,     0,     0,     0,   129,   130,
7605:      131,     0,   132,   133,   134,   135,   136,   137,   138,   139,
7606:      140,   141,   142,   143,     0,   144,   145,   146,   147,   148,
7607:      149,     0,   790,   150,   151,   152,   153,   154,   155,   156,
7608:        0,   157,   158,   159,   160,   791,     0,   792,     0,   163,
7609:      164,   165,   166,   167,   168,   169,   170,   171,   172,     0,
7610:      173,   174,   175,   176,   177,   178,     0,   179,   180,   181,
7611:      182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
7612:      192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
7613:      200,   201,     0,     0,   202,   203,   204,   205,     0,     0,
7614:      206,   207,   208,   209,   210,     0,   211,   212,   213,     0,
7615:      214,   215,   216,     0,   217,   218,   219,   220,   221,   222,
7616:      223,   224,   225,   226,   227,   793,     0,   229,     0,   230,
7617:      231,   232,   233,     0,   234,     0,   235,   236,     0,   237,
7618:      238,   239,   240,   241,   242,     0,   243,     0,   244,   245,
7619:      246,   247,     0,   248,   249,   250,   251,   252,   253,   254,
7620:      255,   256,   257,   258,   259,     0,   260,   261,   262,   263,
7621:      264,   265,   266,     0,   267,   268,   269,   270,   271,   272,
7622:      273,   274,   275,   276,     0,   277,     0,   278,   279,   280,
7623:      281,   282,   283,   284,   285,   286,   287,   288,     0,     0,
7624:      289,   290,   291,   292,     0,   293,   294,   295,   296,   297,
7625:      298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
7626:      308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
7627:      318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
7628:      328,     0,   329,   330,   331,   332,     0,   795,   334,   335,
7629:      336,   337,   338,     0,   339,   340,     0,     0,   341,   342,
7630:      343,     0,     0,   344,   345,   346,   347,   348,   349,   797,
7631:      351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
7632:      361,     0,     0,     0,     0,   362,   363,   798,   365,   366,
7633:      367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
7634:      376,   377,     0,   378,   379,   380,   381,   382,   383,   384,
7635:      385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
7636:      394,   395,   396,   397,   398,   399,   400,     0,   401,   402,
7637:      403,   404,   405,   406,   407,   799,   409,   410,   411,   412,
7638:      413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
7639:      421,   422,   423,   424,   425,   426,   427,   428,   429,     0,
7640:      430,   431,   432,   433,   434,     0,   435,   436,   437,   438,
7641:      439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
7642:      800,     0,     0,   450,   451,     0,   452,   453,   454,   455,
7643:      456,   457,   458,     0,   459,   460,   461,     0,     0,   462,
7644:      463,   801,   465,   802,     0,   467,   468,   803,   470,   471,
7645:      472,   473,   474,     0,     0,   475,   476,   477,     0,   478,
7646:      479,   480,   481,     0,   482,   483,   484,   485,   486,   487,
7647:      488,   489,     0,   490,   491,   492,   493,   494,   495,   496,
7648:      497,   498,     0,     0,   499,     0,     0,   500,   501,   502,
7649:      503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
7650:      513,   514,   515,   516,   517,   518,   519,   520,   117,     0,
7651:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
7652:        0,     0,     0,     0,    46,     0,     0,   118,   119,   120,
7653:      121,   122,   123,   124,   125,     0,   126,   127,   128,     0,
7654:        0,     0,     0,     0,     0,     0,     0,   129,   130,   131,
7655:        0,   132,   133,   134,   135,   136,   137,   138,   139,   140,
7656:      141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
7657:        0,   790,   150,   151,   152,   153,   154,   155,   156,     0,
7658:      157,   158,   159,   160,   791,     0,   792,     0,   163,   164,
7659:      165,   166,   167,   168,   169,   170,   171,   172,     0,   173,
7660:      174,   175,   176,   177,   178,     0,   179,   180,   181,   182,
7661:      183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
7662:      193,   194,     0,   195,     0,   196,   197,   198,   199,   200,
7663:      201,     0,     0,   202,   203,   204,   205,     0,     0,   206,
7664:      207,   208,   209,   210,     0,   211,   212,   213,     0,   214,
7665:      215,   216,     0,   217,   218,   219,   220,   221,   222,   223,
7666:      224,   225,   226,   227,   793,     0,   229,     0,   230,   231,
7667:      232,   233,     0,   234,     0,   235,   236,     0,   237,   238,
7668:      239,   240,   241,   242,     0,   243,     0,   244,   245,   246,
7669:      247,     0,   248,   249,   250,   251,   252,   253,   254,   255,
7670:      256,   257,   258,   259,     0,   260,   261,   262,   263,   264,
7671:      265,   266,     0,   267,   268,   269,   270,   271,   272,   273,
7672:      274,   275,   276,     0,   277,     0,   278,   279,   280,   281,
7673:      282,   283,   284,   285,   286,   287,   288,     0,     0,   289,
7674:      290,   291,   292,     0,   293,   294,   295,   296,   297,   298,
7675:      299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
7676:      309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
7677:      319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
7678:        0,   329,   330,   331,   332,     0,   795,   334,   335,   336,
7679:      337,   338,     0,   339,   340,     0,     0,   341,   342,   343,
7680:        0,     0,   344,   345,   346,   347,   348,   349,   797,   351,
7681:      352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
7682:        0,     0,     0,     0,   362,   363,   798,   365,   366,   367,
7683:      368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
7684:      377,     0,   378,   379,   380,   381,   382,   383,   384,   385,
7685:      386,   387,     0,   388,   389,   390,   391,   392,   393,   394,
7686:      395,   396,   397,   398,   399,   400,     0,   401,   402,   403,
7687:      404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
7688:      414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
7689:      422,   423,   424,   425,   426,   427,   428,   429,     0,   430,
7690:      431,   432,   433,   434,     0,   435,   436,   437,   438,   439,
7691:      440,   441,   442,   443,   444,   445,   446,   447,   448,   800,
7692:        0,     0,   450,   451,     0,   452,   453,   454,   455,   456,
7693:      457,   458,     0,   459,   460,   461,     0,     0,   462,   463,
7694:      801,   465,   802,     0,   467,   468,   803,   470,   471,   472,
7695:      473,   474,     0,     0,   475,   476,   477,     0,   478,   479,
7696:      480,   481,     0,   482,   483,   484,   485,   486,   487,   488,
7697:      489,     0,   490,   491,   492,   493,   494,   495,   496,   497,
7698:      498,     0,     0,   499,     0,     0,   500,   501,   502,   503,
7699:      504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
7700:      514,   515,   516,   517,   518,   519,   520,   528,     0,     0,
7701:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
7702:        0,     0,     0,  3359,     0,     0,   118,   119,   120,   121,
7703:      122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
7704:        0,     0,     0,     0,     0,     0,     0,   130,   131,     0,
7705:      132,   133,   134,     0,   136,   137,   138,   139,   140,     0,
7706:      142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
7707:        0,   150,   151,   152,   153,   154,   155,   156,     0,   157,
7708:      158,   159,   160,   161,     0,     0,     0,   163,   164,   165,
7709:      166,   167,   168,     0,   170,   171,   172,     0,   173,   174,
7710:      175,   176,   177,   178,     0,     0,   180,   181,   182,   183,
7711:      184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
7712:      194,     0,   195,     0,   196,   197,   198,   199,   200,   201,
7713:       14,    15,   202,   203,   204,   205,     0,     0,   206,   207,
7714:      208,   209,   210,     0,   211,   212,   213,     0,   214,   215,
7715:      216,     0,   217,   218,   219,   220,   221,   222,   223,   224,
7716:      225,   226,   227,   228,     0,   229,     0,   230,   231,   232,
7717:      233,     0,   234,     0,   235,     0,    23,     0,   238,   239,
7718:      529,     0,   242,     0,   243,     0,   244,   245,   246,   247,
7719:        0,   248,   249,   250,   251,   252,   253,   254,     0,   256,
7720:      257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
7721:      266,     0,   267,     0,   269,   270,   271,   272,   273,   274,
7722:      275,   276,     0,   277,     0,   278,     0,     0,   281,     0,
7723:      283,   284,   285,   286,   287,   288,     0,     0,   289,     0,
7724:      291,     0,     0,   293,   294,   295,   296,   297,   298,   299,
7725:      300,   530,   302,   303,   304,   305,   306,   307,   308,   309,
7726:      310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
7727:      320,   321,   322,     0,   324,   325,   326,   327,   328,     0,
7728:      329,   330,     0,   332,     0,   333,   334,   335,   336,   337,
7729:      338,     0,   339,   340,     0,     0,   341,   342,   343,     0,
7730:        0,   344,   345,   346,     0,   348,     0,   350,   351,   352,
7731:      353,   354,   355,   356,   357,   358,   359,   360,   361,    26,
7732:       27,    28,     0,   362,   363,   364,     0,   366,   367,   368,
7733:      369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
7734:        0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
7735:      387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
7736:      396,   397,   398,   399,   400,     0,   401,   402,     0,   404,
7737:      405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
7738:      415,   416,   417,   418,   419,   420,    33,     0,   421,   422,
7739:      423,   424,   425,   426,   427,   428,   429,    35,     0,   431,
7740:      432,   433,   434,     0,   435,   436,   437,   438,   439,   440,
7741:      441,   442,   443,   444,   445,   446,   531,   448,   449,    37,
7742:        0,   450,   451,    38,   452,     0,   454,   455,   456,   457,
7743:      458,     0,   459,   460,   461,     0,     0,   462,   463,   464,
7744:      465,   466,     0,   467,   468,   469,   470,   471,   472,   473,
7745:      474,     0,     0,   475,   476,   477,    40,   478,   479,   480,
7746:      481,     0,   482,   483,   484,   485,   486,   804,   488,   489,
7747:        0,   490,     0,   492,   493,   494,   495,   496,   497,   498,
7748:        0,     0,   499,     0,    44,   500,   501,   502,   503,   504,
7749:      505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
7750:      515,   516,   517,   518,   519,   520,   528,     0,    45,     0,
7751:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
7752:        0,     0,    46,     0,     0,   118,   119,   120,   121,   122,
7753:      123,   124,   125,   893,   126,   127,   128,     0,     0,     0,
7754:        0,     0,     0,     0,     0,     0,   130,   131,     0,   132,
7755:      133,   134,     0,   136,   137,   138,   139,   140,     0,   142,
7756:      143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
7757:      150,   151,   152,   153,   154,   155,   156,     0,   157,   158,
7758:      159,   160,   161,     0,     0,     0,   163,   164,   165,   166,
7759:      167,   168,     0,   170,   171,   172,     0,   173,   174,   175,
7760:      176,   177,   178,     0,     0,   180,   181,   182,   183,   184,
7761:      185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
7762:        0,   195,     0,   196,   197,   198,   199,   200,   201,     0,
7763:        0,   202,   203,   204,   205,     0,     0,   206,   207,   208,
7764:      209,   210,     0,   211,   212,   213,     0,   214,   215,   216,
7765:        0,   217,   218,   219,   220,   221,   222,   223,   224,   225,
7766:      226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
7767:        0,   234,     0,   235,     0,    23,     0,   238,   239,   529,
7768:        0,   242,     0,   243,     0,   244,   245,   246,   247,     0,
7769:      248,   249,   250,   251,   252,   253,   254,     0,   256,   257,
7770:      258,   259,     0,   260,   261,   262,   263,   264,   265,   266,
7771:        0,   267,     0,   269,   270,   271,   272,   273,   274,   275,
7772:      276,     0,   277,     0,   278,     0,     0,   281,     0,   283,
7773:      284,   285,   286,   287,   288,     0,     0,   289,     0,   291,
7774:        0,     0,   293,   294,   295,   296,   297,   298,   299,   300,
7775:      530,   302,   303,   304,   305,   306,   307,   308,   309,   310,
7776:      311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
7777:      321,   322,     0,   324,   325,   326,   327,   328,     0,   329,
7778:      330,     0,   332,     0,   333,   334,   335,   336,   337,   338,
7779:        0,   339,   340,     0,     0,   341,   342,   343,     0,     0,
7780:      344,   345,   346,     0,   348,     0,   350,   351,   352,   353,
7781:      354,   355,   356,   357,   358,   359,   360,   361,    26,    27,
7782:       28,     0,   362,   363,   364,     0,   366,   367,   368,   369,
7783:      370,   371,     0,   372,   373,   374,   375,   376,   377,     0,
7784:      378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
7785:        0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
7786:      397,   398,   399,   400,     0,   401,   402,     0,   404,   405,
7787:      406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
7788:      416,   417,   418,   419,   420,    33,     0,   421,   422,   423,
7789:      424,   425,   426,   427,   428,   429,     0,     0,   431,   432,
7790:      433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
7791:      442,   443,   444,   445,   446,   531,   448,   449,     0,     0,
7792:      450,   451,    38,   452,     0,   454,   455,   456,   457,   458,
7793:        0,   459,   894,   461,     0,     0,   895,   463,   464,   465,
7794:      466,     0,   467,   468,   469,   470,   471,   472,   473,   474,
7795:        0,     0,   475,   476,   477,    40,   478,   479,   480,   481,
7796:        0,   482,   483,   484,   485,   486,   804,   488,   489,     0,
7797:      490,     0,   492,   493,   494,   495,   496,   497,   498,     0,
7798:        0,   499,     0,    44,   500,   501,   502,   503,   504,   505,
7799:      506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
7800:      516,   517,   518,   519,   520,   528,     0,    45,     0,     0,
7801:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
7802:        0,    46,     0,     0,   118,   119,   120,   121,   122,   123,
7803:      124,   125,     0,   126,   127,   128,     0,     0,     0,     0,
7804:        0,     0,     0,     0,     0,   130,   131,     0,   132,   133,
7805:      134,     0,   136,   137,   138,   139,   140,     0,   142,   143,
7806:        0,   144,   145,   146,   147,   148,   149,     0,     0,   150,
7807:      151,   152,   153,   154,   155,   156,     0,   157,   158,   159,
7808:      160,   161,     0,     0,     0,   163,   164,   165,   166,   167,
7809:      168,     0,   170,   171,   172,     0,   173,   174,   175,   176,
7810:      177,   178,     0,     0,   180,   181,   182,   183,   184,   185,
7811:      186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
7812:      195,     0,   196,   197,   198,   199,   200,   201,     0,     0,
7813:      202,   203,   204,   205,     0,     0,   206,   207,   208,   209,
7814:      210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
7815:      217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
7816:      227,   228,     0,   229,     0,   230,   231,   232,   233,     0,
7817:      234,     0,   235,     0,    23,     0,   238,   239,   529,     0,
7818:      242,     0,   243,     0,   244,   245,   246,   247,     0,   248,
7819:      249,   250,   251,   252,   253,   254,     0,   256,   257,   258,
7820:      259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
7821:      267,     0,   269,   270,   271,   272,   273,   274,   275,   276,
7822:        0,   277,     0,   278,     0,     0,   281,     0,   283,   284,
7823:      285,   286,   287,   288,     0,     0,   289,     0,   291,     0,
7824:        0,   293,   294,   295,   296,   297,   298,   299,   300,   530,
7825:      302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
7826:      312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
7827:      322,     0,   324,   325,   326,   327,   328,     0,   329,   330,
7828:        0,   332,     0,   333,   334,   335,   336,   337,   338,     0,
7829:      339,   340,     0,     0,   341,   342,   343,     0,     0,   344,
7830:      345,   346,     0,   348,     0,   350,   351,   352,   353,   354,
7831:      355,   356,   357,   358,   359,   360,   361,    26,    27,    28,
7832:        0,   362,   363,   364,     0,   366,   367,   368,   369,   370,
7833:      371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
7834:      379,   380,   381,   382,   383,   384,   385,   386,   387,     0,
7835:      388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
7836:      398,   399,   400,     0,   401,   402,     0,   404,   405,   406,
7837:      407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
7838:      417,   418,   419,   420,    33,     0,   421,   422,   423,   424,
7839:      425,   426,   427,   428,   429,     0,     0,   431,   432,   433,
7840:      434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
7841:      443,   444,   445,   446,   531,   448,   449,     0,     0,   450,
7842:      451,    38,   452,     0,   454,   455,   456,   457,   458,     0,
7843:      459,   460,   461,     0,     0,   462,   463,   464,   465,   466,
7844:        0,   467,   468,   469,   470,   471,   472,   473,   474,     0,
7845:        0,   475,   476,   477,    40,   478,   479,   480,   481,     0,
7846:      482,   483,   484,   485,   486,   804,   488,   489,     0,   490,
7847:        0,   492,   493,   494,   495,   496,   497,   498,     0,     0,
7848:      499,     0,    44,   500,   501,   502,   503,   504,   505,   506,
7849:      507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
7850:      517,   518,   519,   520,     0,   528,    45,   554,     0,     0,
7851:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
7852:       46,     0,     0,     0,   118,   119,   120,   121,   122,   123,
7853:      124,   125,     0,   126,   127,   128,     0,     0,     0,     0,
7854:        0,     0,     0,     0,     0,   130,   131,     0,   132,   133,
7855:      134,     0,   136,   137,   138,   139,   140,     0,   142,   143,
7856:        0,   144,   145,   146,   147,   148,   149,     0,     0,   150,
7857:      151,   152,   153,   154,   155,   156,     0,   157,   158,   159,
7858:      160,   161,     0,     0,     0,   163,   164,   165,   166,   167,
7859:      168,     0,   170,   171,   172,     0,   173,   174,   175,   176,
7860:      177,   178,     0,     0,   180,   181,   182,   183,   184,   185,
7861:      186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
7862:      195,     0,   196,   197,   198,   199,   200,   201,     0,     0,
7863:      202,   203,   204,   205,     0,     0,   206,   207,   208,   209,
7864:      210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
7865:      217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
7866:      227,   228,     0,   229,     0,   230,   231,   232,   233,     0,
7867:      234,     0,   235,     0,     0,     0,   238,   239,   529,     0,
7868:      242,     0,   243,     0,   244,   245,   246,   247,     0,   248,
7869:      249,   250,   251,   252,   253,   254,     0,   256,   257,   258,
7870:      259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
7871:      267,     0,   269,   270,   271,   272,   273,   274,   275,   276,
7872:        0,   277,     0,   278,     0,     0,   281,     0,   283,   284,
7873:      285,   286,   287,   288,     0,     0,   289,     0,   291,     0,
7874:        0,   293,   294,   295,   296,   297,   298,   299,   300,   530,
7875:      302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
7876:      312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
7877:      322,     0,   324,   325,   326,   327,   328,     0,   329,   330,
7878:        0,   332,     0,   333,   334,   335,   336,   337,   338,     0,
7879:      339,   340,     0,     0,   341,   342,   343,     0,     0,   344,
7880:      345,   346,     0,   348,     0,   350,   351,   352,   353,   354,
7881:      355,   356,   357,   358,   359,   360,   361,     0,     0,     0,
7882:        0,   362,   363,   364,     0,   366,   367,   368,   369,   370,
7883:      371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
7884:      379,   380,   381,   382,   383,   384,   385,   386,   387,     0,
7885:      388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
7886:      398,   399,   400,     0,   401,   402,     0,   404,   405,   406,
7887:      407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
7888:      417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
7889:      425,   426,   427,   428,   429,     0,     0,   431,   432,   433,
7890:      434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
7891:      443,   444,   445,   446,   531,   448,   449,     0,     0,   450,
7892:      451,     0,   452,     0,   454,   455,   456,   457,   458,     0,
7893:      459,   460,   461,     0,     0,   462,   463,   464,   465,   466,
7894:        0,   467,   468,   469,   470,   471,   472,   473,   474,     0,
7895:        0,   475,   476,   477,     0,   478,   479,   480,   481,     0,
7896:      482,   483,   484,   485,   486,   487,   488,   489,     0,   490,
7897:        0,   492,   493,   494,   495,   496,   497,   498,     0,     0,
7898:      499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
7899:      507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
7900:      517,   518,   519,   520,   528,     0,   554,     0,     0,     0,
7901:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
7902:      993,     0,     0,   118,   119,   120,   121,   122,   123,   124,
7903:      125,     0,   126,   127,   128,     0,     0,     0,     0,     0,
7904:        0,     0,     0,     0,   130,   131,     0,   132,   133,   134,
7905:        0,   136,   137,   138,   139,   140,     0,   142,   143,     0,
7906:      144,   145,   146,   147,   148,   149,     0,     0,   150,   151,
7907:      152,   153,   154,   155,   156,     0,   157,   158,   159,   160,
7908:      161,     0,     0,     0,   163,   164,   165,   166,   167,   168,
7909:        0,   170,   171,   172,     0,   173,   174,   175,   176,   177,
7910:      178,     0,     0,   180,   181,   182,   183,   184,   185,   186,
7911:      187,   188,   189,   190,   191,   192,   193,   194,     0,   195,
7912:        0,   196,   197,   198,   199,   200,   201,     0,     0,   202,
7913:      203,   204,   205,     0,     0,   206,   207,   208,   209,   210,
7914:        0,   211,   212,   213,     0,   214,   215,   216,     0,   217,
7915:      218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
7916:      228,     0,   229,     0,   230,   231,   232,   233,     0,   234,
7917:        0,   235,     0,     0,     0,   238,   239,   529,     0,   242,
7918:        0,   243,     0,   244,   245,   246,   247,     0,   248,   249,
7919:      250,   251,   252,   253,   254,     0,   256,   257,   258,   259,
7920:        0,   260,   261,   262,   263,   264,   265,   266,     0,   267,
7921:        0,   269,   270,   271,   272,   273,   274,   275,   276,     0,
7922:      277,     0,   278,     0,     0,   281,     0,   283,   284,   285,
7923:      286,   287,   288,     0,     0,   289,     0,   291,     0,     0,
7924:      293,   294,   295,   296,   297,   298,   299,   300,   530,   302,
7925:      303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
7926:      313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
7927:        0,   324,   325,   326,   327,   328,     0,   329,   330,     0,
7928:      332,     0,   333,   334,   335,   336,   337,   338,     0,   339,
7929:      340,     0,     0,   341,   342,   343,     0,     0,   344,   345,
7930:      346,     0,   348,     0,   350,   351,   352,   353,   354,   355,
7931:      356,   357,   358,   359,   360,   361,     0,     0,     0,     0,
7932:      362,   363,   364,     0,   366,   367,   368,   369,   370,   371,
7933:        0,   372,   373,   374,   375,   376,   377,     0,   378,   379,
7934:      380,   381,   382,   383,   384,   385,   386,   387,     0,   388,
7935:      389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
7936:      399,   400,     0,   401,   402,     0,   404,   405,   406,   407,
7937:      408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
7938:      418,   419,   420,     0,     0,   421,   422,   423,   424,   425,
7939:      426,   427,   428,   429,     0,     0,   431,   432,   433,   434,
7940:        0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
7941:      444,   445,   446,   531,   448,   449,     0,     0,   450,   451,
7942:        0,   452,     0,   454,   455,   456,   457,   458,     0,   459,
7943:      460,   461,     0,     0,   462,   463,   464,   465,   466,     0,
7944:      467,   468,   469,   470,   471,   472,   473,   474,     0,     0,
7945:      475,   476,   477,     0,   478,   479,   480,   481,     0,   482,
7946:      483,   484,   485,   486,   487,   488,   489,     0,   490,     0,
7947:      492,   493,   494,   495,   496,   497,   498,     0,     0,   499,
7948:        0,     0,   500,   501,   502,   503,   504,   505,   506,   507,
7949:      508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
7950:      518,   519,   520,   528,     0,   554,     0,     0,     0,     0,
7951:        0,     0,     0,     0,     0,     0,     0,     0,     0,  1481,
7952:        0,     0,   118,   119,   120,   121,   122,   123,   124,   125,
7953:        0,   126,   127,   128,     0,     0,     0,     0,     0,     0,
7954:        0,     0,     0,   130,   131,     0,   132,   133,   134,     0,
7955:      136,   137,   138,   139,   140,     0,   142,   143,     0,   144,
7956:      145,   146,   147,   148,   149,     0,     0,   150,   151,   152,
7957:      153,   154,   155,   156,     0,   157,   158,   159,   160,   161,
7958:        0,     0,     0,   163,   164,   165,   166,   167,   168,     0,
7959:      170,   171,   172,     0,   173,   174,   175,   176,   177,   178,
7960:        0,     0,   180,   181,   182,   183,   184,   185,   186,   187,
7961:      188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
7962:      196,   197,   198,   199,   200,   201,     0,     0,   202,   203,
7963:      204,   205,     0,     0,   206,   207,   208,   209,   210,     0,
7964:      211,   212,   213,     0,   214,   215,   216,     0,   217,   218,
7965:      219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
7966:        0,   229,     0,   230,   231,   232,   233,     0,   234,     0,
7967:      235,     0,     0,     0,   238,   239,   529,     0,   242,     0,
7968:      243,     0,   244,   245,   246,   247,     0,   248,   249,   250,
7969:      251,   252,   253,   254,     0,   256,   257,   258,   259,     0,
7970:      260,   261,   262,   263,   264,   265,   266,     0,   267,     0,
7971:      269,   270,   271,   272,   273,   274,   275,   276,     0,   277,
7972:        0,   278,     0,     0,   281,     0,   283,   284,   285,   286,
7973:      287,   288,     0,     0,   289,     0,   291,     0,     0,   293,
7974:      294,   295,   296,   297,   298,   299,   300,   530,   302,   303,
7975:      304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
7976:      314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
7977:      324,   325,   326,   327,   328,     0,   329,   330,     0,   332,
7978:        0,   333,   334,   335,   336,   337,   338,     0,   339,   340,
7979:        0,     0,   341,   342,   343,     0,     0,   344,   345,   346,
7980:        0,   348,     0,   350,   351,   352,   353,   354,   355,   356,
7981:      357,   358,   359,   360,   361,     0,     0,     0,     0,   362,
7982:      363,   364,     0,   366,   367,   368,   369,   370,   371,     0,
7983:      372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
7984:      381,   382,   383,   384,   385,   386,   387,     0,   388,   389,
7985:      390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
7986:      400,     0,   401,   402,     0,   404,   405,   406,   407,   408,
7987:      409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
7988:      419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
7989:      427,   428,   429,     0,     0,   431,   432,   433,   434,     0,
7990:      435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
7991:      445,   446,   531,   448,   449,     0,     0,   450,   451,     0,
7992:      452,     0,   454,   455,   456,   457,   458,     0,   459,   460,
7993:      461,     0,     0,   462,   463,   464,   465,   466,     0,   467,
7994:      468,   469,   470,   471,   472,   473,   474,     0,     0,   475,
7995:      476,   477,     0,   478,   479,   480,   481,     0,   482,   483,
7996:      484,   485,   486,   487,   488,   489,     0,   490,     0,   492,
7997:      493,   494,   495,   496,   497,   498,     0,     0,   499,     0,
7998:        0,   500,   501,   502,   503,   504,   505,   506,   507,   508,
7999:      509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
8000:      519,   520,   528,     0,   554,     0,     0,     0,     0,     0,
8001:        0,     0,     0,     0,     0,     0,     0,     0,  2230,     0,
8002:        0,   118,   119,   120,   121,   122,   123,   124,   125,     0,
8003:      126,   127,   128,     0,     0,     0,     0,     0,     0,     0,
8004:        0,     0,   130,   131,     0,   132,   133,   134,     0,   136,
8005:      137,   138,   139,   140,     0,   142,   143,     0,   144,   145,
8006:      146,   147,   148,   149,     0,     0,   150,   151,   152,   153,
8007:      154,   155,   156,     0,   157,   158,   159,   160,   161,     0,
8008:        0,     0,   163,   164,   165,   166,   167,   168,     0,   170,
8009:      171,   172,     0,   173,   174,   175,   176,   177,   178,     0,
8010:        0,   180,   181,   182,   183,   184,   185,   186,   187,   188,
8011:      189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
8012:      197,   198,   199,   200,   201,     0,     0,   202,   203,   204,
8013:      205,     0,     0,   206,   207,   208,   209,   210,     0,   211,
8014:      212,   213,     0,   214,   215,   216,     0,   217,   218,   219,
8015:      220,   221,   222,   223,   224,   225,   226,   227,   228,     0,
8016:      229,     0,   230,   231,   232,   233,     0,   234,     0,   235,
8017:        0,     0,     0,   238,   239,   529,     0,   242,     0,   243,
8018:        0,   244,   245,   246,   247,     0,   248,   249,   250,   251,
8019:      252,   253,   254,     0,   256,   257,   258,   259,     0,   260,
8020:      261,   262,   263,   264,   265,   266,     0,   267,     0,   269,
8021:      270,   271,   272,   273,   274,   275,   276,     0,   277,     0,
8022:      278,     0,     0,   281,     0,   283,   284,   285,   286,   287,
8023:      288,     0,     0,   289,     0,   291,     0,     0,   293,   294,
8024:      295,   296,   297,   298,   299,   300,   530,   302,   303,   304,
8025:      305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
8026:      315,   316,   317,   318,   319,   320,   321,   322,     0,   324,
8027:      325,   326,   327,   328,     0,   329,   330,     0,   332,     0,
8028:      333,   334,   335,   336,   337,   338,     0,   339,   340,     0,
8029:        0,   341,   342,   343,     0,     0,   344,   345,   346,     0,
8030:      348,     0,   350,   351,   352,   353,   354,   355,   356,   357,
8031:      358,   359,   360,   361,     0,     0,     0,     0,   362,   363,
8032:      364,     0,   366,   367,   368,   369,   370,   371,     0,   372,
8033:      373,   374,   375,   376,   377,     0,   378,   379,   380,   381,
8034:      382,   383,   384,   385,   386,   387,     0,   388,   389,   390,
8035:      391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
8036:        0,   401,   402,     0,   404,   405,   406,   407,   408,   409,
8037:      410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
8038:      420,     0,     0,   421,   422,   423,   424,   425,   426,   427,
8039:      428,   429,     0,     0,   431,   432,   433,   434,     0,   435,
8040:      436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
8041:      446,   531,   448,   449,     0,     0,   450,   451,     0,   452,
8042:        0,   454,   455,   456,   457,   458,     0,   459,   460,   461,
8043:        0,     0,   462,   463,   464,   465,   466,     0,   467,   468,
8044:      469,   470,   471,   472,   473,   474,     0,     0,   475,   476,
8045:      477,     0,   478,   479,   480,   481,     0,   482,   483,   484,
8046:      485,   486,   487,   488,   489,     0,   490,     0,   492,   493,
8047:      494,   495,   496,   497,   498,     0,     0,   499,     0,     0,
8048:      500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
8049:      510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
8050:      520,   528,     0,   554,     0,     0,     0,     0,     0,     0,
8051:        0,     0,     0,     0,     0,     0,     0,  2476,     0,     0,
8052:      118,   119,   120,   121,   122,   123,   124,   125,     0,   126,
8053:      127,   128,     0,     0,     0,     0,     0,     0,     0,     0,
8054:        0,   130,   131,     0,   132,   133,   134,     0,   136,   137,
8055:      138,   139,   140,     0,   142,   143,     0,   144,   145,   146,
8056:      147,   148,   149,     0,     0,   150,   151,   152,   153,   154,
8057:      155,   156,     0,   157,   158,   159,   160,   161,     0,     0,
8058:        0,   163,   164,   165,   166,   167,   168,     0,   170,   171,
8059:      172,     0,   173,   174,   175,   176,   177,   178,     0,     0,
8060:      180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
8061:      190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
8062:      198,   199,   200,   201,     0,     0,   202,   203,   204,   205,
8063:        0,     0,   206,   207,   208,   209,   210,     0,   211,   212,
8064:      213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
8065:      221,   222,   223,   224,   225,   226,   227,   228,     0,   229,
8066:        0,   230,   231,   232,   233,     0,   234,     0,   235,     0,
8067:        0,     0,   238,   239,   529,     0,   242,     0,   243,     0,
8068:      244,   245,   246,   247,     0,   248,   249,   250,   251,   252,
8069:      253,   254,     0,   256,   257,   258,   259,     0,   260,   261,
8070:      262,   263,   264,   265,   266,     0,   267,     0,   269,   270,
8071:      271,   272,   273,   274,   275,   276,     0,   277,     0,   278,
8072:        0,     0,   281,     0,   283,   284,   285,   286,   287,   288,
8073:        0,     0,   289,     0,   291,     0,     0,   293,   294,   295,
8074:      296,   297,   298,   299,   300,   530,   302,   303,   304,   305,
8075:      306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
8076:      316,   317,   318,   319,   320,   321,   322,     0,   324,   325,
8077:      326,   327,   328,     0,   329,   330,     0,   332,     0,   333,
8078:      334,   335,   336,   337,   338,     0,   339,   340,     0,     0,
8079:      341,   342,   343,     0,     0,   344,   345,   346,     0,   348,
8080:        0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
8081:      359,   360,   361,     0,     0,     0,     0,   362,   363,   364,
8082:        0,   366,   367,   368,   369,   370,   371,     0,   372,   373,
8083:      374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
8084:      383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
8085:      392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
8086:      401,   402,     0,   404,   405,   406,   407,   408,   409,   410,
8087:      411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
8088:        0,     0,   421,   422,   423,   424,   425,   426,   427,   428,
8089:      429,     0,     0,   431,   432,   433,   434,     0,   435,   436,
8090:      437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
8091:      531,   448,   449,     0,     0,   450,   451,     0,   452,     0,
8092:      454,   455,   456,   457,   458,     0,   459,   460,   461,     0,
8093:        0,   462,   463,   464,   465,   466,     0,   467,   468,   469,
8094:      470,   471,   472,   473,   474,     0,     0,   475,   476,   477,
8095:        0,   478,   479,   480,   481,     0,   482,   483,   484,   485,
8096:      486,   487,   488,   489,     0,   490,     0,   492,   493,   494,
8097:      495,   496,   497,   498,     0,     0,   499,     0,     0,   500,
8098:      501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
8099:      511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
8100:      528,     0,   554,     0,     0,     0,     0,     0,     0,     0,
8101:        0,     0,     0,     0,     0,     0,  2612,     0,     0,   118,
8102:      119,   120,   121,   122,   123,   124,   125,     0,   126,   127,
8103:      128,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8104:      130,   131,     0,   132,   133,   134,     0,   136,   137,   138,
8105:      139,   140,     0,   142,   143,     0,   144,   145,   146,   147,
8106:      148,   149,     0,     0,   150,   151,   152,   153,   154,   155,
8107:      156,     0,   157,   158,   159,   160,   161,     0,     0,     0,
8108:      163,   164,   165,   166,   167,   168,     0,   170,   171,   172,
8109:        0,   173,   174,   175,   176,   177,   178,     0,     0,   180,
8110:      181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
8111:      191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
8112:      199,   200,   201,     0,     0,   202,   203,   204,   205,     0,
8113:        0,   206,   207,   208,   209,   210,     0,   211,   212,   213,
8114:        0,   214,   215,   216,     0,   217,   218,   219,   220,   221,
8115:      222,   223,   224,   225,   226,   227,   228,     0,   229,     0,
8116:      230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
8117:        0,   238,   239,   529,     0,   242,     0,   243,     0,   244,
8118:      245,   246,   247,     0,   248,   249,   250,   251,   252,   253,
8119:      254,     0,   256,   257,   258,   259,     0,   260,   261,   262,
8120:      263,   264,   265,   266,     0,   267,     0,   269,   270,   271,
8121:      272,   273,   274,   275,   276,     0,   277,     0,   278,     0,
8122:        0,   281,     0,   283,   284,   285,   286,   287,   288,     0,
8123:        0,   289,     0,   291,     0,     0,   293,   294,   295,   296,
8124:      297,   298,   299,   300,   530,   302,   303,   304,   305,   306,
8125:      307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
8126:      317,   318,   319,   320,   321,   322,     0,   324,   325,   326,
8127:      327,   328,     0,   329,   330,     0,   332,     0,   333,   334,
8128:      335,   336,   337,   338,     0,   339,   340,     0,     0,   341,
8129:      342,   343,     0,     0,   344,   345,   346,     0,   348,     0,
8130:      350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
8131:      360,   361,     0,     0,     0,     0,   362,   363,   364,     0,
8132:      366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
8133:      375,   376,   377,     0,   378,   379,   380,   381,   382,   383,
8134:      384,   385,   386,   387,     0,   388,   389,   390,   391,   392,
8135:      393,   394,   395,   396,   397,   398,   399,   400,     0,   401,
8136:      402,     0,   404,   405,   406,   407,   408,   409,   410,   411,
8137:      412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
8138:        0,   421,   422,   423,   424,   425,   426,   427,   428,   429,
8139:        0,     0,   431,   432,   433,   434,     0,   435,   436,   437,
8140:      438,   439,   440,   441,   442,   443,   444,   445,   446,   531,
8141:      448,   449,     0,     0,   450,   451,     0,   452,     0,   454,
8142:      455,   456,   457,   458,     0,   459,   460,   461,     0,     0,
8143:      462,   463,   464,   465,   466,     0,   467,   468,   469,   470,
8144:      471,   472,   473,   474,     0,     0,   475,   476,   477,     0,
8145:      478,   479,   480,   481,     0,   482,   483,   484,   485,   486,
8146:      487,   488,   489,     0,   490,     0,   492,   493,   494,   495,
8147:      496,   497,   498,     0,     0,   499,     0,     0,   500,   501,
8148:      502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
8149:      512,   513,   514,   515,   516,   517,   518,   519,   520,   528,
8150:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8151:        0,     0,     0,     0,     0,  3268,     0,     0,   118,   119,
8152:      120,   121,   122,   123,   124,   125,     0,   126,   127,   128,
8153:        0,     0,     0,     0,     0,     0,     0,     0,     0,   130,
8154:      131,     0,   132,   133,   134,     0,   136,   137,   138,   139,
8155:      140,     0,   142,   143,     0,   144,   145,   146,   147,   148,
8156:      149,     0,     0,   150,   151,   152,   153,   154,   155,   156,
8157:        0,   157,   158,   159,   160,   161,     0,     0,     0,   163,
8158:      164,   165,   166,   167,   168,     0,   170,   171,   172,     0,
8159:      173,   174,   175,   176,   177,   178,     0,     0,   180,   181,
8160:      182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
8161:      192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
8162:      200,   201,     0,     0,   202,   203,   204,   205,     0,     0,
8163:      206,   207,   208,   209,   210,     0,   211,   212,   213,     0,
8164:      214,   215,   216,     0,   217,   218,   219,   220,   221,   222,
8165:      223,   224,   225,   226,   227,   228,     0,   229,     0,   230,
8166:      231,   232,   233,     0,   234,     0,   235,     0,     0,     0,
8167:      238,   239,   529,     0,   242,     0,   243,     0,   244,   245,
8168:      246,   247,     0,   248,   249,   250,   251,   252,   253,   254,
8169:        0,   256,   257,   258,   259,     0,   260,   261,   262,   263,
8170:      264,   265,   266,     0,   267,     0,   269,   270,   271,   272,
8171:      273,   274,   275,   276,     0,   277,     0,   278,     0,     0,
8172:      281,     0,   283,   284,   285,   286,   287,   288,     0,     0,
8173:      289,     0,   291,     0,     0,   293,   294,   295,   296,   297,
8174:      298,   299,   300,   530,   302,   303,   304,   305,   306,   307,
8175:      308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
8176:      318,   319,   320,   321,   322,     0,   324,   325,   326,   327,
8177:      328,     0,   329,   330,     0,   332,     0,   333,   334,   335,
8178:      336,   337,   338,     0,   339,   340,     0,     0,   341,   342,
8179:      343,     0,     0,   344,   345,   346,     0,   348,     0,   350,
8180:      351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
8181:      361,     0,     0,     0,     0,   362,   363,   364,     0,   366,
8182:      367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
8183:      376,   377,     0,   378,   379,   380,   381,   382,   383,   384,
8184:      385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
8185:      394,   395,   396,   397,   398,   399,   400,     0,   401,   402,
8186:        0,   404,   405,   406,   407,   408,   409,   410,   411,   412,
8187:      413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
8188:      421,   422,   423,   424,   425,   426,   427,   428,   429,     0,
8189:        0,   431,   432,   433,   434,     0,   435,   436,   437,   438,
8190:      439,   440,   441,   442,   443,   444,   445,   446,   531,   448,
8191:      449,     0,     0,   450,   451,     0,   452,     0,   454,   455,
8192:      456,   457,   458,     0,   459,   460,   461,     0,     0,   462,
8193:      463,   464,   465,   466,     0,   467,   468,   469,   470,   471,
8194:      472,   473,   474,     0,     0,   475,   476,   477,     0,   478,
8195:      479,   480,   481,     0,   482,   483,   484,   485,   486,   487,
8196:      488,   489,     0,   490,     0,   492,   493,   494,   495,   496,
8197:      497,   498,     0,     0,   499,     0,     0,   500,   501,   502,
8198:      503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
8199:      513,   514,   515,   516,   517,   518,   519,   520,   528,     0,
8200:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8201:        0,     0,     0,     0,  2085,     0,     0,   118,   119,   120,
8202:      121,   122,   123,   124,   125,     0,   126,   127,   128,     0,
8203:        0,     0,     0,     0,     0,     0,     0,     0,   130,   131,
8204:        0,   132,   133,   134,     0,   136,   137,   138,   139,   140,
8205:        0,   142,   143,     0,   144,   145,   146,   147,   148,   149,
8206:        0,     0,   150,   151,   152,   153,   154,   155,   156,     0,
8207:      157,   158,   159,   160,   161,     0,     0,     0,   163,   164,
8208:      165,   166,   167,   168,     0,   170,   171,   172,     0,   173,
8209:      174,   175,   176,   177,   178,     0,     0,   180,   181,   182,
8210:      183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
8211:      193,   194,     0,   195,     0,   196,   197,   198,   199,   200,
8212:      201,     0,     0,   202,   203,   204,   205,     0,     0,   206,
8213:      207,   208,   209,   210,     0,   211,   212,   213,     0,   214,
8214:      215,   216,     0,   217,   218,   219,   220,   221,   222,   223,
8215:      224,   225,   226,   227,   228,     0,   229,     0,   230,   231,
8216:      232,   233,     0,   234,     0,   235,     0,     0,     0,   238,
8217:      239,   529,     0,   242,     0,   243,     0,   244,   245,   246,
8218:      247,     0,   248,   249,   250,   251,   252,   253,   254,     0,
8219:      256,   257,   258,   259,     0,   260,   261,   262,   263,   264,
8220:      265,   266,     0,   267,     0,   269,   270,   271,   272,   273,
8221:      274,   275,   276,     0,   277,     0,   278,     0,     0,   281,
8222:        0,   283,   284,   285,   286,   287,   288,     0,     0,   289,
8223:        0,   291,     0,     0,   293,   294,   295,   296,   297,   298,
8224:      299,   300,   530,   302,   303,   304,   305,   306,   307,   308,
8225:      309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
8226:      319,   320,   321,   322,     0,   324,   325,   326,   327,   328,
8227:        0,   329,   330,     0,   332,     0,   333,   334,   335,   336,
8228:      337,   338,     0,   339,   340,     0,     0,   341,   342,   343,
8229:        0,     0,   344,   345,   346,     0,   348,     0,   350,   351,
8230:      352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
8231:        0,     0,     0,     0,   362,   363,   364,     0,   366,   367,
8232:      368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
8233:      377,     0,   378,   379,   380,   381,   382,   383,   384,   385,
8234:      386,   387,     0,   388,   389,   390,   391,   392,   393,   394,
8235:      395,   396,   397,   398,   399,   400,     0,   401,   402,     0,
8236:      404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
8237:      414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
8238:      422,   423,   424,   425,   426,   427,   428,   429,     0,     0,
8239:      431,   432,   433,   434,     0,   435,   436,   437,   438,   439,
8240:      440,   441,   442,   443,   444,   445,   446,   531,   448,   449,
8241:        0,     0,   450,   451,     0,   452,     0,   454,   455,   456,
8242:      457,   458,     0,   459,   460,   461,     0,     0,   462,   463,
8243:      464,   465,   466,     0,   467,   468,   469,   470,   471,   472,
8244:      473,   474,     0,     0,   475,   476,   477,     0,   478,   479,
8245:      480,   481,     0,   482,   483,   484,   485,   486,   487,   488,
8246:      489,     0,   490,     0,   492,   493,   494,   495,   496,   497,
8247:      498,     0,     0,   499,     0,     0,   500,   501,   502,   503,
8248:      504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
8249:      514,   515,   516,   517,   518,   519,   520,   528,     0,     0,
8250:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8251:        0,     0,     0,  2190,     0,     0,   118,   119,   120,   121,
8252:      122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
8253:        0,     0,     0,     0,     0,     0,     0,   130,   131,     0,
8254:      132,   133,   134,     0,   136,   137,   138,   139,   140,     0,
8255:      142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
8256:        0,   150,   151,   152,   153,   154,   155,   156,     0,   157,
8257:      158,   159,   160,   161,     0,     0,     0,   163,   164,   165,
8258:      166,   167,   168,     0,   170,   171,   172,     0,   173,   174,
8259:      175,   176,   177,   178,     0,     0,   180,   181,   182,   183,
8260:      184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
8261:      194,     0,   195,     0,   196,   197,   198,   199,   200,   201,
8262:        0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
8263:      208,   209,   210,     0,   211,   212,   213,     0,   214,   215,
8264:      216,     0,   217,   218,   219,   220,   221,   222,   223,   224,
8265:      225,   226,   227,   228,     0,   229,     0,   230,   231,   232,
8266:      233,     0,   234,     0,   235,     0,     0,     0,   238,   239,
8267:      529,     0,   242,     0,   243,     0,   244,   245,   246,   247,
8268:        0,   248,   249,   250,   251,   252,   253,   254,     0,   256,
8269:      257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
8270:      266,     0,   267,     0,   269,   270,   271,   272,   273,   274,
8271:      275,   276,     0,   277,     0,   278,     0,     0,   281,     0,
8272:      283,   284,   285,   286,   287,   288,     0,     0,   289,     0,
8273:      291,     0,     0,   293,   294,   295,   296,   297,   298,   299,
8274:      300,   530,   302,   303,   304,   305,   306,   307,   308,   309,
8275:      310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
8276:      320,   321,   322,     0,   324,   325,   326,   327,   328,     0,
8277:      329,   330,     0,   332,     0,   333,   334,   335,   336,   337,
8278:      338,     0,   339,   340,     0,     0,   341,   342,   343,     0,
8279:        0,   344,   345,   346,     0,   348,     0,   350,   351,   352,
8280:      353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
8281:        0,     0,     0,   362,   363,   364,     0,   366,   367,   368,
8282:      369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
8283:        0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
8284:      387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
8285:      396,   397,   398,   399,   400,     0,   401,   402,     0,   404,
8286:      405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
8287:      415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
8288:      423,   424,   425,   426,   427,   428,   429,     0,     0,   431,
8289:      432,   433,   434,     0,   435,   436,   437,   438,   439,   440,
8290:      441,   442,   443,   444,   445,   446,   531,   448,   449,     0,
8291:        0,   450,   451,     0,   452,     0,   454,   455,   456,   457,
8292:      458,     0,   459,   460,   461,     0,     0,   462,   463,   464,
8293:      465,   466,     0,   467,   468,   469,   470,   471,   472,   473,
8294:      474,     0,     0,   475,   476,   477,     0,   478,   479,   480,
8295:      481,     0,   482,   483,   484,   485,   486,   487,   488,   489,
8296:        0,   490,     0,   492,   493,   494,   495,   496,   497,   498,
8297:        0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
8298:      505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
8299:      515,   516,   517,   518,   519,   520,     0,  2946,  1356,   820,
8300:        0,     0,  2060,  1054,     0,     0,     0,     0,     0,  2061,
8301:     2062,     0,  3131,  2063,  2064,  2065,   118,   119,   120,   121,
8302:      122,   123,   124,   125,   561,   126,   127,   128,   562,   563,
8303:      564,  2947,   566,   567,   568,   569,  2948,   130,   131,   571,
8304:      132,   133,   134,  2949,   136,   137,   138,     0,  1494,  2950,
8305:     1496,  1497,   578,   144,   145,   146,   147,   148,   149,   579,
8306:      580,   150,   151,   152,   153,  1498,  1499,   156,   583,   157,
8307:      158,   159,   160,     0,   585,  2951,   587,  2952,   164,   165,
8308:      166,   167,   168,  2953,   170,   171,   172,   590,   173,   174,
8309:      175,   176,   177,   178,   591,  2954,   180,   181,   182,   183,
8310:      184,   185,   186,   187,   188,   189,  1504,   191,   192,  1505,
8311:      194,   596,   195,   597,   196,   197,   198,   199,   200,   201,
8312:      598,   599,   202,   203,   204,   205,   600,   601,   206,   207,
8313:     1067,   209,   210,   602,   211,   212,   213,   603,   214,   215,
8314:      216,   604,   217,   218,   219,   220,     0,   222,   223,   224,
8315:      225,   226,   227,     0,   607,   229,   608,   230,   231,  1506,
8316:      233,   610,   234,   611,   235,  2955,   613,  2956,   238,   239,
8317:     2957,  2958,   242,   617,   243,   618,     0,     0,   246,   247,
8318:      621,   248,   249,   250,   251,   252,   253,   254,  2959,   256,
8319:      257,   258,   259,   623,   260,   261,   262,   263,   264,   265,
8320:      266,   624,   267,  2960,     0,   270,   271,   272,   273,   274,
8321:     1512,  1513,   629,  1514,   631,   278,  2961,  2962,   281,  2963,
8322:      283,   284,   285,   286,   287,   288,   635,   636,   289,  2964,
8323:      291,  2965,   639,   293,   294,   295,   296,   297,   298,   299,
8324:      300,  2966,   302,   303,   304,   305,   306,   307,   308,   309,
8325:      310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
8326:      320,   321,  1521,  2967,  1523,   325,   326,   327,  2968,   645,
8327:      329,   330,  2969,   332,   647,     0,   334,  1525,   336,   337,
8328:      338,   650,   339,   340,   651,   652,  2970,   342,   343,   653,
8329:      654,   344,   345,     0,  2971,   348,  2972,     0,   351,   352,
8330:      353,   354,   355,   356,   357,   358,   359,   360,   361,   659,
8331:      660,   661,   662,   362,   363,     0,  2973,   366,   367,     0,
8332:      369,   370,   371,   666,   372,   373,   374,   375,   376,   377,
8333:      667,   378,   379,   380,   381,   382,  1529,   384,   385,   386,
8334:      387,   669,   388,   389,   390,   391,   392,   393,   394,   395,
8335:      396,   397,   398,   399,   400,   670,   401,   402,  2974,   404,
8336:      405,   406,  1531,   408,   409,   410,   411,   412,   413,   414,
8337:      415,   416,   417,   418,   419,   420,   673,  2975,   421,   422,
8338:      423,   424,   425,   426,  2976,   428,   429,   676,  2977,   431,
8339:      432,  1535,   434,   679,   435,   436,   437,   438,   439,   440,
8340:      441,   442,   443,   444,   445,   446,  2978,   448,     0,   682,
8341:      683,   450,   451,   684,   452,  2979,   454,   455,   456,   457,
8342:      458,   686,   459,  1538,  1539,   689,   690,   462,   463,     0,
8343:      465,     0,   693,   467,   468,  2980,   470,   471,   472,   473,
8344:      474,  2981,   696,   475,   476,   477,   697,   478,   479,   480,
8345:      481,   698,   482,   483,   484,   485,   486,     0,  1542,   489,
8346:      701,   490,  2982,   492,   493,   494,   495,   496,   497,   498,
8347:      703,   704,   499,   705,   706,   500,   501,   502,   503,   504,
8348:      505,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8349:        0,     0,   517,   518,   519,   520,     0,   528,     0,  2066,
8350:     2067,  2068,  2060,  2983,  2984,  2071,  2072,  2073,  2074,  2061,
8351:     2062,     0,     0,  2063,  2064,  2065,   118,   119,   120,   121,
8352:      122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
8353:        0,     0,     0,     0,     0,     0,     0,   130,   131,     0,
8354:      132,   133,   134,     0,   136,   137,   138,   139,   140,     0,
8355:      142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
8356:        0,   150,   151,   152,   153,   154,   155,   156,     0,   157,
8357:      158,   159,   160,   161,     0,     0,     0,   163,   164,   165,
8358:      166,   167,   168,     0,   170,   171,   172,     0,   173,   174,
8359:      175,   176,   177,   178,     0,     0,   180,   181,   182,   183,
8360:      184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
8361:      194,     0,   195,     0,   196,   197,   198,   199,   200,   201,
8362:        0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
8363:      208,   209,   210,     0,   211,   212,   213,     0,   214,   215,
8364:      216,     0,   217,   218,   219,   220,   221,   222,   223,   224,
8365:      225,   226,   227,   228,     0,   229,     0,   230,   231,   232,
8366:      233,     0,   234,     0,   235,     0,     0,     0,   238,   239,
8367:      529,     0,   242,     0,   243,     0,   244,   245,   246,   247,
8368:        0,   248,   249,   250,   251,   252,   253,   254,     0,   256,
8369:      257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
8370:      266,     0,   267,     0,   269,   270,   271,   272,   273,   274,
8371:      275,   276,     0,   277,     0,   278,     0,     0,   281,     0,
8372:      283,   284,   285,   286,   287,   288,     0,     0,   289,     0,
8373:      291,     0,     0,   293,   294,   295,   296,   297,   298,   299,
8374:      300,   530,   302,   303,   304,   305,   306,   307,   308,   309,
8375:      310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
8376:      320,   321,   322,     0,   324,   325,   326,   327,   328,     0,
8377:      329,   330,     0,   332,     0,   333,   334,   335,   336,   337,
8378:      338,     0,   339,   340,     0,     0,   341,   342,   343,     0,
8379:        0,   344,   345,   346,     0,   348,     0,   350,   351,   352,
8380:      353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
8381:        0,     0,     0,   362,   363,   364,     0,   366,   367,   368,
8382:      369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
8383:        0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
8384:      387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
8385:      396,   397,   398,   399,   400,     0,   401,   402,     0,   404,
8386:      405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
8387:      415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
8388:      423,   424,   425,   426,   427,   428,   429,     0,     0,   431,
8389:      432,   433,   434,     0,   435,   436,   437,   438,   439,   440,
8390:      441,   442,   443,   444,   445,   446,   531,   448,   449,     0,
8391:        0,   450,   451,     0,   452,     0,   454,   455,   456,   457,
8392:      458,     0,   459,   460,   461,     0,     0,   462,   463,   464,
8393:      465,   466,     0,   467,   468,   469,   470,   471,   472,   473,
8394:      474,     0,     0,   475,   476,   477,     0,   478,   479,   480,
8395:      481,     0,   482,   483,   484,   485,   486,   487,   488,   489,
8396:        0,   490,     0,   492,   493,   494,   495,   496,   497,   498,
8397:        0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
8398:      505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
8399:      515,   516,   517,   518,   519,   520,     0,     0,     0,  2066,
8400:     2067,  2068,     0,  2069,  2070,  2071,  2072,  2073,  2074,  1626,
8401:        0,     0,  1627,     0,     0,     0,  1628,  1629,  1630,  1631,
8402:     1632,  1633,  1634,     0,     0,     0,     0,     0,     0,     0,
8403:        0,     0,     0,     0,     0,     0,     0,  1635,     0,     0,
8404:        0,     0,     0,     0,     0,     0,     0,  1637,  1626,     0,
8405:        0,  1627,     0,     0,  1638,  1628,  1629,  1630,  1631,  1632,
8406:     1633,  1634,     0,     0,     0,     0,     0,     0,     0,     0,
8407:        0,     0,     0,     0,     0,     0,  1635,     0,     0,     0,
8408:        0,  1639,     0,     0,     0,     0,  1637,  1626,     0,     0,
8409:     1627,     0,     0,  1638,  1628,  1629,  1630,  1631,  1632,  1633,
8410:     1634,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8411:        0,     0,     0,     0,     0,  1635,     0,     0,     0,     0,
8412:     1639,     0,     0,     0,     0,  1637,     0,     0,     0,     0,
8413:        0,     0,  1638,     0,     0,  1626,     0,     0,  1627,     0,
8414:        0,     0,  1628,  1629,  1630,  1631,  1632,  1633,  1634,     0,
8415:        0,     0,     0,     0,     0,     0,     0,     0,     0,  1639,
8416:        0,     0,     0,  1635,     0,     0,     0,     0,     0,     0,
8417:        0,     0,     0,  1637,  1626,     0,     0,  1627,  1640,     0,
8418:     1638,  1628,  1629,  1630,  1631,  1632,  1633,  1634,     0,     0,
8419:        0,     0,     0,     0,     0,  1641,     0,     0,     0,     0,
8420:     1642,     0,  1635,     0,     0,     0,     0,  1639,     0,     0,
8421:        0,     0,  1637,     0,     0,     0,     0,  1640,     0,  1638,
8422:        0,     0,     0,  1643,  1644,     0,     0,     0,     0,     0,
8423:        0,     0,     0,     0,  1641,     0,     0,     0,  1645,  1642,
8424:        0,     0,     0,     0,     0,     0,  1639,     0,     0,     0,
8425:        0,     0,     0,     0,     0,     0,  1640,     0,     0,     0,
8426:        0,     0,  1643,  1644,     0,     0,     0,     0,     0,     0,
8427:        0,     0,     0,  1641,     0,     0,  1646,  1645,  1642,  1647,
8428:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8429:        0,     0,     0,  1648,     0,     0,  1649,     0,     0,     0,
8430:        0,  1643,  1644,     0,  1640,     0,     0,     0,     0,     0,
8431:        0,     0,     0,     0,     0,  1646,  1645,     0,  1647,     0,
8432:        0,  1641,     0,     0,     0,     0,  1642,     0,     0,     0,
8433:        0,     0,  1648,     0,     0,  1649,     0,     0,     0,     0,
8434:        0,     0,     0,  1640,     0,     0,     0,     0,     0,  1643,
8435:     1644,     0,     0,     0,  1646,     0,     0,  1647,     0,     0,
8436:     1641,     0,     0,     0,  1645,  1642,     0,     0,     0,     0,
8437:        0,  1648,     0,     0,  1649,     0,     0,     0,     0,     0,
8438:        0,     0,     0,     0,     0,     0,     0,     0,  1643,  1644,
8439:        0,     0,     0,     0,     0,  1650,     0,     0,     0,     0,
8440:        0,     0,  1646,  1645,     0,  1647,     0,     0,     0,     0,
8441:        0,     0,     0,     0,     0,     0,     0,     0,     0,  1648,
8442:        0,     0,  1649,     0,     0,     0,     0,     0,     0,     0,
8443:        0,     0,     0,     0,  1650,     0,     0,     0,     0,     0,
8444:        0,  1646,     0,     0,  1647,     0,     0,     0,     0,     0,
8445:        0,     0,     0,     0,     0,     0,     0,     0,  1648,     0,
8446:        0,  1649,     0,     0,     0,     0,     0,     0,     0,     0,
8447:        0,     0,     0,  1650,     0,     0,     0,     0,     0,     0,
8448:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8449:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8450:        0,     0,     0,  1651,     0,     0,  1652,  1653,  1654,     0,
8451:     1655,  1656,  1657,  1658,  1659,  1660,     0,     0,     0,     0,
8452:     2892,  1650,     0,     0,     0,     0,     0,  1626,     0,     0,
8453:     1627,     0,     0,     0,  1628,  1629,  1630,  1631,  1632,  1633,
8454:     1634,     0,  1651,     0,     0,  1652,  1653,  1654,     0,  1655,
8455:     1656,  1657,  1658,  1659,  1660,  1635,     0,     0,     0,  3123,
8456:     1650,     0,     0,     0,     0,  1637,     0,     0,     0,     0,
8457:        0,     0,  1638,     0,     0,     0,     0,     0,     0,     0,
8458:        0,  1651,     0,     0,  1652,  1653,  1654,     0,  1655,  1656,
8459:     1657,  1658,  1659,  1660,     0,     0,     0,     0,  3130,  1639,
8460:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8461:        0,     0,     0,     0,  1626,     0,     0,  1627,     0,     0,
8462:        0,  1628,  1629,  1630,  1631,  1632,  1633,  1634,     0,  1651,
8463:        0,     0,  1652,  1653,  1654,     0,  1655,  1656,  1657,  1658,
8464:     1659,  1660,  1635,     0,     0,     0,  3288,     0,     0,     0,
8465:        0,     0,  1637,  1626,     0,     0,  1627,     0,     0,  1638,
8466:     1628,  1629,  1630,  1631,  1632,  1633,  1634,     0,  1651,     0,
8467:        0,  1652,  1653,  1654,     0,  1655,  1656,  1657,  1658,  1659,
8468:     1660,  1635,     0,     0,     0,  3310,  1639,     0,     0,     0,
8469:        0,  1637,  1626,     0,     0,  1627,  1640,     0,  1638,  1628,
8470:     1629,  1630,  1631,  1632,  1633,  1634,     0,     0,     0,     0,
8471:        0,     0,     0,  1641,     0,     0,     0,     0,  1642,     0,
8472:     1635,     0,     0,     0,     0,  1639,     0,     0,     0,     0,
8473:     1637,     0,     0,     0,     0,     0,     0,  1638,     0,     0,
8474:        0,  1643,  1644,     0,     0,     0,     0,     0,     0,     0,
8475:        0,     0,     0,     0,     0,     0,  1645,     0,     0,     0,
8476:        0,     0,     0,     0,  1639,     0,     0,     0,     0,     0,
8477:        0,     0,     0,     0,     0,     0,     0,     0,     0,  1626,
8478:        0,     0,  1627,  1640,     0,     0,  1628,  1629,  1630,  1631,
8479:     1632,  1633,  1634,     0,  1646,     0,     0,  1647,     0,     0,
8480:     1641,     0,     0,     0,     0,  1642,     0,  1635,     0,     0,
8481:        0,  1648,     0,     0,  1649,     0,     0,  1637,     0,     0,
8482:        0,     0,  1640,     0,  1638,     0,     0,     0,  1643,  1644,
8483:        0,     0,     0,     0,     0,     0,     0,     0,     0,  1641,
8484:        0,     0,     0,  1645,  1642,     0,     0,     0,     0,     0,
8485:        0,  1639,     0,     0,     0,     0,     0,     0,     0,     0,
8486:        0,  1640,     0,     0,     0,     0,     0,  1643,  1644,     0,
8487:        0,     0,     0,     0,     0,     0,     0,     0,  1641,     0,
8488:        0,  1646,  1645,  1642,  1647,     0,     0,     0,     0,     0,
8489:        0,     0,     0,     0,     0,     0,     0,     0,  1648,     0,
8490:        0,  1649,     0,     0,     0,     0,  1643,  1644,     0,     0,
8491:        0,     0,     0,  1650,     0,     0,     0,     0,     0,     0,
8492:     1646,  1645,     0,  1647,     0,     0,     0,     0,     0,     0,
8493:        0,     0,     0,     0,     0,     0,     0,  1648,     0,     0,
8494:     1649,     0,     0,     0,     0,     0,     0,     0,  1640,     0,
8495:        0,     0,     0,     0,     0,     0,     0,     0,     0,  1646,
8496:        0,     0,  1647,     0,     0,  1641,     0,     0,     0,     0,
8497:     1642,     0,     0,     0,     0,     0,  1648,     0,     0,  1649,
8498:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8499:        0,     0,     0,  1643,  1644,     0,     0,     0,     0,     0,
8500:     1650,     0,     0,     0,     0,     0,     0,     0,  1645,     0,
8501:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8502:        0,  1651,     0,     0,  1652,  1653,  1654,     0,  1655,  1656,
8503:     1657,  1658,  1659,  1660,     0,     0,     0,     0,  3409,  1650,
8504:        0,     0,     0,     0,     0,     0,  1646,     0,     0,  1647,
8505:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8506:        0,  1379,  1380,  1648,     0,     0,  1649,     0,     0,     0,
8507:        0,     0,     0,     0,     0,     0,  1626,     0,  1650,  1627,
8508:        0,     0,     0,  1628,  1629,  1630,  1631,  1632,  1633,  1634,
8509:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8510:        0,     0,  1381,  1382,  1635,     0,  1383,  1384,  1651,     0,
8511:        0,  1652,  1653,  1654,  1637,  1655,  1656,  1657,  1658,  1659,
8512:     1660,  1638,     0,     0,     0,  3465,     0,     0,     0,     0,
8513:        0,     0,     0,  1626,     0,     0,  1627,     0,     0,     0,
8514:     1628,  1629,  1630,  1631,  1632,  1633,  1634,  1651,  1639,     0,
8515:     1652,  1653,  1654,     0,  1655,  1656,  1657,  1658,  1659,  1660,
8516:        0,  1635,     0,     0,  3487,  1650,     0,     0,     0,     0,
8517:        0,  1637,     0,     0,     0,     0,     0,     0,  1638,     0,
8518:        0,     0,  1385,  1386,     0,     0,  1651,     0,     0,  1652,
8519:     1653,  1654,     0,  1655,  1656,  1657,  1658,  1659,  1660,     0,
8520:        0,  1815,     0,     0,     0,  1639,     0,     0,     0,     0,
8521:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8522:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8523:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8524:        0,     0,     0,     0,     0,  1640,  1387,  1388,  1389,  1390,
8525:     1391,  1392,  1393,  1394,     0,     0,  1395,  1396,     0,     0,
8526:        0,     0,  1641,     0,     0,     0,     0,  1642,     0,     0,
8527:        0,     0,     0,  1651,     0,     0,  1652,  1653,  1654,     0,
8528:     1655,  1656,  1657,  1658,  1659,  1660,     0,     0,  2846,     0,
8529:     1643,  1644,     0,     0,     0,     0,     0,     0,     0,     0,
8530:        0,     0,  1640,     0,     0,  1645,     0,     0,     0,     0,
8531:        0,     0,     0,     0,     0,     0,     0,     0,     0,  1641,
8532:        0,     0,     0,     0,  1642,     0,     0,     0,     0,     0,
8533:     1397,  1398,     0,     0,     0,     0,     0,     0,     0,     0,
8534:        0,     0,     0,  1646,     0,     0,  1647,  1643,  1644,     0,
8535:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8536:     1648,     0,  1645,  1649,     0,     0,     0,     0,     0,     0,
8537:        0,  1399,  1400,     0,     0,     0,     0,     0,     0,     0,
8538:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8539:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8540:     1646,     0,     0,  1647,     0,     0,     0,     0,     0,     0,
8541:        0,     0,     0,     0,     0,     0,     0,  1648,     0,     0,
8542:     1649,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8543:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8544:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8545:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8546:        0,     0,  1650,     0,     0,     0,     0,  1401,  1402,     0,
8547:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8548:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8549:        0,  1403,  1404,     0,     0,     0,     0,     0,     0,     0,
8550:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8551:        0,  2018,     0,     0,     0,     0,     0,     0,     0,  1650,
8552:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8553:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8554:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8555:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8556:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8557:     1651,     0,     0,  1652,  1653,  1654,     0,  1655,  1656,  1657,
8558:     1658,  1659,  1660,     0,     0,  3278,     0,     0,     0,     0,
8559:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8560:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8561:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8562:        0,     0,     0,     0,   560,     0,     0,  1651,     0,     0,
8563:     1652,  1653,  1654,     0,  1655,  1656,  1657,  1658,  1659,  1660,
8564:        0,     0,  3449,   118,   119,   120,   121,   122,   123,   124,
8565:      125,   561,   126,   127,   128,   562,   563,   564,   565,   566,
8566:      567,   568,   569,   570,   130,   131,   571,   132,   133,   134,
8567:      572,   136,   137,   138,   573,   574,   575,   576,   577,   578,
8568:      144,   145,   146,   147,   148,   149,   579,   580,   150,   151,
8569:      152,   153,   581,   582,   156,   583,   157,   158,   159,   160,
8570:      584,   585,   586,   587,   588,   164,   165,   166,   167,   168,
8571:      589,   170,   171,   172,   590,   173,   174,   175,   176,   177,
8572:      178,   591,   592,   180,   181,   182,   183,   184,   185,   186,
8573:      187,   188,   189,   594,   191,   192,   595,   194,   596,   195,
8574:      597,   196,   197,   198,   199,   200,   201,   598,   599,   202,
8575:      203,   204,   205,   600,   601,   206,   207,   208,   209,   210,
8576:      602,   211,   212,   213,   603,   214,   215,   216,   604,   217,
8577:      218,   219,   220,   605,   222,   223,   224,   225,   226,   227,
8578:      606,   607,   229,   608,   230,   231,   609,   233,   610,   234,
8579:      611,   235,   612,   613,   614,   238,   239,   615,   616,   242,
8580:      617,   243,   618,   619,   620,   246,   247,   621,   248,   249,
8581:      250,   251,   252,   253,   254,   622,   256,   257,   258,   259,
8582:      623,   260,   261,   262,   263,   264,   265,   266,   624,   267,
8583:      625,   626,   270,   271,   272,   273,   274,   627,   628,   629,
8584:      630,   631,   278,   632,   633,   281,   634,   283,   284,   285,
8585:      286,   287,   288,   635,   636,   289,   637,   291,   638,   639,
8586:      293,   294,   295,   296,   297,   298,   299,   300,   640,   302,
8587:      303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
8588:      313,   314,   315,   316,   317,   318,   319,   320,   321,   641,
8589:      642,   643,   325,   326,   327,   644,   645,   329,   330,   646,
8590:      332,   647,   648,   334,   649,   336,   337,   338,   650,   339,
8591:      340,   651,   652,   341,   342,   343,   653,   654,   344,   345,
8592:      655,   656,   348,   657,   658,   351,   352,   353,   354,   355,
8593:      356,   357,   358,   359,   360,   361,   659,   660,   661,   662,
8594:      362,   363,   663,   664,   366,   367,   665,   369,   370,   371,
8595:      666,   372,   373,   374,   375,   376,   377,   667,   378,   379,
8596:      380,   381,   382,   668,   384,   385,   386,   387,   669,   388,
8597:      389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
8598:      399,   400,   670,   401,   402,   671,   404,   405,   406,   672,
8599:      408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
8600:      418,   419,   420,   673,   674,   421,   422,   423,   424,   425,
8601:      426,   675,   428,   429,   676,   677,   431,   432,   678,   434,
8602:      679,   435,   436,   437,   438,   439,   440,   441,   442,   443,
8603:      444,   445,   446,   680,   448,   681,   682,   683,   450,   451,
8604:      684,   452,   685,   454,   455,   456,   457,   458,   686,   459,
8605:      687,   688,   689,   690,   462,   463,   691,   465,   692,   693,
8606:      467,   468,   694,   470,   471,   472,   473,   474,   695,   696,
8607:      475,   476,   477,   697,   478,   479,   480,   481,   698,   482,
8608:      483,   484,   485,   486,   699,   700,   489,   701,   490,   702,
8609:      492,   493,   494,   495,   496,   497,   498,   703,   704,   499,
8610:      705,   706,   500,   501,   502,   503,   504,   505,   707,   708,
8611:      709,   710,   711,   712,   713,   714,   715,   716,   717,   517,
8612:      518,   519,   520,   528,     0,     0,     0,     0,     0,     0,
8613:        0,     0,  2096,     0,     0,     0,     0,     0,     0,     0,
8614:        0,     0,   118,   119,   120,   121,   122,   123,   124,   125,
8615:        0,   126,   127,   128,     0,     0,     0,     0,     0,     0,
8616:        0,     0,     0,   130,   131,     0,   132,   133,   134,     0,
8617:      136,   137,   138,   139,   140,     0,   142,   143,     0,   144,
8618:      145,   146,   147,   148,   149,     0,     0,   150,   151,   152,
8619:      153,   154,   155,   156,     0,   157,   158,   159,   160,   161,
8620:        0,     0,     0,   163,   164,   165,   166,   167,   168,     0,
8621:      170,   171,   172,     0,   173,   174,   175,   176,   177,   178,
8622:        0,     0,   180,   181,   182,   183,   184,   185,   186,   187,
8623:      188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
8624:      196,   197,   198,   199,   200,   201,     0,     0,   202,   203,
8625:      204,   205,     0,     0,   206,   207,   208,   209,   210,     0,
8626:      211,   212,   213,     0,   214,   215,   216,     0,   217,   218,
8627:      219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
8628:        0,   229,     0,   230,   231,   232,   233,     0,   234,     0,
8629:      235,     0,     0,     0,   238,   239,   529,     0,   242,     0,
8630:      243,     0,   244,   245,   246,   247,     0,   248,   249,   250,
8631:      251,   252,   253,   254,     0,   256,   257,   258,   259,     0,
8632:      260,   261,   262,   263,   264,   265,   266,     0,   267,     0,
8633:      269,   270,   271,   272,   273,   274,   275,   276,     0,   277,
8634:        0,   278,     0,     0,   281,     0,   283,   284,   285,   286,
8635:      287,   288,     0,     0,   289,     0,   291,     0,     0,   293,
8636:      294,   295,   296,   297,   298,   299,   300,   530,   302,   303,
8637:      304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
8638:      314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
8639:      324,   325,   326,   327,   328,     0,   329,   330,     0,   332,
8640:        0,   333,   334,   335,   336,   337,   338,     0,   339,   340,
8641:        0,     0,   341,   342,   343,     0,     0,   344,   345,   346,
8642:        0,   348,     0,   350,   351,   352,   353,   354,   355,   356,
8643:      357,   358,   359,   360,   361,     0,     0,     0,     0,   362,
8644:      363,   364,     0,   366,   367,   368,   369,   370,   371,     0,
8645:      372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
8646:      381,   382,   383,   384,   385,   386,   387,     0,   388,   389,
8647:      390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
8648:      400,     0,   401,   402,     0,   404,   405,   406,   407,   408,
8649:      409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
8650:      419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
8651:      427,   428,   429,     0,     0,   431,   432,   433,   434,     0,
8652:      435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
8653:      445,   446,   531,   448,   449,     0,     0,   450,   451,     0,
8654:      452,     0,   454,   455,   456,   457,   458,     0,   459,   460,
8655:      461,     0,     0,   462,   463,   464,   465,   466,     0,   467,
8656:      468,   469,   470,   471,   472,   473,   474,     0,     0,   475,
8657:      476,   477,     0,   478,   479,   480,   481,     0,   482,   483,
8658:      484,   485,   486,   487,   488,   489,     0,   490,     0,   492,
8659:      493,   494,   495,   496,   497,   498,     0,     0,   499,     0,
8660:        0,   500,   501,   502,   503,   504,   505,   506,   507,   508,
8661:      509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
8662:      519,   520,   528,     0,     0,     0,     0,     0,     0,     0,
8663:        0,  2744,     0,     0,     0,     0,     0,     0,     0,     0,
8664:        0,   118,   119,   120,   121,   122,   123,   124,   125,     0,
8665:      126,   127,   128,     0,     0,     0,     0,     0,     0,     0,
8666:        0,     0,   130,   131,     0,   132,   133,   134,     0,   136,
8667:      137,   138,   139,   140,     0,   142,   143,     0,   144,   145,
8668:      146,   147,   148,   149,     0,     0,   150,   151,   152,   153,
8669:      154,   155,   156,     0,   157,   158,   159,   160,   161,     0,
8670:        0,     0,   163,   164,   165,   166,   167,   168,     0,   170,
8671:      171,   172,     0,   173,   174,   175,   176,   177,   178,     0,
8672:        0,   180,   181,   182,   183,   184,   185,   186,   187,   188,
8673:      189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
8674:      197,   198,   199,   200,   201,     0,     0,   202,   203,   204,
8675:      205,     0,     0,   206,   207,   208,   209,   210,     0,   211,
8676:      212,   213,     0,   214,   215,   216,     0,   217,   218,   219,
8677:      220,   221,   222,   223,   224,   225,   226,   227,   228,     0,
8678:      229,     0,   230,   231,   232,   233,     0,   234,     0,   235,
8679:        0,     0,     0,   238,   239,   529,     0,   242,     0,   243,
8680:        0,   244,   245,   246,   247,     0,   248,   249,   250,   251,
8681:      252,   253,   254,     0,   256,   257,   258,   259,     0,   260,
8682:      261,   262,   263,   264,   265,   266,     0,   267,     0,   269,
8683:      270,   271,   272,   273,   274,   275,   276,     0,   277,     0,
8684:      278,     0,     0,   281,     0,   283,   284,   285,   286,   287,
8685:      288,     0,     0,   289,     0,   291,     0,     0,   293,   294,
8686:      295,   296,   297,   298,   299,   300,   530,   302,   303,   304,
8687:      305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
8688:      315,   316,   317,   318,   319,   320,   321,   322,     0,   324,
8689:      325,   326,   327,   328,     0,   329,   330,     0,   332,     0,
8690:      333,   334,   335,   336,   337,   338,     0,   339,   340,     0,
8691:        0,   341,   342,   343,     0,     0,   344,   345,   346,     0,
8692:      348,     0,   350,   351,   352,   353,   354,   355,   356,   357,
8693:      358,   359,   360,   361,     0,     0,     0,     0,   362,   363,
8694:      364,     0,   366,   367,   368,   369,   370,   371,     0,   372,
8695:      373,   374,   375,   376,   377,     0,   378,   379,   380,   381,
8696:      382,   383,   384,   385,   386,   387,     0,   388,   389,   390,
8697:      391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
8698:        0,   401,   402,     0,   404,   405,   406,   407,   408,   409,
8699:      410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
8700:      420,     0,     0,   421,   422,   423,   424,   425,   426,   427,
8701:      428,   429,     0,     0,   431,   432,   433,   434,     0,   435,
8702:      436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
8703:      446,   531,   448,   449,     0,     0,   450,   451,     0,   452,
8704:        0,   454,   455,   456,   457,   458,     0,   459,   460,   461,
8705:        0,     0,   462,   463,   464,   465,   466,     0,   467,   468,
8706:      469,   470,   471,   472,   473,   474,     0,     0,   475,   476,
8707:      477,     0,   478,   479,   480,   481,     0,   482,   483,   484,
8708:      485,   486,   487,   488,   489,     0,   490,     0,   492,   493,
8709:      494,   495,   496,   497,   498,     0,     0,   499,     0,     0,
8710:      500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
8711:      510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
8712:      520,   973,  1356,   820,     0,     0,     0,  1054,     0,     0,
8713:     2747,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8714:      118,   119,   120,   121,   122,   123,   124,   125,     0,   126,
8715:      127,   128,     0,     0,     0,   565,     0,     0,     0,     0,
8716:      570,   130,   131,     0,   132,   133,   134,   572,   136,   137,
8717:      138,   573,   574,   575,   576,   577,     0,   144,   145,   146,
8718:      147,   148,   149,     0,     0,   150,   151,   152,   153,   581,
8719:      582,   156,     0,   157,   158,   159,   160,   584,     0,   586,
8720:        0,   588,   164,   165,   166,   167,   168,   589,   170,   171,
8721:      172,     0,   173,   174,   175,   176,   177,   178,     0,   592,
8722:      180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
8723:      594,   191,   192,   595,   194,     0,   195,     0,   196,   197,
8724:      198,   199,   200,   201,     0,     0,   202,   203,   204,   205,
8725:        0,     0,   206,   207,   208,   209,   210,     0,   211,   212,
8726:      213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
8727:      605,   222,   223,   224,   225,   226,   227,   606,  1357,   229,
8728:        0,   230,   231,   609,   233,     0,   234,     0,   235,   612,
8729:        0,   614,   238,   239,   615,   616,   242,     0,   243,     0,
8730:      619,   620,   246,   247,     0,   248,   249,   250,   251,   252,
8731:      253,   254,   622,   256,   257,   258,   259,     0,   260,   261,
8732:      262,   263,   264,   265,   266,     0,   267,   625,   626,   270,
8733:      271,   272,   273,   274,   627,   628,     0,   630,     0,   278,
8734:      632,   633,   281,   634,   283,   284,   285,   286,   287,   288,
8735:        0,     0,   289,   637,   291,   638,     0,   293,   294,   295,
8736:      296,   297,   298,   299,   300,   640,   302,   303,   304,   305,
8737:      306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
8738:      316,   317,   318,   319,   320,   321,   641,   642,   643,   325,
8739:      326,   327,   644,     0,   329,   330,   646,   332,     0,   648,
8740:      334,   649,   336,   337,   338,     0,   339,   340,  1358,     0,
8741:      341,   342,   343,     0,     0,   344,   345,   655,   656,   348,
8742:      657,   658,   351,   352,   353,   354,   355,   356,   357,   358,
8743:      359,   360,   361,     0,     0,     0,     0,   362,   363,   663,
8744:      664,   366,   367,   665,   369,   370,   371,     0,   372,   373,
8745:      374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
8746:      668,   384,   385,   386,   387,     0,   388,   389,   390,   391,
8747:      392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
8748:      401,   402,   671,   404,   405,   406,   672,   408,   409,   410,
8749:      411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
8750:        0,   674,   421,   422,   423,   424,   425,   426,   675,   428,
8751:      429,     0,   677,   431,   432,   678,   434,     0,   435,   436,
8752:      437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
8753:      680,   448,   681,     0,     0,   450,   451,     0,   452,   685,
8754:      454,   455,   456,   457,   458,     0,   459,   687,   688,     0,
8755:        0,   462,   463,   691,   465,   692,  1359,   467,   468,   694,
8756:      470,   471,   472,   473,   474,     0,     0,   475,   476,   477,
8757:        0,   478,   479,   480,   481,     0,   482,   483,   484,   485,
8758:      486,   699,   700,   489,     0,   490,   702,   492,   493,   494,
8759:      495,   496,   497,   498,     0,     0,   499,     0,     0,   500,
8760:      501,   502,   503,   504,   505,   707,   708,   709,   710,   711,
8761:      712,   713,   714,   715,   716,   717,   517,   518,   519,   520,
8762:        0,     0,  1626,     0,     0,  1627,     0,  1360,  1361,  1628,
8763:     1629,  1630,  1631,  1632,  1633,  1634,     0,     0,     0,     0,
8764:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8765:     1635,     0,     0,     0,     0,  2196,     0,     0,     0,     0,
8766:     1637,  1626,     0,     0,  1627,     0,     0,  1638,  1628,  1629,
8767:     1630,  1631,  1632,  1633,  1634,     0,     0,     0,     0,  1626,
8768:        0,     0,  1627,     0,     0,     0,  1628,  1629,     0,  1635,
8769:     1632,  1633,  1634,     0,  1639,     0,     0,     0,     0,  1637,
8770:     1626,     0,     0,  1627,     0,     0,  1638,  1628,  1629,  1630,
8771:     1631,  1632,  1633,  1634,     0,     0,     0,  1637,     0,     0,
8772:        0,     0,     0,     0,  1638,     0,     0,     0,  1635,     0,
8773:        0,     0,     0,  1639,     0,     0,     0,     0,  1637,     0,
8774:     2197,     0,     0,     0,     0,  1638,     0,  1626,     0,     0,
8775:     1627,  1639,     0,     0,  1628,  1629,  1630,  1631,  1632,  1633,
8776:     1634,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8777:        0,     0,  1639,     0,     0,  1635,     0,     0,     0,  1914,
8778:        0,     0,     0,     0,     0,  1637,     0,     0,     0,     0,
8779:        0,  1640,  1638,     0,     0,     0,     0,     0,     0,     0,
8780:        0,     0,     0,     0,     0,     0,     0,     0,  1641,     0,
8781:        0,     0,     0,  1642,     0,     0,     0,     0,     0,  1639,
8782:     1950,     0,     0,     0,     0,  1951,     0,     0,     0,     0,
8783:     1640,     0,     0,     0,     0,     0,  1643,  1644,     0,     0,
8784:        0,     0,     0,     0,     0,     0,     0,  1641,  1640,     0,
8785:        0,  1645,  1642,     0,     0,     0,     0,     0,  3555,     0,
8786:        0,     0,     0,     0,     0,  1641,     0,     0,     0,  1640,
8787:     1642,     0,     0,     0,     0,  1643,  1644,     0,     0,     0,
8788:        0,     0,     0,     0,     0,     0,  1641,     0,     0,  1646,
8789:     1645,  1642,  1647,  1643,  1644,     0,     0,     0,     0,     0,
8790:        0,     0,     0,     0,     0,     0,  1648,     0,  1645,  1649,
8791:        0,     0,     0,     0,  1643,  1644,  1640,     0,     0,     0,
8792:        0,     0,     0,     0,     0,     0,     0,     0,  1646,  1645,
8793:        0,  1647,     0,  1641,     0,     0,     0,     0,  1642,     0,
8794:        0,     0,     0,     0,     0,  1648,  1646,     0,  1649,  1647,
8795:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8796:        0,  1643,  1644,  1648,     0,     0,     0,  1646,     0,     0,
8797:     1647,     0,     0,     0,     0,     0,  1645,     0,     0,     0,
8798:        0,     0,     0,     0,  1648,     0,     0,  1649,     0,     0,
8799:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8800:        0,     0,     0,     0,     0,     0,     0,     0,  1650,     0,
8801:        0,     0,     0,     0,  1646,     0,  3556,  1647,     0,     0,
8802:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8803:        0,  1648,     0,     0,  1649,     0,     0,     0,     0,     0,
8804:        0,     0,  1626,     0,     0,  1627,     0,  1650,     0,  1628,
8805:     1629,  1630,  1631,  1632,  1633,  1634,     0,     0,     0,     0,
8806:        0,     0,     0,     0,     0,  1650,     0,     0,     0,     0,
8807:     1635,  2200,     0,     0,     0,     0,     0,     0,     0,     0,
8808:     1637,     0,     0,     0,     0,     0,  1650,  1638,     0,     0,
8809:        0,     0,     0,  1379,  1380,     0,     0,     0,     0,     0,
8810:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8811:        0,     0,     0,     0,  1639,     0,  1651,     0,     0,  1652,
8812:     1653,  1654,     0,  1655,  1656,  1657,  1658,  1659,  1660,     0,
8813:        0,     0,     0,  1650,  1381,  1382,     0,     0,  1383,  1384,
8814:        0,  1626,     0,     0,  1627,     0,     0,     0,  1628,  1629,
8815:        0,     0,  1632,  1633,  1634,  1651,     0,     0,  1652,  1653,
8816:     1654,     0,  1655,  1656,  1657,  1658,  1659,  1660,     0,  1635,
8817:        0,     0,     0,  1651,     0,     0,  1652,  1653,  1654,  1637,
8818:     1655,  1656,  1657,  1658,  1659,  1660,  1638,     0,     0,     0,
8819:        0,     0,     0,     0,  1651,     0,     0,  1652,  1653,  1654,
8820:        0,  1655,  1656,  1657,  1658,  1659,  1660,     0,     0,     0,
8821:        0,  1640,     0,  1639,  1385,  1386,     0,     0,     0,     0,
8822:        0,     0,     0,     0,     0,     0,     0,  1626,  1641,     0,
8823:     1627,     0,     0,  1642,  1628,  1629,  1630,  1631,  1632,  1633,
8824:     1634,  1651,     0,     0,  1652,  1653,  1654,     0,  1655,  1656,
8825:     1657,  1658,  1659,  1660,     0,  1635,  1643,  1644,     0,  1956,
8826:        0,     0,     0,     0,     0,  1637,     0,     0,     0,     0,
8827:        0,  1645,  1638,     0,     0,     0,     0,     0,  1387,  1388,
8828:     1389,  1390,  1391,  1392,  1393,  1394,     0,     0,  1395,  1396,
8829:        0,     0,     0,  1626,     0,     0,  1627,     0,     0,  1639,
8830:     1628,  1629,  1630,  1631,  1632,  1633,  1634,     0,     0,  1646,
8831:     1640,     0,  1647,     0,     0,     0,     0,     0,     0,     0,
8832:        0,  1635,     0,     0,     0,     0,  1648,  1641,     0,  1649,
8833:        0,  1637,  1642,     0,     0,     0,     0,     0,  1638,     0,
8834:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8835:        0,     0,  1921,     0,     0,  1643,  1644,     0,     0,     0,
8836:        0,     0,  1397,  1398,     0,  1639,     0,     0,     0,     0,
8837:     1645,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8838:        0,     0,  1626,     0,     0,  1627,     0,     0,     0,  1628,
8839:     1629,  1630,  1631,  1632,  1633,  1634,  1640,     0,     0,     0,
8840:        0,     0,     0,  1399,  1400,     0,     0,     0,  1646,     0,
8841:     1635,  1647,     0,  1641,  1963,     0,     0,     0,  1642,     0,
8842:     1637,     0,     0,     0,     0,  1648,     0,  1638,  1650,     0,
8843:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8844:        0,  1643,  1644,     0,     0,     0,     0,     0,     0,     0,
8845:        0,     0,     0,     0,  1639,     0,  1645,  1961,     0,     0,
8846:        0,     0,  1640,     0,     0,     0,     0,     0,     0,     0,
8847:        0,     0,     0,     0,     0,     0,     0,     0,     0,  1641,
8848:        0,     0,     0,     0,  1642,     0,     0,     0,     0,     0,
8849:        0,     0,     0,     0,  1646,     0,     0,  1647,     0,  1401,
8850:     1402,     0,     0,     0,     0,     0,     0,  1643,  1644,     0,
8851:        0,  1648,     0,     0,  1649,     0,     0,     0,     0,     0,
8852:        0,     0,  1645,  1403,  1404,     0,     0,  1650,     0,     0,
8853:        0,     0,     0,     0,     0,     0,  1651,     0,     0,  1652,
8854:     1653,  1654,     0,  1655,  1656,  1657,  1658,  1659,  1660,     0,
8855:        0,  1640,     0,     0,     0,     0,     0,     0,     0,     0,
8856:     1646,     0,     0,  1647,     0,     0,     0,     0,  1641,     0,
8857:        0,     0,     0,  1642,     0,     0,     0,  1648,     0,     0,
8858:     1649,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8859:        0,  1626,     0,     0,  1627,     0,  1643,  1644,  1628,  1629,
8860:     1630,  1631,  1632,  1633,  1634,     0,     0,     0,     0,     0,
8861:        0,  1645,     0,  1650,     0,     0,     0,     0,     0,  1635,
8862:        0,     0,     0,     0,     0,     0,     0,     0,     0,  1637,
8863:        0,     0,     0,     0,     0,  1651,  1638,     0,  1652,  1653,
8864:     1654,     0,  1655,  1656,  1657,  1658,  1659,  1660,  1626,  1646,
8865:        0,  1627,  1647,     0,     0,  1628,  1629,  1630,  1631,  1632,
8866:     1633,  1634,     0,  1639,     0,     0,  1648,     0,     0,  1649,
8867:        0,     0,     0,     0,     0,     0,  1635,     0,     0,  1650,
8868:        0,     0,     0,     0,     0,     0,  1637,     0,     0,     0,
8869:        0,     0,     0,  1638,     0,     0,     0,     0,     0,     0,
8870:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8871:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8872:     1639,  1651,     0,     0,  1652,  1653,  1654,     0,  1655,  1656,
8873:     1657,  1658,  1659,  1660,     0,  1626,     0,     0,  1627,     0,
8874:        0,     0,  1628,  1629,  1630,  1631,  1632,  1633,  1634,     0,
8875:     2089,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8876:     1640,     0,     0,  1635,     0,     0,     0,  2822,  1650,     0,
8877:        0,     0,     0,  1637,     0,     0,     0,  1641,     0,     0,
8878:     1638,     0,  1642,     0,     0,     0,     0,  1651,     0,     0,
8879:     1652,  1653,  1654,     0,  1655,  1656,  1657,  1658,  1659,  1660,
8880:        0,     0,     0,     0,     0,  1643,  1644,  1639,     0,     0,
8881:        0,     0,     0,     0,     0,     0,     0,  1640,     0,     0,
8882:     1645,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8883:        0,     0,     0,     0,  1641,     0,     0,     0,     0,  1642,
8884:        0,     0,     0,     0,  1626,     0,     0,  1627,     0,     0,
8885:        0,  1628,  1629,  1630,  1631,  1632,  1633,  1634,  1646,     0,
8886:        0,  1647,  1643,  1644,     0,     0,     0,     0,     0,     0,
8887:        0,     0,  1635,     0,     0,  1648,  1651,  1645,  1649,  1652,
8888:     1653,  1654,  1637,  1655,  1656,  1657,  1658,  1659,  1660,  1638,
8889:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8890:        0,     0,     0,     0,  1640,     0,     0,     0,     0,     0,
8891:        0,     0,     0,     0,     0,  1646,  1639,     0,  1647,     0,
8892:        0,  1641,     0,     0,     0,     0,  1642,     0,     0,     0,
8893:        0,     0,  1648,     0,     0,  1649,     0,     0,     0,     0,
8894:        0,     0,     0,     0,  1626,     0,     0,  1627,     0,  1643,
8895:     1644,  1628,  1629,  1630,  1631,  1632,  1633,  1634,     0,     0,
8896:        0,     0,     0,     0,  1645,     0,     0,     0,     0,     0,
8897:        0,     0,  1635,     0,     0,     0,     0,  1650,     0,     0,
8898:        0,     0,  1637,     0,     0,     0,     0,     0,     0,  1638,
8899:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8900:        0,     0,  1646,     0,     0,  1647,     0,     0,     0,     0,
8901:        0,     0,     0,  1640,     0,     0,  1639,     0,     0,  1648,
8902:        0,     0,  1649,     0,     0,     0,     0,     0,     0,     0,
8903:     1641,     0,     0,  1626,  1650,  1642,  1627,     0,     0,     0,
8904:     1628,  1629,  1630,  1631,  1632,  1633,  1634,     0,     0,     0,
8905:        0,     0,     0,     0,     0,     0,     0,     0,  1643,  1644,
8906:        0,  1635,     0,     0,     0,     0,     0,  2808,     0,     0,
8907:        0,  1637,     0,  1645,     0,     0,     0,     0,  1638,     0,
8908:        0,     0,     0,     0,     0,  1651,     0,     0,  1652,  1653,
8909:     1654,     0,  1655,  1656,  1657,  1658,  1659,  1660,     0,     0,
8910:        0,     0,     0,     0,     0,  1639,     0,     0,     0,     0,
8911:        0,  1646,     0,  1640,  1647,     0,     0,     0,     0,     0,
8912:        0,  1650,     0,     0,     0,     0,     0,     0,  1648,     0,
8913:     1641,  1649,     0,     0,     0,  1642,     0,     0,     0,     0,
8914:        0,     0,  1651,     0,     0,  1652,  1653,  1654,     0,  1655,
8915:     1656,  1657,  1658,  1659,  1660,     0,     0,     0,  1825,  1644,
8916:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8917:        0,     0,     0,  1645,     0,     0,     0,     0,     0,     0,
8918:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8919:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8920:        0,     0,  1640,     0,     0,     0,     0,     0,     0,     0,
8921:        0,  1646,     0,     0,  1647,     0,     0,     0,     0,  1641,
8922:        0,     0,     0,     0,  1642,     0,     0,     0,  1648,  1651,
8923:     1650,  1649,  1652,  1653,  1654,     0,  1655,  1656,  1657,  1658,
8924:     1659,  1660,     0,     0,     0,     0,     0,  1643,  1644,     0,
8925:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8926:        0,     0,  1645,     0,     0,     0,     0,     0,     0,     0,
8927:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8928:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8929:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8930:     1646,     0,     0,  1647,     0,     0,     0,     0,     0,     0,
8931:        0,     0,     0,     0,     0,     0,     0,  1648,     0,     0,
8932:     1649,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8933:     1650,     0,     0,     0,     0,     0,     0,     0,  1651,     0,
8934:        0,  1652,  1653,  1654,     0,  1655,  1656,  1657,  1658,  1659,
8935:     1660,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8936:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8937:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8938:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8939:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8940:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8941:        0,     0,     0,     0,     0,     0,     0,     0,     0,  1650,
8942:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8943:        0,     0,     0,     0,     0,     0,     0,     0,  1651,     0,
8944:        0,  1652,  1653,  1654,     0,  1655,  1656,  1657,  1658,  1659,
8945:     1660,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8946:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8947:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8948:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8949:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8950:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8951:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
8952:        0,   560,     0,  2112,     0,     0,     0,  1651,     0,     0,
8953:     1652,  1653,  1654,     0,  1655,  1656,  1657,  1658,  2217,  1660,
8954:      118,   119,   120,   121,   122,   123,   124,   125,   561,   126,
8955:      127,   128,   562,   563,   564,   565,   566,   567,   568,   569,
8956:      570,   130,   131,   571,   132,   133,   134,   572,   136,   137,
8957:      138,   573,   574,   575,   576,   577,   578,   144,   145,   146,
8958:      147,   148,   149,   579,   580,   150,   151,   152,   153,   581,
8959:      582,   156,   583,   157,   158,   159,   160,   584,   585,   586,
8960:      587,   588,   164,   165,   166,   167,   168,   589,   170,   171,
8961:      172,   590,   173,   174,   175,   176,   177,   178,   591,   592,
8962:      180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
8963:      594,   191,   192,   595,   194,   596,   195,   597,   196,   197,
8964:      198,   199,   200,   201,   598,   599,   202,   203,   204,   205,
8965:      600,   601,   206,   207,   208,   209,   210,   602,   211,   212,
8966:      213,   603,   214,   215,   216,   604,   217,   218,   219,   220,
8967:      605,   222,   223,   224,   225,   226,   227,   606,   607,   229,
8968:      608,   230,   231,   609,   233,   610,   234,   611,   235,   612,
8969:      613,   614,   238,   239,   615,   616,   242,   617,   243,   618,
8970:      619,   620,   246,   247,   621,   248,   249,   250,   251,   252,
8971:      253,   254,   622,   256,   257,   258,   259,   623,   260,   261,
8972:      262,   263,   264,   265,   266,   624,   267,   625,   626,   270,
8973:      271,   272,   273,   274,   627,   628,   629,   630,   631,   278,
8974:      632,   633,   281,   634,   283,   284,   285,   286,   287,   288,
8975:      635,   636,   289,   637,   291,   638,   639,   293,   294,   295,
8976:      296,   297,   298,   299,   300,   640,   302,   303,   304,   305,
8977:      306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
8978:      316,   317,   318,   319,   320,   321,   641,   642,   643,   325,
8979:      326,   327,   644,   645,   329,   330,   646,   332,   647,   648,
8980:      334,   649,   336,   337,   338,   650,   339,   340,   651,   652,
8981:      341,   342,   343,   653,   654,   344,   345,   655,   656,   348,
8982:      657,   658,   351,   352,   353,   354,   355,   356,   357,   358,
8983:      359,   360,   361,   659,   660,   661,   662,   362,   363,   663,
8984:      664,   366,   367,   665,   369,   370,   371,   666,   372,   373,
8985:      374,   375,   376,   377,   667,   378,   379,   380,   381,   382,
8986:      668,   384,   385,   386,   387,   669,   388,   389,   390,   391,
8987:      392,   393,   394,   395,   396,   397,   398,   399,   400,   670,
8988:      401,   402,   671,   404,   405,   406,   672,   408,   409,   410,
8989:      411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
8990:      673,   674,   421,   422,   423,   424,   425,   426,   675,   428,
8991:      429,   676,   677,   431,   432,   678,   434,   679,   435,   436,
8992:      437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
8993:      680,   448,   681,   682,   683,   450,   451,   684,   452,   685,
8994:      454,   455,   456,   457,   458,   686,   459,   687,   688,   689,
8995:      690,   462,   463,   691,   465,   692,   693,   467,   468,   694,
8996:      470,   471,   472,   473,   474,   695,   696,   475,   476,   477,
8997:      697,   478,   479,   480,   481,   698,   482,   483,   484,   485,
8998:      486,   699,   700,   489,   701,   490,   702,   492,   493,   494,
8999:      495,   496,   497,   498,   703,   704,   499,   705,   706,   500,
9000:      501,   502,   503,   504,   505,   707,   708,   709,   710,   711,
9001:      712,   713,   714,   715,   716,   717,   517,   518,   519,   520,
9002:      560,     0,     0,     0,     0,     0,     0,     0,     0,     0,
9003:        0,     0,     0,     0,     0,     0,     0,     0,     0,   118,
9004:      119,   120,   121,   122,   123,   124,   125,   561,   126,   127,
9005:      128,   562,   563,   564,   565,   566,   567,   568,   569,   570,
9006:      130,   131,   571,   132,   133,   134,   572,   136,   137,   138,
9007:      573,   574,   575,   576,   577,   578,   144,   145,   146,   147,
9008:      148,   149,   579,   580,   150,   151,   152,   153,   581,   582,
9009:      156,   583,   157,   158,   159,   160,   584,   585,   586,   587,
9010:      588,   164,   165,   166,   167,   168,   589,   170,   171,   172,
9011:      590,   173,   174,   175,   176,   177,   178,   591,   592,   180,
9012:      181,   182,   183,   184,   185,   593,   187,   188,   189,   594,
9013:      191,   192,   595,   194,   596,   195,   597,   196,   197,   198,
9014:      199,   200,   201,   598,   599,   202,   203,   204,   205,   600,
9015:      601,   206,   207,   208,   209,   210,   602,   211,   212,   213,
9016:      603,   214,   215,   216,   604,   217,   218,   219,   220,   605,
9017:      222,   223,   224,   225,   226,   227,   606,   607,   229,   608,
9018:      230,   231,   609,   233,   610,   234,   611,   235,   612,   613,
9019:      614,   238,   239,   615,   616,   242,   617,   243,   618,   619,
9020:      620,   246,   247,   621,   248,   249,   250,   251,   252,   253,
9021:      254,   622,   256,   257,   258,   259,   623,   260,   261,   262,
9022:      263,   264,   265,   266,   624,   267,   625,   626,   270,   271,
9023:      272,   273,   274,   627,   628,   629,   630,   631,   278,   632,
9024:      633,   281,   634,   283,   284,   285,   286,   287,   288,   635,
9025:      636,   289,   637,   291,   638,   639,   293,   294,   295,   296,
9026:      297,   298,   299,   300,   640,   302,   303,   304,   305,   306,
9027:      307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
9028:      317,   318,   319,   320,   321,   641,   642,   643,   325,   326,
9029:      327,   644,   645,   329,   330,   646,   332,   647,   648,   334,
9030:      649,   336,   337,   338,   650,   339,   340,   651,   652,   341,
9031:      342,   343,   653,   654,   344,   345,   655,   656,   348,   657,
9032:      658,   351,   352,   353,   354,   355,   356,   357,   358,   359,
9033:      360,   361,   659,   660,   661,   662,   362,   363,   663,   664,
9034:      366,   367,   665,   369,   370,   371,   666,   372,   373,   374,
9035:      375,   376,   377,   667,   378,   379,   380,   381,   382,   668,
9036:      384,   385,   386,   387,   669,   388,   389,   390,   391,   392,
9037:      393,   394,   395,   396,   397,   398,   399,   400,   670,   401,
9038:      402,   671,   404,   405,   406,   672,   408,   409,   410,   411,
9039:      412,   413,   414,   415,   416,   417,   418,   419,   420,   673,
9040:      674,   421,   422,   423,   424,   425,   426,   675,   428,   429,
9041:      676,   677,   431,   432,   678,   434,   679,   435,   436,   437,
9042:      438,   439,   440,   441,   442,   443,   444,   445,   446,   680,
9043:      448,   681,   682,   683,   450,   451,   684,   452,   685,   454,
9044:      455,   456,   457,   458,   686,   459,   687,   688,   689,   690,
9045:      462,   463,   691,   465,   692,   693,   467,   468,   694,   470,
9046:      471,   472,   473,   474,   695,   696,   475,   476,   477,   697,
9047:      478,   479,   480,   481,   698,   482,   483,   484,   485,   486,
9048:      699,   700,   489,   701,   490,   702,   492,   493,   494,   495,
9049:      496,   497,   498,   703,   704,   499,   705,   706,   500,   501,
9050:      502,   503,   504,   505,   707,   708,   709,   710,   711,   712,
9051:      713,   714,   715,   716,   717,   517,   518,   519,   520,   560,
9052:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
9053:        0,     0,     0,     0,     0,     0,     0,     0,   118,   119,
9054:      120,   121,   122,   123,   124,   125,   561,   126,   127,   128,
9055:      562,   563,   564,   565,   566,   567,   568,   569,   570,   130,
9056:      131,   571,   132,   133,   134,   572,   136,   137,   138,   573,
9057:      574,   575,   576,   577,   578,   144,   145,   146,   147,   148,
9058:      149,   579,   580,   150,   151,   152,   153,   581,   582,   156,
9059:      583,   157,   158,   159,   160,   584,   585,   586,   587,   588,
9060:      164,   165,   166,   167,   168,   589,   170,   171,   172,   590,
9061:      173,   174,   175,   176,   177,   178,   591,   592,   180,   181,
9062:      182,   183,   184,   185,   186,   187,   188,   189,   594,   191,
9063:      192,   595,   194,   596,   195,   597,   196,   197,   198,   199,
9064:      200,   201,   598,   599,   202,   203,   204,   205,   600,   601,
9065:      206,   207,   208,   209,   210,   602,   211,   212,   213,   603,
9066:      214,   215,   216,   604,   217,   218,   219,   220,   605,   222,
9067:      223,   224,   225,   226,   227,   606,   607,   229,   608,   230,
9068:      231,   609,   233,   610,   234,   611,   235,   612,   613,   614,
9069:      238,   239,   615,   616,   242,   617,   243,   618,   619,   620,
9070:      246,   247,   621,   248,   249,   250,   251,   252,   949,   254,
9071:      622,   256,   257,   258,   259,   623,   260,   261,   262,   263,
9072:      264,   265,   266,   624,   267,   625,   626,   270,   271,   272,
9073:      273,   274,   627,   628,   629,   630,   631,   278,   632,   633,
9074:      281,   634,   283,   284,   285,   286,   287,   288,   635,   636,
9075:      289,   637,   291,   638,   639,   293,   294,   295,   296,   297,
9076:      298,   299,   300,   640,   302,   303,   304,   305,   306,   307,
9077:      308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
9078:      318,   319,   320,   321,   641,   642,   643,   325,   326,   327,
9079:      644,   645,   329,   330,   646,   332,   647,   648,   334,   649,
9080:      336,   337,   338,   650,   339,   340,   651,   652,   341,   342,
9081:      343,   653,   654,   344,   345,   655,   656,   348,   657,   658,
9082:      351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
9083:      361,   659,   660,   661,   662,   362,   363,   663,   664,   366,
9084:      367,   665,   369,   370,   371,   666,   372,   373,   374,   375,
9085:      376,   377,   667,   378,   379,   380,   381,   382,   668,   384,
9086:      385,   386,   387,   669,   388,   389,   390,   391,   392,   393,
9087:      394,   395,   396,   397,   398,   399,   400,   670,   401,   402,
9088:      671,   404,   405,   406,   672,   408,   409,   410,   411,   412,
9089:      413,   414,   415,   416,   417,   418,   419,   420,   673,   674,
9090:      421,   422,   423,   424,   425,   426,   675,   428,   429,   676,
9091:      677,   431,   432,   678,   434,   679,   435,   436,   437,   438,
9092:      439,   440,   441,   442,   443,   444,   445,   446,   680,   448,
9093:      681,   682,   683,   450,   451,   684,   452,   685,   454,   455,
9094:      456,   457,   458,   686,   459,   687,   688,   689,   690,   462,
9095:      463,   691,   465,   692,   693,   467,   468,   694,   470,   471,
9096:      472,   473,   474,   695,   696,   475,   476,   477,   697,   478,
9097:      479,   480,   481,   698,   482,   483,   484,   485,   486,   699,
9098:      700,   489,   701,   490,   702,   492,   493,   494,   495,   496,
9099:      497,   498,   703,   704,   499,   705,   706,   500,   501,   502,
9100:      503,   504,   505,   707,   708,   709,   710,   711,   712,   713,
9101:      714,   715,   716,   717,   517,   518,   519,   520,   560,     0,
9102:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
9103:        0,     0,     0,     0,     0,     0,     0,   118,   119,   120,
9104:      121,   122,   123,   124,   125,   561,   126,   127,   128,   562,
9105:      563,   564,   565,   566,   567,   568,   569,   570,   130,   131,
9106:      571,   132,   133,   134,   572,   136,   137,   138,   573,   574,
9107:      575,   576,   577,   578,   144,   145,   146,   147,   148,   149,
9108:      579,   580,   150,   151,   152,   153,   581,   582,   156,   583,
9109:      157,   158,   159,   160,   584,   585,   586,   587,   588,   164,
9110:      165,   166,   167,   168,   589,   170,   171,   172,   590,   173,
9111:      174,   175,   176,   177,   178,   591,   592,   180,   181,   182,
9112:      183,   184,   185,   186,   187,   188,   189,   594,   191,   192,
9113:      595,   194,   596,   195,   597,   196,   197,   198,   199,   200,
9114:      201,   598,   599,   202,   203,   204,   205,   600,   601,   206,
9115:      207,   208,   209,   210,   602,   211,   212,   213,   603,   214,
9116:      215,   216,   604,   217,   218,   219,   220,   605,   222,   223,
9117:      224,   225,   226,   227,   606,   607,   229,   608,   230,   231,
9118:      609,   233,   610,   234,   611,   235,   612,   613,   614,   238,
9119:      239,   615,   616,   242,   617,   243,   618,   619,   620,   246,
9120:      247,   621,   248,   249,   250,   251,   252,   253,   254,   622,
9121:      256,   257,   258,   259,   623,   260,   261,   262,   263,   264,
9122:      265,   266,   624,   267,   625,   626,   270,   271,   272,   273,
9123:      274,   627,   628,   629,   630,   631,   278,   632,   633,   281,
9124:      634,   283,   284,   285,   286,   287,   288,   635,   636,   289,
9125:      637,   291,   638,   639,   293,   294,   295,   296,   297,   298,
9126:      299,   300,   640,   302,   303,   304,   305,   306,   307,   308,
9127:      309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
9128:      319,   320,   321,   641,   642,   643,   325,   326,   327,   644,
9129:      645,   329,   330,   646,   332,   647,   648,   334,   649,   336,
9130:      337,   338,   650,   339,   340,   651,   652,   341,   342,   343,
9131:      653,   654,   344,   345,   655,   656,   348,   657,   658,   351,
9132:      352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
9133:      659,   660,   661,   662,   362,   363,   663,   664,   366,   367,
9134:      665,   369,   370,   371,   666,   372,   373,   374,   375,   376,
9135:      377,   667,   378,   379,   380,   381,   382,   668,   384,   385,
9136:      386,   387,   669,   388,   389,   390,   391,   392,   393,   394,
9137:      395,   396,   397,   398,   399,   400,   670,   401,   402,   671,
9138:      404,   405,   406,   672,   408,   409,   410,   411,   412,   413,
9139:      414,   415,   416,   417,   418,   419,   420,   673,   674,   421,
9140:      422,   423,   424,   425,   426,   675,   428,   429,   676,   677,
9141:      431,   432,   678,   434,   679,   435,   436,   437,   438,   439,
9142:      440,   441,   442,   443,   444,   445,   446,   680,   448,   681,
9143:      682,   683,   450,   451,   684,   452,   685,   454,   455,   456,
9144:      457,   458,   686,   459,   687,   688,   689,   690,   462,   463,
9145:      691,   465,   692,   693,   467,   468,   694,   470,   471,   472,
9146:      473,   474,   695,   696,   475,   476,   477,   697,   478,   479,
9147:      480,   481,   698,   482,   483,   484,   485,   486,   699,   700,
9148:      489,   701,   490,   702,   492,   493,   494,   495,   496,   497,
9149:      498,   703,   704,   499,   705,   706,   500,   501,   502,   503,
9150:      504,   505,   707,   708,   709,   710,   711,   712,   713,   714,
9151:      715,   716,   717,   517,   518,   519,   520,   560,     0,     0,
9152:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
9153:        0,     0,     0,     0,     0,     0,   118,   119,   120,   121,
9154:     2266,   123,   124,   125,   561,   126,   127,   128,   562,   563,
9155:      564,   565,   566,   567,   568,   569,   570,   130,   131,   571,
9156:      132,   133,   134,   572,   136,   137,   138,   573,   574,   575,
9157:      576,   577,   578,   144,   145,   146,   147,   148,   149,   579,
9158:      580,   150,   151,   152,   153,   581,   582,   156,   583,   157,
9159:      158,   159,   160,   584,   585,   586,   587,   588,   164,   165,
9160:      166,   167,   168,   589,   170,   171,   172,   590,   173,   174,
9161:      175,   176,   177,   178,   591,   592,   180,   181,   182,   183,
9162:      184,   185,   186,   187,   188,   189,   594,   191,   192,   595,
9163:      194,   596,   195,   597,   196,   197,   198,   199,   200,   201,
9164:      598,   599,   202,   203,   204,   205,   600,   601,   206,   207,
9165:      208,  2267,   210,   602,   211,   212,   213,   603,   214,   215,
9166:      216,   604,   217,   218,   219,   220,   605,   222,   223,   224,
9167:      225,   226,   227,   606,   607,   229,   608,   230,   231,   609,
9168:      233,   610,   234,   611,   235,   612,   613,   614,   238,   239,
9169:      615,   616,   242,   617,   243,   618,   619,   620,   246,   247,
9170:      621,   248,   249,   250,   251,   252,   253,   254,   622,   256,
9171:      257,   258,   259,   623,   260,   261,   262,   263,   264,   265,
9172:      266,   624,   267,   625,   626,   270,   271,   272,   273,   274,
9173:      627,   628,   629,   630,   631,   278,   632,   633,   281,   634,
9174:      283,   284,   285,   286,   287,   288,   635,   636,   289,   637,
9175:      291,   638,   639,   293,   294,   295,   296,   297,   298,   299,
9176:      300,   640,   302,   303,   304,   305,   306,   307,   308,   309,
9177:      310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
9178:      320,   321,   641,   642,   643,   325,   326,   327,   644,   645,
9179:      329,   330,   646,   332,   647,   648,   334,   649,   336,   337,
9180:      338,   650,   339,   340,   651,   652,   341,   342,   343,   653,
9181:      654,   344,   345,   655,   656,   348,   657,   658,   351,   352,
9182:      353,   354,   355,   356,   357,   358,   359,   360,   361,   659,
9183:      660,   661,   662,   362,   363,   663,   664,   366,   367,   665,
9184:      369,   370,   371,   666,   372,   373,   374,   375,   376,   377,
9185:      667,   378,   379,   380,   381,   382,   668,   384,   385,   386,
9186:      387,   669,   388,   389,   390,   391,   392,   393,   394,   395,
9187:      396,   397,   398,   399,   400,   670,   401,   402,   671,   404,
9188:      405,   406,   672,   408,   409,   410,   411,   412,   413,   414,
9189:      415,   416,   417,   418,   419,   420,   673,   674,   421,   422,
9190:      423,   424,   425,  2268,   675,   428,   429,   676,   677,   431,
9191:      432,   678,   434,   679,   435,   436,   437,   438,   439,   440,
9192:      441,   442,   443,   444,   445,   446,   680,   448,   681,   682,
9193:      683,   450,   451,   684,   452,   685,   454,   455,   456,   457,
9194:      458,   686,   459,   687,   688,   689,   690,   462,   463,   691,
9195:      465,   692,   693,   467,   468,   694,   470,   471,   472,   473,
9196:      474,   695,   696,   475,   476,   477,   697,   478,   479,   480,
9197:      481,   698,   482,   483,   484,   485,   486,   699,   700,   489,
9198:      701,   490,   702,   492,   493,   494,   495,   496,   497,   498,
9199:      703,   704,   499,   705,   706,   500,   501,   502,   503,   504,
9200:      505,   707,   708,   709,   710,   711,   712,   713,   714,   715,
9201:      716,   717,   517,   518,   519,   520,   973,     0,   820,     0,
9202:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
9203:        0,     0,     0,     0,     0,   118,   119,   120,   121,   122,
9204:      123,   124,   125,     0,   126,   127,   128,     0,     0,     0,
9205:      565,     0,     0,     0,     0,   570,   130,   131,     0,   132,
9206:      133,   134,   572,   136,   137,   138,   573,   574,   575,   576,
9207:      577,     0,   144,   145,   146,   147,   148,   149,     0,     0,
9208:      150,   151,   152,   153,   581,   582,   156,     0,   157,   158,
9209:      159,   160,   584,     0,   586,     0,   588,   164,   165,   166,
9210:      167,   168,   589,   170,   171,   172,     0,   173,   174,   175,
9211:      176,   177,   178,     0,   592,   180,   181,   182,   183,   184,
9212:      185,   186,   187,   188,   189,   594,   191,   192,   595,   194,
9213:        0,   195,     0,   196,   197,   198,   199,   200,   201,     0,
9214:        0,   202,   203,   204,   205,     0,     0,   206,   207,   208,
9215:      209,   210,     0,   211,   212,   213,     0,   214,   215,   216,
9216:        0,   217,   218,   219,   220,   605,   222,   223,   224,   225,
9217:      226,   227,   606,  1357,   229,     0,   230,   231,   609,   233,
9218:        0,   234,     0,   235,   612,     0,   614,   238,   239,   615,
9219:      616,   242,     0,   243,     0,   619,   620,   246,   247,     0,
9220:      248,   249,   250,   251,   252,   253,   254,   622,   256,   257,
9221:      258,   259,     0,   260,   261,   262,   263,   264,   265,   266,
9222:        0,   267,   625,   626,   270,   271,   272,   273,   274,   627,
9223:      628,     0,   630,     0,   278,   632,   633,   281,   634,   283,
9224:      284,   285,   286,   287,   288,     0,     0,   289,   637,   291,
9225:      638,     0,   293,   294,   295,   296,   297,   298,   299,   300,
9226:      640,   302,   303,   304,   305,   306,   307,   308,   309,   310,
9227:      311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
9228:      321,   641,   642,   643,   325,   326,   327,   644,     0,   329,
9229:      330,   646,   332,     0,   648,   334,   649,   336,   337,   338,
9230:        0,   339,   340,  1358,     0,   341,   342,   343,     0,     0,
9231:      344,   345,   655,   656,   348,   657,   658,   351,   352,   353,
9232:      354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
9233:        0,     0,   362,   363,   663,   664,   366,   367,   665,   369,
9234:      370,   371,     0,   372,   373,   374,   375,   376,   377,     0,
9235:      378,   379,   380,   381,   382,   668,   384,   385,   386,   387,
9236:        0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
9237:      397,   398,   399,   400,     0,   401,   402,   671,   404,   405,
9238:      406,   672,   408,   409,   410,   411,   412,   413,   414,   415,
9239:      416,   417,   418,   419,   420,     0,   674,   421,   422,   423,
9240:      424,   425,   426,   675,   428,   429,     0,   677,   431,   432,
9241:      678,   434,     0,   435,   436,   437,   438,   439,   440,   441,
9242:      442,   443,   444,   445,   446,   680,   448,   681,     0,     0,
9243:      450,   451,     0,   452,   685,   454,   455,   456,   457,   458,
9244:        0,   459,   687,   688,     0,     0,   462,   463,   691,   465,
9245:      692,  1359,   467,   468,   694,   470,   471,   472,   473,   474,
9246:        0,     0,   475,   476,   477,     0,   478,   479,   480,   481,
9247:        0,   482,   483,   484,   485,   486,   699,   700,   489,     0,
9248:      490,   702,   492,   493,   494,   495,   496,   497,   498,     0,
9249:        0,   499,     0,     0,   500,   501,   502,   503,   504,   505,
9250:      707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
9251:      717,   517,   518,   519,   520,   973,     0,     0,     0,     0,
9252:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
9253:        0,     0,     0,     0,   118,   119,   120,   121,   122,   123,
9254:      124,   125,     0,   126,   127,   128,     3,     4,     0,   565,
9255:        0,     0,     0,     0,   570,   130,   131,     0,   132,   133,
9256:      134,   572,   136,   137,   138,   573,   574,   575,   576,   577,
9257:        0,   144,   145,   146,   147,   148,   149,     0,     0,   150,
9258:      151,   152,   153,   581,   582,   156,     0,   157,   158,   159,
9259:      160,   584,     0,   586,     0,   588,   164,   165,   166,   167,
9260:      168,   589,   170,   171,   172,     0,   173,   174,   175,   176,
9261:      177,   178,     0,   592,   180,   181,   182,   183,   184,   185,
9262:      186,   187,   188,   189,   594,   191,   192,   595,   194,     0,
9263:      195,     0,   196,   197,   198,   199,   200,   201,     0,     0,
9264:      202,   203,   204,   205,     0,     0,   206,   207,   208,   209,
9265:      210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
9266:      217,   218,   219,   220,   605,   222,   223,   224,   225,   226,
9267:      227,   606,     0,   229,     0,   230,   231,   609,   233,     0,
9268:      234,     0,   235,   612,     0,   614,   238,   239,   615,   616,
9269:      242,     0,   243,     0,   619,   620,   246,   247,     0,   248,
9270:      249,   250,   251,   252,   253,   254,   622,   256,   257,   258,
9271:      259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
9272:      267,   625,   626,   270,   271,   272,   273,   274,   627,   628,
9273:        0,   630,     0,   278,   632,   633,   281,   634,   283,   284,
9274:      285,   286,   287,   288,     0,     0,   289,   637,   291,   638,
9275:        0,   293,   294,   295,   296,   297,   298,   299,   300,   640,
9276:      302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
9277:      312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
9278:      641,   642,   643,   325,   326,   327,   644,     0,   329,   330,
9279:      646,   332,     0,   648,   334,   649,   336,   337,   338,     0,
9280:      339,   340,     0,     0,   341,   342,   343,     0,     0,   344,
9281:      345,   655,   656,   348,   657,   658,   351,   352,   353,   354,
9282:      355,   356,   357,   358,   359,   360,   361,     0,     0,     0,
9283:        0,   362,   363,   663,   664,   366,   367,   665,   369,   370,
9284:      371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
9285:      379,   380,   381,   382,   668,   384,   385,   386,   387,     0,
9286:      388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
9287:      398,   399,   400,     0,   401,   402,   671,   404,   405,   406,
9288:      672,   408,   409,   410,   411,   412,   413,   414,   415,   416,
9289:      417,   418,   419,   420,     0,   674,   421,   422,   423,   424,
9290:      425,   426,   675,   428,   429,     0,   677,   431,   432,   678,
9291:      434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
9292:      443,   444,   445,   446,   680,   448,   681,     0,     0,   450,
9293:      451,     0,   452,   685,   454,   455,   456,   457,   458,     0,
9294:      459,   687,   688,     0,     0,   462,   463,   691,   465,   692,
9295:        0,   467,   468,   694,   470,   471,   472,   473,   474,     0,
9296:        0,   475,   476,   477,     0,   478,   479,   480,   481,     0,
9297:      482,   483,   484,   485,   486,   699,   700,   489,     0,   490,
9298:      702,   492,   493,   494,   495,   496,   497,   498,     0,     0,
9299:      499,     0,     0,   500,   501,   502,   503,   504,   505,   707,
9300:      708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
9301:      517,   518,   519,   520,   117,     0,     0,     0,     0,     0,
9302:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
9303:        0,     0,     0,   118,   119,   120,   121,   122,   123,   124,
9304:      125,     0,   126,   127,   128,     0,     0,     0,     0,     0,
9305:        0,     0,     0,   129,   130,   131,     0,   132,   133,   134,
9306:      135,   136,   137,   138,   139,   140,   141,   142,   143,     0,
9307:      144,   145,   146,   147,   148,   149,     0,   790,   150,   151,
9308:      152,   153,   154,   155,   156,     0,   157,   158,   159,   160,
9309:      791,     0,   792,     0,   163,   164,   165,   166,   167,   168,
9310:      169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
9311:      178,     0,   179,   180,   181,   182,   183,   184,   185,   186,
9312:      187,   188,   189,   190,   191,   192,   193,   194,     0,   195,
9313:        0,   196,   197,   198,   199,   200,   201,     0,     0,   202,
9314:      203,   204,   205,     0,     0,   206,   207,   208,   209,   210,
9315:        0,   211,   212,   213,     0,   214,   215,   216,     0,   217,
9316:      218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
9317:      793,     0,   229,     0,   230,   231,   232,   233,     0,   234,
9318:        0,   235,   236,     0,   237,   238,   239,   240,   241,   242,
9319:        0,   243,     0,   244,   245,   246,   247,     0,   248,   249,
9320:      250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
9321:        0,   260,   261,   262,   263,   264,   265,   266,     0,   267,
9322:      268,   269,   270,   271,   272,   273,   274,   275,   276,     0,
9323:      277,     0,   278,   279,   280,   281,   282,   283,   284,   285,
9324:      286,   287,   288,     0,     0,   289,   290,   291,   292,     0,
9325:      293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
9326:      303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
9327:      313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
9328:      323,   324,   325,   326,   327,   328,     0,   329,   330,   331,
9329:      332,     0,   795,   334,   335,   336,   337,   338,     0,   339,
9330:      340,     0,     0,   341,   342,   343,     0,     0,   344,   345,
9331:      346,   347,   348,   349,   797,   351,   352,   353,   354,   355,
9332:      356,   357,   358,   359,   360,   361,     0,     0,     0,     0,
9333:      362,   363,   798,   365,   366,   367,   368,   369,   370,   371,
9334:        0,   372,   373,   374,   375,   376,   377,     0,   378,   379,
9335:      380,   381,   382,   383,   384,   385,   386,   387,     0,   388,
9336:      389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
9337:      399,   400,     0,   401,   402,   403,   404,   405,   406,   407,
9338:      408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
9339:      418,   419,   420,     0,     0,   421,   422,   423,   424,   425,
9340:      426,   427,   428,   429,     0,   430,   431,   432,   433,   434,
9341:        0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
9342:      444,   445,   446,   447,   448,   800,     0,     0,   450,   451,
9343:        0,   452,   453,   454,   455,   456,   457,   458,     0,   459,
9344:      460,   461,     0,     0,   462,   463,   801,   465,   802,     0,
9345:      467,   468,   803,   470,   471,   472,   473,   474,     0,     0,
9346:      475,   476,   477,     0,   478,   479,   480,   481,     0,   482,
9347:      483,   484,   485,   486,   487,   488,   489,     0,   490,   491,
9348:      492,   493,   494,   495,   496,   497,   498,     0,     0,   499,
9349:        0,     0,   500,   501,   502,   503,   504,   505,   506,   507,
9350:      508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
9351:      518,   519,   520,   117,     0,     0,     0,     0,     0,     0,
9352:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
9353:        0,     0,   118,   119,   120,   121,   122,   123,   124,   125,
9354:        0,   126,   127,   128,     0,     0,     0,     0,     0,     0,
9355:        0,     0,   129,   130,   131,     0,   132,   133,   134,   135,
9356:      136,   137,   138,   139,   140,   141,   142,   143,     0,   144,
9357:      145,   146,   147,   148,   149,     0,     0,   150,   151,   152,
9358:      153,   154,   155,   156,     0,   157,   158,   159,   160,   161,
9359:        0,   162,     0,   163,   164,   165,   166,   167,   168,   169,
9360:      170,   171,   172,     0,   173,   174,   175,   176,   177,   178,
9361:        0,   179,   180,   181,   182,   183,   184,   185,   186,   187,
9362:      188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
9363:      196,   197,   198,   199,   200,   201,     0,     0,   202,   203,
9364:      204,   205,     0,     0,   206,   207,   208,   209,   210,     0,
9365:      211,   212,   213,     0,   214,   215,   216,     0,   217,   218,
9366:      219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
9367:        0,   229,     0,   230,   231,   232,   233,     0,   234,     0,
9368:      235,   236,     0,   237,   238,   239,   240,   241,   242,     0,
9369:      243,     0,   244,   245,   246,   247,     0,   248,   249,   250,
9370:      251,   252,   253,   254,   255,   256,   257,   258,   259,     0,
9371:      260,   261,   262,   263,   264,   265,   266,     0,   267,   268,
9372:      269,   270,   271,   272,   273,   274,   275,   276,     0,   277,
9373:        0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
9374:      287,   288,     0,     0,   289,   290,   291,   292,     0,   293,
9375:      294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
9376:      304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
9377:      314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
9378:      324,   325,   326,   327,   328,     0,   329,   330,   331,   332,
9379:        0,   333,   334,   335,   336,   337,   338,     0,   339,   340,
9380:        0,     0,   341,   342,   343,     0,     0,   344,   345,   346,
9381:      347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
9382:      357,   358,   359,   360,   361,     0,     0,     0,     0,   362,
9383:      363,   364,   365,   366,   367,   368,   369,   370,   371,     0,
9384:      372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
9385:      381,   382,   383,   384,   385,   386,   387,     0,   388,   389,
9386:      390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
9387:      400,     0,   401,   402,   403,   404,   405,   406,   407,   408,
9388:      409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
9389:      419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
9390:      427,   428,   429,     0,   430,   431,   432,   433,   434,     0,
9391:      435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
9392:      445,   446,   447,   448,   449,     0,     0,   450,   451,     0,
9393:      452,   453,   454,   455,   456,   457,   458,     0,   459,   460,
9394:      461,     0,     0,   462,   463,   464,   465,   466,     0,   467,
9395:      468,   469,   470,   471,   472,   473,   474,     0,     0,   475,
9396:      476,   477,     0,   478,   479,   480,   481,     0,   482,   483,
9397:      484,   485,   486,   487,   488,   489,     0,   490,   491,   492,
9398:      493,   494,   495,   496,   497,   498,     0,     0,   499,     0,
9399:        0,   500,   501,   502,   503,   504,   505,   506,   507,   508,
9400:      509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
9401:      519,   520,   528,     0,     0,     0,     0,     0,     0,     0,
9402:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
9403:        0,   118,   119,   120,   121,   122,   123,   124,   125,     0,
9404:      126,   127,   128,     0,     0,     0,     0,     0,     0,     0,
9405:        0,     0,   130,   131,     0,   132,   133,   134,     0,   136,
9406:      137,   138,   139,   140,     0,   142,   143,     0,   144,   145,
9407:      146,   147,   148,   149,     0,     0,   150,   151,   152,   153,
9408:      154,   155,   156,  1758,   157,   158,   159,   160,   161,     0,
9409:        0,  1759,   163,   164,   165,   166,   167,   168,     0,   170,
9410:      171,   172,  1760,   173,   174,   175,   176,   177,   178,     0,
9411:        0,   180,   181,   182,   183,   184,   185,   186,   187,   188,
9412:      189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
9413:      197,   198,   199,   200,   201,     0,     0,   202,   203,   204,
9414:      205,     0,     0,   206,   207,   208,   209,   210,     0,   211,
9415:      212,   213,     0,   214,   215,   216,     0,   217,   218,   219,
9416:      220,   221,   222,   223,   224,   225,   226,   227,   228,     0,
9417:      229,     0,   230,   231,   232,   233,     0,   234,  1761,   235,
9418:        0,     0,     0,   238,   239,   529,     0,   242,     0,   243,
9419:        0,   244,   245,   246,   247,     0,   248,   249,   250,   251,
9420:      252,  1762,   254,     0,   256,   257,   258,   259,     0,   260,
9421:      261,   262,   263,   264,   265,   266,     0,   267,     0,   269,
9422:      270,   271,   272,   273,   274,   275,   276,     0,   277,     0,
9423:      278,     0,     0,   281,     0,   283,   284,   285,   286,   287,
9424:      288,     0,     0,   289,     0,   291,     0,     0,   293,   294,
9425:      295,   296,   297,   298,   299,   300,   530,   302,   303,   304,
9426:      305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
9427:      315,   316,   317,   318,   319,   320,   321,   322,     0,   324,
9428:      325,   326,   327,   328,     0,   329,   330,     0,   332,     0,
9429:      333,   334,   335,   336,   337,   338,     0,   339,   340,     0,
9430:        0,   341,   342,   343,     0,     0,   344,   345,   346,     0,
9431:      348,     0,   350,   351,   352,   353,   354,   355,   356,   357,
9432:      358,   359,   360,   361,     0,     0,     0,     0,   362,   363,
9433:      364,     0,   366,   367,   368,   369,   370,   371,  1763,   372,
9434:      373,   374,   375,   376,   377,     0,   378,   379,   380,   381,
9435:      382,   383,   384,   385,   386,   387,     0,   388,   389,   390,
9436:      391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
9437:        0,   401,   402,     0,   404,   405,   406,   407,   408,   409,
9438:      410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
9439:      420,     0,     0,   421,   422,   423,   424,   425,   426,   427,
9440:      428,   429,     0,     0,   431,   432,   433,   434,     0,   435,
9441:      436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
9442:      446,   531,   448,   449,     0,     0,   450,   451,     0,   452,
9443:        0,   454,   455,   456,   457,   458,     0,   459,   460,   461,
9444:        0,     0,   462,   463,   464,   465,   466,     0,   467,   468,
9445:      469,   470,   471,   472,   473,   474,     0,  1764,   475,   476,
9446:      477,     0,   478,   479,   480,   481,     0,   482,   483,   484,
9447:      485,   486,   487,   488,   489,     0,   490,     0,   492,   493,
9448:      494,   495,   496,   497,   498,     0,     0,   499,     0,     0,
9449:      500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
9450:      510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
9451:      520,   528,     0,     0,     0,     0,     0,     0,     0,     0,
9452:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
9453:      118,   119,   120,   121,   122,   123,   124,   125,     0,   126,
9454:      127,   128,     0,     0,     0,     0,     0,     0,     0,     0,
9455:        0,   130,   131,     0,   132,   133,   134,     0,   136,   137,
9456:      138,   139,   140,     0,   142,   143,     0,   144,   145,   146,
9457:      147,   148,   149,     0,     0,   150,   151,   152,   153,   154,
9458:      155,   156,  1758,   157,   158,   159,   160,   161,     0,     0,
9459:        0,   163,   164,   165,   166,   167,   168,     0,   170,   171,
9460:      172,  1760,   173,   174,   175,   176,   177,   178,     0,     0,
9461:      180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
9462:      190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
9463:      198,   199,   200,   201,     0,     0,   202,   203,   204,   205,
9464:        0,     0,   206,   207,   208,   209,   210,     0,   211,   212,
9465:      213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
9466:      221,   222,   223,   224,   225,   226,   227,   228,     0,   229,
9467:        0,   230,   231,   232,   233,     0,   234,  1761,   235,     0,
9468:        0,     0,   238,   239,   529,     0,   242,     0,   243,     0,
9469:      244,   245,   246,   247,     0,   248,   249,   250,   251,   252,
9470:      253,   254,     0,   256,   257,   258,   259,     0,   260,   261,
9471:      262,   263,   264,   265,   266,     0,   267,     0,   269,   270,
9472:      271,   272,   273,   274,   275,   276,     0,   277,     0,   278,
9473:        0,     0,   281,     0,   283,   284,   285,   286,   287,   288,
9474:        0,     0,   289,     0,   291,  2351,     0,   293,   294,   295,
9475:      296,   297,   298,   299,   300,   530,   302,   303,   304,   305,
9476:      306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
9477:      316,   317,   318,   319,   320,   321,   322,     0,   324,   325,
9478:      326,   327,   328,     0,   329,   330,     0,   332,     0,   333,
9479:      334,   335,   336,   337,   338,     0,   339,   340,     0,     0,
9480:      341,   342,   343,     0,     0,   344,   345,   346,     0,   348,
9481:        0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
9482:      359,   360,   361,     0,     0,     0,     0,   362,   363,   364,
9483:        0,   366,   367,   368,   369,   370,   371,  1763,   372,   373,
9484:      374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
9485:      383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
9486:      392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
9487:      401,   402,     0,   404,   405,   406,   407,   408,   409,   410,
9488:      411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
9489:        0,     0,   421,   422,   423,   424,   425,   426,   427,   428,
9490:      429,     0,     0,   431,   432,   433,   434,     0,   435,   436,
9491:      437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
9492:      531,   448,   449,     0,     0,   450,   451,     0,   452,     0,
9493:      454,   455,   456,   457,   458,     0,   459,   460,   461,     0,
9494:        0,   462,   463,   464,   465,   466,     0,   467,   468,   469,
9495:      470,   471,   472,   473,   474,     0,  1764,   475,   476,   477,
9496:        0,   478,   479,   480,   481,     0,   482,   483,   484,   485,
9497:      486,   487,   488,   489,     0,   490,     0,   492,   493,   494,
9498:      495,   496,   497,   498,     0,     0,   499,     0,     0,   500,
9499:      501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
9500:      511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
9501:      528,     0,   554,     0,     0,     0,     0,     0,     0,     0,
9502:        0,     0,     0,     0,     0,     0,     0,     0,     0,   118,
9503:      119,   120,   121,   122,   123,   124,   125,     0,   126,   127,
9504:      128,     3,     4,     0,     0,     0,     0,     0,     0,     0,
9505:      130,   131,     0,   132,   133,   134,     0,   136,   137,   138,
9506:      139,   140,     0,   142,   143,     0,   144,   145,   146,   147,
9507:      148,   149,     0,     0,   150,   151,   152,   153,   154,   155,
9508:      156,     0,   157,   158,   159,   160,   161,     0,     0,     0,
9509:      163,   164,   165,   166,   167,   168,     0,   170,   171,   172,
9510:        0,   173,   174,   175,   176,   177,   178,     0,     0,   180,
9511:      181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
9512:      191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
9513:      199,   200,   201,     0,     0,   202,   203,   204,   205,     0,
9514:        0,   206,   207,   208,   209,   210,     0,   211,   212,   213,
9515:        0,   214,   215,   216,     0,   217,   218,   219,   220,   221,
9516:      222,   223,   224,   225,   226,   227,   228,     0,   229,     0,
9517:      230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
9518:        0,   238,   239,   529,     0,   242,     0,   243,     0,   244,
9519:      245,   246,   247,     0,   248,   249,   250,   251,   252,   253,
9520:      254,     0,   256,   257,   258,   259,     0,   260,   261,   262,
9521:      263,   264,   265,   266,     0,   267,     0,   269,   270,   271,
9522:      272,   273,   274,   275,   276,     0,   277,     0,   278,     0,
9523:        0,   281,     0,   283,   284,   285,   286,   287,   288,     0,
9524:        0,   289,     0,   291,     0,     0,   293,   294,   295,   296,
9525:      297,   298,   299,   300,   530,   302,   303,   304,   305,   306,
9526:      307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
9527:      317,   318,   319,   320,   321,   322,     0,   324,   325,   326,
9528:      327,   328,     0,   329,   330,     0,   332,     0,   333,   334,
9529:      335,   336,   337,   338,     0,   339,   340,     0,     0,   341,
9530:      342,   343,     0,     0,   344,   345,   346,     0,   348,     0,
9531:      350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
9532:      360,   361,     0,     0,     0,     0,   362,   363,   364,     0,
9533:      366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
9534:      375,   376,   377,     0,   378,   379,   380,   381,   382,   383,
9535:      384,   385,   386,   387,     0,   388,   389,   390,   391,   392,
9536:      393,   394,   395,   396,   397,   398,   399,   400,     0,   401,
9537:      402,     0,   404,   405,   406,   407,   408,   409,   410,   411,
9538:      412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
9539:        0,   421,   422,   423,   424,   425,   426,   427,   428,   429,
9540:        0,     0,   431,   432,   433,   434,     0,   435,   436,   437,
9541:      438,   439,   440,   441,   442,   443,   444,   445,   446,   531,
9542:      448,   449,     0,     0,   450,   451,     0,   452,     0,   454,
9543:      455,   456,   457,   458,     0,   459,   460,   461,     0,     0,
9544:      462,   463,   464,   465,   466,     0,   467,   468,   469,   470,
9545:      471,   472,   473,   474,     0,     0,   475,   476,   477,     0,
9546:      478,   479,   480,   481,     0,   482,   483,   484,   485,   486,
9547:      487,   488,   489,     0,   490,     0,   492,   493,   494,   495,
9548:      496,   497,   498,     0,     0,   499,     0,     0,   500,   501,
9549:      502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
9550:      512,   513,   514,   515,   516,   517,   518,   519,   520,   528,
9551:        0,   554,     0,     0,     0,     0,     0,     0,     0,     0,
9552:        0,     0,     0,     0,     0,     0,     0,     0,   118,   119,
9553:      120,   121,   122,   123,   124,   125,   555,   126,   127,   128,
9554:        0,     0,     0,     0,     0,     0,     0,     0,     0,   130,
9555:      131,     0,   132,   133,   134,     0,   136,   137,   138,   139,
9556:      140,     0,   142,   143,     0,   144,   145,   146,   147,   148,
9557:      149,     0,     0,   150,   151,   152,   153,   154,   155,   156,
9558:        0,   157,   158,   159,   160,   161,     0,     0,     0,   163,
9559:      164,   165,   166,   167,   168,     0,   170,   171,   172,     0,
9560:      173,   174,   175,   176,   177,   178,     0,     0,   180,   181,
9561:      182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
9562:      192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
9563:      200,   201,     0,     0,   202,   203,   204,   205,     0,     0,
9564:      206,   207,   208,   209,   210,     0,   211,   212,   213,     0,
9565:      214,   215,   216,     0,   217,   218,   219,   220,   221,   222,
9566:      223,   224,   225,   226,   227,   228,     0,   229,     0,   230,
9567:      231,   232,   233,     0,   234,     0,   235,     0,     0,     0,
9568:      238,   239,   529,     0,   242,     0,   243,     0,   244,   245,
9569:      246,   247,     0,   248,   249,   250,   251,   252,   253,   254,
9570:        0,   256,   257,   258,   259,     0,   260,   261,   262,   263,
9571:      264,   265,   266,     0,   267,     0,   269,   270,   271,   272,
9572:      273,   274,   275,   276,     0,   277,     0,   278,     0,     0,
9573:      281,     0,   283,   284,   285,   286,   287,   288,     0,     0,
9574:      289,     0,   291,     0,     0,   293,   294,   295,   296,   297,
9575:      298,   299,   300,   530,   302,   303,   304,   305,   306,   307,
9576:      308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
9577:      318,   319,   320,   321,   322,     0,   324,   325,   326,   327,
9578:      328,     0,   329,   330,     0,   332,     0,   333,   334,   335,
9579:      336,   337,   338,     0,   339,   340,     0,     0,   341,   342,
9580:      343,     0,     0,   344,   345,   346,     0,   348,     0,   350,
9581:      351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
9582:      361,     0,     0,     0,     0,   362,   363,   364,     0,   366,
9583:      367,   368,   556,   370,   371,     0,   372,   373,   374,   375,
9584:      376,   377,     0,   378,   379,   380,   381,   382,   383,   384,
9585:      385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
9586:      394,   395,   396,   397,   398,   399,   400,     0,   401,   402,
9587:        0,   404,   405,   406,   407,   408,   409,   410,   411,   412,
9588:      413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
9589:      421,   422,   423,   424,   425,   426,   427,   428,   429,     0,
9590:        0,   431,   432,   433,   434,     0,   435,   436,   437,   438,
9591:      439,   440,   441,   442,   443,   444,   445,   446,   531,   448,
9592:      449,     0,     0,   450,   451,     0,   452,     0,   454,   455,
9593:      456,   457,   458,     0,   459,   460,   461,     0,     0,   462,
9594:      463,   464,   465,   466,     0,   467,   468,   469,   470,   471,
9595:      472,   473,   474,     0,     0,   475,   476,   477,     0,   478,
9596:      479,   480,   481,     0,   482,   483,   484,   485,   486,   487,
9597:      488,   489,     0,   490,     0,   492,   493,   494,   495,   496,
9598:      497,   498,     0,     0,   499,     0,     0,   500,   501,   502,
9599:      503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
9600:      513,   514,   515,   516,   517,   518,   519,   520,   528,     0,
9601:      554,     0,     0,     0,     0,     0,     0,     0,     0,     0,
9602:        0,     0,     0,     0,     0,     0,     0,   118,   119,   120,
9603:      121,   122,   123,   124,   125,     0,   126,   127,   128,     0,
9604:        0,     0,     0,     0,     0,     0,     0,     0,   130,   131,
9605:        0,   132,   133,   134,     0,   136,   137,   138,   139,   140,
9606:        0,   142,   143,     0,   144,   145,   146,   147,   148,   149,
9607:        0,     0,   150,   151,   152,   153,   154,   155,   156,     0,
9608:      157,   158,   159,   160,   161,     0,     0,     0,   163,   164,
9609:      165,   166,   167,   168,     0,   170,   171,   172,     0,   173,
9610:      174,   175,   176,   177,   178,     0,     0,   180,   181,   182,
9611:      183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
9612:      193,   194,     0,   195,     0,   196,   197,   198,   199,   200,
9613:      201,     0,     0,   202,   203,   204,   205,     0,     0,   206,
9614:      207,   208,   209,   210,     0,   211,   212,   213,     0,   214,
9615:      215,   216,     0,   217,   218,   219,   220,   221,   222,   223,
9616:      224,   225,   226,   227,   228,     0,   229,     0,   230,   231,
9617:      232,   233,     0,   234,     0,   235,     0,     0,     0,   238,
9618:      239,   529,     0,   242,     0,   243,     0,   244,   245,   246,
9619:      247,     0,   248,   249,   250,   251,   252,   253,   254,     0,
9620:      256,   257,   258,   259,     0,   260,   261,   262,   263,   264,
9621:      265,   266,     0,   267,     0,   269,   270,   271,   272,   273,
9622:      274,   275,   276,     0,   277,     0,   278,     0,     0,   281,
9623:        0,   283,   284,   285,   286,   287,   288,     0,     0,   289,
9624:        0,   291,     0,     0,   293,   294,   295,   296,   297,   298,
9625:      299,   300,   530,   302,   303,   304,   305,   306,   307,   308,
9626:      309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
9627:      319,   320,   321,   322,     0,   324,   325,   326,   327,   328,
9628:        0,   329,   330,     0,   332,     0,   333,   334,   335,   336,
9629:      337,   338,     0,   339,   340,     0,   796,   341,   342,   343,
9630:        0,     0,   344,   345,   346,     0,   348,     0,   350,   351,
9631:      352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
9632:        0,     0,     0,     0,   362,   363,   364,     0,   366,   367,
9633:      368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
9634:      377,     0,   378,   379,   380,   381,   382,   383,   384,   385,
9635:      386,   387,     0,   388,   389,   390,   391,   392,   393,   394,
9636:      395,   396,   397,   398,   399,   400,     0,   401,   402,     0,
9637:      404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
9638:      414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
9639:      422,   423,   424,   425,   426,   427,   428,   429,     0,     0,
9640:      431,   432,   433,   434,     0,   435,   436,   437,   438,   439,
9641:      440,   441,   442,   443,   444,   445,   446,   531,   448,   449,
9642:        0,     0,   450,   451,     0,   452,     0,   454,   455,   456,
9643:      457,   458,     0,   459,   460,   461,     0,     0,   462,   463,
9644:      464,   465,   466,     0,   467,   468,   469,   470,   471,   472,
9645:      473,   474,     0,     0,   475,   476,   477,     0,   478,   479,
9646:      480,   481,     0,   482,   483,   484,   485,   486,   487,   488,
9647:      489,     0,   490,     0,   492,   493,   494,   495,   496,   497,
9648:      498,     0,     0,   499,     0,     0,   500,   501,   502,   503,
9649:      504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
9650:      514,   515,   516,   517,   518,   519,   520,   528,     0,   554,
9651:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
9652:        0,     0,     0,     0,     0,     0,   118,   119,   120,   121,
9653:      122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
9654:        0,     0,     0,     0,     0,     0,     0,   130,   131,     0,
9655:      132,   133,   134,     0,   136,   137,   138,   139,   140,     0,
9656:      142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
9657:        0,   150,   151,   152,   153,   154,   155,   156,     0,   157,
9658:      158,   159,   160,   161,     0,     0,     0,   163,   164,   165,
9659:      166,   167,   168,     0,   170,   171,   172,     0,   173,   174,
9660:      175,   176,   177,   178,     0,     0,   180,   181,   182,   183,
9661:      184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
9662:      194,     0,   195,     0,   196,   197,   198,   199,   200,   201,
9663:        0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
9664:      208,   209,   210,     0,   211,   212,   213,     0,   214,   215,
9665:      216,     0,   217,   218,   219,   220,   221,   222,   223,   224,
9666:      225,   226,   227,   228,     0,   229,     0,   230,   231,   232,
9667:      233,     0,   234,     0,   235,     0,     0,     0,   238,   239,
9668:      529,     0,   242,     0,   243,     0,   244,   245,   246,   247,
9669:        0,   248,   249,   250,   251,   252,   903,   254,     0,   256,
9670:      257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
9671:      266,     0,   267,     0,   269,   270,   271,   272,   273,   274,
9672:      275,   276,     0,   277,     0,   278,     0,     0,   281,     0,
9673:      283,   284,   285,   286,   287,   288,     0,     0,   289,     0,
9674:      291,     0,     0,   293,   294,   295,   296,   297,   298,   299,
9675:      300,   530,   302,   303,   304,   305,   306,   307,   308,   309,
9676:      310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
9677:      320,   321,   322,     0,   324,   325,   326,   327,   328,     0,
9678:      329,   330,     0,   332,     0,   333,   334,   335,   336,   337,
9679:      338,     0,   339,   340,     0,   796,   341,   342,   343,     0,
9680:        0,   344,   345,   346,     0,   348,     0,   350,   351,   352,
9681:      353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
9682:        0,     0,     0,   362,   363,   364,     0,   366,   367,   368,
9683:      369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
9684:        0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
9685:      387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
9686:      396,   397,   398,   399,   400,     0,   401,   402,     0,   404,
9687:      405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
9688:      415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
9689:      423,   424,   425,   426,   427,   428,   429,     0,     0,   431,
9690:      432,   433,   434,     0,   435,   436,   437,   438,   439,   440,
9691:      441,   442,   443,   444,   445,   446,   531,   448,   449,     0,
9692:        0,   450,   451,     0,   452,     0,   454,   455,   456,   457,
9693:      458,     0,   459,   460,   461,     0,     0,   462,   463,   464,
9694:      465,   466,     0,   467,   468,   469,   470,   471,   472,   473,
9695:      474,     0,     0,   475,   476,   477,     0,   478,   479,   480,
9696:      481,     0,   482,   483,   484,   485,   486,   487,   488,   489,
9697:        0,   490,     0,   492,   493,   494,   495,   496,   497,   498,
9698:        0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
9699:      505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
9700:      515,   516,   517,   518,   519,   520,   528,     0,   554,     0,
9701:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
9702:        0,     0,     0,     0,     0,   118,   119,   120,   121,   122,
9703:      123,   124,   125,   947,   126,   127,   128,     0,     0,     0,
9704:        0,     0,     0,     0,     0,     0,   130,   131,     0,   132,
9705:      133,   134,     0,   136,   137,   138,   139,   140,     0,   142,
9706:      143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
9707:      150,   151,   152,   153,   154,   155,   156,     0,   157,   158,
9708:      159,   160,   161,     0,     0,     0,   163,   164,   165,   166,
9709:      167,   168,     0,   170,   171,   172,     0,   173,   174,   175,
9710:      176,   177,   178,     0,     0,   180,   181,   182,   183,   184,
9711:      185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
9712:        0,   195,     0,   196,   197,   198,   199,   200,   201,     0,
9713:        0,   202,   203,   204,   205,     0,     0,   206,   207,   208,
9714:      209,   210,     0,   211,   212,   213,     0,   214,   215,   216,
9715:        0,   217,   218,   219,   220,   221,   222,   223,   224,   225,
9716:      226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
9717:        0,   234,     0,   235,     0,     0,     0,   238,   239,   529,
9718:        0,   242,     0,   243,     0,   244,   245,   246,   247,     0,
9719:      248,   249,   250,   251,   252,   253,   254,     0,   256,   257,
9720:      258,   259,     0,   260,   261,   262,   263,   264,   265,   266,
9721:        0,   267,     0,   269,   270,   271,   272,   273,   274,   275,
9722:      276,     0,   277,     0,   278,     0,     0,   281,     0,   283,
9723:      284,   285,   286,   287,   288,     0,     0,   289,     0,   291,
9724:        0,     0,   293,   294,   295,   296,   297,   298,   299,   300,
9725:      530,   302,   303,   304,   305,   306,   307,   308,   309,   310,
9726:      311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
9727:      321,   322,     0,   324,   325,   326,   327,   328,     0,   329,
9728:      330,     0,   332,     0,   333,   334,   335,   336,   337,   338,
9729:        0,   339,   340,     0,     0,   341,   342,   343,     0,     0,
9730:      344,   345,   346,     0,   348,     0,   350,   351,   352,   353,
9731:      354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
9732:        0,     0,   362,   363,   364,     0,   366,   367,   368,   369,
9733:      370,   371,     0,   372,   373,   374,   375,   376,   377,     0,
9734:      378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
9735:        0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
9736:      397,   398,   399,   400,     0,   401,   402,     0,   404,   405,
9737:      406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
9738:      416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
9739:      424,   425,   426,   427,   428,   429,     0,     0,   431,   432,
9740:      433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
9741:      442,   443,   444,   445,   446,   531,   448,   449,     0,     0,
9742:      450,   451,     0,   452,     0,   454,   455,   456,   457,   458,
9743:        0,   459,   460,   461,     0,     0,   462,   463,   464,   465,
9744:      466,     0,   467,   468,   469,   470,   471,   472,   473,   474,
9745:        0,     0,   475,   476,   477,     0,   478,   479,   480,   481,
9746:        0,   482,   483,   484,   485,   486,   487,   488,   489,     0,
9747:      490,     0,   492,   493,   494,   495,   496,   497,   498,     0,
9748:        0,   499,     0,     0,   500,   501,   502,   503,   504,   505,
9749:      506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
9750:      516,   517,   518,   519,   520,   528,     0,   554,     0,     0,
9751:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
9752:        0,     0,     0,     0,   118,   119,   120,   121,   122,   123,
9753:      124,   125,     0,   126,   127,   128,     0,     0,     0,     0,
9754:        0,     0,     0,     0,     0,   130,   131,     0,   132,   133,
9755:      134,     0,   136,   137,   138,   139,   140,     0,   142,   143,
9756:        0,   144,   145,   146,   147,   148,   149,     0,     0,   150,
9757:      151,   152,   153,   154,   155,   156,     0,   157,   158,   159,
9758:      160,   161,     0,     0,     0,   163,   164,   165,   166,   167,
9759:      168,     0,   170,   171,   172,     0,   173,   174,   175,   176,
9760:      177,   178,     0,     0,   180,   181,   182,   183,   184,   185,
9761:      186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
9762:      195,     0,   196,   197,   198,   199,   200,   201,     0,     0,
9763:      202,   203,   204,   205,     0,     0,   206,   207,   208,   209,
9764:      210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
9765:      217,   218,   219,   220,   221,   222,   223,   224,   225,  1177,
9766:      227,   228,     0,   229,     0,   230,   231,   232,   233,     0,
9767:      234,     0,   235,     0,     0,     0,   238,   239,   529,     0,
9768:      242,     0,   243,     0,   244,   245,   246,   247,     0,   248,
9769:      249,   250,   251,   252,   253,   254,     0,   256,   257,   258,
9770:      259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
9771:      267,     0,   269,   270,   271,   272,   273,   274,   275,   276,
9772:        0,   277,     0,   278,     0,     0,   281,     0,   283,   284,
9773:      285,   286,   287,   288,     0,     0,   289,     0,   291,     0,
9774:        0,   293,   294,   295,   296,   297,   298,   299,   300,   530,
9775:      302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
9776:      312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
9777:      322,     0,   324,   325,   326,   327,   328,     0,   329,   330,
9778:        0,   332,     0,   333,   334,   335,   336,   337,   338,     0,
9779:      339,   340,     0,   796,   341,   342,   343,     0,     0,   344,
9780:      345,   346,     0,   348,     0,   350,   351,   352,   353,   354,
9781:      355,   356,   357,   358,   359,   360,   361,     0,     0,     0,
9782:        0,   362,   363,   364,     0,   366,   367,   368,   369,   370,
9783:      371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
9784:      379,   380,   381,   382,   383,   384,   385,   386,   387,     0,
9785:      388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
9786:      398,   399,   400,     0,   401,   402,     0,   404,   405,   406,
9787:      407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
9788:      417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
9789:      425,   426,   427,   428,   429,     0,     0,   431,   432,   433,
9790:      434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
9791:      443,   444,   445,   446,   531,   448,   449,     0,     0,   450,
9792:      451,     0,   452,     0,   454,   455,   456,   457,   458,     0,
9793:      459,   460,   461,     0,     0,   462,   463,   464,   465,   466,
9794:        0,   467,   468,   469,   470,   471,   472,   473,   474,     0,
9795:        0,   475,   476,   477,     0,   478,   479,   480,   481,     0,
9796:      482,   483,   484,   485,   486,   487,   488,   489,     0,   490,
9797:        0,   492,   493,   494,   495,   496,   497,   498,     0,     0,
9798:      499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
9799:      507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
9800:      517,   518,   519,   520,   528,  1967,     0,     0,     0,     0,
9801:     1968,     0,     0,     0,     0,     0,     0,     0,     0,     0,
9802:        0,     0,     0,   118,   119,   120,   121,   122,   123,   124,
9803:      125,     0,   126,   127,   128,     0,     0,     0,     0,     0,
9804:        0,     0,     0,     0,   130,   131,     0,   132,   133,   134,
9805:        0,   136,   137,   138,   139,   140,     0,   142,   143,     0,
9806:      144,   145,   146,   147,   148,   149,     0,     0,   150,   151,
9807:      152,   153,   154,   155,   156,     0,   157,   158,   159,   160,
9808:      161,     0,     0,     0,   163,   164,   165,   166,   167,   168,
9809:        0,   170,   171,   172,     0,   173,   174,   175,   176,   177,
9810:      178,     0,     0,   180,   181,   182,   183,   184,   185,   186,
9811:      187,   188,   189,   190,   191,   192,   193,   194,     0,   195,
9812:        0,   196,   197,   198,   199,   200,   201,     0,     0,   202,
9813:      203,   204,   205,     0,     0,   206,   207,   208,   209,   210,
9814:        0,   211,   212,   213,     0,   214,   215,   216,     0,   217,
9815:      218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
9816:      228,     0,   229,     0,   230,   231,   232,   233,     0,   234,
9817:        0,   235,     0,     0,     0,   238,   239,   529,     0,   242,
9818:        0,   243,     0,   244,   245,   246,   247,     0,   248,   249,
9819:      250,   251,   252,   253,   254,     0,   256,   257,   258,   259,
9820:        0,   260,   261,   262,   263,   264,   265,   266,     0,   267,
9821:        0,   269,   270,   271,   272,   273,   274,   275,   276,     0,
9822:      277,     0,   278,     0,     0,   281,     0,   283,   284,   285,
9823:      286,   287,   288,     0,     0,   289,     0,   291,     0,     0,
9824:      293,   294,   295,   296,   297,   298,   299,   300,   530,   302,
9825:      303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
9826:      313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
9827:        0,   324,   325,   326,   327,   328,     0,   329,   330,     0,
9828:      332,     0,   333,   334,   335,   336,   337,   338,     0,   339,
9829:      340,     0,     0,   341,   342,   343,     0,     0,   344,   345,
9830:      346,     0,   348,     0,   350,   351,   352,   353,   354,   355,
9831:      356,   357,   358,   359,   360,   361,     0,     0,     0,     0,
9832:      362,   363,   364,     0,   366,   367,   368,   369,   370,   371,
9833:        0,   372,   373,   374,   375,   376,   377,     0,   378,   379,
9834:      380,   381,   382,   383,   384,   385,   386,   387,     0,   388,
9835:      389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
9836:      399,   400,     0,   401,   402,     0,   404,   405,   406,   407,
9837:      408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
9838:      418,   419,   420,     0,     0,   421,   422,   423,   424,   425,
9839:      426,   427,   428,   429,     0,     0,   431,   432,   433,   434,
9840:        0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
9841:      444,   445,   446,   531,   448,   449,     0,     0,   450,   451,
9842:        0,   452,     0,   454,   455,   456,   457,   458,     0,   459,
9843:      460,   461,     0,     0,   462,   463,   464,   465,   466,     0,
9844:      467,   468,   469,   470,   471,   472,   473,   474,     0,     0,
9845:      475,   476,   477,     0,   478,   479,   480,   481,     0,   482,
9846:      483,   484,   485,   486,   487,   488,   489,     0,   490,     0,
9847:      492,   493,   494,   495,   496,   497,   498,     0,     0,   499,
9848:        0,     0,   500,   501,   502,   503,   504,   505,   506,   507,
9849:      508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
9850:      518,   519,   520,   528,     0,   554,     0,     0,     0,     0,
9851:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
9852:        0,     0,   118,   119,   120,   121,   122,   123,   124,   125,
9853:        0,   126,   127,   128,     0,     0,     0,     0,     0,     0,
9854:        0,     0,     0,   130,   131,     0,   132,   133,   134,     0,
9855:      136,   137,   138,   139,   140,     0,   142,   143,     0,   144,
9856:      145,   146,   147,   148,   149,     0,     0,   150,   151,   152,
9857:      153,   154,   155,   156,     0,   157,   158,   159,   160,   161,
9858:        0,     0,     0,   163,   164,   165,   166,   167,   168,     0,
9859:      170,   171,   172,     0,   173,   174,   175,   176,   177,   178,
9860:        0,     0,   180,   181,   182,   183,   184,   185,   186,   187,
9861:      188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
9862:      196,   197,   198,   199,   200,   201,     0,     0,   202,   203,
9863:      204,   205,     0,     0,   206,   207,   208,   209,   210,     0,
9864:      211,   212,   213,     0,   214,   215,   216,     0,   217,   218,
9865:      219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
9866:        0,   229,     0,   230,   231,   232,   233,     0,   234,     0,
9867:      235,     0,     0,     0,   238,   239,   529,     0,  1975,     0,
9868:      243,     0,   244,   245,   246,   247,     0,   248,   249,   250,
9869:      251,   252,   253,   254,     0,   256,   257,   258,   259,     0,
9870:      260,   261,   262,   263,   264,   265,   266,     0,   267,     0,
9871:      269,   270,   271,   272,   273,   274,   275,   276,     0,   277,
9872:        0,   278,     0,     0,   281,     0,   283,   284,   285,   286,
9873:      287,   288,     0,     0,   289,     0,   291,     0,     0,   293,
9874:      294,  1976,   296,   297,   298,   299,   300,   530,   302,   303,
9875:      304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
9876:      314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
9877:      324,   325,   326,   327,   328,     0,   329,   330,     0,   332,
9878:        0,   333,   334,   335,   336,   337,   338,     0,   339,   340,
9879:        0,     0,   341,   342,   343,     0,     0,   344,   345,   346,
9880:        0,   348,     0,   350,   351,   352,   353,   354,   355,   356,
9881:      357,   358,   359,   360,   361,     0,     0,     0,     0,   362,
9882:      363,   364,     0,   366,   367,   368,   369,   370,   371,     0,
9883:      372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
9884:      381,   382,   383,   384,   385,   386,   387,     0,   388,   389,
9885:      390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
9886:      400,     0,   401,   402,     0,   404,   405,   406,   407,   408,
9887:      409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
9888:      419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
9889:      427,   428,   429,     0,     0,   431,   432,   433,   434,     0,
9890:      435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
9891:      445,   446,   531,   448,   449,     0,     0,   450,   451,  1977,
9892:      452,     0,   454,  1978,   456,  1979,   458,     0,   459,   460,
9893:      461,     0,     0,   462,   463,   464,   465,   466,     0,   467,
9894:      468,   469,   470,   471,   472,   473,   474,     0,     0,   475,
9895:      476,  1980,     0,   478,   479,   480,   481,     0,   482,   483,
9896:      484,   485,   486,   487,   488,   489,     0,   490,     0,   492,
9897:      493,   494,   495,   496,   497,   498,     0,     0,   499,     0,
9898:        0,   500,   501,   502,   503,   504,   505,   506,   507,   508,
9899:      509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
9900:      519,   520,   528,     0,   554,     0,     0,     0,     0,     0,
9901:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
9902:        0,   118,   119,   120,   121,   122,   123,   124,   125,     0,
9903:      126,   127,   128,     0,     0,     0,     0,     0,     0,     0,
9904:        0,     0,   130,   131,     0,   132,   133,   134,     0,   136,
9905:      137,   138,   139,   140,     0,   142,   143,     0,   144,   145,
9906:      146,   147,   148,   149,     0,     0,   150,   151,   152,   153,
9907:      154,   155,   156,     0,   157,   158,   159,   160,   161,     0,
9908:        0,     0,   163,   164,   165,   166,   167,   168,     0,   170,
9909:      171,   172,     0,   173,   174,   175,   176,   177,   178,     0,
9910:        0,   180,   181,   182,   183,   184,   185,   186,   187,   188,
9911:      189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
9912:      197,   198,   199,   200,   201,     0,     0,   202,   203,   204,
9913:      205,     0,     0,   206,   207,   208,   209,   210,     0,   211,
9914:      212,   213,     0,   214,   215,   216,     0,   217,   218,   219,
9915:      220,   221,   222,   223,   224,   225,   226,   227,   228,     0,
9916:      229,     0,   230,   231,   232,   233,     0,   234,     0,   235,
9917:        0,     0,     0,   238,   239,   529,     0,   242,     0,   243,
9918:        0,   244,   245,   246,   247,     0,   248,   249,   250,   251,
9919:      252,   253,   254,     0,   256,   257,   258,   259,     0,   260,
9920:      261,   262,   263,   264,   265,   266,     0,   267,     0,   269,
9921:      270,   271,   272,   273,   274,   275,   276,     0,   277,     0,
9922:      278,     0,     0,   281,     0,   283,   284,   285,   286,   287,
9923:      288,     0,     0,   289,     0,   291,     0,     0,   293,   294,
9924:      295,   296,   297,   298,   299,   300,   530,   302,   303,   304,
9925:      305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
9926:      315,   316,   317,   318,   319,   320,   321,   322,     0,   324,
9927:      325,   326,   327,   328,     0,   329,   330,     0,   332,     0,
9928:      333,   334,   335,   336,   337,   338,     0,   339,   340,     0,
9929:        0,   341,   342,   343,     0,     0,   344,   345,   346,     0,
9930:      348,     0,   350,   351,   352,   353,   354,   355,   356,   357,
9931:      358,   359,   360,   361,     0,     0,     0,     0,   362,   363,
9932:      364,     0,   366,   367,   368,   369,   370,   371,     0,   372,
9933:      373,   374,   375,   376,   377,     0,   378,   379,   380,   381,
9934:      382,   383,   384,   385,   386,   387,     0,   388,   389,   390,
9935:      391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
9936:        0,   401,   402,     0,   404,   405,   406,   407,   408,   409,
9937:      410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
9938:      420,     0,     0,   421,   422,   423,   424,   425,   426,   427,
9939:      428,   429,     0,     0,   431,   432,   433,   434,     0,   435,
9940:      436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
9941:      446,   531,   448,   449,     0,     0,   450,   451,     0,   452,
9942:        0,   454,   455,   456,   457,   458,     0,   459,   460,   461,
9943:        0,     0,   462,   463,   464,   465,   466,     0,   467,   468,
9944:      469,   470,   471,   472,   473,   474,     0,     0,   475,   476,
9945:      477,     0,   478,   479,   480,   481,     0,   482,   483,   484,
9946:      485,   486,   487,   488,   489,     0,   490,     0,   492,   493,
9947:      494,   495,   496,   497,   498,     0,     0,   499,     0,     0,
9948:      500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
9949:      510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
9950:      520,   528,     0,   820,     0,     0,     0,     0,     0,     0,
9951:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
9952:      118,   119,   120,   121,   122,   123,   124,   125,     0,   126,
9953:      127,   128,     0,     0,     0,     0,     0,     0,     0,     0,
9954:        0,   130,   131,     0,   132,   133,   134,     0,   136,   137,
9955:      138,   139,   140,     0,   142,   143,     0,   144,   145,   146,
9956:      147,   148,   149,     0,     0,   150,   151,   152,   153,   154,
9957:      155,   156,     0,   157,   158,   159,   160,   161,     0,     0,
9958:        0,   163,   164,   165,   166,   167,   168,     0,   170,   171,
9959:      172,     0,   173,   174,   175,   176,   177,   178,     0,     0,
9960:      180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
9961:      190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
9962:      198,   199,   200,   201,     0,     0,   202,   203,   204,   205,
9963:        0,     0,   206,   207,   208,   209,   210,     0,   211,   212,
9964:      213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
9965:      221,   222,   223,   224,   225,   226,   227,   228,     0,   229,
9966:        0,   230,   231,   232,   233,     0,   234,     0,   235,     0,
9967:        0,     0,   238,   239,   529,     0,   242,     0,   243,     0,
9968:      244,   245,   246,   247,     0,   248,   249,   250,   251,   252,
9969:      253,   254,     0,   256,   257,   258,   259,     0,   260,   261,
9970:      262,   263,   264,   265,   266,     0,   267,     0,   269,   270,
9971:      271,   272,   273,   274,   275,   276,     0,   277,     0,   278,
9972:        0,     0,   281,     0,   283,   284,   285,   286,   287,   288,
9973:        0,     0,   289,     0,   291,     0,     0,   293,   294,   295,
9974:      296,   297,   298,   299,   300,   530,   302,   303,   304,   305,
9975:      306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
9976:      316,   317,   318,   319,   320,   321,   322,     0,   324,   325,
9977:      326,   327,   328,     0,   329,   330,     0,   332,     0,   333,
9978:      334,   335,   336,   337,   338,     0,   339,   340,     0,     0,
9979:      341,   342,   343,     0,     0,   344,   345,   346,     0,   348,
9980:        0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
9981:      359,   360,   361,     0,     0,     0,     0,   362,   363,   364,
9982:        0,   366,   367,   368,   369,   370,   371,     0,   372,   373,
9983:      374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
9984:      383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
9985:      392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
9986:      401,   402,     0,   404,   405,   406,   407,   408,   409,   410,
9987:      411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
9988:        0,     0,   421,   422,   423,   424,   425,   426,   427,   428,
9989:      429,     0,     0,   431,   432,   433,   434,     0,   435,   436,
9990:      437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
9991:      531,   448,   449,     0,     0,   450,   451,     0,   452,     0,
9992:      454,   455,   456,   457,   458,     0,   459,   460,   461,     0,
9993:        0,   462,   463,   464,   465,   466,     0,   467,   468,   469,
9994:      470,   471,   472,   473,   474,     0,     0,   475,   476,   477,
9995:        0,   478,   479,   480,   481,     0,   482,   483,   484,   485,
9996:      486,   487,   488,   489,     0,   490,     0,   492,   493,   494,
9997:      495,   496,   497,   498,     0,     0,   499,     0,     0,   500,
9998:      501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
9999:      511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
10000:      528,     0,     0,     0,     0,     0,     0,     0,     0,     0,
10001:        0,     0,     0,     0,     0,     0,     0,     0,     0,   118,
10002:      119,   120,   121,   122,   123,   124,   125,   826,   126,   127,
10003:      128,     0,     0,     0,     0,     0,     0,     0,     0,     0,
10004:      130,   131,     0,   132,   133,   134,     0,   136,   137,   138,
10005:      139,   140,     0,   142,   143,     0,   144,   145,   146,   147,
10006:      148,   149,     0,     0,   150,   151,   152,   153,   154,   155,
10007:      156,     0,   157,   158,   159,   160,   161,     0,     0,     0,
10008:      163,   164,   165,   166,   167,   168,     0,   170,   171,   172,
10009:        0,   173,   174,   175,   176,   177,   178,     0,     0,   180,
10010:      181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
10011:      191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
10012:      199,   200,   201,     0,     0,   202,   203,   204,   205,     0,
10013:        0,   206,   207,   208,   209,   210,     0,   211,   212,   213,
10014:        0,   214,   215,   216,     0,   217,   218,   219,   220,   221,
10015:      222,   223,   224,   225,   226,   227,   228,     0,   229,     0,
10016:      230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
10017:        0,   238,   239,   529,     0,   827,     0,   243,     0,   244,
10018:      245,   246,   247,     0,   248,   249,   250,   251,   252,   253,
10019:      254,     0,   256,   257,   258,   259,     0,   260,   261,   262,
10020:      263,   264,   265,   266,     0,   267,     0,   269,   270,   271,
10021:      272,   273,   274,   275,   276,     0,   277,     0,   278,     0,
10022:        0,   281,     0,   283,   284,   285,   286,   287,   288,     0,
10023:        0,   289,     0,   291,     0,     0,   293,   294,   828,   296,
10024:      297,   298,   299,   300,   530,   302,   303,   304,   305,   306,
10025:      307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
10026:      317,   318,   319,   320,   321,   322,     0,   324,   325,   326,
10027:      327,   328,     0,   329,   330,     0,   332,     0,   333,   334,
10028:      335,   336,   337,   338,     0,   339,   340,     0,     0,   341,
10029:      342,   343,     0,     0,   344,   345,   346,     0,   348,     0,
10030:      350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
10031:      360,   361,     0,     0,     0,     0,   362,   363,   364,     0,
10032:      366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
10033:      375,   376,   377,     0,   378,   379,   380,   381,   382,   383,
10034:      384,   385,   386,   387,     0,   388,   389,   390,   391,   392,
10035:      393,   394,   395,   396,   397,   398,   399,   400,     0,   401,
10036:      402,     0,   404,   405,   406,   407,   408,   409,   410,   411,
10037:      412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
10038:        0,   421,   422,   423,   424,   829,   426,   427,   428,   429,
10039:        0,     0,   431,   432,   433,   434,     0,   435,   436,   437,
10040:      438,   439,   440,   441,   442,   443,   444,   445,   446,   531,
10041:      448,   449,     0,     0,   450,   451,     0,   452,     0,   454,
10042:      455,   456,   457,   458,     0,   459,   830,   461,     0,     0,
10043:      831,   463,   464,   465,   466,     0,   467,   468,   469,   470,
10044:      471,   472,   473,   474,     0,     0,   475,   476,   477,     0,
10045:      478,   479,   480,   481,     0,   482,   483,   484,   485,   486,
10046:      487,   488,   832,     0,   490,     0,   492,   493,   494,   495,
10047:      496,   497,   498,     0,     0,   499,     0,     0,   500,   501,
10048:      502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
10049:      512,   513,   514,   515,   516,   517,   518,   519,   520,   528,
10050:        0,   554,     0,     0,     0,     0,     0,     0,     0,     0,
10051:        0,     0,     0,     0,     0,     0,     0,     0,   118,   119,
10052:      120,   121,   122,   123,   124,   125,     0,   126,   127,   128,
10053:        0,     0,     0,     0,     0,     0,     0,     0,     0,   130,
10054:      131,     0,   132,   133,   134,     0,   136,   137,   138,   139,
10055:      140,     0,   142,   143,     0,   144,   145,   146,   147,   148,
10056:      149,     0,     0,   150,   151,   152,   153,   154,   155,   156,
10057:        0,   157,   158,   159,   160,   161,     0,     0,     0,   163,
10058:      164,   165,   166,   167,   168,     0,   170,   171,   172,     0,
10059:      173,   174,   175,   176,   177,   178,     0,     0,   180,   181,
10060:      182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
10061:      192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
10062:      200,   201,     0,     0,   202,   203,   204,   205,     0,     0,
10063:      206,   207,   208,   209,   210,     0,   211,   212,   213,     0,
10064:      214,   215,   216,     0,   217,   218,   219,   220,   221,   222,
10065:      223,   224,   225,   226,   227,   228,     0,   229,     0,   230,
10066:      231,   232,   233,     0,   234,     0,   235,     0,     0,     0,
10067:      238,   239,   529,     0,   242,     0,   243,     0,   244,   245,
10068:      246,   247,     0,   248,   249,   250,   251,   252,   253,   254,
10069:        0,   256,   257,   258,   259,     0,   260,   261,   262,   263,
10070:      264,   265,   266,     0,   267,     0,   269,   270,   271,   272,
10071:      273,   274,   275,   276,     0,   277,     0,   278,     0,     0,
10072:      281,     0,   283,   284,   285,   286,   287,   288,     0,     0,
10073:      289,     0,   291,     0,     0,   293,   294,   295,   296,   297,
10074:      298,   299,   300,   530,   302,   303,   304,   305,   306,   307,
10075:      308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
10076:      318,   319,   320,   321,   322,     0,   324,   325,   326,   327,
10077:      328,     0,   329,   330,     0,   332,     0,   333,   334,   335,
10078:      336,   337,   338,     0,   339,   340,     0,     0,   341,   342,
10079:      343,     0,     0,   344,   345,   346,     0,   348,     0,   350,
10080:      351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
10081:      361,     0,     0,     0,     0,   362,   363,   364,     0,   366,
10082:      367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
10083:      376,   377,     0,   378,   379,   380,   381,   382,   383,   384,
10084:      385,   865,   387,     0,   388,   389,   390,   391,   392,   393,
10085:      394,   395,   396,   397,   398,   399,   400,     0,   401,   402,
10086:        0,   404,   405,   406,   407,   408,   409,   410,   411,   412,
10087:      413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
10088:      421,   422,   423,   424,   425,   426,   427,   428,   429,     0,
10089:        0,   431,   432,   433,   434,     0,   435,   436,   437,   438,
10090:      439,   440,   441,   442,   443,   444,   445,   446,   531,   448,
10091:      449,     0,     0,   450,   451,     0,   452,     0,   454,   455,
10092:      456,   457,   458,     0,   459,   460,   461,     0,     0,   462,
10093:      463,   464,   465,   466,     0,   467,   468,   469,   470,   471,
10094:      472,   473,   474,     0,     0,   475,   476,   477,     0,   478,
10095:      479,   480,   481,     0,   482,   483,   484,   485,   486,   487,
10096:      488,   489,     0,   490,     0,   492,   493,   494,   495,   496,
10097:      497,   498,     0,     0,   499,     0,     0,   500,   501,   502,
10098:      503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
10099:      513,   514,   515,   516,   517,   518,   519,   520,   528,     0,
10100:      554,     0,     0,     0,     0,     0,     0,     0,     0,     0,
10101:        0,     0,     0,     0,     0,     0,     0,   118,   119,   120,
10102:      121,   122,   123,   124,   125,     0,   126,   127,   128,     0,
10103:        0,     0,     0,     0,     0,     0,     0,     0,   130,   131,
10104:        0,   132,   133,   134,     0,   136,   137,   138,   139,   140,
10105:        0,   142,   143,     0,   144,   145,   146,   147,   148,   149,
10106:        0,     0,   150,   151,   152,   153,   154,   155,   156,     0,
10107:      157,   158,   159,   160,   161,     0,     0,     0,   163,   164,
10108:      165,   166,   167,   168,     0,   170,   171,   172,     0,   173,
10109:      174,   175,   176,   177,   178,     0,     0,   180,   181,   182,
10110:      183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
10111:      193,   194,     0,   195,     0,   196,   197,   198,   199,   200,
10112:      201,     0,     0,   202,   203,   204,   205,     0,     0,   206,
10113:      207,   208,   209,   210,     0,   211,   212,   213,     0,   214,
10114:      215,   216,     0,   217,   218,   219,   220,   221,   222,   223,
10115:      224,   225,   226,   227,   228,     0,   229,     0,   230,   231,
10116:      232,   233,     0,   234,     0,   235,     0,     0,     0,   238,
10117:      239,   529,     0,   242,     0,   243,     0,   244,   245,   246,
10118:      247,     0,   248,   249,   250,   251,   252,   898,   254,     0,
10119:      256,   257,   258,   259,     0,   260,   261,   262,   263,   264,
10120:      265,   266,     0,   267,     0,   269,   270,   271,   272,   273,
10121:      274,   275,   276,     0,   277,     0,   278,     0,     0,   281,
10122:        0,   283,   284,   285,   286,   287,   288,     0,     0,   289,
10123:        0,   291,     0,     0,   293,   294,   295,   296,   297,   298,
10124:      299,   300,   530,   302,   303,   304,   305,   306,   307,   308,
10125:      309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
10126:      319,   320,   321,   322,     0,   324,   325,   326,   327,   328,
10127:        0,   329,   330,     0,   332,     0,   333,   334,   335,   336,
10128:      337,   338,     0,   339,   340,     0,     0,   341,   342,   343,
10129:        0,     0,   344,   345,   346,     0,   348,     0,   350,   351,
10130:      352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
10131:        0,     0,     0,     0,   362,   363,   364,     0,   366,   367,
10132:      368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
10133:      377,     0,   378,   379,   380,   381,   382,   383,   384,   385,
10134:      386,   387,     0,   388,   389,   390,   391,   392,   393,   394,
10135:      395,   396,   397,   398,   399,   400,     0,   401,   402,     0,
10136:      404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
10137:      414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
10138:      422,   423,   424,   425,   426,   427,   428,   429,     0,     0,
10139:      431,   432,   433,   434,     0,   435,   436,   437,   438,   439,
10140:      440,   441,   442,   443,   444,   445,   446,   531,   448,   449,
10141:        0,     0,   450,   451,     0,   452,     0,   454,   455,   456,
10142:      457,   458,     0,   459,   460,   461,     0,     0,   462,   463,
10143:      464,   465,   466,     0,   467,   468,   469,   470,   471,   472,
10144:      473,   474,     0,     0,   475,   476,   477,     0,   478,   479,
10145:      480,   481,     0,   482,   483,   484,   485,   486,   487,   488,
10146:      489,     0,   490,     0,   492,   493,   494,   495,   496,   497,
10147:      498,     0,     0,   499,     0,     0,   500,   501,   502,   503,
10148:      504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
10149:      514,   515,   516,   517,   518,   519,   520,   528,     0,   554,
10150:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
10151:        0,     0,     0,     0,     0,     0,   118,   119,   120,   121,
10152:      122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
10153:        0,     0,     0,     0,     0,     0,     0,   130,   131,     0,
10154:      132,   133,   134,     0,   136,   137,   138,   139,   140,     0,
10155:      142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
10156:        0,   150,   151,   152,   153,   154,   155,   156,     0,   157,
10157:      158,   159,   160,   161,     0,     0,     0,   163,   164,   165,
10158:      166,   167,   168,     0,   170,   171,   172,     0,   173,   174,
10159:      175,   176,   177,   178,     0,     0,   180,   181,   182,   183,
10160:      184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
10161:      194,     0,   195,     0,   196,   197,   198,   199,   200,   201,
10162:        0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
10163:      208,   209,   210,     0,   211,   212,   213,     0,   214,   215,
10164:      216,     0,   217,   218,   219,   220,   221,   222,   223,   224,
10165:      225,   226,   227,   228,     0,   229,     0,   230,   231,   232,
10166:      233,     0,   234,     0,   235,     0,     0,     0,   238,   239,
10167:      529,     0,   242,     0,   243,     0,   244,   245,   246,   247,
10168:        0,   248,   249,   250,   251,   252,   901,   254,     0,   256,
10169:      257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
10170:      266,     0,   267,     0,   269,   270,   271,   272,   273,   274,
10171:      275,   276,     0,   277,     0,   278,     0,     0,   281,     0,
10172:      283,   284,   285,   286,   287,   288,     0,     0,   289,     0,
10173:      291,     0,     0,   293,   294,   295,   296,   297,   298,   299,
10174:      300,   530,   302,   303,   304,   305,   306,   307,   308,   309,
10175:      310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
10176:      320,   321,   322,     0,   324,   325,   326,   327,   328,     0,
10177:      329,   330,     0,   332,     0,   333,   334,   335,   336,   337,
10178:      338,     0,   339,   340,     0,     0,   341,   342,   343,     0,
10179:        0,   344,   345,   346,     0,   348,     0,   350,   351,   352,
10180:      353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
10181:        0,     0,     0,   362,   363,   364,     0,   366,   367,   368,
10182:      369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
10183:        0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
10184:      387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
10185:      396,   397,   398,   399,   400,     0,   401,   402,     0,   404,
10186:      405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
10187:      415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
10188:      423,   424,   425,   426,   427,   428,   429,     0,     0,   431,
10189:      432,   433,   434,     0,   435,   436,   437,   438,   439,   440,
10190:      441,   442,   443,   444,   445,   446,   531,   448,   449,     0,
10191:        0,   450,   451,     0,   452,     0,   454,   455,   456,   457,
10192:      458,     0,   459,   460,   461,     0,     0,   462,   463,   464,
10193:      465,   466,     0,   467,   468,   469,   470,   471,   472,   473,
10194:      474,     0,     0,   475,   476,   477,     0,   478,   479,   480,
10195:      481,     0,   482,   483,   484,   485,   486,   487,   488,   489,
10196:        0,   490,     0,   492,   493,   494,   495,   496,   497,   498,
10197:        0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
10198:      505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
10199:      515,   516,   517,   518,   519,   520,   528,     0,   554,     0,
10200:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
10201:        0,     0,     0,     0,     0,   118,   119,   120,   121,   122,
10202:      123,   124,   125,     0,   126,   127,   128,     0,     0,     0,
10203:        0,     0,     0,     0,     0,     0,   130,   131,     0,   132,
10204:      133,   134,     0,   136,   137,   138,   139,   140,     0,   142,
10205:      143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
10206:      150,   151,   152,   153,   154,   155,   156,     0,   157,   158,
10207:      159,   160,   161,     0,     0,     0,   163,   164,   165,   166,
10208:      167,   168,     0,   170,   171,   172,     0,   173,   174,   175,
10209:      176,   177,   178,     0,     0,   180,   181,   182,   183,   184,
10210:      185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
10211:        0,   195,     0,   196,   197,   198,   199,   200,   201,     0,
10212:        0,   202,   203,   204,   205,     0,     0,   206,   207,   208,
10213:      209,   210,     0,   211,   212,   213,     0,   214,   215,   216,
10214:        0,   217,   218,   219,   220,   221,   222,   223,   224,   225,
10215:      226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
10216:        0,   234,     0,   235,     0,     0,     0,   238,   239,   529,
10217:        0,   242,     0,   243,     0,   244,   245,   246,   247,     0,
10218:      248,   249,   250,   251,   252,   905,   254,     0,   256,   257,
10219:      258,   259,     0,   260,   261,   262,   263,   264,   265,   266,
10220:        0,   267,     0,   269,   270,   271,   272,   273,   274,   275,
10221:      276,     0,   277,     0,   278,     0,     0,   281,     0,   283,
10222:      284,   285,   286,   287,   288,     0,     0,   289,     0,   291,
10223:        0,     0,   293,   294,   295,   296,   297,   298,   299,   300,
10224:      530,   302,   303,   304,   305,   306,   307,   308,   309,   310,
10225:      311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
10226:      321,   322,     0,   324,   325,   326,   327,   328,     0,   329,
10227:      330,     0,   332,     0,   333,   334,   335,   336,   337,   338,
10228:        0,   339,   340,     0,     0,   341,   342,   343,     0,     0,
10229:      344,   345,   346,     0,   348,     0,   350,   351,   352,   353,
10230:      354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
10231:        0,     0,   362,   363,   364,     0,   366,   367,   368,   369,
10232:      370,   371,     0,   372,   373,   374,   375,   376,   377,     0,
10233:      378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
10234:        0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
10235:      397,   398,   399,   400,     0,   401,   402,     0,   404,   405,
10236:      406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
10237:      416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
10238:      424,   425,   426,   427,   428,   429,     0,     0,   431,   432,
10239:      433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
10240:      442,   443,   444,   445,   446,   531,   448,   449,     0,     0,
10241:      450,   451,     0,   452,     0,   454,   455,   456,   457,   458,
10242:        0,   459,   460,   461,     0,     0,   462,   463,   464,   465,
10243:      466,     0,   467,   468,   469,   470,   471,   472,   473,   474,
10244:        0,     0,   475,   476,   477,     0,   478,   479,   480,   481,
10245:        0,   482,   483,   484,   485,   486,   487,   488,   489,     0,
10246:      490,     0,   492,   493,   494,   495,   496,   497,   498,     0,
10247:        0,   499,     0,     0,   500,   501,   502,   503,   504,   505,
10248:      506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
10249:      516,   517,   518,   519,   520,   528,     0,   554,     0,     0,
10250:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
10251:        0,     0,     0,     0,   118,   119,   120,   121,   122,   123,
10252:      124,   125,     0,   126,   127,   128,     0,     0,     0,     0,
10253:        0,     0,     0,     0,     0,   130,   131,     0,   132,   133,
10254:      134,     0,   136,   137,   138,   139,   140,     0,   142,   143,
10255:        0,   144,   145,   146,   147,   148,   149,     0,     0,   150,
10256:      151,   152,   153,   154,   155,   156,     0,   157,   158,   159,
10257:      160,   161,     0,     0,     0,   163,   164,   165,   166,   167,
10258:      168,     0,   170,   171,   172,     0,   173,   174,   175,   176,
10259:      177,   178,     0,     0,   180,   181,   182,   183,   184,   185,
10260:      186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
10261:      195,     0,   196,   197,   198,   199,   200,   201,     0,     0,
10262:      202,   203,   204,   205,     0,     0,   206,   207,   208,   209,
10263:      210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
10264:      217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
10265:      227,   228,     0,   229,     0,   230,   231,   232,   233,     0,
10266:      234,     0,   235,     0,     0,     0,   238,   239,   529,     0,
10267:      242,     0,   243,     0,   244,   245,   246,   247,     0,   248,
10268:      249,   250,   251,   252,   935,   254,     0,   256,   257,   258,
10269:      259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
10270:      267,     0,   269,   270,   271,   272,   273,   274,   275,   276,
10271:        0,   277,     0,   278,     0,     0,   281,     0,   283,   284,
10272:      285,   286,   287,   288,     0,     0,   289,     0,   291,     0,
10273:        0,   293,   294,   295,   296,   297,   298,   299,   300,   530,
10274:      302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
10275:      312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
10276:      322,     0,   324,   325,   326,   327,   328,     0,   329,   330,
10277:        0,   332,     0,   333,   334,   335,   336,   337,   338,     0,
10278:      339,   340,     0,     0,   341,   342,   343,     0,     0,   344,
10279:      345,   346,     0,   348,     0,   350,   351,   352,   353,   354,
10280:      355,   356,   357,   358,   359,   360,   361,     0,     0,     0,
10281:        0,   362,   363,   364,     0,   366,   367,   368,   369,   370,
10282:      371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
10283:      379,   380,   381,   382,   383,   384,   385,   386,   387,     0,
10284:      388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
10285:      398,   399,   400,     0,   401,   402,     0,   404,   405,   406,
10286:      407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
10287:      417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
10288:      425,   426,   427,   428,   429,     0,     0,   431,   432,   433,
10289:      434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
10290:      443,   444,   445,   446,   531,   448,   449,     0,     0,   450,
10291:      451,     0,   452,     0,   454,   455,   456,   457,   458,     0,
10292:      459,   460,   461,     0,     0,   462,   463,   464,   465,   466,
10293:        0,   467,   468,   469,   470,   471,   472,   473,   474,     0,
10294:        0,   475,   476,   477,     0,   478,   479,   480,   481,     0,
10295:      482,   483,   484,   485,   486,   487,   488,   489,     0,   490,
10296:        0,   492,   493,   494,   495,   496,   497,   498,     0,     0,
10297:      499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
10298:      507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
10299:      517,   518,   519,   520,   528,     0,   554,     0,     0,     0,
10300:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
10301:        0,     0,     0,   118,   119,   120,   121,   122,   123,   124,
10302:      125,     0,   126,   127,   128,     0,     0,     0,     0,     0,
10303:        0,     0,     0,     0,   130,   131,     0,   132,   133,   134,
10304:        0,   136,   137,   138,   139,   140,     0,   142,   143,     0,
10305:      144,   145,   146,   147,   148,   149,     0,     0,   150,   151,
10306:      152,   153,   154,   155,   156,     0,   157,   158,   159,   160,
10307:      161,     0,     0,     0,   163,   164,   165,   166,   167,   168,
10308:        0,   170,   171,   172,     0,   173,   174,   175,   176,   177,
10309:      178,     0,     0,   180,   181,   182,   183,   184,   185,   186,
10310:      187,   188,   189,   190,   191,   192,   193,   194,     0,   195,
10311:        0,   196,   197,   198,   199,   200,   201,     0,     0,   202,
10312:      203,   204,   205,     0,     0,   206,   207,   208,   209,   210,
10313:        0,   211,   212,   213,     0,   214,   215,   216,     0,   217,
10314:      218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
10315:      228,     0,   229,     0,   230,   231,   232,   233,     0,   234,
10316:        0,   235,     0,     0,     0,   238,   239,   529,     0,   242,
10317:        0,   243,     0,   244,   245,   246,   247,     0,   248,   249,
10318:      250,   251,   252,   963,   254,     0,   256,   257,   258,   259,
10319:        0,   260,   261,   262,   263,   264,   265,   266,     0,   267,
10320:        0,   269,   270,   271,   272,   273,   274,   275,   276,     0,
10321:      277,     0,   278,     0,     0,   281,     0,   283,   284,   285,
10322:      286,   287,   288,     0,     0,   289,     0,   291,     0,     0,
10323:      293,   294,   295,   296,   297,   298,   299,   300,   530,   302,
10324:      303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
10325:      313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
10326:        0,   324,   325,   326,   327,   328,     0,   329,   330,     0,
10327:      332,     0,   333,   334,   335,   336,   337,   338,     0,   339,
10328:      340,     0,     0,   341,   342,   343,     0,     0,   344,   345,
10329:      346,     0,   348,     0,   350,   351,   352,   353,   354,   355,
10330:      356,   357,   358,   359,   360,   361,     0,     0,     0,     0,
10331:      362,   363,   364,     0,   366,   367,   368,   369,   370,   371,
10332:        0,   372,   373,   374,   375,   376,   377,     0,   378,   379,
10333:      380,   381,   382,   383,   384,   385,   386,   387,     0,   388,
10334:      389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
10335:      399,   400,     0,   401,   402,     0,   404,   405,   406,   407,
10336:      408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
10337:      418,   419,   420,     0,     0,   421,   422,   423,   424,   425,
10338:      426,   427,   428,   429,     0,     0,   431,   432,   433,   434,
10339:        0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
10340:      444,   445,   446,   531,   448,   449,     0,     0,   450,   451,
10341:        0,   452,     0,   454,   455,   456,   457,   458,     0,   459,
10342:      460,   461,     0,     0,   462,   463,   464,   465,   466,     0,
10343:      467,   468,   469,   470,   471,   472,   473,   474,     0,     0,
10344:      475,   476,   477,     0,   478,   479,   480,   481,     0,   482,
10345:      483,   484,   485,   486,   487,   488,   489,     0,   490,     0,
10346:      492,   493,   494,   495,   496,   497,   498,     0,     0,   499,
10347:        0,     0,   500,   501,   502,   503,   504,   505,   506,   507,
10348:      508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
10349:      518,   519,   520,   528,     0,   554,     0,     0,     0,     0,
10350:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
10351:        0,     0,   118,   119,   120,   121,   122,   123,   124,   125,
10352:        0,   126,   127,   128,     0,     0,     0,     0,     0,     0,
10353:        0,     0,     0,   130,   131,     0,   132,   133,   134,     0,
10354:      136,   137,   138,   139,   140,     0,   142,   143,     0,   144,
10355:      145,   146,   147,   148,   149,     0,     0,   150,   151,   152,
10356:      153,   154,   155,   156,     0,   157,   158,   159,   160,   161,
10357:        0,     0,     0,   163,   164,   165,   166,   167,   168,     0,
10358:      170,   171,   172,     0,   173,   174,   175,   176,   177,   178,
10359:        0,     0,   180,   181,   182,   183,   184,   185,   186,   187,
10360:      188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
10361:      196,   197,   198,   199,   200,   201,     0,     0,   202,   203,
10362:      204,   205,     0,     0,   206,   207,   208,   209,   210,     0,
10363:      211,   212,   213,     0,   214,   215,   216,     0,   217,   218,
10364:      219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
10365:        0,   229,     0,   230,   231,   232,   233,     0,   234,     0,
10366:      235,     0,     0,     0,   238,   239,   529,     0,   242,     0,
10367:      243,     0,   244,   245,   246,   247,     0,   248,   249,   250,
10368:      251,   252,   966,   254,     0,   256,   257,   258,   259,     0,
10369:      260,   261,   262,   263,   264,   265,   266,     0,   267,     0,
10370:      269,   270,   271,   272,   273,   274,   275,   276,     0,   277,
10371:        0,   278,     0,     0,   281,     0,   283,   284,   285,   286,
10372:      287,   288,     0,     0,   289,     0,   291,     0,     0,   293,
10373:      294,   295,   296,   297,   298,   299,   300,   530,   302,   303,
10374:      304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
10375:      314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
10376:      324,   325,   326,   327,   328,     0,   329,   330,     0,   332,
10377:        0,   333,   334,   335,   336,   337,   338,     0,   339,   340,
10378:        0,     0,   341,   342,   343,     0,     0,   344,   345,   346,
10379:        0,   348,     0,   350,   351,   352,   353,   354,   355,   356,
10380:      357,   358,   359,   360,   361,     0,     0,     0,     0,   362,
10381:      363,   364,     0,   366,   367,   368,   369,   370,   371,     0,
10382:      372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
10383:      381,   382,   383,   384,   385,   386,   387,     0,   388,   389,
10384:      390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
10385:      400,     0,   401,   402,     0,   404,   405,   406,   407,   408,
10386:      409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
10387:      419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
10388:      427,   428,   429,     0,     0,   431,   432,   433,   434,     0,
10389:      435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
10390:      445,   446,   531,   448,   449,     0,     0,   450,   451,     0,
10391:      452,     0,   454,   455,   456,   457,   458,     0,   459,   460,
10392:      461,     0,     0,   462,   463,   464,   465,   466,     0,   467,
10393:      468,   469,   470,   471,   472,   473,   474,     0,     0,   475,
10394:      476,   477,     0,   478,   479,   480,   481,     0,   482,   483,
10395:      484,   485,   486,   487,   488,   489,     0,   490,     0,   492,
10396:      493,   494,   495,   496,   497,   498,     0,     0,   499,     0,
10397:        0,   500,   501,   502,   503,   504,   505,   506,   507,   508,
10398:      509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
10399:      519,   520,   528,     0,     0,     0,     0,     0,     0,     0,
10400:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
10401:        0,   118,   119,   120,   121,   122,   123,   124,   125,     0,
10402:      126,   127,   128,     0,     0,     0,     0,     0,     0,  1008,
10403:        0,     0,   130,   131,     0,   132,   133,   134,     0,   136,
10404:      137,   138,   139,   140,     0,   142,   143,     0,   144,   145,
10405:      146,   147,   148,   149,     0,     0,   150,   151,   152,   153,
10406:      154,   155,   156,     0,   157,   158,   159,   160,   161,     0,
10407:        0,     0,   163,   164,   165,   166,   167,   168,     0,   170,
10408:      171,   172,     0,   173,   174,   175,   176,   177,   178,     0,
10409:        0,   180,   181,   182,   183,   184,   185,   186,   187,   188,
10410:      189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
10411:      197,   198,   199,   200,   201,     0,     0,   202,   203,   204,
10412:      205,     0,     0,   206,   207,   208,   209,   210,     0,   211,
10413:      212,   213,     0,   214,   215,   216,     0,   217,   218,   219,
10414:      220,   221,   222,   223,   224,   225,   226,   227,   228,     0,
10415:      229,     0,   230,   231,   232,   233,     0,   234,     0,   235,
10416:        0,     0,     0,   238,   239,   529,     0,   242,     0,   243,
10417:        0,   244,   245,   246,   247,     0,   248,   249,   250,   251,
10418:      252,   253,   254,     0,   256,   257,   258,   259,     0,   260,
10419:      261,   262,   263,   264,   265,   266,     0,   267,     0,   269,
10420:      270,   271,   272,   273,   274,   275,   276,     0,   277,     0,
10421:      278,     0,     0,   281,     0,   283,   284,   285,   286,   287,
10422:      288,     0,     0,   289,     0,   291,     0,     0,   293,   294,
10423:      295,   296,   297,   298,   299,   300,   530,   302,   303,   304,
10424:      305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
10425:      315,   316,   317,   318,   319,   320,   321,   322,     0,   324,
10426:      325,   326,   327,   328,     0,   329,   330,     0,   332,     0,
10427:      333,   334,   335,   336,   337,   338,     0,   339,   340,     0,
10428:        0,   341,   342,   343,     0,     0,   344,   345,   346,     0,
10429:      348,     0,   350,   351,   352,   353,   354,   355,   356,   357,
10430:      358,   359,   360,   361,     0,     0,     0,     0,   362,   363,
10431:      364,     0,   366,   367,   368,   369,   370,   371,     0,   372,
10432:      373,   374,   375,   376,   377,     0,   378,   379,   380,   381,
10433:      382,   383,   384,   385,   386,   387,     0,   388,   389,   390,
10434:      391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
10435:        0,   401,   402,     0,   404,   405,   406,   407,   408,   409,
10436:      410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
10437:      420,     0,     0,   421,   422,   423,   424,   425,   426,   427,
10438:      428,   429,     0,     0,   431,   432,   433,   434,     0,   435,
10439:      436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
10440:      446,   531,   448,   449,     0,     0,   450,   451,     0,   452,
10441:        0,   454,   455,   456,   457,   458,     0,   459,   460,   461,
10442:        0,     0,   462,   463,   464,   465,   466,     0,   467,   468,
10443:      469,   470,   471,   472,   473,   474,     0,     0,   475,   476,
10444:      477,     0,   478,   479,   480,   481,     0,   482,   483,   484,
10445:      485,   486,   487,   488,   489,     0,   490,     0,   492,   493,
10446:      494,   495,   496,   497,   498,     0,     0,   499,     0,     0,
10447:      500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
10448:      510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
10449:      520,   528,     0,     0,     0,     0,     0,     0,     0,     0,
10450:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
10451:      118,   119,   120,   121,   122,   123,   124,   125,     0,   126,
10452:      127,   128,     0,     0,     0,     0,     0,     0,  1031,     0,
10453:        0,   130,   131,     0,   132,   133,   134,     0,   136,   137,
10454:      138,   139,   140,     0,   142,   143,     0,   144,   145,   146,
10455:      147,   148,   149,     0,     0,   150,   151,   152,   153,   154,
10456:      155,   156,     0,   157,   158,   159,   160,   161,     0,     0,
10457:        0,   163,   164,   165,   166,   167,   168,     0,   170,   171,
10458:      172,     0,   173,   174,   175,   176,   177,   178,     0,     0,
10459:      180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
10460:      190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
10461:      198,   199,   200,   201,     0,     0,   202,   203,   204,   205,
10462:        0,     0,   206,   207,   208,   209,   210,     0,   211,   212,
10463:      213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
10464:      221,   222,   223,   224,   225,   226,   227,   228,     0,   229,
10465:        0,   230,   231,   232,   233,     0,   234,     0,   235,     0,
10466:        0,     0,   238,   239,   529,     0,   242,     0,   243,     0,
10467:      244,   245,   246,   247,     0,   248,   249,   250,   251,   252,
10468:      253,   254,     0,   256,   257,   258,   259,     0,   260,   261,
10469:      262,   263,   264,   265,   266,     0,   267,     0,   269,   270,
10470:      271,   272,   273,   274,   275,   276,     0,   277,     0,   278,
10471:        0,     0,   281,     0,   283,   284,   285,   286,   287,   288,
10472:        0,     0,   289,     0,   291,     0,     0,   293,   294,   295,
10473:      296,   297,   298,   299,   300,   530,   302,   303,   304,   305,
10474:      306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
10475:      316,   317,   318,   319,   320,   321,   322,     0,   324,   325,
10476:      326,   327,   328,     0,   329,   330,     0,   332,     0,   333,
10477:      334,   335,   336,   337,   338,     0,   339,   340,     0,     0,
10478:      341,   342,   343,     0,     0,   344,   345,   346,     0,   348,
10479:        0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
10480:      359,   360,   361,     0,     0,     0,     0,   362,   363,   364,
10481:        0,   366,   367,   368,   369,   370,   371,     0,   372,   373,
10482:      374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
10483:      383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
10484:      392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
10485:      401,   402,     0,   404,   405,   406,   407,   408,   409,   410,
10486:      411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
10487:        0,     0,   421,   422,   423,   424,   425,   426,   427,   428,
10488:      429,     0,     0,   431,   432,   433,   434,     0,   435,   436,
10489:      437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
10490:      531,   448,   449,     0,     0,   450,   451,     0,   452,     0,
10491:      454,   455,   456,   457,   458,     0,   459,   460,   461,     0,
10492:        0,   462,   463,   464,   465,   466,     0,   467,   468,   469,
10493:      470,   471,   472,   473,   474,     0,     0,   475,   476,   477,
10494:        0,   478,   479,   480,   481,     0,   482,   483,   484,   485,
10495:      486,   487,   488,   489,     0,   490,     0,   492,   493,   494,
10496:      495,   496,   497,   498,     0,     0,   499,     0,     0,   500,
10497:      501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
10498:      511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
10499:      528,     0,     0,     0,     0,     0,     0,     0,     0,     0,
10500:        0,     0,     0,     0,     0,     0,     0,     0,     0,   118,
10501:      119,   120,   121,   122,   123,   124,   125,   826,   126,   127,
10502:      128,     0,     0,     0,     0,     0,     0,     0,     0,     0,
10503:      130,   131,     0,   132,   133,   134,     0,   136,   137,   138,
10504:      139,   140,     0,   142,   143,     0,   144,   145,   146,   147,
10505:      148,   149,     0,     0,   150,   151,   152,   153,   154,   155,
10506:      156,     0,   157,   158,   159,   160,   161,     0,     0,     0,
10507:      163,   164,   165,   166,   167,   168,     0,   170,   171,   172,
10508:        0,   173,   174,   175,   176,   177,   178,     0,     0,   180,
10509:      181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
10510:      191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
10511:      199,   200,   201,     0,     0,   202,   203,   204,   205,     0,
10512:        0,   206,   207,   208,   209,   210,     0,   211,   212,   213,
10513:        0,   214,   215,   216,     0,   217,   218,   219,   220,   221,
10514:      222,   223,   224,   225,   226,   227,   228,     0,   229,     0,
10515:      230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
10516:        0,   238,   239,   529,     0,   242,     0,   243,     0,   244,
10517:      245,   246,   247,     0,   248,   249,   250,   251,   252,   253,
10518:      254,     0,   256,   257,   258,   259,     0,   260,   261,   262,
10519:      263,   264,   265,   266,     0,   267,     0,   269,   270,   271,
10520:      272,   273,   274,   275,   276,     0,   277,     0,   278,     0,
10521:        0,   281,     0,   283,   284,   285,   286,   287,   288,     0,
10522:        0,   289,     0,   291,     0,     0,   293,   294,   295,   296,
10523:      297,   298,   299,   300,   530,   302,   303,   304,   305,   306,
10524:      307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
10525:      317,   318,   319,   320,   321,   322,     0,   324,   325,   326,
10526:      327,   328,     0,   329,   330,     0,   332,     0,   333,   334,
10527:      335,   336,   337,   338,     0,   339,   340,     0,     0,   341,
10528:      342,   343,     0,     0,   344,   345,   346,     0,   348,     0,
10529:      350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
10530:      360,   361,     0,     0,     0,     0,   362,   363,   364,     0,
10531:      366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
10532:      375,   376,   377,     0,   378,   379,   380,   381,   382,   383,
10533:      384,   385,   386,   387,     0,   388,   389,   390,   391,   392,
10534:      393,   394,   395,   396,   397,   398,   399,   400,     0,   401,
10535:      402,     0,   404,   405,   406,   407,   408,   409,   410,   411,
10536:      412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
10537:        0,   421,   422,   423,   424,   425,   426,   427,   428,   429,
10538:        0,     0,   431,   432,   433,   434,     0,   435,   436,   437,
10539:      438,   439,   440,   441,   442,   443,   444,   445,   446,   531,
10540:      448,   449,     0,     0,   450,   451,     0,   452,     0,   454,
10541:      455,   456,   457,   458,     0,   459,   830,   461,     0,     0,
10542:      831,   463,   464,   465,   466,     0,   467,   468,   469,   470,
10543:      471,   472,   473,   474,     0,     0,   475,   476,   477,     0,
10544:      478,   479,   480,   481,     0,   482,   483,   484,   485,   486,
10545:      487,   488,   489,     0,   490,     0,   492,   493,   494,   495,
10546:      496,   497,   498,     0,     0,   499,     0,     0,   500,   501,
10547:      502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
10548:      512,   513,   514,   515,   516,   517,   518,   519,   520,   528,
10549:        0,   554,     0,     0,     0,     0,     0,     0,     0,     0,
10550:        0,     0,     0,     0,     0,     0,     0,     0,   118,   119,
10551:      120,   121,   122,   123,   124,   125,     0,   126,   127,   128,
10552:        0,     0,     0,     0,     0,     0,     0,     0,     0,   130,
10553:      131,     0,   132,   133,   134,     0,   136,   137,   138,   139,
10554:      140,     0,   142,   143,     0,   144,   145,   146,   147,   148,
10555:      149,     0,     0,   150,   151,   152,   153,   154,   155,   156,
10556:        0,   157,   158,   159,   160,   161,     0,     0,     0,   163,
10557:      164,   165,   166,   167,   168,     0,   170,   171,   172,     0,
10558:      173,   174,   175,   176,   177,   178,     0,     0,   180,   181,
10559:      182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
10560:      192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
10561:      200,   201,     0,     0,   202,   203,   204,   205,     0,     0,
10562:      206,   207,   208,   209,   210,     0,   211,   212,   213,     0,
10563:      214,   215,   216,     0,   217,   218,   219,   220,   221,   222,
10564:      223,   224,   225,   226,   227,   228,     0,   229,     0,   230,
10565:      231,   232,   233,     0,   234,     0,   235,     0,     0,     0,
10566:      238,   239,   529,     0,   242,     0,   243,     0,   244,   245,
10567:      246,   247,     0,   248,   249,   250,   251,   252,  1318,   254,
10568:        0,   256,   257,   258,   259,     0,   260,   261,   262,   263,
10569:      264,   265,   266,     0,   267,     0,   269,   270,   271,   272,
10570:      273,   274,   275,   276,     0,   277,     0,   278,     0,     0,
10571:      281,     0,   283,   284,   285,   286,   287,   288,     0,     0,
10572:      289,     0,   291,     0,     0,   293,   294,   295,   296,   297,
10573:      298,   299,   300,   530,   302,   303,   304,   305,   306,   307,
10574:      308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
10575:      318,   319,   320,   321,   322,     0,   324,   325,   326,   327,
10576:      328,     0,   329,   330,     0,   332,     0,   333,   334,   335,
10577:      336,   337,   338,     0,   339,   340,     0,     0,   341,   342,
10578:      343,     0,     0,   344,   345,   346,     0,   348,     0,   350,
10579:      351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
10580:      361,     0,     0,     0,     0,   362,   363,   364,     0,   366,
10581:      367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
10582:      376,   377,     0,   378,   379,   380,   381,   382,   383,   384,
10583:      385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
10584:      394,   395,   396,   397,   398,   399,   400,     0,   401,   402,
10585:        0,   404,   405,   406,   407,   408,   409,   410,   411,   412,
10586:      413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
10587:      421,   422,   423,   424,   425,   426,   427,   428,   429,     0,
10588:        0,   431,   432,   433,   434,     0,   435,   436,   437,   438,
10589:      439,   440,   441,   442,   443,   444,   445,   446,   531,   448,
10590:      449,     0,     0,   450,   451,     0,   452,     0,   454,   455,
10591:      456,   457,   458,     0,   459,   460,   461,     0,     0,   462,
10592:      463,   464,   465,   466,     0,   467,   468,   469,   470,   471,
10593:      472,   473,   474,     0,     0,   475,   476,   477,     0,   478,
10594:      479,   480,   481,     0,   482,   483,   484,   485,   486,   487,
10595:      488,   489,     0,   490,     0,   492,   493,   494,   495,   496,
10596:      497,   498,     0,     0,   499,     0,     0,   500,   501,   502,
10597:      503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
10598:      513,   514,   515,   516,   517,   518,   519,   520,   528,     0,
10599:      554,     0,     0,     0,     0,     0,     0,     0,     0,     0,
10600:        0,     0,     0,     0,     0,     0,     0,   118,   119,   120,
10601:      121,   122,   123,   124,   125,     0,   126,   127,   128,     0,
10602:        0,     0,     0,     0,     0,     0,     0,     0,   130,   131,
10603:        0,   132,   133,   134,     0,   136,   137,   138,   139,   140,
10604:        0,   142,   143,     0,   144,   145,   146,   147,   148,   149,
10605:        0,     0,   150,   151,   152,   153,   154,   155,   156,     0,
10606:      157,   158,   159,   160,   161,     0,     0,     0,   163,   164,
10607:      165,   166,   167,   168,     0,   170,   171,   172,     0,   173,
10608:      174,   175,   176,   177,   178,     0,     0,   180,   181,   182,
10609:      183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
10610:      193,   194,     0,   195,     0,   196,   197,   198,   199,   200,
10611:      201,     0,     0,   202,   203,   204,   205,     0,     0,   206,
10612:      207,   208,   209,   210,     0,   211,   212,   213,     0,   214,
10613:      215,   216,     0,   217,   218,   219,   220,   221,   222,   223,
10614:      224,   225,   226,   227,   228,     0,   229,     0,   230,   231,
10615:      232,   233,     0,   234,     0,   235,     0,     0,     0,   238,
10616:      239,   529,     0,   242,     0,   243,     0,   244,   245,   246,
10617:      247,     0,   248,   249,   250,   251,   252,  1320,   254,     0,
10618:      256,   257,   258,   259,     0,   260,   261,   262,   263,   264,
10619:      265,   266,     0,   267,     0,   269,   270,   271,   272,   273,
10620:      274,   275,   276,     0,   277,     0,   278,     0,     0,   281,
10621:        0,   283,   284,   285,   286,   287,   288,     0,     0,   289,
10622:        0,   291,     0,     0,   293,   294,   295,   296,   297,   298,
10623:      299,   300,   530,   302,   303,   304,   305,   306,   307,   308,
10624:      309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
10625:      319,   320,   321,   322,     0,   324,   325,   326,   327,   328,
10626:        0,   329,   330,     0,   332,     0,   333,   334,   335,   336,
10627:      337,   338,     0,   339,   340,     0,     0,   341,   342,   343,
10628:        0,     0,   344,   345,   346,     0,   348,     0,   350,   351,
10629:      352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
10630:        0,     0,     0,     0,   362,   363,   364,     0,   366,   367,
10631:      368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
10632:      377,     0,   378,   379,   380,   381,   382,   383,   384,   385,
10633:      386,   387,     0,   388,   389,   390,   391,   392,   393,   394,
10634:      395,   396,   397,   398,   399,   400,     0,   401,   402,     0,
10635:      404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
10636:      414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
10637:      422,   423,   424,   425,   426,   427,   428,   429,     0,     0,
10638:      431,   432,   433,   434,     0,   435,   436,   437,   438,   439,
10639:      440,   441,   442,   443,   444,   445,   446,   531,   448,   449,
10640:        0,     0,   450,   451,     0,   452,     0,   454,   455,   456,
10641:      457,   458,     0,   459,   460,   461,     0,     0,   462,   463,
10642:      464,   465,   466,     0,   467,   468,   469,   470,   471,   472,
10643:      473,   474,     0,     0,   475,   476,   477,     0,   478,   479,
10644:      480,   481,     0,   482,   483,   484,   485,   486,   487,   488,
10645:      489,     0,   490,     0,   492,   493,   494,   495,   496,   497,
10646:      498,     0,     0,   499,     0,     0,   500,   501,   502,   503,
10647:      504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
10648:      514,   515,   516,   517,   518,   519,   520,   528,     0,   554,
10649:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
10650:        0,     0,     0,     0,     0,     0,   118,   119,   120,   121,
10651:      122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
10652:        0,     0,     0,     0,     0,     0,     0,   130,   131,     0,
10653:      132,   133,   134,     0,   136,   137,   138,   139,   140,     0,
10654:      142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
10655:        0,   150,   151,   152,   153,   154,   155,   156,     0,   157,
10656:      158,   159,   160,   161,     0,     0,     0,   163,   164,   165,
10657:      166,   167,   168,     0,   170,   171,   172,     0,   173,   174,
10658:      175,   176,   177,   178,     0,     0,   180,   181,   182,   183,
10659:      184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
10660:      194,     0,   195,     0,   196,   197,   198,   199,   200,   201,
10661:        0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
10662:      208,   209,   210,     0,   211,   212,   213,     0,   214,   215,
10663:      216,     0,   217,   218,   219,   220,   221,   222,   223,   224,
10664:      225,   226,   227,   228,     0,   229,     0,   230,   231,   232,
10665:      233,     0,   234,     0,   235,     0,     0,     0,   238,   239,
10666:      529,     0,   242,     0,   243,     0,   244,   245,   246,   247,
10667:        0,   248,   249,   250,   251,   252,  1323,   254,     0,   256,
10668:      257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
10669:      266,     0,   267,     0,   269,   270,   271,   272,   273,   274,
10670:      275,   276,     0,   277,     0,   278,     0,     0,   281,     0,
10671:      283,   284,   285,   286,   287,   288,     0,     0,   289,     0,
10672:      291,     0,     0,   293,   294,   295,   296,   297,   298,   299,
10673:      300,   530,   302,   303,   304,   305,   306,   307,   308,   309,
10674:      310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
10675:      320,   321,   322,     0,   324,   325,   326,   327,   328,     0,
10676:      329,   330,     0,   332,     0,   333,   334,   335,   336,   337,
10677:      338,     0,   339,   340,     0,     0,   341,   342,   343,     0,
10678:        0,   344,   345,   346,     0,   348,     0,   350,   351,   352,
10679:      353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
10680:        0,     0,     0,   362,   363,   364,     0,   366,   367,   368,
10681:      369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
10682:        0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
10683:      387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
10684:      396,   397,   398,   399,   400,     0,   401,   402,     0,   404,
10685:      405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
10686:      415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
10687:      423,   424,   425,   426,   427,   428,   429,     0,     0,   431,
10688:      432,   433,   434,     0,   435,   436,   437,   438,   439,   440,
10689:      441,   442,   443,   444,   445,   446,   531,   448,   449,     0,
10690:        0,   450,   451,     0,   452,     0,   454,   455,   456,   457,
10691:      458,     0,   459,   460,   461,     0,     0,   462,   463,   464,
10692:      465,   466,     0,   467,   468,   469,   470,   471,   472,   473,
10693:      474,     0,     0,   475,   476,   477,     0,   478,   479,   480,
10694:      481,     0,   482,   483,   484,   485,   486,   487,   488,   489,
10695:        0,   490,     0,   492,   493,   494,   495,   496,   497,   498,
10696:        0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
10697:      505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
10698:      515,   516,   517,   518,   519,   520,   528,     0,   554,     0,
10699:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
10700:        0,     0,     0,     0,     0,   118,   119,   120,   121,   122,
10701:      123,   124,   125,     0,   126,   127,   128,     0,     0,     0,
10702:        0,     0,     0,     0,     0,     0,   130,   131,     0,   132,
10703:      133,   134,     0,   136,   137,   138,   139,   140,     0,   142,
10704:      143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
10705:      150,   151,   152,   153,   154,   155,   156,     0,   157,   158,
10706:      159,   160,   161,     0,     0,     0,   163,   164,   165,   166,
10707:      167,   168,     0,   170,   171,   172,     0,   173,   174,   175,
10708:      176,   177,   178,     0,     0,   180,   181,   182,   183,   184,
10709:      185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
10710:        0,   195,     0,   196,   197,   198,   199,   200,   201,     0,
10711:        0,   202,   203,   204,   205,     0,     0,   206,   207,   208,
10712:      209,   210,     0,   211,   212,   213,     0,   214,   215,   216,
10713:        0,   217,   218,   219,   220,   221,   222,   223,   224,   225,
10714:      226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
10715:        0,   234,     0,   235,     0,     0,     0,   238,   239,   529,
10716:        0,   242,     0,   243,     0,   244,   245,   246,   247,     0,
10717:      248,   249,   250,   251,   252,  1325,   254,     0,   256,   257,
10718:      258,   259,     0,   260,   261,   262,   263,   264,   265,   266,
10719:        0,   267,     0,   269,   270,   271,   272,   273,   274,   275,
10720:      276,     0,   277,     0,   278,     0,     0,   281,     0,   283,
10721:      284,   285,   286,   287,   288,     0,     0,   289,     0,   291,
10722:        0,     0,   293,   294,   295,   296,   297,   298,   299,   300,
10723:      530,   302,   303,   304,   305,   306,   307,   308,   309,   310,
10724:      311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
10725:      321,   322,     0,   324,   325,   326,   327,   328,     0,   329,
10726:      330,     0,   332,     0,   333,   334,   335,   336,   337,   338,
10727:        0,   339,   340,     0,     0,   341,   342,   343,     0,     0,
10728:      344,   345,   346,     0,   348,     0,   350,   351,   352,   353,
10729:      354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
10730:        0,     0,   362,   363,   364,     0,   366,   367,   368,   369,
10731:      370,   371,     0,   372,   373,   374,   375,   376,   377,     0,
10732:      378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
10733:        0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
10734:      397,   398,   399,   400,     0,   401,   402,     0,   404,   405,
10735:      406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
10736:      416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
10737:      424,   425,   426,   427,   428,   429,     0,     0,   431,   432,
10738:      433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
10739:      442,   443,   444,   445,   446,   531,   448,   449,     0,     0,
10740:      450,   451,     0,   452,     0,   454,   455,   456,   457,   458,
10741:        0,   459,   460,   461,     0,     0,   462,   463,   464,   465,
10742:      466,     0,   467,   468,   469,   470,   471,   472,   473,   474,
10743:        0,     0,   475,   476,   477,     0,   478,   479,   480,   481,
10744:        0,   482,   483,   484,   485,   486,   487,   488,   489,     0,
10745:      490,     0,   492,   493,   494,   495,   496,   497,   498,     0,
10746:        0,   499,     0,     0,   500,   501,   502,   503,   504,   505,
10747:      506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
10748:      516,   517,   518,   519,   520,   528,     0,   554,     0,     0,
10749:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
10750:        0,     0,     0,     0,   118,   119,   120,   121,   122,   123,
10751:      124,   125,     0,   126,   127,   128,     0,     0,     0,     0,
10752:        0,     0,     0,     0,     0,   130,   131,     0,   132,   133,
10753:      134,     0,   136,   137,   138,   139,   140,     0,   142,   143,
10754:        0,   144,   145,   146,   147,   148,   149,     0,     0,   150,
10755:      151,   152,   153,   154,   155,   156,     0,   157,   158,   159,
10756:      160,   161,     0,     0,     0,   163,   164,   165,   166,   167,
10757:      168,     0,   170,   171,   172,     0,   173,   174,   175,   176,
10758:      177,   178,     0,     0,   180,   181,   182,   183,   184,   185,
10759:      186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
10760:      195,     0,   196,   197,   198,   199,   200,   201,     0,     0,
10761:      202,   203,   204,   205,     0,     0,   206,   207,   208,   209,
10762:      210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
10763:      217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
10764:      227,   228,     0,   229,     0,   230,   231,   232,   233,     0,
10765:      234,     0,   235,     0,     0,     0,   238,   239,   529,     0,
10766:      242,     0,   243,     0,   244,   245,   246,   247,     0,   248,
10767:      249,   250,   251,   252,  2262,   254,     0,   256,   257,   258,
10768:      259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
10769:      267,     0,   269,   270,   271,   272,   273,   274,   275,   276,
10770:        0,   277,     0,   278,     0,     0,   281,     0,   283,   284,
10771:      285,   286,   287,   288,     0,     0,   289,     0,   291,     0,
10772:        0,   293,   294,   295,   296,   297,   298,   299,   300,   530,
10773:      302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
10774:      312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
10775:      322,     0,   324,   325,   326,   327,   328,     0,   329,   330,
10776:        0,   332,     0,   333,   334,   335,   336,   337,   338,     0,
10777:      339,   340,     0,     0,   341,   342,   343,     0,     0,   344,
10778:      345,   346,     0,   348,     0,   350,   351,   352,   353,   354,
10779:      355,   356,   357,   358,   359,   360,   361,     0,     0,     0,
10780:        0,   362,   363,   364,     0,   366,   367,   368,   369,   370,
10781:      371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
10782:      379,   380,   381,   382,   383,   384,   385,   386,   387,     0,
10783:      388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
10784:      398,   399,   400,     0,   401,   402,     0,   404,   405,   406,
10785:      407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
10786:      417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
10787:      425,   426,   427,   428,   429,     0,     0,   431,   432,   433,
10788:      434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
10789:      443,   444,   445,   446,   531,   448,   449,     0,     0,   450,
10790:      451,     0,   452,     0,   454,   455,   456,   457,   458,     0,
10791:      459,   460,   461,     0,     0,   462,   463,   464,   465,   466,
10792:        0,   467,   468,   469,   470,   471,   472,   473,   474,     0,
10793:        0,   475,   476,   477,     0,   478,   479,   480,   481,     0,
10794:      482,   483,   484,   485,   486,   487,   488,   489,     0,   490,
10795:        0,   492,   493,   494,   495,   496,   497,   498,     0,     0,
10796:      499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
10797:      507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
10798:      517,   518,   519,   520,  1490,     0,     0,     0,     0,     0,
10799:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
10800:        0,     0,     0,   118,   119,   120,   121,   122,   123,   124,
10801:      125,     0,   126,   127,   128,     0,     0,     0,  1491,     0,
10802:        0,  -803,     0,  1492,   130,   131,     0,   132,   133,   134,
10803:     1493,   136,   137,   138,     0,  1494,  1495,  1496,  1497,     0,
10804:      144,   145,   146,   147,   148,   149,     0,     0,   150,   151,
10805:      152,   153,  1498,  1499,   156,     0,   157,   158,   159,   160,
10806:        0,     0,  1500,     0,  1501,   164,   165,   166,   167,   168,
10807:     1502,   170,   171,   172,     0,   173,   174,   175,   176,   177,
10808:      178,     0,  1503,   180,   181,   182,   183,   184,   185,   186,
10809:      187,   188,   189,  1504,   191,   192,  1505,   194,     0,   195,
10810:        0,   196,   197,   198,   199,   200,   201,     0,     0,   202,
10811:      203,   204,   205,     0,     0,   206,   207,  1067,   209,   210,
10812:        0,   211,   212,   213,     0,   214,   215,   216,     0,   217,
10813:      218,   219,   220,     0,   222,   223,   224,   225,   226,   227,
10814:        0,     0,   229,     0,   230,   231,  1506,   233,     0,   234,
10815:        0,   235,  1507,     0,  1508,   238,   239,  -803,  1509,   242,
10816:        0,   243,     0,     0,     0,   246,   247,     0,   248,   249,
10817:      250,   251,   252,   253,   254,  1510,   256,   257,   258,   259,
10818:        0,   260,   261,   262,   263,   264,   265,   266,     0,   267,
10819:     1511,     0,   270,   271,   272,   273,   274,  1512,  1513,     0,
10820:     1514,     0,   278,  1515,  1516,   281,  1517,   283,   284,   285,
10821:      286,   287,   288,     0,     0,   289,  1518,   291,  1519,     0,
10822:      293,   294,   295,   296,   297,   298,   299,   300,  1520,   302,
10823:      303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
10824:      313,   314,   315,   316,   317,   318,   319,   320,   321,  1521,
10825:     1522,  1523,   325,   326,   327,     0,     0,   329,   330,  1524,
10826:      332,     0,     0,   334,  1525,   336,   337,   338,     0,   339,
10827:      340,     0,     0,   341,   342,   343,     0,     0,   344,   345,
10828:        0,  1526,   348,  1527,     0,   351,   352,   353,   354,   355,
10829:      356,   357,   358,   359,   360,   361,     0,     0,     0,     0,
10830:      362,   363,     0,  1528,   366,   367,     0,   369,   370,   371,
10831:        0,   372,   373,   374,   375,   376,   377,     0,   378,   379,
10832:      380,   381,   382,  1529,   384,   385,   386,   387,     0,   388,
10833:      389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
10834:      399,   400,     0,   401,   402,  1530,   404,   405,   406,  1531,
10835:      408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
10836:      418,   419,   420,     0,  1532,   421,   422,   423,   424,   425,
10837:      426,  1533,   428,   429,     0,  1534,   431,   432,  1535,   434,
10838:        0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
10839:      444,   445,   446,  1536,   448,     0,     0,     0,   450,   451,
10840:        0,   452,  1537,   454,   455,   456,   457,   458,     0,   459,
10841:     1538,  1539,     0,     0,   462,   463,     0,   465,     0,     0,
10842:      467,   468,  1540,   470,   471,   472,   473,   474,  1541,     0,
10843:      475,   476,   477,     0,   478,   479,   480,   481,     0,   482,
10844:      483,   484,   485,   486,     0,  1542,   489,     0,   490,  1543,
10845:      492,   493,   494,   495,   496,   497,   498,     0,     0,   499,
10846:        0,     0,   500,   501,   502,   503,   504,   505,   528,     0,
10847:      554,     0,     0,     0,     0,     0,     0,     0,     0,   517,
10848:      518,   519,   520,     0,     0,     0,     0,   118,   119,   120,
10849:      121,   122,   123,   124,   125,     0,   126,   127,   128,     0,
10850:        0,     0,     0,     0,     0,     0,     0,     0,   130,   131,
10851:        0,   132,   133,   134,     0,   136,   137,   138,   139,   140,
10852:        0,   142,   143,     0,   144,   145,   146,   147,   148,   149,
10853:        0,     0,   150,   151,   152,   153,   154,   155,   156,     0,
10854:      157,   158,   159,   160,   161,     0,     0,     0,   163,   164,
10855:      165,   166,   167,   168,     0,   170,   171,   172,     0,   173,
10856:      174,   175,   176,   177,   178,     0,     0,   180,   181,   182,
10857:      183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
10858:      193,   194,     0,   195,     0,   196,   197,   198,   199,   200,
10859:      201,     0,     0,   202,   203,   204,   205,     0,     0,   206,
10860:      207,   208,   209,   210,     0,   211,   212,   213,     0,   214,
10861:      215,   216,     0,   217,   218,   219,   220,   221,   222,   223,
10862:      224,   225,   226,   227,   228,     0,   229,     0,   230,   231,
10863:      232,   233,     0,   234,     0,   235,     0,     0,     0,   238,
10864:      239,   529,     0,   242,     0,   243,     0,   244,   245,   246,
10865:      247,     0,   248,   249,   250,   251,   252,  3024,   254,     0,
10866:      256,   257,   258,   259,     0,   260,   261,   262,   263,   264,
10867:      265,   266,     0,   267,     0,   269,   270,   271,   272,   273,
10868:      274,   275,   276,     0,   277,     0,   278,     0,     0,   281,
10869:        0,   283,   284,   285,   286,   287,   288,     0,     0,   289,
10870:        0,   291,     0,     0,   293,   294,   295,   296,   297,   298,
10871:      299,   300,   530,   302,   303,   304,   305,   306,   307,   308,
10872:      309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
10873:      319,   320,   321,   322,     0,   324,   325,   326,   327,   328,
10874:        0,   329,   330,     0,   332,     0,   333,   334,   335,   336,
10875:      337,   338,     0,   339,   340,     0,     0,   341,   342,   343,
10876:        0,     0,   344,   345,   346,     0,   348,     0,   350,   351,
10877:      352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
10878:        0,     0,     0,     0,   362,   363,   364,     0,   366,   367,
10879:      368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
10880:      377,     0,   378,   379,   380,   381,   382,   383,   384,   385,
10881:      386,   387,     0,   388,   389,   390,   391,   392,   393,   394,
10882:      395,   396,   397,   398,   399,   400,     0,   401,   402,     0,
10883:      404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
10884:      414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
10885:      422,   423,   424,   425,   426,   427,   428,   429,     0,     0,
10886:      431,   432,   433,   434,     0,   435,   436,   437,   438,   439,
10887:      440,   441,   442,   443,   444,   445,   446,   531,   448,   449,
10888:        0,     0,   450,   451,     0,   452,     0,   454,   455,   456,
10889:      457,   458,     0,   459,   460,   461,     0,     0,   462,   463,
10890:      464,   465,   466,     0,   467,   468,   469,   470,   471,   472,
10891:      473,   474,     0,     0,   475,   476,   477,     0,   478,   479,
10892:      480,   481,     0,   482,   483,   484,   485,   486,   487,   488,
10893:      489,     0,   490,     0,   492,   493,   494,   495,   496,   497,
10894:      498,     0,     0,   499,     0,     0,   500,   501,   502,   503,
10895:      504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
10896:      514,   515,   516,   517,   518,   519,   520,   528,     0,     0,
10897:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
10898:        0,     0,     0,     0,     0,     0,   118,   119,   120,   121,
10899:      122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
10900:        0,     0,     0,     0,     0,     0,     0,   130,   131,     0,
10901:      132,   133,   134,     0,   136,   137,   138,   139,   140,     0,
10902:      142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
10903:        0,   150,   151,   152,   153,   154,   155,   156,     0,   157,
10904:      158,   159,   160,   161,     0,     0,     0,   163,   164,   165,
10905:      166,   167,   168,     0,   170,   171,   172,     0,   173,   174,
10906:      175,   176,   177,   178,     0,     0,   180,   181,   182,   183,
10907:      184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
10908:      194,     0,   195,     0,   196,   197,   198,   199,   200,   201,
10909:        0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
10910:      208,   209,   210,     0,   211,   212,   213,     0,   214,   215,
10911:      216,     0,   217,   218,   219,   220,   221,   222,   223,   224,
10912:      225,   226,   227,   228,     0,   229,     0,   230,   231,   232,
10913:      233,     0,   234,     0,   235,     0,     0,     0,   238,   239,
10914:      529,     0,   242,     0,   243,     0,   244,   245,   246,   247,
10915:        0,   248,   249,   250,   251,   252,   253,   254,     0,   256,
10916:      257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
10917:      266,     0,   267,     0,   269,   270,   271,   272,   273,   274,
10918:      275,   276,     0,   277,     0,   278,     0,     0,   281,     0,
10919:      283,   284,   285,   286,   287,   288,     0,     0,   289,     0,
10920:      291,     0,     0,   293,   294,   295,   296,   297,   298,   299,
10921:      300,   530,   302,   303,   304,   305,   306,   307,   308,   309,
10922:      310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
10923:      320,   321,   322,     0,   324,   325,   326,   327,   328,     0,
10924:      329,   330,     0,   332,     0,   333,   334,   335,   336,   337,
10925:      338,     0,   339,   340,     0,     0,   341,   342,   343,     0,
10926:        0,   344,   345,   346,     0,   348,     0,   350,   351,   352,
10927:      353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
10928:        0,     0,     0,   362,   363,   364,     0,   366,   367,   368,
10929:      369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
10930:        0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
10931:      387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
10932:      396,   397,   398,   399,   400,     0,   401,   402,     0,   404,
10933:      405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
10934:      415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
10935:      423,   424,   425,   426,   427,   428,   429,     0,     0,   431,
10936:      432,   433,   434,     0,   435,   436,   437,   438,   439,   440,
10937:      441,   442,   443,   444,   445,   446,   531,   448,   449,     0,
10938:        0,   450,   451,     0,   452,     0,   454,   455,   456,   457,
10939:      458,     0,   459,   460,   461,     0,     0,   462,   463,   464,
10940:      465,   466,     0,   467,   468,   469,   470,   471,   472,   473,
10941:      474,     0,     0,   475,   476,   477,     0,   478,   479,   480,
10942:      481,     0,   482,   483,   484,   485,   486,   487,   488,   489,
10943:        0,   490,     0,   492,   493,   494,   495,   496,   497,   498,
10944:        0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
10945:      505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
10946:      515,   516,   517,   518,   519,   520,   528,     0,     0,     0,
10947:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
10948:        0,     0,     0,     0,     0,   118,   119,   120,   121,   122,
10949:      123,   124,   125,     0,   126,   127,   128,     0,     0,     0,
10950:        0,     0,     0,     0,     0,     0,   130,   131,     0,   132,
10951:      133,   134,     0,   136,   137,   138,   139,   140,     0,   142,
10952:      143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
10953:      150,   151,   152,   153,   154,   155,   156,     0,   157,   158,
10954:      159,   160,   161,     0,     0,     0,   163,   164,   165,   166,
10955:      167,   168,     0,   170,   171,   172,     0,   173,   174,   175,
10956:      176,   177,   178,     0,     0,   180,   181,   182,   183,   184,
10957:      185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
10958:        0,   195,     0,   196,   197,   198,   199,   200,   201,     0,
10959:        0,   202,   203,   204,   205,     0,     0,   206,   207,   208,
10960:      209,   210,     0,   211,   212,   213,     0,   214,   215,   216,
10961:        0,   217,   218,   219,   220,   221,   222,   223,   224,   225,
10962:      226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
10963:        0,   234,     0,   235,     0,     0,     0,   238,   239,   529,
10964:        0,   842,     0,   243,     0,   244,   245,   246,   247,     0,
10965:      248,   249,   250,   251,   252,   253,   254,     0,   256,   257,
10966:      258,   259,     0,   260,   261,   262,   263,   264,   265,   266,
10967:        0,   267,     0,   269,   270,   271,   272,   273,   274,   275,
10968:      276,     0,   277,     0,   278,     0,     0,   281,     0,   283,
10969:      284,   285,   286,   287,   288,     0,     0,   289,     0,   291,
10970:        0,     0,   293,   294,   843,   296,   297,   298,   299,   300,
10971:      530,   302,   303,   304,   305,   306,   307,   308,   309,   310,
10972:      311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
10973:      321,   322,     0,   324,   325,   326,   327,   328,     0,   329,
10974:      330,     0,   332,     0,   333,   334,   335,   336,   337,   338,
10975:        0,   339,   340,     0,     0,   341,   342,   343,     0,     0,
10976:      344,   345,   346,     0,   348,     0,   350,   351,   352,   353,
10977:      354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
10978:        0,     0,   362,   363,   364,     0,   366,   367,   368,   369,
10979:      370,   371,     0,   372,   373,   374,   375,   376,   377,     0,
10980:      378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
10981:        0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
10982:      397,   398,   399,   400,     0,   401,   402,     0,   404,   405,
10983:      406,   407,   408,   409,   410,   411,   844,   413,   414,   415,
10984:      416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
10985:      424,   845,   426,   427,   428,   429,     0,     0,   431,   432,
10986:      433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
10987:      442,   443,   444,   445,   446,   531,   448,   449,     0,     0,
10988:      450,   451,     0,   452,     0,   454,   455,   456,   457,   458,
10989:        0,   459,   846,   461,     0,     0,   462,   463,   464,   465,
10990:      466,     0,   467,   468,   469,   470,   471,   472,   473,   474,
10991:        0,     0,   475,   476,   477,     0,   478,   479,   480,   481,
10992:        0,   482,   483,   484,   485,   486,   487,   488,   847,     0,
10993:      490,     0,   492,   493,   494,   495,   496,   497,   498,     0,
10994:        0,   499,     0,     0,   500,   501,   502,   503,   504,   505,
10995:      506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
10996:      516,   517,   518,   519,   520,   528,     0,     0,     0,     0,
10997:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
10998:        0,     0,     0,     0,   118,   119,   120,   121,   122,   123,
10999:      124,   125,     0,   126,   127,   128,     0,     0,     0,     0,
11000:        0,     0,     0,     0,     0,   130,   131,     0,   132,   133,
11001:      134,     0,   136,   137,   138,   139,   140,     0,   142,   143,
11002:        0,   144,   145,   146,   147,   148,   149,     0,     0,   150,
11003:      151,   152,   153,   154,   155,   156,     0,   157,   158,   159,
11004:      160,   161,     0,     0,     0,   163,   164,   165,   166,   167,
11005:      168,     0,   170,   171,   172,     0,   173,   174,   175,   176,
11006:      177,   178,     0,     0,   180,   181,   182,   183,   184,   185,
11007:      186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
11008:      195,     0,   196,   197,   198,   199,   200,   201,     0,     0,
11009:      202,   203,   204,   205,     0,     0,   206,   207,   208,   209,
11010:      210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
11011:      217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
11012:      227,   228,     0,   229,     0,   230,   231,   232,   233,     0,
11013:      234,     0,   235,     0,     0,     0,   238,   239,   529,     0,
11014:      242,     0,   243,     0,   244,   245,   246,   247,     0,   248,
11015:      249,   250,   251,   252,   959,   254,     0,   256,   257,   258,
11016:      259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
11017:      267,     0,   269,   270,   271,   272,   273,   274,   275,   276,
11018:        0,   277,     0,   278,     0,     0,   281,     0,   283,   284,
11019:      285,   286,   287,   288,     0,     0,   289,     0,   291,     0,
11020:        0,   293,   294,   295,   296,   297,   298,   299,   300,   530,
11021:      302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
11022:      312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
11023:      322,     0,   324,   325,   326,   327,   328,     0,   329,   330,
11024:        0,   332,     0,   333,   334,   335,   336,   337,   338,     0,
11025:      339,   340,     0,     0,   341,   342,   343,     0,     0,   344,
11026:      345,   346,     0,   348,     0,   350,   351,   352,   353,   354,
11027:      355,   356,   357,   358,   359,   360,   361,     0,     0,     0,
11028:        0,   362,   363,   364,     0,   366,   367,   368,   369,   370,
11029:      371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
11030:      379,   380,   381,   382,   383,   384,   385,   386,   387,     0,
11031:      388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
11032:      398,   399,   400,     0,   401,   402,     0,   404,   405,   406,
11033:      407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
11034:      417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
11035:      425,   426,   427,   428,   429,     0,     0,   431,   432,   433,
11036:      434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
11037:      443,   444,   445,   446,   531,   448,   449,     0,     0,   450,
11038:      451,     0,   452,     0,   454,   455,   456,   457,   458,     0,
11039:      459,   460,   461,     0,     0,   462,   463,   464,   465,   466,
11040:        0,   467,   468,   469,   470,   471,   472,   473,   474,     0,
11041:        0,   475,   476,   477,     0,   478,   479,   480,   481,     0,
11042:      482,   483,   484,   485,   486,   487,   488,   489,     0,   490,
11043:        0,   492,   493,   494,   495,   496,   497,   498,     0,     0,
11044:      499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
11045:      507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
11046:      517,   518,   519,   520,   528,     0,     0,     0,     0,     0,
11047:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
11048:        0,     0,     0,   118,   119,   120,   121,   122,   123,   124,
11049:      125,     0,   126,   127,   128,     0,     0,     0,     0,     0,
11050:        0,     0,     0,     0,   130,   131,     0,   132,   133,   134,
11051:        0,   136,   137,   138,   139,   140,     0,   142,   143,     0,
11052:      144,   145,   146,   147,   148,   149,     0,     0,   150,   151,
11053:      152,   153,   154,   155,   156,     0,   157,   158,   159,   160,
11054:      161,     0,     0,     0,   163,   164,   165,   166,   167,   168,
11055:        0,   170,   171,   172,     0,   173,   174,   175,   176,   177,
11056:      178,     0,     0,   180,   181,   182,   183,   184,   185,   186,
11057:      187,   188,   189,   190,   191,   192,   193,   194,     0,   195,
11058:        0,   196,   197,   198,   199,   200,   201,     0,     0,   202,
11059:      203,   204,   205,     0,     0,   206,   207,   208,   209,   210,
11060:        0,   211,   212,   213,     0,   214,   215,   216,     0,   217,
11061:      218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
11062:      228,     0,   229,     0,   230,   231,   232,   233,     0,   234,
11063:        0,   235,     0,     0,     0,   238,   239,   529,     0,   242,
11064:        0,   243,     0,   244,   245,   246,   247,     0,   248,   249,
11065:      250,   251,   252,   253,   254,     0,   256,   257,   258,   259,
11066:        0,   260,   261,   262,   263,   264,   265,   266,     0,   267,
11067:        0,   269,   270,   271,   272,   273,   274,   275,   276,     0,
11068:      277,     0,   278,     0,     0,   281,     0,   283,   284,   285,
11069:      286,   287,   288,     0,     0,   289,     0,   291,     0,     0,
11070:      293,   294,   295,   296,   297,   298,   299,   300,   530,   302,
11071:      303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
11072:      313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
11073:        0,   324,   325,   326,   327,   328,     0,   329,   330,     0,
11074:      332,     0,   333,   334,   335,   336,   337,   338,     0,   339,
11075:      340,     0,     0,   341,   342,   343,     0,     0,   344,   345,
11076:      346,     0,   348,     0,   350,   351,   352,   353,   354,   355,
11077:      356,   357,   358,   359,   360,   361,     0,     0,     0,     0,
11078:      362,   363,   364,     0,   366,   367,   368,   369,   370,   371,
11079:        0,   372,   373,   374,   375,   376,   377,     0,   378,   379,
11080:      380,   381,   382,   383,   384,   385,   386,   387,     0,   388,
11081:      389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
11082:      399,   400,     0,   401,   402,     0,   404,   405,   406,   407,
11083:      408,   409,   410,   411,   844,   413,   414,   415,   416,   417,
11084:      418,   419,   420,     0,     0,   421,   422,   423,   424,   425,
11085:      426,   427,   428,   429,     0,     0,   431,   432,   433,   434,
11086:        0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
11087:      444,   445,   446,   531,   448,   449,     0,     0,   450,   451,
11088:        0,   452,     0,   454,   455,   456,   457,   458,     0,   459,
11089:      846,   461,     0,     0,   462,   463,   464,   465,   466,     0,
11090:      467,   468,   469,   470,   471,   472,   473,   474,     0,     0,
11091:      475,   476,   477,     0,   478,   479,   480,   481,     0,   482,
11092:      483,   484,   485,   486,   487,   488,   489,     0,   490,     0,
11093:      492,   493,   494,   495,   496,   497,   498,     0,     0,   499,
11094:        0,     0,   500,   501,   502,   503,   504,   505,   506,   507,
11095:      508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
11096:      518,   519,   520,   528,     0,     0,     0,     0,     0,     0,
11097:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
11098:        0,     0,   118,   119,   120,   121,   122,   123,   124,   125,
11099:        0,   126,   127,   128,     0,     0,     0,     0,     0,     0,
11100:        0,     0,     0,   130,   131,     0,   132,   133,   134,     0,
11101:      136,   137,   138,   139,   140,     0,   142,   143,     0,   144,
11102:      145,   146,   147,   148,   149,     0,     0,   150,   151,   152,
11103:      153,   154,   155,   156,     0,   157,   158,   159,   160,   161,
11104:        0,     0,     0,   163,   164,   165,   166,   167,   168,     0,
11105:      170,   171,   172,     0,   173,   174,   175,   176,   177,   178,
11106:        0,     0,   180,   181,   182,   183,   184,   185,   186,   187,
11107:      188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
11108:      196,   197,   198,   199,   200,   201,     0,     0,   202,   203,
11109:      204,   205,     0,     0,   206,   207,   208,   209,   210,     0,
11110:      211,   212,   213,     0,   214,   215,   216,     0,   217,   218,
11111:      219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
11112:        0,   229,     0,   230,   231,   232,   233,     0,   234,     0,
11113:      235,     0,     0,     0,   238,   239,   529,     0,   242,     0,
11114:      243,     0,   244,   245,   246,   247,     0,   248,   249,   250,
11115:      251,   252,  1314,   254,     0,   256,   257,   258,   259,     0,
11116:      260,   261,   262,   263,   264,   265,   266,     0,   267,     0,
11117:      269,   270,   271,   272,   273,   274,   275,   276,     0,   277,
11118:        0,   278,     0,     0,   281,     0,   283,   284,   285,   286,
11119:      287,   288,     0,     0,   289,     0,   291,     0,     0,   293,
11120:      294,   295,   296,   297,   298,   299,   300,   530,   302,   303,
11121:      304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
11122:      314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
11123:      324,   325,   326,   327,   328,     0,   329,   330,     0,   332,
11124:        0,   333,   334,   335,   336,   337,   338,     0,   339,   340,
11125:        0,     0,   341,   342,   343,     0,     0,   344,   345,   346,
11126:        0,   348,     0,   350,   351,   352,   353,   354,   355,   356,
11127:      357,   358,   359,   360,   361,     0,     0,     0,     0,   362,
11128:      363,   364,     0,   366,   367,   368,   369,   370,   371,     0,
11129:      372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
11130:      381,   382,   383,   384,   385,   386,   387,     0,   388,   389,
11131:      390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
11132:      400,     0,   401,   402,     0,   404,   405,   406,   407,   408,
11133:      409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
11134:      419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
11135:      427,   428,   429,     0,     0,   431,   432,   433,   434,     0,
11136:      435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
11137:      445,   446,   531,   448,   449,     0,     0,   450,   451,     0,
11138:      452,     0,   454,   455,   456,   457,   458,     0,   459,   460,
11139:      461,     0,     0,   462,   463,   464,   465,   466,     0,   467,
11140:      468,   469,   470,   471,   472,   473,   474,     0,     0,   475,
11141:      476,   477,     0,   478,   479,   480,   481,     0,   482,   483,
11142:      484,   485,   486,   487,   488,   489,     0,   490,     0,   492,
11143:      493,   494,   495,   496,   497,   498,     0,     0,   499,     0,
11144:        0,   500,   501,   502,   503,   504,   505,   506,   507,   508,
11145:      509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
11146:      519,   520,   528,     0,     0,     0,     0,     0,     0,     0,
11147:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
11148:        0,   118,   119,   120,   121,   122,   123,   124,   125,     0,
11149:      126,   127,   128,     0,     0,     0,     0,     0,     0,     0,
11150:        0,     0,   130,   131,     0,   132,   133,   134,     0,   136,
11151:      137,   138,   139,   140,     0,   142,   143,     0,   144,   145,
11152:      146,   147,   148,   149,     0,     0,   150,   151,   152,   153,
11153:      154,   155,   156,     0,   157,   158,   159,   160,   161,     0,
11154:        0,     0,   163,   164,   165,   166,   167,   168,     0,   170,
11155:      171,   172,     0,   173,   174,   175,   176,   177,   178,     0,
11156:        0,   180,   181,   182,   183,   184,   185,   186,   187,   188,
11157:      189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
11158:      197,   198,   199,   200,   201,     0,     0,   202,   203,   204,
11159:      205,     0,     0,   206,   207,   208,   209,   210,     0,   211,
11160:      212,   213,     0,   214,   215,   216,     0,   217,   218,   219,
11161:      220,   221,   222,   223,   224,   225,   226,   227,   228,     0,
11162:      229,     0,   230,   231,   232,   233,     0,   234,     0,   235,
11163:        0,     0,     0,   238,   239,   529,     0,   242,     0,   243,
11164:        0,   244,   245,   246,   247,     0,   248,   249,   250,   251,
11165:      252,  1335,   254,     0,   256,   257,   258,   259,     0,   260,
11166:      261,   262,   263,   264,   265,   266,     0,   267,     0,   269,
11167:      270,   271,   272,   273,   274,   275,   276,     0,   277,     0,
11168:      278,     0,     0,   281,     0,   283,   284,   285,   286,   287,
11169:      288,     0,     0,   289,     0,   291,     0,     0,   293,   294,
11170:      295,   296,   297,   298,   299,   300,   530,   302,   303,   304,
11171:      305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
11172:      315,   316,   317,   318,   319,   320,   321,   322,     0,   324,
11173:      325,   326,   327,   328,     0,   329,   330,     0,   332,     0,
11174:      333,   334,   335,   336,   337,   338,     0,   339,   340,     0,
11175:        0,   341,   342,   343,     0,     0,   344,   345,   346,     0,
11176:      348,     0,   350,   351,   352,   353,   354,   355,   356,   357,
11177:      358,   359,   360,   361,     0,     0,     0,     0,   362,   363,
11178:      364,     0,   366,   367,   368,   369,   370,   371,     0,   372,
11179:      373,   374,   375,   376,   377,     0,   378,   379,   380,   381,
11180:      382,   383,   384,   385,   386,   387,     0,   388,   389,   390,
11181:      391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
11182:        0,   401,   402,     0,   404,   405,   406,   407,   408,   409,
11183:      410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
11184:      420,     0,     0,   421,   422,   423,   424,   425,   426,   427,
11185:      428,   429,     0,     0,   431,   432,   433,   434,     0,   435,
11186:      436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
11187:      446,   531,   448,   449,     0,     0,   450,   451,     0,   452,
11188:        0,   454,   455,   456,   457,   458,     0,   459,   460,   461,
11189:        0,     0,   462,   463,   464,   465,   466,     0,   467,   468,
11190:      469,   470,   471,   472,   473,   474,     0,     0,   475,   476,
11191:      477,     0,   478,   479,   480,   481,     0,   482,   483,   484,
11192:      485,   486,   487,   488,   489,     0,   490,     0,   492,   493,
11193:      494,   495,   496,   497,   498,     0,     0,   499,     0,     0,
11194:      500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
11195:      510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
11196:      520,   528,     0,     0,     0,     0,     0,     0,     0,     0,
11197:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
11198:      118,   119,   120,   121,   122,   123,   124,   125,     0,   126,
11199:      127,   128,     0,     0,     0,     0,     0,     0,  1686,     0,
11200:        0,   130,   131,     0,   132,   133,   134,     0,   136,   137,
11201:      138,   139,   140,     0,   142,   143,     0,   144,   145,   146,
11202:      147,   148,   149,     0,     0,   150,   151,   152,   153,   154,
11203:      155,   156,     0,   157,   158,   159,   160,   161,     0,     0,
11204:        0,   163,   164,   165,   166,   167,   168,     0,   170,   171,
11205:      172,     0,   173,   174,   175,   176,   177,   178,     0,     0,
11206:      180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
11207:      190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
11208:      198,   199,   200,   201,     0,     0,   202,   203,   204,   205,
11209:        0,     0,   206,   207,   208,   209,   210,     0,   211,   212,
11210:      213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
11211:      221,   222,   223,   224,   225,   226,   227,   228,     0,   229,
11212:        0,   230,   231,   232,   233,     0,   234,     0,   235,     0,
11213:        0,     0,   238,   239,   529,     0,   242,     0,   243,     0,
11214:      244,   245,   246,   247,     0,   248,   249,   250,   251,   252,
11215:      253,   254,     0,   256,   257,   258,   259,     0,   260,   261,
11216:      262,   263,   264,   265,   266,     0,   267,     0,   269,   270,
11217:      271,   272,   273,   274,   275,   276,     0,   277,     0,   278,
11218:        0,     0,   281,     0,   283,   284,   285,   286,   287,   288,
11219:        0,     0,   289,     0,   291,     0,     0,   293,   294,   295,
11220:      296,   297,   298,   299,   300,   530,   302,   303,   304,   305,
11221:      306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
11222:      316,   317,   318,   319,   320,   321,   322,     0,   324,   325,
11223:      326,   327,   328,     0,   329,   330,     0,   332,     0,   333,
11224:      334,   335,   336,   337,   338,     0,   339,   340,     0,     0,
11225:      341,   342,   343,     0,     0,   344,   345,   346,     0,   348,
11226:        0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
11227:      359,   360,   361,     0,     0,     0,     0,   362,   363,   364,
11228:        0,   366,   367,   368,   369,   370,   371,     0,   372,   373,
11229:      374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
11230:      383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
11231:      392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
11232:      401,   402,     0,   404,   405,   406,   407,   408,   409,   410,
11233:      411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
11234:        0,     0,   421,   422,   423,   424,   425,     0,   427,   428,
11235:      429,     0,     0,   431,   432,   433,   434,     0,   435,   436,
11236:      437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
11237:      531,   448,   449,     0,     0,   450,   451,     0,   452,     0,
11238:      454,   455,   456,   457,   458,     0,   459,   460,   461,     0,
11239:        0,   462,   463,   464,   465,   466,     0,   467,   468,   469,
11240:      470,   471,   472,   473,   474,     0,     0,   475,   476,   477,
11241:        0,   478,   479,   480,   481,     0,   482,   483,   484,   485,
11242:      486,   487,   488,   489,     0,   490,     0,   492,   493,   494,
11243:      495,   496,   497,   498,     0,     0,   499,     0,     0,   500,
11244:      501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
11245:      511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
11246:      528,     0,     0,     0,     0,     0,     0,     0,     0,     0,
11247:        0,     0,     0,     0,     0,     0,     0,     0,     0,   118,
11248:      119,   120,   121,   122,   123,   124,   125,     0,   126,   127,
11249:      128,     0,     0,     0,     0,     0,     0,     0,     0,     0,
11250:      130,   131,     0,   132,   133,   134,     0,   136,   137,   138,
11251:      139,   140,     0,   142,   143,     0,   144,   145,   146,   147,
11252:      148,   149,     0,     0,   150,   151,   152,   153,   154,   155,
11253:      156,     0,   157,   158,   159,   160,   161,     0,     0,     0,
11254:      163,   164,   165,   166,   167,   168,     0,   170,   171,   172,
11255:        0,   173,   174,   175,   176,   177,   178,     0,     0,   180,
11256:      181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
11257:      191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
11258:      199,   200,   201,     0,     0,   202,   203,   204,   205,     0,
11259:        0,   206,   207,   208,   209,   210,     0,   211,   212,   213,
11260:        0,   214,   215,   216,     0,   217,   218,   219,   220,   221,
11261:      222,   223,   224,   225,   226,   227,   228,     0,   229,     0,
11262:      230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
11263:        0,   238,   239,   529,     0,   242,     0,   243,     0,   244,
11264:      245,   246,   247,     0,   248,   249,   250,   251,   252,  1872,
11265:      254,     0,   256,   257,   258,   259,     0,   260,   261,   262,
11266:      263,   264,   265,   266,     0,   267,     0,   269,   270,   271,
11267:      272,   273,   274,   275,   276,     0,   277,     0,   278,     0,
11268:        0,   281,     0,   283,   284,   285,   286,   287,   288,     0,
11269:        0,   289,     0,   291,     0,     0,   293,   294,   295,   296,
11270:      297,   298,   299,   300,   530,   302,   303,   304,   305,   306,
11271:      307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
11272:      317,   318,   319,   320,   321,   322,     0,   324,   325,   326,
11273:      327,   328,     0,   329,   330,     0,   332,     0,   333,   334,
11274:      335,   336,   337,   338,     0,   339,   340,     0,     0,   341,
11275:      342,   343,     0,     0,   344,   345,   346,     0,   348,     0,
11276:      350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
11277:      360,   361,     0,     0,     0,     0,   362,   363,   364,     0,
11278:      366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
11279:      375,   376,   377,     0,   378,   379,   380,   381,   382,   383,
11280:      384,   385,   386,   387,     0,   388,   389,   390,   391,   392,
11281:      393,   394,   395,   396,   397,   398,   399,   400,     0,   401,
11282:      402,     0,   404,   405,   406,   407,   408,   409,   410,   411,
11283:      412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
11284:        0,   421,   422,   423,   424,   425,   426,   427,   428,   429,
11285:        0,     0,   431,   432,   433,   434,     0,   435,   436,   437,
11286:      438,   439,   440,   441,   442,   443,   444,   445,   446,   531,
11287:      448,   449,     0,     0,   450,   451,     0,   452,     0,   454,
11288:      455,   456,   457,   458,     0,   459,   460,   461,     0,     0,
11289:      462,   463,   464,   465,   466,     0,   467,   468,   469,   470,
11290:      471,   472,   473,   474,     0,     0,   475,   476,   477,     0,
11291:      478,   479,   480,   481,     0,   482,   483,   484,   485,   486,
11292:      487,   488,   489,     0,   490,     0,   492,   493,   494,   495,
11293:      496,   497,   498,     0,     0,   499,     0,     0,   500,   501,
11294:      502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
11295:      512,   513,   514,   515,   516,   517,   518,   519,   520,   528,
11296:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
11297:        0,     0,     0,     0,     0,     0,     0,     0,   118,   119,
11298:      120,   121,   122,   123,   124,   125,     0,   126,   127,   128,
11299:        0,     0,     0,     0,     0,     0,     0,     0,     0,   130,
11300:      131,     0,   132,   133,   134,     0,   136,   137,   138,   139,
11301:      140,     0,   142,   143,     0,   144,   145,   146,   147,   148,
11302:      149,     0,     0,   150,   151,   152,   153,   154,   155,   156,
11303:        0,   157,   158,   159,   160,   161,     0,     0,     0,   163,
11304:      164,   165,   166,   167,   168,     0,   170,   171,   172,     0,
11305:      173,   174,   175,   176,   177,   178,     0,     0,   180,   181,
11306:      182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
11307:      192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
11308:      200,   201,     0,     0,   202,   203,   204,   205,     0,     0,
11309:      206,   207,   208,   209,   210,     0,   211,   212,   213,     0,
11310:      214,   215,   216,     0,   217,   218,   219,   220,   221,   222,
11311:      223,   224,   225,   226,   227,   228,     0,   229,     0,   230,
11312:      231,   232,   233,     0,   234,     0,   235,     0,     0,     0,
11313:      238,   239,   529,     0,   242,     0,   243,     0,   244,   245,
11314:      246,   247,     0,   248,   249,   250,   251,   252,  2249,   254,
11315:        0,   256,   257,   258,   259,     0,   260,   261,   262,   263,
11316:      264,   265,   266,     0,   267,     0,   269,   270,   271,   272,
11317:      273,   274,   275,   276,     0,   277,     0,   278,     0,     0,
11318:      281,     0,   283,   284,   285,   286,   287,   288,     0,     0,
11319:      289,     0,   291,     0,     0,   293,   294,   295,   296,   297,
11320:      298,   299,   300,   530,   302,   303,   304,   305,   306,   307,
11321:      308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
11322:      318,   319,   320,   321,   322,     0,   324,   325,   326,   327,
11323:      328,     0,   329,   330,     0,   332,     0,   333,   334,   335,
11324:      336,   337,   338,     0,   339,   340,     0,     0,   341,   342,
11325:      343,     0,     0,   344,   345,   346,     0,   348,     0,   350,
11326:      351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
11327:      361,     0,     0,     0,     0,   362,   363,   364,     0,   366,
11328:      367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
11329:      376,   377,     0,   378,   379,   380,   381,   382,   383,   384,
11330:      385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
11331:      394,   395,   396,   397,   398,   399,   400,     0,   401,   402,
11332:        0,   404,   405,   406,   407,   408,   409,   410,   411,   412,
11333:      413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
11334:      421,   422,   423,   424,   425,   426,   427,   428,   429,     0,
11335:        0,   431,   432,   433,   434,     0,   435,   436,   437,   438,
11336:      439,   440,   441,   442,   443,   444,   445,   446,   531,   448,
11337:      449,     0,     0,   450,   451,     0,   452,     0,   454,   455,
11338:      456,   457,   458,     0,   459,   460,   461,     0,     0,   462,
11339:      463,   464,   465,   466,     0,   467,   468,   469,   470,   471,
11340:      472,   473,   474,     0,     0,   475,   476,   477,     0,   478,
11341:      479,   480,   481,     0,   482,   483,   484,   485,   486,   487,
11342:      488,   489,     0,   490,     0,   492,   493,   494,   495,   496,
11343:      497,   498,     0,     0,   499,     0,     0,   500,   501,   502,
11344:      503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
11345:      513,   514,   515,   516,   517,   518,   519,   520,   528,     0,
11346:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
11347:        0,     0,     0,     0,     0,     0,     0,   118,   119,   120,
11348:      121,   122,   123,   124,   125,     0,   126,   127,   128,     0,
11349:        0,     0,     0,     0,     0,     0,     0,     0,   130,   131,
11350:        0,   132,   133,   134,     0,   136,   137,   138,   139,   140,
11351:        0,   142,   143,     0,   144,   145,   146,   147,   148,   149,
11352:        0,     0,   150,   151,   152,   153,   154,   155,   156,     0,
11353:      157,   158,   159,   160,   161,     0,     0,     0,   163,   164,
11354:      165,   166,   167,   168,     0,   170,   171,   172,     0,   173,
11355:      174,   175,   176,   177,   178,     0,     0,   180,   181,   182,
11356:      183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
11357:      193,   194,     0,   195,     0,   196,   197,   198,   199,   200,
11358:      201,     0,     0,   202,   203,   204,   205,     0,     0,   206,
11359:      207,   208,   209,   210,     0,   211,   212,   213,     0,   214,
11360:      215,   216,     0,   217,   218,   219,   220,   221,   222,   223,
11361:      224,   225,   226,   227,   228,     0,   229,     0,   230,   231,
11362:      232,   233,     0,   234,     0,   235,     0,     0,     0,   238,
11363:      239,   529,     0,   242,     0,   243,     0,   244,   245,   246,
11364:      247,     0,   248,   249,   250,   251,   252,  2264,   254,     0,
11365:      256,   257,   258,   259,     0,   260,   261,   262,   263,   264,
11366:      265,   266,     0,   267,     0,   269,   270,   271,   272,   273,
11367:      274,   275,   276,     0,   277,     0,   278,     0,     0,   281,
11368:        0,   283,   284,   285,   286,   287,   288,     0,     0,   289,
11369:        0,   291,     0,     0,   293,   294,   295,   296,   297,   298,
11370:      299,   300,   530,   302,   303,   304,   305,   306,   307,   308,
11371:      309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
11372:      319,   320,   321,   322,     0,   324,   325,   326,   327,   328,
11373:        0,   329,   330,     0,   332,     0,   333,   334,   335,   336,
11374:      337,   338,     0,   339,   340,     0,     0,   341,   342,   343,
11375:        0,     0,   344,   345,   346,     0,   348,     0,   350,   351,
11376:      352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
11377:        0,     0,     0,     0,   362,   363,   364,     0,   366,   367,
11378:      368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
11379:      377,     0,   378,   379,   380,   381,   382,   383,   384,   385,
11380:      386,   387,     0,   388,   389,   390,   391,   392,   393,   394,
11381:      395,   396,   397,   398,   399,   400,     0,   401,   402,     0,
11382:      404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
11383:      414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
11384:      422,   423,   424,   425,   426,   427,   428,   429,     0,     0,
11385:      431,   432,   433,   434,     0,   435,   436,   437,   438,   439,
11386:      440,   441,   442,   443,   444,   445,   446,   531,   448,   449,
11387:        0,     0,   450,   451,     0,   452,     0,   454,   455,   456,
11388:      457,   458,     0,   459,   460,   461,     0,     0,   462,   463,
11389:      464,   465,   466,     0,   467,   468,   469,   470,   471,   472,
11390:      473,   474,     0,     0,   475,   476,   477,     0,   478,   479,
11391:      480,   481,     0,   482,   483,   484,   485,   486,   487,   488,
11392:      489,     0,   490,     0,   492,   493,   494,   495,   496,   497,
11393:      498,     0,     0,   499,     0,     0,   500,   501,   502,   503,
11394:      504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
11395:      514,   515,   516,   517,   518,   519,   520,  1490,     0,     0,
11396:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
11397:        0,     0,     0,     0,     0,     0,   118,   119,   120,   121,
11398:      122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
11399:        0,  1491,     0,     0,     0,     0,  1492,   130,   131,     0,
11400:      132,   133,   134,  1493,   136,   137,   138,     0,  1494,  1495,
11401:     1496,  1497,     0,   144,   145,   146,   147,   148,   149,     0,
11402:        0,   150,   151,   152,   153,  1498,  1499,   156,     0,   157,
11403:      158,   159,   160,     0,     0,  1500,     0,  1501,   164,   165,
11404:      166,   167,   168,  1502,   170,   171,   172,     0,   173,   174,
11405:      175,   176,   177,   178,     0,  1503,   180,   181,   182,   183,
11406:      184,   185,   186,   187,   188,   189,  1504,   191,   192,  1505,
11407:      194,     0,   195,     0,   196,   197,   198,   199,   200,   201,
11408:        0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
11409:     1067,   209,   210,     0,   211,   212,   213,     0,   214,   215,
11410:      216,     0,   217,   218,   219,   220,     0,   222,   223,   224,
11411:      225,   226,   227,     0,     0,   229,     0,   230,   231,  1506,
11412:      233,     0,   234,     0,   235,  1507,     0,  1508,   238,   239,
11413:        0,  1509,   242,     0,   243,     0,     0,     0,   246,   247,
11414:        0,   248,   249,   250,   251,   252,   253,   254,  1510,   256,
11415:      257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
11416:      266,     0,   267,  1511,     0,   270,   271,   272,   273,   274,
11417:     1512,  1513,     0,  1514,     0,   278,  1515,  1516,   281,  1517,
11418:      283,   284,   285,   286,   287,   288,     0,     0,   289,  1518,
11419:      291,  1519,     0,   293,   294,   295,   296,   297,   298,   299,
11420:      300,  1520,   302,   303,   304,   305,   306,   307,   308,   309,
11421:      310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
11422:      320,   321,  1521,  1522,  1523,   325,   326,   327,     0,     0,
11423:      329,   330,  1524,   332,     0,     0,   334,  1525,   336,   337,
11424:      338,     0,   339,   340,     0,     0,   341,   342,   343,     0,
11425:        0,   344,   345,     0,  1526,   348,  1527,     0,   351,   352,
11426:      353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
11427:        0,     0,     0,   362,   363,     0,  1528,   366,   367,     0,
11428:      369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
11429:        0,   378,   379,   380,   381,   382,  1529,   384,   385,   386,
11430:      387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
11431:      396,   397,   398,   399,   400,     0,   401,   402,  1530,   404,
11432:      405,   406,  1531,   408,   409,   410,   411,   412,   413,   414,
11433:      415,   416,   417,   418,   419,   420,     0,  1532,   421,   422,
11434:      423,   424,   425,   426,  1533,   428,   429,     0,  1534,   431,
11435:      432,  1535,   434,     0,   435,   436,   437,   438,   439,   440,
11436:      441,   442,   443,   444,   445,   446,  1536,   448,     0,     0,
11437:        0,   450,   451,     0,   452,  1537,   454,   455,   456,   457,
11438:      458,     0,   459,  1538,  1539,     0,     0,   462,   463,     0,
11439:      465,     0,     0,   467,   468,  1540,   470,   471,   472,   473,
11440:      474,  1541,     0,   475,   476,   477,     0,   478,   479,   480,
11441:      481,     0,   482,   483,   484,   485,   486,     0,  1542,   489,
11442:        0,   490,  1543,   492,   493,   494,   495,   496,   497,   498,
11443:        0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
11444:      505,  1490,     0,     0,     0,     0,     0,     0,     0,     0,
11445:        0,     0,   517,   518,   519,   520,     0,     0,     0,     0,
11446:      118,   119,   120,   121,   122,   123,   124,   125,     0,   126,
11447:      127,   128,     0,     0,     0,  1491,     0,     0,     0,     0,
11448:     1492,   130,   131,     0,   132,   133,   134,  1493,   136,   137,
11449:      138,     0,  1494,  1495,  1496,  1497,     0,   144,   145,   146,
11450:      147,   148,   149,     0,     0,   150,   151,   152,   153,  1498,
11451:     1499,   156,     0,   157,   158,   159,   160,     0,     0,  1500,
11452:        0,  1501,   164,   165,   166,   167,   168,  1502,   170,   171,
11453:      172,     0,   173,   174,   175,   176,   177,   178,     0,  1503,
11454:      180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
11455:     1504,   191,   192,  1505,   194,     0,   195,     0,   196,   197,
11456:      198,   199,   200,   201,     0,     0,   202,   203,   204,   205,
11457:        0,     0,   206,   207,  1067,   209,   210,     0,   211,   212,
11458:      213,     0,  1848,   215,   216,     0,   217,   218,   219,   220,
11459:        0,   222,   223,   224,   225,   226,   227,     0,     0,   229,
11460:        0,   230,   231,  1506,   233,     0,   234,     0,   235,  1507,
11461:        0,  1508,   238,   239,     0,  1509,   242,     0,   243,     0,
11462:        0,     0,   246,   247,     0,   248,   249,   250,   251,   252,
11463:      253,   254,  1510,   256,   257,   258,   259,     0,   260,   261,
11464:      262,   263,   264,   265,   266,     0,   267,  1511,     0,   270,
11465:      271,   272,   273,   274,  1512,  1513,     0,  1514,     0,   278,
11466:     1515,  1516,   281,  1517,   283,   284,   285,   286,   287,   288,
11467:        0,     0,   289,  1518,   291,  1519,     0,   293,   294,   295,
11468:      296,   297,   298,   299,   300,  1520,   302,   303,   304,   305,
11469:      306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
11470:      316,   317,   318,   319,   320,   321,  1521,  1522,  1523,   325,
11471:      326,   327,     0,     0,   329,   330,  1524,   332,     0,     0,
11472:      334,  1525,   336,   337,   338,     0,   339,   340,     0,     0,
11473:      341,   342,   343,     0,     0,   344,   345,     0,  1526,   348,
11474:     1527,     0,   351,   352,   353,   354,   355,   356,   357,   358,
11475:      359,   360,   361,     0,     0,     0,     0,   362,   363,     0,
11476:     1528,   366,   367,     0,   369,   370,   371,     0,   372,   373,
11477:      374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
11478:     1529,   384,   385,   386,   387,     0,   388,   389,   390,   391,
11479:      392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
11480:      401,   402,  1530,   404,   405,   406,  1531,   408,   409,   410,
11481:      411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
11482:        0,  1532,   421,   422,   423,   424,   425,   426,  1533,   428,
11483:      429,     0,  1534,   431,   432,  1535,   434,     0,   435,   436,
11484:      437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
11485:     1536,   448,     0,     0,     0,   450,   451,     0,   452,  1537,
11486:      454,   455,   456,   457,   458,     0,   459,  1538,  1539,     0,
11487:        0,   462,   463,     0,   465,     0,     0,   467,   468,  1540,
11488:      470,   471,   472,   473,   474,  1541,     0,   475,   476,   477,
11489:        0,   478,   479,   480,   481,     0,   482,   483,   484,   485,
11490:      486,     0,  1542,   489,     0,   490,  1543,   492,   493,   494,
11491:      495,   496,   497,   498,     0,     0,   499,     0,     0,   500,
11492:      501,   502,   503,   504,   505,  3199,     0,     0,     0,     0,
11493:        0,     0,     0,     0,     0,     0,   517,   518,   519,   520,
11494:        0,     0,     0,     0,   118,   119,   120,   121,   122,   123,
11495:      124,   125,     0,   126,   127,   128,     0,     0,     0,  2947,
11496:        0,     0,     0,     0,  2948,   130,   131,     0,   132,   133,
11497:      134,  2949,   136,   137,   138,     0,  1494,  2950,  1496,  1497,
11498:        0,   144,   145,   146,   147,   148,   149,     0,     0,   150,
11499:      151,   152,   153,  1498,  1499,   156,     0,   157,   158,   159,
11500:      160,     0,     0,  2951,     0,  2952,   164,   165,   166,   167,
11501:      168,  2953,   170,   171,   172,     0,   173,   174,   175,   176,
11502:      177,   178,     0,  2954,   180,   181,   182,   183,   184,   185,
11503:      186,   187,   188,   189,  1504,   191,   192,  1505,   194,     0,
11504:      195,     0,   196,   197,   198,   199,   200,   201,     0,     0,
11505:      202,   203,   204,   205,     0,     0,   206,   207,  1067,   209,
11506:      210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
11507:      217,   218,   219,   220,     0,   222,   223,   224,   225,   226,
11508:      227,     0,     0,   229,     0,   230,   231,  1506,   233,     0,
11509:      234,     0,   235,  2955,     0,  2956,   238,   239,  2957,  2958,
11510:      242,     0,   243,     0,     0,     0,   246,   247,     0,   248,
11511:      249,   250,   251,   252,   253,   254,  2959,   256,   257,   258,
11512:      259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
11513:      267,  2960,     0,   270,   271,   272,   273,   274,  1512,  1513,
11514:        0,  1514,     0,   278,  2961,  2962,   281,  2963,   283,   284,
11515:      285,   286,   287,   288,     0,     0,   289,  2964,   291,  2965,
11516:        0,   293,   294,   295,   296,   297,   298,   299,   300,  3200,
11517:      302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
11518:      312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
11519:     1521,  2967,  1523,   325,   326,   327,     0,     0,   329,   330,
11520:     2969,   332,     0,     0,   334,  1525,   336,   337,   338,     0,
11521:      339,   340,     0,     0,   341,   342,   343,     0,     0,   344,
11522:      345,     0,  2971,   348,  2972,     0,   351,   352,   353,   354,
11523:      355,   356,   357,   358,   359,   360,   361,     0,     0,     0,
11524:        0,   362,   363,     0,  2973,   366,   367,     0,   369,   370,
11525:      371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
11526:      379,   380,   381,   382,  1529,   384,   385,   386,   387,     0,
11527:      388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
11528:      398,   399,   400,     0,   401,   402,  2974,   404,   405,   406,
11529:        0,   408,   409,   410,   411,   412,   413,   414,   415,   416,
11530:      417,   418,   419,   420,     0,  2975,   421,   422,   423,   424,
11531:      425,   426,     0,   428,   429,     0,  2977,   431,   432,  1535,
11532:      434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
11533:      443,   444,   445,   446,  3201,   448,     0,     0,     0,   450,
11534:      451,     0,   452,  2979,   454,   455,   456,   457,   458,     0,
11535:      459,  1538,  1539,     0,     0,   462,   463,     0,   465,     0,
11536:        0,   467,   468,  2980,   470,   471,   472,   473,   474,     0,
11537:        0,   475,   476,   477,     0,   478,   479,   480,   481,     0,
11538:      482,   483,   484,   485,   486,     0,  1542,   489,     0,   490,
11539:     2982,   492,   493,   494,   495,   496,   497,   498,     0,     0,
11540:      499,     0,     0,   500,   501,   502,   503,   504,   505,   528,
11541:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
11542:      517,   518,   519,   520,     0,     0,     0,     0,   118,   119,
11543:      120,   121,   122,   123,   124,   125,     0,   126,   127,   128,
11544:        0,     0,     0,     0,     0,     0,     0,     0,     0,   130,
11545:      131,     0,   132,   133,   134,     0,   136,   137,   138,   139,
11546:      140,     0,   142,   143,     0,   144,   145,   146,   147,   148,
11547:      149,     0,     0,   150,   151,   152,   153,   154,   155,   156,
11548:        0,   157,   158,   159,   160,   161,     0,     0,     0,   163,
11549:      164,   165,   166,   167,   168,     0,   170,   171,   172,     0,
11550:      173,   174,   175,   176,   177,   178,     0,     0,   180,   181,
11551:      182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
11552:      192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
11553:      200,   201,     0,     0,   202,   203,   204,   205,     0,     0,
11554:      206,   207,   208,   209,   210,     0,   211,   212,   213,     0,
11555:      214,   215,   216,     0,   217,   218,   219,   220,   221,   222,
11556:      223,   224,   225,   226,   227,   228,     0,   229,     0,   230,
11557:      231,   232,   233,     0,   234,     0,   235,     0,     0,     0,
11558:      238,   239,   529,     0,   242,     0,   243,     0,   244,   245,
11559:        0,   247,     0,   248,   249,   250,   251,   252,   253,   254,
11560:        0,   256,   257,   258,   259,     0,   260,   261,   262,   263,
11561:      264,   265,   266,     0,   267,     0,   269,   270,   271,   272,
11562:      273,   274,   275,   276,     0,   277,     0,   278,     0,     0,
11563:      281,     0,   283,   284,   285,   286,   287,   288,     0,     0,
11564:      289,     0,   291,     0,     0,   293,   294,   295,   296,   297,
11565:      298,   299,   300,   530,   302,   303,   304,   305,   306,   307,
11566:      308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
11567:      318,   319,   320,   321,   322,     0,   324,   325,   326,   327,
11568:      328,     0,   329,   330,     0,   332,     0,   333,   334,   335,
11569:      336,   337,   338,     0,   339,   340,     0,     0,   341,   342,
11570:      343,     0,     0,   344,   345,   346,     0,   348,     0,   350,
11571:      351,   352,   353,   354,   355,   356,     0,   358,   359,   360,
11572:      361,     0,     0,     0,     0,   362,   363,   364,     0,   366,
11573:      367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
11574:      376,   377,     0,   378,   379,   380,     0,   382,   383,   384,
11575:      385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
11576:      394,   395,   396,   397,   398,   399,   400,     0,   401,   402,
11577:        0,   404,   405,   406,   407,     0,   409,   410,   411,   412,
11578:      413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
11579:      421,   422,   423,   424,   425,   426,   427,   428,   429,     0,
11580:        0,   431,   432,   433,   434,     0,   435,   436,   437,   438,
11581:      439,   440,   441,   442,   443,   444,   445,   446,   531,   448,
11582:      449,     0,     0,   450,   451,     0,   452,     0,   454,   455,
11583:      456,   457,   458,     0,   459,   460,   461,     0,     0,   462,
11584:      463,   464,   465,   466,     0,   467,   468,   469,   470,   471,
11585:      472,   473,   474,     0,     0,   475,   476,   477,     0,   478,
11586:      479,   480,   481,     0,   482,   483,   484,   485,   486,   487,
11587:      488,   489,     0,   490,     0,   492,   493,   494,   495,   496,
11588:      497,   498,     0,     0,   499,     0,     0,   500,   501,   502,
11589:      503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
11590:      513,   514,   515,   516,   517,   518,   519,   520,  1785,     0,
11591:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
11592:        0,     0,     0,     0,     0,     0,     0,   118,   119,   120,
11593:      121,   122,   123,   124,   125,     0,   126,   127,   128,     0,
11594:        0,     0,  1491,     0,     0,     0,     0,  1492,   130,   131,
11595:        0,   132,   133,   134,  1493,   136,   137,   138,     0,  1494,
11596:     1495,  1496,  1497,     0,   144,   145,   146,   147,   148,   149,
11597:        0,     0,   150,   151,   152,   153,  1498,  1499,   156,     0,
11598:      157,   158,   159,   160,     0,     0,  1500,     0,  1501,   164,
11599:      165,   166,   167,   168,  1502,   170,   171,   172,     0,   173,
11600:      174,   175,   176,   177,   178,     0,  1503,   180,   181,   182,
11601:      183,   184,   185,   186,   187,   188,   189,  1504,   191,   192,
11602:     1505,   194,     0,   195,     0,   196,   197,   198,   199,   200,
11603:      201,     0,     0,   202,   203,   204,   205,     0,     0,   206,
11604:      207,  1067,   209,   210,     0,   211,   212,   213,     0,   214,
11605:      215,   216,     0,   217,   218,   219,   220,     0,   222,   223,
11606:      224,   225,   226,   227,     0,     0,   229,     0,   230,   231,
11607:     1506,   233,     0,   234,     0,   235,  1507,     0,  1508,   238,
11608:      239,     0,  1509,   242,     0,   243,     0,     0,     0,   246,
11609:      247,     0,   248,   249,   250,   251,   252,   253,   254,  1510,
11610:      256,   257,   258,   259,     0,   260,   261,   262,   263,   264,
11611:      265,   266,     0,   267,  1511,     0,   270,   271,   272,   273,
11612:      274,  1512,  1513,     0,  1514,     0,   278,  1515,  1516,   281,
11613:     1517,   283,   284,   285,   286,   287,   288,     0,     0,   289,
11614:     1518,   291,  1519,     0,   293,   294,   295,   296,   297,   298,
11615:      299,   300,     0,   302,   303,   304,   305,   306,   307,   308,
11616:      309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
11617:      319,   320,   321,  1521,  1522,  1523,   325,   326,   327,     0,
11618:        0,   329,   330,  1524,   332,     0,     0,   334,  1525,   336,
11619:      337,   338,     0,   339,   340,     0,     0,   341,   342,   343,
11620:        0,     0,   344,   345,     0,  1526,   348,  1527,     0,   351,
11621:      352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
11622:        0,     0,     0,     0,   362,   363,     0,  1528,   366,   367,
11623:        0,   369,   370,   371,     0,   372,   373,   374,   375,   376,
11624:      377,     0,   378,   379,   380,   381,   382,  1529,   384,   385,
11625:      386,   387,     0,   388,   389,   390,   391,   392,   393,   394,
11626:      395,   396,   397,   398,   399,   400,     0,   401,   402,  1530,
11627:      404,   405,   406,     0,   408,   409,   410,   411,   412,   413,
11628:      414,   415,   416,   417,   418,   419,   420,     0,  1532,   421,
11629:      422,   423,   424,   425,   426,     0,   428,   429,     0,  1534,
11630:      431,   432,  1535,   434,     0,   435,   436,   437,   438,   439,
11631:      440,   441,   442,   443,   444,   445,   446,     0,   448,     0,
11632:        0,     0,   450,   451,     0,   452,  1537,   454,   455,   456,
11633:      457,   458,     0,   459,  1538,  1539,     0,     0,   462,   463,
11634:        0,   465,     0,     0,   467,   468,  1540,   470,   471,   472,
11635:      473,   474,     0,     0,   475,   476,   477,     0,   478,   479,
11636:      480,   481,     0,   482,   483,   484,   485,   486,     0,  1542,
11637:      489,     0,   490,  1543,   492,   493,   494,   495,   496,   497,
11638:      498,     0,     1,   499,     0,     0,   500,   501,   502,   503,
11639:      504,   505,     2,     0,     3,     4,     0,     0,     0,     0,
11640:        1,     0,     0,   517,   518,   519,   520,     0,     0,     0,
11641:        2,     0,     6,     0,     0,     0,     0,     0,     0,     0,
11642:        0,     7,     0,     0,     0,     0,     0,     0,     0,     0,
11643:        6,     0,     0,     0,     0,     8,     0,     0,     0,     7,
11644:        0,     0,     0,     0,     0,     0,    10,     0,     0,     0,
11645:        0,     0,     0,     8,     0,     0,     0,     0,    11,     0,
11646:      751,     0,     0,     0,    10,     0,     0,     0,     0,     0,
11647:        0,    13,     0,     0,     0,     0,    11,     0,   751,     0,
11648:        0,     0,     0,     0,     0,     0,    14,    15,     0,    13,
11649:        0,     0,     0,     0,     0,     0,     0,   752,     0,     0,
11650:        0,     0,     0,    18,    14,    15,     0,     0,     0,     0,
11651:        0,    19,     0,     0,     0,   752,     0,     0,     0,     0,
11652:        0,    18,     0,     0,     0,     0,     0,     0,    22,    19,
11653:        0,     0,    23,     0,     0,     0,     0,     0,     0,     0,
11654:        0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
11655:       23,     0,     0,     0,     0,     0,     0,     0,     0,     0,
11656:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
11657:        0,     0,     0,     0, -1446,     0,     0,     0,     0,     0,
11658:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
11659:        0,     0, -1446,     0,     0,     0,     0,     0,     0,     0,
11660:       25,     0,     0,     0,     0,     0,     0,     0,     0,     0,
11661:        0,     0,     0,     0,     0,     0,     0,     0,    25,     0,
11662:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
11663:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
11664:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
11665:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
11666:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
11667:        0,     0,     0,     0,     0,    26,    27,    28,     0,     0,
11668:        0,     0,     0,    29,     0,     0,    30,     0,     0,     0,
11669:        0,     0,     0,    26,    27,    28,     0,     0,     0,     0,
11670:        0,    29,     0,     0,    30,     0,     0,     0,     0,     0,
11671:        0,     0,     0,     0,     0,     0,     0,    31,     0,     0,
11672:        0,     0,     0,     0,     0,     0,    32,     0,     0,     0,
11673:        0,     0,     0,     0,     0,    31,     0,     0,     0,     0,
11674:        0,     0,    33,     0,    32,     0,     0,     0,     0,    34,
11675:        0,     0,     0,    35,     0,     0,     0,     0,     0,     0,
11676:       33,     0,     0,    36,     0,     0,     0,    34,     0,     0,
11677:        0,    35,     0,     0,     0,    37,     0,     0,     0,    38,
11678:        0,    36,     0,     0,     0,     0,     0,     0,     0,     0,
11679:        0,     0,     0,    37,     0,     0,     0,    38,     0,    39,
11680:        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
11681:        0,     0,    40,     0,     0,     0,     0,    39,    42,     0,
11682:        0,     0,     0,    43,     0,     0,     0,     0,   753,     0,
11683:       40,     0,     0,     0,     0,     0,    42,     0,     0,     0,
11684:       44,    43,     0,     0,     0,     0,     0,     0,     0,     0,
11685:        0,     0,     0,     0,     0,     0,     0,     0,    44,     0,
11686:        0,     0,     0,     0,    45,     0,     0,     0,     0,     0,
11687:        0,     0,     0,     0,     0,     0,     0,     0,   754,     0,
11688:        0,     0,    45,     0,     0,     0,     0,     0,     0,     0,
11689:        0,     0,     0,     0,     0,     0,    46
11690: };
11691: 
11692: static const yytype_int16 yycheck[] =
11693: {
11694:        7,   840,     0,   521,     0,     0,   746,   902,   887,    16,
11695:        0,     0,     0,   814,   864,    46,    23,   998,     0,     0,
11696:       38,     0,     0,     7,    73,   754,   913,    75,    76,     0,
11697:     1237,   929,  1223,  1249,   964,  1235,  1435,  1708,    20,    23,
11698:       77,  1039,    20,   934,    16,    77,  1168,  1210,    37,  1670,
11699:     1087,   989,    20,  1588,   989,     7,   989,  2201,   989,  1642,
11700:     1313,  1816,  1483,  2260,  1562,  1203,  1212,   979,    75,    76,
11701:     1215,    23,    13,  2011,  1291,  2191,   968,   979,    19,  2347,
11702:     1338,    17,     0,    23,  1623,  1624,     0,    45,     0,    30,
11703:        0,    75,    76,   111,  1240,     0,     0,     0,  2718,    23,
11704:        0,     0,     0,    44,    45,  2656,  1133,  2695,  2170,     0,
11705:     2172,  1138,   101,   902,  1095,   904,     0,   906,    34,  2136,
11706:     1007,  2190,  2711,    75,    76,  2256,  2693,     0,     0,     0,
11707:     2656,     0,     0,   753,     0,    75,    76,   987,     0,     0,
11708:      754,   810,     0,  2308,  2309,  2310,   815,  2012,   747,  2327,
11709:        0,    75,    76,  2610,  2525,  1838,     0,  2614,     0,  1835,
11710:        9,  1061,  1062,     9,  1726,     0,     0,     5,   109,     5,
11711:     1728,  1674,  1952,    26,    80,    13,    14,  3035,  1078,    32,
11712:        5,     5,    63,  1834,     5,     9,     5,     5,     9,   990,
11713:     2339,    55,     5,     5,    13,    14,     5,   778,     5,     5,
11714:       13,    14,    13,    14,    13,    14,    13,    14,  1642,     5,
11715:       26,     5,    13,    14,     5,     5,    32,  2348,  2335,     5,
11716:        5,  3021,    45,     5,     5,   172,   172,     5,    82,  2333,
11717:      119,    74,  1144,  2339,     3,    45,     5,   122,  3038,    93,
11718:      173,    11,   882,    11,  1094,   124,    16,   882,    16,    37,
11719:      979,   139,     3,     4,     5,   107,   100,   859,     9,  2474,
11720:     1258,    63,     4,   104,  1151,    30,   100,     9,     5,  1267,
11721:       30,  2402,  2403,    38,  2405,   245,    46,     4,    38,  1177,
11722:     1985,  1986,     9,    63,   137,    90,   172,   181,    11,   807,
11723:      122,  1996,    15,    16,    11,  2000,   122,    30,    15,    16,
11724:     2991,   288,   119,    82,   191,    38,   291,   172,   172,     5,
11725:       80,   193,  1224,    11,    93,  1227,  1228,    15,    16,     3,
11726:      296,   137,   991,    46,   129,   290,   169,  2856,  1450,  2858,
11727:      313,   291,    63,  1065,  1003,   107,  2875,  3204,   856,   313,
11728:      181,   276,  1533,   147,  1978,  1979,  1980,   147,    46,  1081,
11729:       34,    35,  1202,   193,   382,    64,   368,    80,   162,  1198,
11730:     1199,  1483,   982,   167,   117,    74,   117,   119,   315,   316,
11731:      317,  2572,    40,  2574,  1627,    30,  3134,   117,  3136,  3395,
11732:      164,   213,    80,   108,    40,   173,   245,   213,    30,   107,
11733:      173,   120,  2626,    83,  2456,   369,   279,    41,   409,   296,
11734:       13,    14,    11,   373,  2159,   120,  1017,   433,  2573,  1922,
11735:     3363,   391,  1023,   418,   218,    11,  1295,   149,   218,   250,
11736:      507,   209,    33,  3388,  3389,  2976,  1324,   482,  2625,   108,
11737:     3230,  2926,   273,   520,   238,   382,   132,   225,   191,  2934,
11738:     1953,   294,  3030,    85,   275,   122,   290,   235,    59,   504,
11739:       46,   456,    94,  3041,  2598,   207,   290,   483,   148,   166,
11740:      137,   472,  1353,   280,   160,  3032,   195,   192,   219,   201,
11741:     3486,    80,   419,   355,  3332,  3440,   118,   132,   294,   360,
11742:      195,   451,   126,   287,    80,   431,   329,   171,   272,   173,
11743:      241,  2622,   296,  2624,   522,   132,   296,  3255,  2732,  2516,
11744:      353,   273,  1539,   308,   357,   452,   518,   245,   176,    26,
11745:     2921,  3202,  1765,   396,   373,    32,   463,   361,   358,   454,
11746:      176,   273,   275,   275,    11,   485,   309,   361,    15,    16,
11747:      513,   518,   241,   518,  3487,  3064,   389,   353,   518,   513,
11748:      280,   357,   273,   280,     8,   431,   522,    11,   518,   191,
11749:      539,    15,    16,   518,   167,    19,    20,    21,   360,  2142,
11750:     1200,   507,   204,   457,  2765,  1200,  2781,   419,  3426,   454,
11751:      459,   518,  1174,   389,   520,  2724,   364,   431,   457,   275,
11752:      360,  1162,  1100,  2004,   280,   518,   593,   428,   476,   285,
11753:     2707,  1441,   451,   416,  3461,   383,  1759,  1337,  1498,  1499,
11754:     2704,  2136,  1342,  1820,   469,   448,   416,   460,  1348,  3148,
11755:      516,  2742,   395,  2551,   520,   556,  1455,   324,  2724,   424,
11756:      137,   593,   454,  1523,  1882,   522,  1355,  3427,   454,   360,
11757:     3219,   518,  2412,  1472,   399,  2174,   480,   406,   407,   399,
11758:      290,   522,   467,   447,   460,  2207,   480,   447,   285,  1856,
11759:     2208,   328,   431,  3204,   518,   373,   132,    75,   389,   518,
11760:      108,  1914,   148,   509,   510,  2200,   399,  2350,   517,  2345,
11761:      482,   521,   522,  1926,  1672,   519,   518,   521,  3204,   521,
11762:      518,  1897,   518,  1583,  1584,   519,   521,   521,   526,  2340,
11763:      526,  2194,   504,   518,   518,  2892,  3153,   518,   516,   518,
11764:      518,  3158,   520,  1956,   482,   518,   518,   518,  2142,   518,
11765:     1963,   518,   518,   451,   200,  1565,  1566,   518,   227,  3339,
11766:      522,  2899,   518,   754,   518,  1575,   504,   518,   518,  1616,
11767:     1617,  1618,   518,   518,  1354,  3106,   518,   518,   480,  1589,
11768:      518,  1355,   438,  3331,   514,  1344,   514,   754,  2001,  3338,
11769:     3018,  3162,  2005,   449,    30,   227,   419,   805,   509,   510,
11770:     3438,   162,   504,   405,   273,  2470,   408,   509,   510,  1619,
11771:     3181,   753,   164,  1505,   805,   753,   162,   294,  3527,  1448,
11772:      518,  2034,   509,   510,   468,   457,   754,   794,   511,   512,
11773:      513,   514,  2009,  1525,   511,   512,   513,   514,   805,   275,
11774:      457,   273,    26,   519,  2873,   245,   522,   748,   266,   285,
11775:      794,   509,   510,   511,   512,   513,   514,   854,  2756,  3568,
11776:      359,   805,   854,  2457,  2458,  2459,  2460,  1559,   292,   259,
11777:      260,   518,   341,   840,   841,  1566,   353,   238,   887,   231,
11778:      357,   859,   794,  1965,  1575,  3523,   518,  3012,  3436,   507,
11779:      389,   480,   238,   805,     0,  3422,   132,   864,   178,   877,
11780:      518,   518,  2879,   321,   468,   805,  1864,   521,   275,    82,
11781:      794,    59,   389,   280,   106,   504,   874,  1789,   874,   874,
11782:       93,   805,  2004,   392,   874,   874,   874,  1799,  3019,  1784,
11783:     1802,  2474,   874,   874,   862,   874,   874,  2835,   522,  1639,
11784:      482,   287,  2160,   874,   911,   912,   132,   865,   915,   916,
11785:     3461,  1429,  3479,   137,   519,   174,  2671,   522,  2673,   184,
11786:      392,   241,   504,   214,   865,  2790,   842,   843,  2793,   845,
11787:     2795,   847,   339,   373,   160,  3461,   518,   245,  1817,  1818,
11788:     1819,     5,   203,   460,  3333,   454,  1973,   275,   378,   379,
11789:     1880,  1842,    82,   341,  1884,    53,   874,  1887,  3226,  3547,
11790:      874,   968,   874,  2085,   874,   245,  1014,  3164,  1757,   874,
11791:      874,   874,   979,  1021,   874,   874,   874,   518,   108,   986,
11792:      987,  2516,   454,   874,   172,   992,  1898,   246,   995,   996,
11793:      874,   998,   999,  1000,  1001,  1784,  1898,  1889,   934,  2538,
11794:      982,   874,   874,   874,   982,   874,   874,  1014,   874,   245,
11795:       82,   451,   874,   874,  1021,  1804,   874,   174,    74,   251,
11796:     1809,    93,   509,   510,   511,   512,   513,   514,  3144,   261,
11797:     1014,  1038,  1039,  1040,   518,  2434,  3425,  1021,  2176,  3428,
11798:     2178,   505,   506,   507,   174,   509,   510,   511,   512,   513,
11799:      514,     4,   517,  1060,   280,  1795,     9,   517,  1012,   285,
11800:     1800,   117,  1014,   528,  1095,   373,     4,    37,   528,  1021,
11801:      294,     9,  1079,   203,  1014,   340,  1030,  2284,   518,   177,
11802:     1034,  1021,  2580,  1090,  1091,  1092,   345,  1094,  1095,   246,
11803:     1014,  1098,  2847,   373,  2311,   519,   194,  1021,   522,  2352,
11804:      513,   199,   482,   423,   369,   425,   108,   520,  2230,  3306,
11805:      513,  1961,   373,   189,   190,   178,   246,   520,    13,    14,
11806:     3058,  2656,  1129,   384,   504,   384,  1098,   315,   316,   317,
11807:      355,   451,  3521,   357,   178,   359,   380,   373,   518,   237,
11808:     1147,  1148,    26,   451,  1181,  1182,  2292,  1184,    32,  1181,
11809:     1182,   519,  1184,  3291,   522,  3293,  1174,  1905,   419,   147,
11810:      419,  1909,     4,   519,  1912,   389,   522,     9,   162,  1898,
11811:      162,   451,     4,   167,   162,   167,  1183,     9,   241,   167,
11812:     1187,  1188,   516,   259,   260,  2166,   520,   516,   345,   518,
11813:     1197,  1198,  1199,     8,   382,  1202,  2046,   241,  2781,   380,
11814:       15,    16,   203,   173,    19,    20,    21,    71,    72,   470,
11815:      518,   470,   438,   516,  2359,   451,  1223,   520,   516,   275,
11816:     2365,  1239,   520,   449,   280,   519,  1167,   384,   522,  3367,
11817:      218,   419,  1440,     8,  1442,  1443,    11,  2490,   518,   209,
11818:       15,    16,   519,   373,   238,   522,   238,   827,   828,   829,
11819:      238,  1258,   832,   137,   384,   225,   252,     6,   345,  1022,
11820:     1267,    10,   419,  1026,   452,   235,   480,   436,   482,    18,
11821:      314,    46,  2122,   329,    26,   463,   842,   843,    53,   845,
11822:       32,   847,   518,    32,  1291,    13,    14,    36,    25,   419,
11823:      470,   347,  2171,   287,   419,   287,   394,   384,   519,   287,
11824:      377,   522,   378,   379,   167,    80,  1313,   516,   296,   518,
11825:      373,   520,   442,   470,  1312,   519,  1312,  1312,   522,  2266,
11826:      519,  2268,  1329,   522,  1312,   519,    13,    14,   522,   373,
11827:      518,  1338,   419,  2263,   519,  2265,   380,   522,  2759,   380,
11828:      470,    26,  3539,   519,  2879,   518,   522,    32,  1355,   519,
11829:     2472,   518,   522,   519,  2476,   519,   522,  1329,   522,   518,
11830:      423,   519,   425,   519,   522,  1372,   522,  2622,   518,  2624,
11831:     1377,   132,  1354,   423,   519,   425,  1354,   522,   115,   423,
11832:     3524,   425,  3526,   470,   518,   137,   519,  1355,   451,   522,
11833:      519,   518,   448,   522,   364,   519,  2235,   518,   522,   160,
11834:     1372,   457,   177,  2656,  1345,   519,  1347,   451,   522,   423,
11835:      294,   425,  1460,   383,  1462,   519,   172,  1465,   522,   194,
11836:     1427,  1428,  1470,  3567,   199,  1473,  1433,  1475,  1435,  3491,
11837:      518,  1479,  2639,  1440,  1441,  1442,  1443,   518,  2638,   519,
11838:     2338,   423,   522,   425,  3506,   423,   511,   425,  1455,  1456,
11839:      518,  1435,   137,  1460,  2670,  1462,    13,    14,  1465,   447,
11840:     2623,   519,   237,  1470,   522,  1472,  1473,   519,  1475,   353,
11841:      522,   519,  1479,   357,   522,   518,  1460,   292,  1462,    13,
11842:       14,  1465,    40,  1435,  2521,  2522,  1470,  2687,   518,  1473,
11843:      519,  1475,  2637,   522,  2639,  1479,   504,   519,   519,  3561,
11844:      522,   522,    60,   519,  3566,   389,   522,   224,  1460,   519,
11845:     1462,  1435,   522,  1465,   275,    13,    14,   292,  1470,   280,
11846:     1460,  1473,  1462,  1475,   285,  1465,  1533,  1479,   516,  3284,
11847:     1470,  3286,   520,  1473,   501,  1475,  1460,  2387,  1462,  1479,
11848:      519,  1465,   294,   522,  2525,   520,  1470,   519,   106,  1473,
11849:      522,  1475,    13,    14,   519,  1479,   345,   522,  1565,  1566,
11850:     2498,  2499,  2500,  2498,  2499,  2498,  2497,  1574,  1575,   879,
11851:      290,   881,  1562,  1562,   501,  1582,   460,    13,    14,   520,
11852:     1562,  1562,  1589,  1562,  1562,    13,    14,    13,    14,    13,
11853:       14,  1562,    13,    14,   171,   384,    13,    14,   522,    13,
11854:       14,   353,    13,    14,   518,   357,    13,    14,  1615,   294,
11855:      519,    26,  1619,    13,    14,  1622,   519,    32,   519,   394,
11856:     1627,  1628,  1629,  1630,  1631,  1632,  1633,  1634,  1635,  1636,
11857:      419,    13,    14,  1640,  1641,  1642,   172,   389,  1645,   295,
11858:     2380,    59,  1649,   518,   202,  1652,  1653,  1654,  1655,  1656,
11859:     1657,  1658,  1659,  1660,    13,    14,  1663,   420,  1642,  2388,
11860:       13,    14,   501,  1670,  1636,  1672,    13,    14,   979,  3204,
11861:       13,    14,   357,  3294,  1711,    13,    14,   438,   224,  1711,
11862:      152,   470,    13,    14,  1691,    13,    14,   353,   449,  2942,
11863:      505,   506,   507,   251,   509,   510,   511,   512,   513,   514,
11864:      368,   369,  2589,   261,   389,   368,   369,  1714,   460,   368,
11865:      369,   368,   369,   263,   264,   273,    40,     8,  1725,  1726,
11866:       11,  1689,   137,   152,    15,    16,   419,   502,   378,   379,
11867:     2893,   462,   463,  2940,   509,   510,   511,   512,   513,   514,
11868:     2370,  2371,  3501,  3502,  3533,  3534,   152,   305,  1147,  1148,
11869:     2242,  2243,   519,   152,   152,    46,   518,   275,  1765,    40,
11870:      470,   152,    53,    89,   152,   484,   520,  1774,   152,  1776,
11871:      290,   152,   355,  2612,   518,   460,   431,   518,   518,   421,
11872:      519,   220,   518,   225,   300,  2976,   518,   225,   225,    80,
11873:      297,   518,    40,   236,   518,     5,     5,   518,  2677,   325,
11874:     3016,   359,  1774,  1114,  1776,  2735,   518,   518,  2699,  1816,
11875:      518,     5,     5,  1820,   518,     5,  1823,  1824,  3489,  1760,
11876:      518,     5,  3493,  2721,   147,   302,   384,     9,   518,  1770,
11877:      518,  1772,   481,  1144,  1775,   104,   178,   519,   522,   162,
11878:     1781,   522,  1783,    40,   167,   403,   220,  3246,  3101,   389,
11879:     2848,   167,   287,   167,   145,  1796,     5,  1864,   285,    59,
11880:     1801,   203,   431,   236,  1805,  1806,  1807,  1808,    93,  1810,
11881:     1811,  1860,   518,   518,   522,  1882,   431,  3548,    59,   294,
11882:       59,   266,  1889,  1890,   431,   108,   177,   431,   528,   222,
11883:      431,  1898,   431,   480,   380,   218,   152,   100,   275,   241,
11884:      199,   518,    40,   194,   275,   275,   275,  1914,   199,   275,
11885:      518,  1918,  1919,  1224,  1921,   238,  1227,  1228,   152,  1926,
11886:     1927,  1928,  1929,  1930,  1931,  1932,  3461,   172,  1935,  1936,
11887:     1937,  1938,  1939,  1940,  1941,  1942,  1943,  1944,   353,  1987,
11888:      520,   996,   357,  1950,  1951,  1993,   237,  1954,    13,  1956,
11889:      522,  3204,     8,   295,  1961,    11,  1963,   519,   519,    15,
11890:       16,   519,   518,   151,   287,   172,   519,   519,   519,   477,
11891:      519,   519,   225,   296,   389,   225,  1983,   126,   127,   282,
11892:     1987,   282,  1989,   518,   172,   518,  1993,   467,   520,   117,
11893:       46,   522,   520,   518,  2001,   518,  3395,    53,  2005,   518,
11894:     2007,   292,  2009,  1987,  2011,   518,   518,    39,   518,  1993,
11895:      476,     9,    11,  2943,  2944,  3215,   429,   429,   518,  2931,
11896:      355,   517,   528,   172,    80,   522,   527,  2034,   522,   280,
11897:      518,   373,   178,   429,   431,  1987,   181,   163,  3437,  2046,
11898:     2047,  1993,   172,   522,   172,   460,  2786,  1987,   996,  1360,
11899:     1361,   788,   519,  1993,  1040,   457,   218,   203,   522,   227,
11900:      266,   291,   392,  1987,   313,   522,   313,   522,   181,  1993,
11901:      220,   519,   518,   227,   275,   227,   296,  2084,   470,   334,
11902:     2087,   423,   819,   425,   288,  2092,  2093,  3486,   518,   145,
11903:      152,  2122,  3073,     3,   152,   241,   518,   152,   518,   152,
11904:      442,   480,   152,   394,    40,   275,   448,   844,     3,   451,
11905:     2117,  2118,  3328,   522,   522,  2122,   290,   290,    40,    59,
11906:      172,   177,    11,    40,   447,   167,   519,   315,   316,   317,
11907:      519,  2138,   519,  1188,  2141,  2142,  2143,   181,   194,   519,
11908:      518,   167,  1197,   199,     3,    39,   518,     3,  3270,   295,
11909:      518,   516,  2159,  2160,   516,   892,   431,   431,  2142,  2166,
11910:      431,   431,  2169,   519,   519,   517,   315,   316,   317,   519,
11911:      527,   522,  2912,   148,   520,   519,   304,   172,   519,  2186,
11912:      501,   237,   501,   519,   501,  2169,   518,   315,   316,   317,
11913:      519,  1040,  2199,   516,   382,   431,   519,   520,   155,   519,
11914:      477,   519,  2186,   518,   250,   518,   518,   518,  3461,  2216,
11915:     2217,   502,    40,    59,   522,   507,  1040,  2169,   509,   510,
11916:      511,   512,   513,   514,   503,   291,  2233,   291,  2235,  2169,
11917:      454,   419,   522,   382,  2186,   244,   292,  1223,    59,    59,
11918:     2181,  2248,   979,   266,   393,  2169,  2186,   275,   469,   152,
11919:      518,   431,   989,   203,   382,   152,   152,  3464,   282,  2266,
11920:     2267,  2268,  2186,   282,   452,   431,   415,   431,    74,  1580,
11921:      419,   431,   431,   519,    80,   463,   518,   423,   518,   425,
11922:       40,  1592,   355,  1594,  3182,   522,   519,    93,   288,   290,
11923:       40,   419,   480,   480,  2266,  2267,  2268,   152,  2305,   526,
11924:      280,   519,   448,   452,  2311,   451,   172,   518,    59,   186,
11925:     1621,   117,  2343,   119,   463,   167,   504,   519,    80,   518,
11926:     1144,   519,   172,   519,   452,  3054,   143,  1313,   519,   199,
11927:      518,   480,   518,   516,  2332,   463,  2332,  2332,   394,   528,
11928:     2347,   519,   519,   518,  2332,  2352,   522,   519,   519,   301,
11929:      361,   518,   480,   522,   519,   504,   291,   181,   519,   152,
11930:      176,   442,   519,   518,   522,  2372,   519,  1104,   519,   518,
11931:       40,   519,  1427,  1428,  1223,  2347,   504,  1114,  1433,   520,
11932:     2387,  2388,   518,   518,    86,   519,   518,    40,    40,  2396,
11933:      518,   522,   172,   522,   457,   518,   479,   519,  1135,  1223,
11934:      519,   207,   199,   519,   522,   517,  3256,  1144,  3258,  3296,
11935:       40,   517,   519,   507,  1725,  1726,   519,   519,   519,   290,
11936:      463,  2362,    59,   519,  2396,   117,   519,  2434,   519,  3268,
11937:       60,   519,   480,   205,    40,   227,   518,    88,   192,   280,
11938:      280,   520,   520,   520,   520,   520,   502,   431,   520,   520,
11939:     2434,   520,   520,   509,   510,   511,   512,   513,   514,   520,
11940:      520,   520,   431,   520,  1313,    40,   520,  2474,   517,   275,
11941:     3271,  3452,  3273,   520,   280,   520,   106,   517,  1789,  1427,
11942:     1428,   520,  2434,  2490,  2502,  1433,   520,   520,  1799,  1313,
11943:      520,  1802,   275,   520,  2525,   520,   107,   507,   520,  3397,
11944:     2507,   480,   520,   520,   520,   520,  2513,  2514,  3387,   290,
11945:     2434,  3406,   520,   520,   520,   520,   519,  2566,  2525,   419,
11946:        9,   354,   519,   329,   336,   519,   518,   518,   518,   518,
11947:     2561,   518,  2539,    59,   522,  2542,   522,  2544,   519,   199,
11948:      517,   347,  3381,   519,  2551,  2552,   176,  1533,  2555,  2556,
11949:      192,   522,    91,  2560,  2561,     8,   462,   519,    11,   347,
11950:     2567,   178,    15,    16,   518,    40,    19,    20,    21,   152,
11951:      124,   520,   202,   519,   152,  2582,    40,   519,   369,   369,
11952:       40,  2612,   519,    36,   518,  2592,   203,  1898,     7,     8,
11953:     2580,  2580,   518,    40,    13,   522,   457,  2586,  2580,  2580,
11954:       19,  2580,  2580,   518,    23,  2612,    25,   310,   280,  2580,
11955:       29,    30,    31,   518,   249,    34,   442,   191,    37,    38,
11956:      457,   251,    41,    74,   241,    44,    45,   518,   293,    74,
11957:       80,   261,     9,   151,  1371,   519,   519,   518,   371,   519,
11958:      133,  1627,   448,   273,   517,   517,  2653,    59,   273,  2656,
11959:     2657,   457,  2659,    93,   172,   442,    75,    76,   507,  1714,
11960:       40,   290,   293,   462,  2671,   518,  2673,   293,   519,   205,
11961:      518,   290,   519,   389,  2615,   305,   519,  2618,   295,   122,
11962:      290,  2653,   101,   519,  1533,  2657,   454,  2659,   368,   108,
11963:      109,   110,   111,   112,  3434,    25,   148,   314,    36,  2730,
11964:     2698,   368,  2698,  2698,  2645,  2694,   298,  2018,  2640,  1533,
11965:     2698,   874,  1782,  2261,  2653,  3298,  2590,  3437,  3391,  2660,
11966:     2661,  2662,  2663,  2664,  2665,  2666,  2667,  2668,  2669,   359,
11967:     3538,  2936,  2375,  3412,  2723,  1889,   851,  3516,  3175,  3465,
11968:     3474,  3509,  1210,  3232,  2254,  2267,  2753,  2778,  2712,  2756,
11969:     3463,  3472,  2632,  2251,   384,  3460,   373,  2659,  1337,  2371,
11970:     2370,  2331,  2396,   380,  3054,  1310,  2773,  2774,  2689,   222,
11971:     2233,  2778,  1167,   403,  2781,  1013,  2199,  1750,  1627,  1765,
11972:     1190,  1013,  2455,  3446,  2216,  1714,  1191,  3369,  3260,  1749,
11973:     1193,    23,  2186,  1999,  3096,  2781,   991,   315,   316,   317,
11974:     2433,  2808,  2434,  1627,  2482,  3196,   423,  2855,   425,   805,
11975:     3373,   794,  2014,  1898,  1898,  1898,  2823,  3372,  1040,  2094,
11976:     2514,  2200,  2829,  2830,  2142,   442,  2048,  2834,  2835,  1456,
11977:     2824,   448,  2839,   989,   451,  2842,  2843,  2139,  2869,   292,
11978:     2847,  2848,  3360,  2862,  2851,   989,   989,   989,  2855,   989,
11979:      989,  2096,   989,  2535,  2580,  2862,   989,  3358,   789,  2007,
11980:     1826,   892,  2173,   172,   382,   989,  1355,  1689,  2304,  2591,
11981:     1690,  2855,  1927,  1928,  1929,  1930,  1931,  1932,   101,    -1,
11982:     1935,  1936,  1937,  1938,  1939,  1940,  1941,  1942,  1943,  1944,
11983:       -1,    -1,    -1,  1247,    -1,  2206,  2207,    -1,    -1,  2906,
11984:       -1,   419,    -1,  2855,    -1,    -1,    -1,  2914,    -1,    -1,
11985:       -1,    -1,    -1,    -1,    -1,  2855,  1765,    -1,    -1,    -1,
11986:       -1,    -1,    -1,    -1,    -1,    -1,  2933,    -1,  1914,    -1,
11987:       -1,  2855,    -1,    -1,   452,  2942,    -1,    -1,    -1,    -1,
11988:     1926,  1765,    -1,  1680,    -1,   463,    -1,    40,    -1,    -1,
11989:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,
11990:      127,    41,   480,    -1,    -1,    -1,    -1,    60,    -1,  2976,
11991:     1956,    -1,  2913,    -1,    -1,    -1,    -1,  1963,    -1,  1927,
11992:     1928,  1929,  1930,  1931,  1932,    -1,   504,  1935,  1936,  1937,
11993:     1938,  1939,  1940,  1941,  1942,  1943,  1944,    -1,    -1,    -1,
11994:      518,  1223,    -1,     0,    -1,   172,   315,   316,   317,    -1,
11995:       -1,  3018,    -1,   106,   107,  2001,  1753,  1754,    -1,  2005,
11996:       -1,    -1,    -1,    20,   117,  2011,    23,    -1,   108,    -1,
11997:      110,    -1,   112,    -1,    -1,    -1,    37,    -1,    -1,  3046,
11998:       37,    42,  3073,    -1,  3033,    -1,  3018,  3054,  2034,    46,
11999:     3057,  3058,   505,   506,   507,    -1,   509,   510,   511,   512,
12000:      513,   514,  2117,  2118,    -1,  1914,  3073,    -1,    -1,    -1,
12001:       -1,    -1,    -1,   382,    -1,  1812,    -1,  1926,    75,    76,
12002:       77,    -1,    -1,   176,    -1,    -1,    -1,    -1,  1825,  1826,
12003:     1914,  1313,    -1,    -1,  3101,    -1,    -1,    -1,    -1,  3106,
12004:      101,    -1,  1926,    -1,   101,    -1,    -1,  1956,    -1,   202,
12005:      419,  3118,  3119,    -1,  1963,  3122,    -1,  3124,    -1,    -1,
12006:       -1,   540,    -1,    -1,    -1,    -1,   545,    -1,    -1,   548,
12007:       -1,    -1,  1956,    -1,    -1,    -1,    -1,   556,    -1,  1963,
12008:       -1,    -1,  3149,   452,    -1,    -1,    -1,    -1,   315,   316,
12009:      317,    -1,  2001,    -1,   463,    -1,  2005,    -1,   251,    -1,
12010:       -1,  1898,  2011,    -1,    -1,    -1,  3173,  1904,   261,  2117,
12011:     2118,   480,   173,    -1,    -1,    -1,    -1,  2001,  2233,    -1,
12012:      273,  2005,   275,  2494,  2495,  2034,    -1,  2011,    -1,    -1,
12013:       -1,    -1,    -1,    -1,    -1,   504,    -1,  3204,    -1,    -1,
12014:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   209,   518,
12015:     2034,    -1,   305,    -1,    -1,   382,    -1,    -1,    -1,  3226,
12016:       -1,    -1,    -1,    -1,   225,    -1,   393,    -1,    -1,    -1,
12017:       -1,     0,  3221,    -1,   235,    -1,    -1,    -1,    -1,  3246,
12018:       -1,    -1,    -1,  3184,    -1,    -1,    -1,    -1,   415,  3256,
12019:       -1,  3258,   419,  3260,  3226,    -1,    -1,  3264,    -1,  3266,
12020:       -1,  3268,  3246,    -1,  3205,  3206,   359,    -1,   269,    -1,
12021:       -1,    -1,  3279,    -1,    -1,    -1,    -1,  3284,    37,  3286,
12022:       -1,    -1,    -1,    42,    -1,   452,    -1,  3294,  3229,   290,
12023:       -1,   384,    -1,    -1,  3246,    -1,   463,    -1,    -1,    -1,
12024:     3307,    -1,    -1,    -1,    -1,  3312,  3295,    -1,  3297,    -1,
12025:      403,  1533,   405,   480,   315,   408,    -1,    -1,    -1,    -1,
12026:       -1,   322,  3246,    -1,    -1,    -1,    -1,   746,   747,   748,
12027:       -1,   100,    -1,    -1,    -1,  3307,    -1,   504,    -1,    -1,
12028:       -1,    -1,   101,    -1,    -1,  2656,    -1,    -1,  3337,    -1,
12029:       -1,   518,  3359,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12030:       -1,    -1,  3369,   364,  3353,    -1,  2352,    -1,    -1,   788,
12031:      789,    -1,    -1,    -1,  3381,   794,    -1,   796,   147,    -1,
12032:       -1,    -1,   383,    -1,    -1,    -1,   805,    -1,  3395,    -1,
12033:      809,   810,    -1,   162,    -1,   814,   815,    -1,   167,    -1,
12034:       -1,    -1,    -1,   172,    -1,  1627,  3413,    -1,   827,   828,
12035:      829,  3395,   181,   832,   173,    -1,    -1,   186,    -1,    -1,
12036:       -1,    -1,    -1,   842,   843,   518,   845,    -1,   847,    -1,
12037:     3437,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12038:      859,    -1,    -1,  3395,    -1,  3452,   865,    -1,    -1,   218,
12039:      209,   452,    -1,  3437,  3461,    -1,  3463,    -1,   877,    -1,
12040:      540,    -1,    -1,    -1,    -1,   545,   225,    -1,   548,   238,
12041:       -1,  3395,   891,   892,    -1,    -1,   235,    -1,    -1,  3486,
12042:     2791,    -1,    -1,    -1,    -1,  3437,    -1,    -1,    -1,  3478,
12043:       -1,  3463,    -1,  3500,  3501,  3502,    -1,    -1,    -1,    -1,
12044:     2555,  2556,  3486,  2352,  2490,    -1,    -1,   926,   927,    40,
12045:      269,    -1,    -1,  3437,    -1,  3504,  3457,    -1,   287,   938,
12046:     3527,   290,    -1,   942,   943,   944,   945,   296,  2352,    60,
12047:       -1,    -1,    -1,    -1,  3486,    -1,  2273,    -1,    13,   958,
12048:       -1,    -1,   539,  1765,    19,    -1,    -1,    -1,    -1,    -1,
12049:       -1,    -1,    -1,    -1,    -1,    30,   315,    -1,    -1,    -1,
12050:       -1,  3568,  3486,   322,    -1,  2551,    -1,   336,    -1,    44,
12051:       45,   990,   991,    -1,   993,   106,    -1,   996,    -1,    -1,
12052:       -1,    -1,    -1,  1002,  1003,    -1,    -1,    -1,  2325,  1008,
12053:       -1,    -1,   361,    -1,    -1,  1014,    -1,    -1,    -1,    -1,
12054:       -1,    -1,  1021,    -1,    -1,   364,  2343,  2555,  2556,    -1,
12055:       -1,    -1,  1031,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12056:     2931,    -1,    -1,    -1,   383,  2936,    -1,    -1,    -1,  1048,
12057:       -1,    -1,    -1,    -1,   109,    -1,    -1,    -1,    -1,    -1,
12058:       -1,  2490,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12059:      419,  2388,    -1,    55,    -1,    -1,    -1,    -1,    -1,    -1,
12060:       -1,  2398,    -1,  2400,    -1,    -1,  2490,  2404,    -1,  2406,
12061:     2656,   202,  2983,  2984,    -1,    -1,    -1,    -1,   447,    -1,
12062:     1099,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   457,    -1,
12063:       -1,   172,  1914,   452,    -1,    -1,    -1,    -1,  2753,    -1,
12064:      102,    -1,  2551,    -1,  1926,    -1,    -1,    -1,   477,    -1,
12065:      479,   480,    -1,    -1,    -1,    -1,   796,    -1,    -1,    -1,
12066:      251,   123,    -1,  2778,    -1,    -1,    -1,  2551,    -1,    -1,
12067:      261,  1150,    -1,  1152,  1956,    -1,    -1,    -1,    -1,   141,
12068:       -1,  1963,   273,   145,    -1,    -1,    -1,   516,  1167,  1168,
12069:      519,   520,   521,    -1,    -1,  1174,   753,   754,    -1,    -1,
12070:       -1,    -1,    -1,    -1,    -1,    -1,   168,    -1,  2823,   171,
12071:     2756,    -1,    -1,    -1,   305,    -1,    -1,    -1,  1197,  2001,
12072:       -1,    -1,    -1,  2005,    -1,   187,    -1,    -1,    -1,  2011,
12073:     1209,  1210,    -1,    -1,    -1,    -1,    -1,   794,    -1,    -1,
12074:       -1,    -1,    -1,  1222,    -1,  2753,    -1,  2656,   805,    -1,
12075:       -1,   891,  2034,    -1,  1040,    -1,    -1,     0,    -1,    -1,
12076:     1239,    -1,    -1,   304,  1243,    -1,    -1,    -1,   359,  1248,
12077:     1040,    -1,  2656,    -1,   315,   316,   317,    -1,    -1,    -1,
12078:       -1,    -1,    -1,    24,    -1,    -1,   926,    -1,    -1,  2835,
12079:       -1,    -1,    -1,   384,    -1,    -1,    -1,   854,    -1,  2914,
12080:       -1,    -1,   942,   943,   944,   945,    -1,     8,    -1,    -1,
12081:       11,    -1,   403,    -1,    15,    16,    -1,   874,   280,    -1,
12082:       -1,  3192,  3193,    -1,    -1,    -1,   288,  1306,    -1,  1308,
12083:       -1,    -1,    -1,  3204,    -1,    -1,    -1,    -1,  1317,    -1,
12084:       81,   382,    -1,    -1,    -1,    46,    -1,  2756,   310,  1328,
12085:       -1,    -1,    53,   993,    -1,    -1,    97,   100,  1337,  2656,
12086:       -1,    -1,    -1,  1342,    -1,  1344,  1345,    -1,  1347,  1348,
12087:       -1,    -1,  2756,    -1,    -1,    -1,    -1,   339,   419,    80,
12088:       -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,
12089:       -1,    -1,  2689,    15,    16,    -1,  2942,    19,    20,    21,
12090:       -1,    -1,    -1,    -1,   147,   146,  2914,    -1,    -1,    -1,
12091:       -1,   452,    -1,    -1,    -1,   156,    -1,    -1,    -1,   162,
12092:       -1,    -1,   463,    -1,   167,   982,  2835,    -1,   169,   172,
12093:     2976,    -1,    -1,   174,    -1,    -1,    -1,  1223,   181,   480,
12094:       -1,    -1,  3057,   186,   145,    -1,    -1,    -1,  1427,  1428,
12095:       -1,  2835,    -1,  1223,  1433,    -1,  1435,  1014,    -1,    -1,
12096:       -1,    -1,   203,   504,  1021,    -1,    -1,    -1,    -1,  1448,
12097:       -1,  1450,  1451,    -1,    -1,   218,   177,   518,    -1,  1458,
12098:       -1,  1460,    -1,  1462,    -1,    -1,  1465,    -1,    -1,    -1,
12099:       -1,  1470,    -1,   194,  1473,   238,  1475,    -1,   199,  1056,
12100:     1479,    -1,  1481,    -1,  1483,   246,    -1,    -1,    -1,   250,
12101:       -1,  1068,  3058,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12102:       -1,   556,    -1,    -1,    -1,    -1,    -1,  1313,    -1,    -1,
12103:       -1,    -1,    -1,  2942,    -1,    -1,   237,    -1,  1095,    -1,
12104:       -1,    -1,    -1,  1313,   287,    -1,    -1,   290,    -1,  3057,
12105:       -1,    -1,    -1,   296,    -1,  3101,    -1,    -1,  2942,    -1,
12106:       -1,    -1,  2859,    -1,    -1,    -1,    -1,  2976,    -1,  1209,
12107:     2352,    -1,    -1,   314,    -1,    -1,    -1,   199,    -1,   320,
12108:       -1,    -1,  1222,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12109:     3461,   292,  2976,   336,   335,    -1,    -1,    -1,    -1,    -1,
12110:      222,    -1,    -1,  1243,    -1,    -1,    -1,    -1,    -1,  1588,
12111:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   361,    -1,
12112:       -1,  1600,    -1,    -1,  1181,  1182,    -1,  1184,    -1,   370,
12113:       -1,  1040,   373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12114:       -1,    -1,    -1,   384,    -1,    -1,   387,    -1,    -1,  3058,
12115:       -1,  3266,    -1,    -1,    -1,    -1,    -1,    -1,  3204,    -1,
12116:     1639,    -1,    -1,  1642,   405,    -1,    -1,    -1,  1308,    -1,
12117:      292,    -1,    -1,    -1,  3058,    -1,   419,  1317,   419,    -1,
12118:       -1,    -1,    -1,    -1,   425,   426,    -1,    -1,    -1,    -1,
12119:       -1,    -1,  3101,   394,    -1,   436,    -1,    -1,    -1,    -1,
12120:       -1,   442,    -1,    -1,   447,    -1,    -1,  1686,  2490,  1688,
12121:       -1,  1690,   747,   748,   457,    -1,    -1,  3101,    -1,    -1,
12122:       -1,  1700,    -1,  1702,    -1,    -1,    -1,    -1,    -1,   470,
12123:     3027,    -1,    -1,    -1,   477,  1714,   479,   480,    -1,    -1,
12124:       -1,    -1,    -1,    -1,    -1,    -1,    -1,  1533,    -1,    -1,
12125:       -1,    -1,    -1,    -1,    -1,    -1,    -1,  3054,    -1,    -1,
12126:     1739,    -1,  1741,  1533,    -1,    -1,    -1,    -1,    -1,  2551,
12127:       -1,    -1,    -1,   516,  1753,  1754,   519,   520,   521,    -1,
12128:     1759,  1760,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12129:       -1,  1770,  1771,  1772,  1773,  3204,  1775,  1354,    -1,    -1,
12130:       -1,   502,  1781,    -1,  1783,    -1,    -1,    -1,   509,   510,
12131:      511,   512,   513,   514,  1223,    -1,  1795,  1796,  1458,    -1,
12132:     3204,  1800,  1801,    -1,    -1,    -1,  1805,  1806,  1807,  1808,
12133:      865,  1810,  1811,    -1,    -1,    -1,    -1,    -1,  3135,    -1,
12134:       -1,  1627,    -1,    -1,    -1,    -1,    -1,    -1,  1827,    -1,
12135:       -1,    -1,    -1,    -1,    -1,    -1,  1835,  1627,  1837,  1838,
12136:     1839,  1840,  1841,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12137:       -1,    -1,    -1,    -1,  2656,    -1,    -1,    -1,    -1,  1858,
12138:       -1,    -1,    -1,   505,   506,   507,    -1,   509,   510,   511,
12139:      512,   513,   514,    -1,    -1,    -1,    -1,    -1,  1877,    -1,
12140:       -1,    -1,    -1,  1460,  1313,  1462,    -1,  3204,  1465,    -1,
12141:       -1,    -1,    -1,  1470,    -1,  3461,  1473,    -1,  1475,    -1,
12142:       -1,    -1,  1479,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12143:       -1,    -1,    -1,     0,    -1,    -1,    -1,    -1,    -1,    -1,
12144:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1927,  1928,
12145:     1929,  1930,  1931,  1932,    -1,    -1,  1935,  1936,  1937,  1938,
12146:     1939,  1940,  1941,  1942,  1943,  1944,    -1,    -1,    -1,    -1,
12147:       -1,    -1,    -1,  1008,  2756,    -1,    -1,    -1,    -1,  1765,
12148:       -1,    -1,    -1,    -1,    -1,    -1,  1965,    -1,    -1,    -1,
12149:       -1,    -1,    -1,    -1,    -1,  1765,  1031,    -1,  1977,    -1,
12150:       -1,    -1,    -1,    -1,    -1,  1562,    -1,    -1,  1987,    -1,
12151:       -1,    -1,    -1,    -1,  1993,    -1,    -1,    -1,    -1,    -1,
12152:     1999,    -1,    -1,    -1,    -1,  2004,    -1,    -1,    -1,    -1,
12153:       -1,    -1,  3329,   100,  2013,  2014,    -1,    -1,    -1,    -1,
12154:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1688,    -1,
12155:     1690,    -1,  3461,  2835,    -1,    -1,    -1,    -1,     8,    -1,
12156:     1700,    11,    -1,    -1,  1099,    15,    16,    17,    18,    19,
12157:       20,    21,    -1,    -1,    -1,    -1,    -1,  3461,    -1,    -1,
12158:      147,    -1,    -1,    -1,    -1,  1642,    36,    -1,    -1,    -1,
12159:       -1,    -1,    -1,    -1,    -1,   162,    46,    -1,    -1,  1739,
12160:      167,    -1,    -1,    53,    -1,   172,  2085,    -1,    -1,    -1,
12161:     2089,    -1,    -1,    -1,   181,  2094,    -1,    -1,    -1,   186,
12162:       -1,    -1,    -1,    -1,  1533,    -1,    -1,    -1,  1914,    -1,
12163:       80,    -1,  1167,  1168,    -1,    -1,    -1,    -1,  2117,  2118,
12164:     1926,    -1,    -1,    -1,  1914,    -1,    -1,    -1,    -1,    -1,
12165:       -1,   218,    -1,    -1,  1711,    -1,  1926,  2136,     8,    -1,
12166:     2942,    11,    -1,  2142,  3461,    15,    16,    -1,    -1,    -1,
12167:     1956,   238,     8,    -1,    -1,    11,    -1,  1963,    -1,    15,
12168:       16,    -1,    -1,    19,    20,    21,  1956,    -1,    -1,    -1,
12169:     2169,    -1,    -1,  1963,  2976,    -1,    46,  1837,  1838,  1839,
12170:     1840,  1841,  2181,    53,    -1,    -1,    -1,  2186,    -1,    -1,
12171:       -1,  2190,    -1,    -1,    -1,  2001,    -1,    -1,  1627,  2005,
12172:      287,    -1,    -1,   290,    -1,  2011,    -1,   177,    -1,   296,
12173:       80,  2001,    -1,    -1,    -1,  2005,    -1,    -1,    -1,    -1,
12174:       -1,  2011,    -1,    -1,   194,    -1,    -1,    -1,  2034,   199,
12175:       -1,  2230,    -1,    -1,  2233,    -1,    -1,  2236,    -1,    -1,
12176:       -1,    -1,    -1,    -1,  2034,    -1,    -1,    -1,    -1,   336,
12177:       -1,    -1,   222,   223,    -1,    -1,  3058,  2256,    -1,    -1,
12178:       -1,    -1,    -1,    -1,    -1,    -1,    -1,   237,    -1,    -1,
12179:       -1,  1848,    -1,    -1,   361,   145,    -1,    -1,    -1,    -1,
12180:       -1,    -1,    -1,  1860,    -1,    -1,    -1,    -1,    -1,  1344,
12181:     1345,    -1,  1347,    -1,    -1,    -1,    -1,    -1,    -1,  3101,
12182:       -1,    -1,    -1,    -1,    -1,   275,    -1,   177,   278,    -1,
12183:       -1,    -1,    -1,    -1,    -1,    -1,    -1,  1977,    -1,    -1,
12184:       -1,    -1,   292,    -1,   194,   295,    -1,    -1,  2327,   199,
12185:       -1,    -1,   419,    -1,    -1,  2334,  1765,    -1,    -1,    -1,
12186:       -1,    -1,    -1,   199,    -1,    -1,  2345,    -1,    -1,  2348,
12187:     2349,  2350,  2351,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12188:      447,    -1,    -1,  2362,    -1,  2364,   222,   237,  2367,    -1,
12189:      457,    -1,    -1,    -1,    -1,  2374,    -1,    -1,    -1,    -1,
12190:       -1,  2380,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12191:      477,    -1,   479,   480,    -1,  1450,    -1,    -1,    -1,    -1,
12192:       -1,    -1,  3204,  2402,  2403,    -1,  2405,    -1,    -1,    -1,
12193:     1987,    -1,    -1,    -1,    -1,    -1,  1993,    -1,    -1,    -1,
12194:       -1,    -1,   292,    -1,   394,    -1,  1481,    -1,  1483,   516,
12195:       -1,    -1,   519,   520,   521,  2434,   292,    -1,    -1,    -1,
12196:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12197:       -1,    -1,    -1,    -1,    -1,  2454,    -1,    -1,    -1,    -1,
12198:       -1,    -1,    -1,  2462,  2463,  2464,    -1,    -1,    -1,    -1,
12199:       -1,    -1,    -1,  2472,    -1,  2474,    -1,  2476,    -1,    -1,
12200:       -1,    -1,    -1,  2482,    -1,  1914,    -1,    -1,     8,    -1,
12201:       -1,    11,    -1,    -1,    -1,    15,    16,  1926,    -1,    19,
12202:       20,    21,    -1,  2502,    -1,    -1,    -1,    -1,    -1,    -1,
12203:       -1,    -1,    -1,    -1,    -1,    -1,    36,  2516,    -1,    -1,
12204:       -1,    -1,    -1,    -1,   394,    -1,    -1,  1956,    -1,    -1,
12205:       -1,    -1,   502,    -1,  1963,   505,   506,   507,    -1,   509,
12206:      510,   511,   512,   513,   514,  2122,  2352,    -1,    -1,    -1,
12207:       -1,    -1,    -1,    -1,    -1,    -1,  2555,  2556,   528,    -1,
12208:       -1,    -1,  2352,    -1,    -1,  2142,    -1,    -1,    -1,    -1,
12209:       -1,    -1,  2001,    -1,    -1,    -1,  2005,    -1,    -1,    -1,
12210:       -1,  2158,  2011,    -1,    -1,  2584,    -1,    -1,    -1,    -1,
12211:       -1,  2590,  2169,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12212:       -1,    -1,    -1,    -1,    -1,  2034,    -1,  2606,    -1,  2186,
12213:       -1,  2610,    -1,    -1,    -1,  2614,  2615,    -1,    -1,  2618,
12214:       -1,    -1,    -1,  2622,  2623,  2624,    -1,  2626,    -1,    -1,
12215:       -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,
12216:      510,   511,   512,   513,   514,    -1,  2645,    -1,  2647,   505,
12217:      506,   507,    -1,   509,   510,   511,   512,   513,   514,  3461,
12218:       -1,  2660,  2661,  2662,  2663,  2664,  2665,  2666,  2667,  2668,
12219:     2669,    -1,    -1,    -1,  2334,    -1,    -1,    -1,    -1,    -1,
12220:       -1,    -1,    -1,    -1,  2490,    -1,  1741,    -1,    -1,  2349,
12221:     2350,  2351,    -1,    -1,  2693,    -1,    -1,    -1,    -1,    -1,
12222:     2490,  2700,   222,    -1,  2364,  1760,    -1,  2367,    -1,    -1,
12223:       -1,    -1,    -1,  2712,  2374,  1770,    -1,  1772,    -1,    -1,
12224:     1775,    -1,    -1,    -1,    -1,    -1,  1781,    -1,  1783,    -1,
12225:       -1,    -1,    -1,  2732,    -1,    -1,    -1,    -1,    -1,    -1,
12226:       -1,  1796,    -1,  2742,    -1,  2551,  1801,    -1,    -1,    -1,
12227:     1805,  1806,  1807,  1808,  2753,  1810,  1811,    -1,    -1,    -1,
12228:     2759,  2551,    -1,    -1,    -1,    -1,  2343,  2766,  2767,  2768,
12229:     2769,    -1,   292,    -1,    -1,    -1,    -1,    -1,    -1,  2778,
12230:       -1,    -1,  2781,    -1,    -1,    -1,  2785,  2786,    -1,    -1,
12231:       -1,    -1,    -1,    -1,    -1,  2794,    -1,    -1,    -1,    -1,
12232:       -1,    -1,  2462,  2463,  2464,    -1,    -1,    -1,    98,   996,
12233:       -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
12234:       -1,    15,    16,  2822,    -1,  2824,    -1,     8,    -1,    -1,
12235:       11,    -1,    -1,    -1,    15,    16,   126,   127,    19,    20,
12236:       21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12237:     2656,    -1,    46,    -1,  2853,    -1,  2855,    -1,    -1,    53,
12238:       -1,    -1,    37,    -1,    -1,    46,  2656,    42,    -1,    -1,
12239:     2869,    -1,    53,    -1,  2873,    -1,    -1,    -1,    -1,    -1,
12240:     2879,    -1,   172,    -1,     8,    -1,    80,    11,    -1,    -1,
12241:       -1,    15,    16,    -1,  2893,    -1,    -1,    -1,    -1,    80,
12242:     2899,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12243:     1965,    -1,    -1,  2912,  2913,  2914,    -1,    -1,    -1,    -1,
12244:       -1,  2920,    46,  2352,    -1,    -1,   101,    -1,    -1,    53,
12245:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2937,    -1,
12246:       -1,    -1,    -1,    -1,  1999,    -1,  2606,    -1,  2525,  2004,
12247:     2756,   145,    -1,    -1,    -1,    -1,    80,    -1,    -1,    -1,
12248:       -1,    -1,    -1,    -1,    -1,    -1,  2756,    -1,    -1,     8,
12249:       -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,    18,
12250:       19,    20,    21,   177,  2561,   505,   506,   507,    -1,   509,
12251:      510,   511,   512,   513,   514,    -1,   177,    36,   173,    -1,
12252:      194,    -1,    -1,  2580,    -1,   199,   181,    46,    -1,  2586,
12253:     1197,    -1,    -1,   194,    53,    -1,  3015,    -1,   199,    -1,
12254:     3019,   145,    -1,    -1,    -1,   315,   316,   317,    -1,  2835,
12255:     2085,    -1,    -1,  3032,   209,  2612,    -1,    -1,    -1,  2094,
12256:     2700,    80,    -1,   237,    -1,  2835,    -1,    -1,    -1,    -1,
12257:      225,  3050,    -1,   177,    -1,    -1,   237,    -1,  3057,    -1,
12258:      235,  2490,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12259:      194,    -1,    -1,    -1,     8,   199,    -1,    11,    -1,    -1,
12260:       -1,    15,    16,    -1,  3083,    19,    20,    21,    -1,    -1,
12261:     3089,    -1,   382,    -1,   269,    -1,    -1,  3096,   292,    -1,
12262:       -1,    -1,    36,   393,    -1,    -1,  2766,  2767,  2768,  2769,
12263:       -1,   292,    -1,   237,    -1,   290,    -1,  2694,    -1,    -1,
12264:       -1,    -1,  2551,    -1,    -1,   415,  2181,    -1,    -1,   419,
12265:       -1,    -1,  3131,    -1,    -1,    -1,  2942,    -1,   177,    -1,
12266:      315,    -1,    -1,    -1,    -1,    -1,  2723,   322,    -1,   439,
12267:       -1,    -1,  2942,  2730,  3153,   194,    -1,    -1,    -1,  3158,
12268:      199,    -1,   452,    -1,    -1,    -1,    -1,    -1,   292,    -1,
12269:     2976,    -1,    -1,   463,    -1,  2230,    -1,    -1,    -1,    -1,
12270:       -1,  2236,    -1,   222,   223,  3184,  2976,    -1,    -1,   364,
12271:      480,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   237,    -1,
12272:      394,  2778,    -1,    -1,    -1,    -1,  3205,  3206,   383,    -1,
12273:      840,   841,    -1,   394,   504,    -1,    -1,    -1,    -1,    -1,
12274:       -1,    -1,    -1,  3222,    -1,  3224,    -1,  2656,   518,    -1,
12275:     3229,    -1,    -1,    -1,    -1,    -1,   275,    -1,    -1,   278,
12276:     1427,  1428,    -1,    -1,  3243,    -1,  1433,  3246,    -1,    -1,
12277:       -1,    -1,  3058,   292,    -1,    -1,   295,    -1,    -1,    -1,
12278:     2920,    -1,    -1,    -1,    -1,    -1,    -1,  3266,  3058,    -1,
12279:      394,  3270,  3271,    -1,  3273,    -1,    -1,   452,  2855,    -1,
12280:       -1,   911,   457,    -1,    -1,   915,   916,    -1,   222,    -1,
12281:       -1,    -1,  2869,    -1,    -1,  3101,    -1,    -1,    -1,  3298,
12282:       -1,    -1,    -1,    -1,    -1,    -1,  3305,  2362,   502,    -1,
12283:       -1,  3101,    -1,    -1,    -1,   509,   510,   511,   512,   513,
12284:      514,   502,    -1,    -1,   505,   506,   507,  2756,   509,   510,
12285:      511,   512,   513,   514,     8,    -1,  3335,    11,   968,    -1,
12286:       -1,    15,    16,    -1,    -1,    19,    20,    21,    -1,    -1,
12287:       -1,    -1,    -1,    -1,    -1,   394,   986,    -1,   292,    -1,
12288:       -1,    -1,   992,    -1,    -1,   995,    -1,    -1,   998,   999,
12289:     1000,  1001,    -1,    -1,  3373,    -1,    -1,    -1,   502,    -1,
12290:       -1,    -1,    -1,    -1,    -1,   509,   510,   511,   512,   513,
12291:      514,    -1,    -1,    -1,    -1,    -1,  3395,    -1,  3204,    -1,
12292:       -1,    -1,    -1,    -1,    -1,    -1,  2835,    -1,  1038,  1039,
12293:       -1,    -1,    -1,    -1,  3204,    -1,    -1,  2472,    -1,    -1,
12294:       -1,  2476,    -1,  3422,    -1,    -1,    -1,  2482,    -1,    -1,
12295:     1060,    -1,    -1,    -1,    -1,  3434,  3435,    -1,  3437,  3438,
12296:       -1,    -1,    -1,    -1,    -1,    -1,    -1,  3446,    -1,  1079,
12297:       -1,    -1,    -1,    -1,    -1,    -1,  3033,    -1,  3457,    -1,
12298:     1090,  1091,  1092,   502,  1094,  1095,   505,   506,   507,    -1,
12299:      509,   510,   511,   512,   513,   514,    -1,    -1,    -1,    -1,
12300:     3479,  1668,    -1,   522,    -1,    -1,    -1,  3486,    -1,    -1,
12301:       -1,    -1,    -1,    -1,    -1,    -1,  3073,    -1,    -1,  1129,
12302:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12303:       -1,    -1,    -1,  2942,    -1,    -1,    -1,  1147,  1148,    -1,
12304:       -1,    -1,    -1,    -1,  3523,    -1,    -1,  1714,    -1,    -1,
12305:       -1,    -1,    -1,    -1,    -1,    -1,    26,    -1,    -1,  3538,
12306:       -1,    -1,    32,    -1,    -1,    -1,    -1,  2976,   222,    -1,
12307:       40,    -1,    -1,  1183,    -1,  2610,    -1,  1187,  1188,  2614,
12308:     2615,    -1,  3222,  2618,    -1,    -1,    -1,    -1,  1198,  1199,
12309:       60,   505,   506,   507,    -1,   509,   510,   511,   512,   513,
12310:      514,     8,    -1,  3243,    11,    -1,    -1,    -1,    15,    16,
12311:     2645,    -1,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,
12312:       -1,    -1,    -1,    -1,    -1,  2660,  2661,  2662,  2663,  2664,
12313:     2665,  2666,  2667,  2668,  2669,    -1,   106,    -1,   292,    -1,
12314:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1258,  3058,
12315:       -1,    -1,    -1,    -1,    -1,    -1,    -1,  1267,    -1,    -1,
12316:       -1,    -1,    -1,    -1,  3221,  3305,    -1,   137,    -1,    -1,
12317:       -1,    -1,    -1,    -1,    -1,  3461,    -1,    -1,    -1,    -1,
12318:       -1,  1291,    -1,    -1,    -1,  3242,    -1,    -1,    -1,    -1,
12319:       -1,  3461,  3101,    -1,    -1,  3335,    -1,    -1,    -1,    -1,
12320:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12321:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12322:       -1,    -1,    -1,    -1,  2759,    -1,    -1,    -1,    -1,    -1,
12323:       -1,    -1,   202,    -1,    -1,    -1,    -1,    -1,  3295,    -1,
12324:     3297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12325:     2785,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12326:     1927,  1928,  1929,  1930,  1931,  1932,    -1,  1377,  1935,  1936,
12327:     1937,  1938,  1939,  1940,  1941,  1942,  1943,  1944,    -1,    -1,
12328:     3337,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12329:       -1,   261,    -1,    -1,     8,  3204,  3353,    11,    -1,    -1,
12330:       -1,    15,    16,   273,    -1,    19,    20,    21,    -1,    -1,
12331:       -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,    -1,
12332:       -1,    -1,    36,    -1,   294,    -1,    -1,    -1,    -1,    -1,
12333:     1440,    -1,  1442,  1443,    -1,   305,    -1,    -1,    -1,    -1,
12334:       -1,    -1,    -1,    -1,    -1,  1455,  1456,    -1,    -1,    -1,
12335:       -1,   505,   506,   507,    -1,   509,   510,   511,   512,   513,
12336:      514,    -1,  1472,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12337:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2913,    -1,
12338:       -1,    -1,    -1,   353,    -1,   292,    -1,   357,    -1,   359,
12339:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12340:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12341:       -1,    -1,    -1,    -1,   384,    -1,    -1,    -1,    -1,   389,
12342:       -1,  3478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12343:       -1,    -1,    -1,   403,    -1,    -1,    -1,    -1,    -1,    -1,
12344:       -1,    -1,    -1,    -1,    -1,    -1,    -1,  3504,    -1,    -1,
12345:     2117,  2118,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12346:       -1,    -1,     8,    -1,  1574,    11,    -1,    -1,    -1,    15,
12347:       16,    -1,  1582,    19,    20,    21,    -1,    -1,    -1,    -1,
12348:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12349:      460,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12350:       46,    -1,    -1,    -1,    -1,    -1,    -1,    53,   222,    -1,
12351:       -1,    -1,  1622,    -1,    -1,    -1,    -1,    -1,  1628,  1629,
12352:     1630,  1631,  1632,  1633,  1634,  1635,    -1,    -1,    -1,    -1,
12353:     1640,  1641,    -1,    -1,    80,  1645,     0,    -1,    -1,  1649,
12354:       -1,    -1,  1652,  1653,  1654,  1655,  1656,  1657,  1658,  1659,
12355:     1660,    -1,  3461,  1663,  3089,    -1,    -1,    -1,    22,    -1,
12356:     1670,  3096,  1672,    -1,    -1,    -1,  2233,    -1,    32,    -1,
12357:       34,    35,    -1,    -1,    -1,    -1,    -1,    -1,   292,    -1,
12358:       -1,  1691,    -1,    47,    -1,    -1,    -1,    -1,    52,    -1,
12359:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,   505,   506,
12360:      507,    -1,   509,   510,   511,   512,   513,   514,    -1,    -1,
12361:       -1,    75,    -1,    -1,    -1,  1725,  1726,    -1,  3153,    -1,
12362:       84,    -1,    86,  3158,    -1,    -1,    -1,    -1,    -1,    -1,
12363:       -1,   177,    -1,    -1,    98,    -1,   100,    -1,    -1,    -1,
12364:       -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,   194,  3184,
12365:       -1,    -1,    -1,   199,    -1,    -1,    -1,    -1,    -1,    -1,
12366:       -1,    -1,   126,   127,   128,    -1,    -1,    -1,    -1,    -1,
12367:     3205,  3206,    -1,   137,    -1,    -1,   222,   223,    -1,   143,
12368:       -1,    -1,    -1,    -1,    -1,    -1,    -1,   151,    -1,   153,
12369:      154,   237,    -1,    -1,  3229,    -1,    -1,   996,    -1,    -1,
12370:       -1,    -1,    -1,    -1,   168,    -1,  1816,    -1,   172,    -1,
12371:     1820,    -1,     3,  1823,  1824,    -1,    -1,     8,    -1,    -1,
12372:       11,    -1,    -1,    -1,    15,    16,    17,    18,    19,    20,
12373:       21,    -1,   278,    -1,   198,  3270,    -1,    -1,    -1,    -1,
12374:       -1,    -1,    -1,    -1,    -1,    36,   292,    -1,    -1,    40,
12375:      214,    -1,    -1,    -1,  1864,    46,    -1,    -1,    -1,    -1,
12376:       -1,    -1,    53,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12377:       -1,    -1,    -1,    -1,    -1,    -1,   240,    -1,    -1,  1889,
12378:     1890,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    80,
12379:       -1,   505,   506,   507,    -1,   509,   510,   511,   512,   513,
12380:      514,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1918,  1919,
12381:       -1,  1921,    -1,    -1,    -1,    -1,  1115,    -1,    -1,    -1,
12382:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12383:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12384:     1950,  1951,    -1,    -1,  1954,    -1,    -1,    -1,   394,    -1,
12385:       -1,   315,   316,   317,    -1,    -1,    -1,    -1,    -1,   323,
12386:       -1,    -1,   326,    -1,  1163,    -1,    -1,    -1,    -1,    -1,
12387:       -1,    -1,    -1,  1983,    -1,    -1,    -1,    -1,    -1,  1989,
12388:       -1,    -1,    -1,    -1,    -1,    -1,   177,    -1,  2555,  2556,
12389:       37,    -1,    -1,   357,    -1,    42,    -1,  2007,  1197,  2009,
12390:       -1,    -1,   366,   194,    -1,    -1,    -1,    -1,   199,    -1,
12391:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   382,    -1,
12392:       -1,    -1,  3457,    -1,    -1,   389,    -1,    -1,    -1,   393,
12393:       -1,   222,   223,    -1,    -1,    -1,    -1,  2047,    -1,   403,
12394:       -1,    -1,    -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,
12395:       -1,   415,    -1,  1252,   101,   419,   502,    -1,    -1,   505,
12396:      506,   507,    -1,   509,   510,   511,   512,   513,   514,    -1,
12397:       -1,    -1,    -1,    -1,  2084,   439,    -1,  2087,    -1,    -1,
12398:       -1,    -1,  2092,  2093,   275,    -1,    -1,   278,   452,    -1,
12399:       -1,   455,    -1,    -1,   458,  1294,    -1,    -1,    -1,   463,
12400:       -1,   292,  1301,    -1,   295,    -1,    -1,    -1,    -1,    -1,
12401:       -1,    -1,    -1,    -1,    -1,    -1,   480,    -1,    -1,    -1,
12402:       -1,    26,    -1,    -1,    -1,    -1,   173,    32,  2138,    -1,
12403:       -1,  2141,    -1,  2143,    -1,    40,    -1,    -1,    -1,    -1,
12404:      504,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2159,
12405:       -1,    -1,  1351,    -1,   518,    60,    -1,   521,    -1,    -1,
12406:       -1,    -1,   209,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12407:       -1,    -1,    -1,    -1,    -1,    -1,  1375,    -1,   225,    -1,
12408:       -1,    -1,    -1,    -1,    -1,    -1,  2753,    -1,   235,  2199,
12409:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12410:       -1,   106,    -1,   394,    -1,    -1,  2216,  2217,    -1,    -1,
12411:       -1,  2778,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12412:       -1,    -1,   269,    -1,  1423,  2235,  1425,    -1,  1427,  1428,
12413:       -1,  1430,   137,    -1,  1433,    -1,    -1,  1436,  2248,    -1,
12414:     1439,    -1,    -1,   290,    -1,  1444,    -1,    -1,  1447,    -1,
12415:       -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
12416:       -1,    15,    16,    17,    18,    19,    20,    21,   315,    -1,
12417:       -1,    -1,    -1,    -1,    -1,   322,    -1,    -1,    -1,    -1,
12418:       -1,    -1,    36,    -1,    -1,    -1,    40,  1486,    -1,    -1,
12419:       -1,    -1,    46,    -1,    -1,  2305,    -1,   202,    -1,    53,
12420:       -1,  2311,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12421:       -1,   502,    -1,    -1,   505,   506,   507,   364,   509,   510,
12422:      511,   512,   513,   514,    -1,    -1,    80,    -1,    -1,    -1,
12423:       -1,    -1,    -1,    -1,    -1,    -1,   383,    -1,    -1,    -1,
12424:       -1,    -1,    -1,    -1,    -1,    -1,   251,  2914,    -1,    -1,
12425:       -1,    -1,    -1,    -1,    -1,    -1,   261,    -1,    -1,    -1,
12426:       -1,    -1,  2372,    -1,    -1,    -1,    -1,    -1,   273,    -1,
12427:       -1,  1570,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12428:       -1,    -1,    -1,     8,    -1,    -1,    11,  1586,    -1,   294,
12429:       15,    16,    17,    18,    19,    20,    21,  1596,  1597,  1598,
12430:      305,    -1,    -1,    -1,  1603,   452,    -1,    -1,  1607,    -1,
12431:      457,    36,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12432:       -1,    46,    -1,   177,    -1,    -1,    -1,    -1,    53,    -1,
12433:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12434:      194,    -1,    -1,    -1,    -1,   199,    -1,    -1,   353,    -1,
12435:       -1,    -1,   357,    -1,   359,    80,    -1,    -1,    -1,    -1,
12436:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   222,   223,
12437:     1669,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,
12438:       -1,    -1,    -1,   237,   389,    -1,    -1,    -1,    -1,    -1,
12439:     3057,    -1,    -1,    -1,    -1,    -1,    -1,  2507,   403,    -1,
12440:       -1,    -1,    -1,  2513,  2514,    -1,    -1,    -1,    -1,  1708,
12441:       -1,    -1,    -1,    -1,    -1,  2525,    -1,    -1,    -1,    -1,
12442:       -1,   275,    -1,    -1,   278,  1724,    -1,    -1,    -1,  2539,
12443:     1729,    -1,  2542,    -1,  2544,    -1,    -1,    -1,   292,    -1,
12444:       -1,   295,  2552,    -1,    -1,    -1,    -1,  1746,    -1,    -1,
12445:     2560,  2561,   177,    -1,    -1,   460,    -1,  2567,    -1,    -1,
12446:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   194,
12447:       -1,    -1,  2582,    -1,   199,    -1,    -1,    -1,    -1,    -1,
12448:        8,    -1,  2592,    11,    -1,    -1,    -1,    15,    16,    17,
12449:       18,    19,    20,    21,    -1,    -1,    -1,   222,   223,    -1,
12450:       -1,    -1,  2612,    -1,    -1,    -1,    -1,    -1,    36,    -1,
12451:       -1,    -1,   237,    -1,    -1,    -1,    -1,    -1,    46,    -1,
12452:       -1,    -1,    -1,    -1,    -1,    53,    -1,    -1,    -1,    -1,
12453:        8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,    -1,
12454:      394,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
12455:      275,    -1,    80,   278,    -1,    -1,    -1,    -1,    36,    -1,
12456:       -1,  2671,    -1,  2673,    -1,    -1,    -1,   292,    46,    -1,
12457:      295,    -1,    -1,    -1,    -1,    53,    -1,    -1,    -1,    -1,
12458:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12459:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3266,
12460:       -1,    -1,    80,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12461:       -1,    -1,    -1,    -1,    -1,    -1,    -1,  1916,    -1,    -1,
12462:       -1,    -1,    -1,    -1,    -1,  1924,  1925,    -1,  1927,  1928,
12463:     1929,  1930,  1931,  1932,    -1,    -1,  1935,  1936,  1937,  1938,
12464:     1939,  1940,  1941,  1942,  1943,  1944,  1945,    -1,   502,   177,
12465:       -1,   505,   506,   507,    -1,   509,   510,   511,   512,   513,
12466:      514,    -1,    -1,  2773,  2774,   519,   194,    -1,    -1,   394,
12467:       -1,   199,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12468:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12469:       -1,    -1,    -1,    -1,   222,   223,    -1,    -1,  2808,   177,
12470:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   237,
12471:       -1,    -1,    -1,  2823,    -1,    -1,   194,    -1,    -1,  2829,
12472:     2830,   199,    -1,    -1,  2834,    -1,    -1,    -1,    -1,  2839,
12473:       -1,    -1,  2842,  2843,    -1,    -1,    -1,  2847,  2848,    -1,
12474:       -1,  2851,    -1,    -1,   222,   223,    -1,   275,    -1,    -1,
12475:      278,  2050,  2862,    -1,  2053,    -1,    -1,    -1,    -1,   237,
12476:       -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,    -1,
12477:       -1,    -1,    -1,    -1,    -1,    -1,    -1,   502,    -1,    -1,
12478:      505,   506,   507,    -1,   509,   510,   511,   512,   513,   514,
12479:       -1,    -1,    -1,    -1,   519,    -1,  2906,   275,    -1,    -1,
12480:      278,  2100,    -1,    -1,    -1,  2104,  2105,  2106,  2107,  2108,
12481:     2109,  2110,  2111,    -1,   292,    -1,    -1,   295,  2117,  2118,
12482:       -1,  2120,  2121,  2933,    -1,    -1,    -1,    -1,    -1,    -1,
12483:       -1,    -1,    -1,    -1,    -1,  2134,    -1,    -1,  2137,    -1,
12484:       -1,    -1,    -1,    -1,    -1,    -1,  2145,  2146,  2147,  2148,
12485:     2149,  2150,  2151,  2152,  2153,  2154,    -1,    -1,    -1,    -1,
12486:       -1,    -1,    -1,    -1,    -1,    -1,   394,    -1,    -1,    -1,
12487:       -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
12488:       -1,  2180,    15,    16,    17,    18,    19,    20,    21,    -1,
12489:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12490:       -1,    -1,    -1,    36,    -1,    -1,    -1,    -1,    -1,    -1,
12491:       -1,    -1,    -1,    46,    -1,    -1,   394,    -1,    -1,    -1,
12492:       53,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12493:       -1,    -1,    -1,    -1,  2233,    -1,  3046,    -1,    -1,    -1,
12494:       -1,    -1,    24,    -1,    -1,    -1,    -1,    80,    -1,    -1,
12495:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12496:       -1,    -1,    -1,  3073,    -1,    -1,    -1,    -1,    -1,    -1,
12497:       -1,    -1,    -1,    -1,   502,    -1,    -1,   505,   506,   507,
12498:       -1,   509,   510,   511,   512,   513,   514,    -1,    -1,    -1,
12499:       -1,   519,    -1,    -1,    -1,    -1,  3106,    -1,    -1,    81,
12500:       -1,    -1,    -1,    -1,    -1,    -1,    -1,  2306,  3118,  3119,
12501:       -1,    -1,  3122,    -1,  3124,    97,    -1,  2316,  2317,    -1,
12502:       -1,    -1,    -1,    -1,   502,    -1,    -1,   505,   506,   507,
12503:       -1,   509,   510,   511,   512,   513,   514,    -1,    -1,  3149,
12504:       -1,    -1,    -1,    -1,   177,    -1,    -1,    -1,    -1,    -1,
12505:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12506:       -1,   194,    -1,  3173,   146,    -1,   199,    -1,    -1,    -1,
12507:       -1,    -1,    -1,    -1,   156,    -1,    -1,    -1,    -1,    -1,
12508:       -1,    -1,    -1,    -1,  2383,    -1,    -1,   169,    -1,   222,
12509:      223,    -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12510:       -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,    -1,    -1,
12511:     2409,  2410,  2411,    -1,    -1,  2414,  2415,  2416,  2417,  2418,
12512:     2419,   203,    -1,    -1,  2423,  2424,  2425,  2426,  2427,  2428,
12513:     2429,  2430,  2431,  2432,    -1,    -1,    -1,    -1,  2437,  2438,
12514:       -1,    -1,   275,    -1,    -1,   278,    -1,    -1,    -1,    -1,
12515:     3260,    -1,    -1,    -1,  3264,    -1,    -1,    -1,  3268,   292,
12516:       -1,    -1,   295,    -1,   246,    -1,  2465,    -1,   250,  3279,
12517:       -1,    -1,  2471,    -1,  3284,    -1,  3286,    -1,    -1,    -1,
12518:        8,    -1,    -1,    11,  3294,    -1,    -1,    15,    16,    17,
12519:       18,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
12520:       -1,    -1,  3312,    -1,    -1,    -1,    -1,  2506,    36,    -1,
12521:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    46,    -1,
12522:       -1,    -1,    -1,    -1,  2523,    53,    -1,  2526,    -1,    -1,
12523:       -1,    -1,    -1,  2532,  2533,    -1,    -1,    -1,   320,    -1,
12524:       -1,  2540,  2541,    -1,    -1,    -1,    -1,    -1,    -1,  3359,
12525:       -1,    -1,    80,   335,    -1,  2554,  2555,  2556,  2557,  3369,
12526:     2559,   394,    -1,    -1,  2563,    -1,    -1,    -1,    -1,    -1,
12527:        8,  3381,    -1,    11,    -1,    -1,    -1,    15,    16,    17,
12528:       18,    19,    20,    21,    -1,    -1,    -1,    -1,   370,    -1,
12529:       -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,    36,    -1,
12530:       -1,    -1,   384,  3413,    -1,   387,    -1,    -1,    46,    -1,
12531:       -1,    -1,    -1,    -1,    -1,    53,    -1,    -1,    -1,    -1,
12532:     2619,    -1,    -1,   405,    -1,    -1,    -1,    -1,    -1,    -1,
12533:       -1,    -1,    -1,    -1,    -1,    -1,    -1,   419,    -1,    -1,
12534:       -1,    -1,    80,    -1,   426,    -1,    -1,    -1,    -1,   177,
12535:       -1,    -1,    -1,    -1,   436,    -1,    -1,    -1,    -1,    -1,
12536:      442,    -1,    -1,    -1,    -1,    -1,   194,    -1,    -1,   502,
12537:       -1,   199,   505,   506,   507,    -1,   509,   510,   511,   512,
12538:      513,   514,    -1,    -1,    -1,    -1,   519,    -1,   470,    -1,
12539:     3500,  3501,  3502,    -1,   222,   223,    -1,    -1,    -1,    -1,
12540:       -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,   237,
12541:       15,    16,    17,    18,    19,    20,    21,  3527,    -1,    -1,
12542:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12543:       -1,    36,  2731,    -1,    -1,    -1,    -1,    -1,    -1,   177,
12544:       -1,    46,    -1,    -1,    -1,    -1,    -1,   275,    53,    -1,
12545:      278,    -1,    -1,    -1,  2753,    -1,   194,     3,  3568,     5,
12546:       -1,   199,    -1,    -1,   292,    -1,    -1,   295,    -1,    -1,
12547:       -1,    -1,    -1,    -1,    -1,    80,    -1,    -1,    -1,    -1,
12548:       -1,    -1,    -1,    -1,   222,   223,    -1,    -1,    -1,    -1,
12549:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   237,
12550:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12551:     2809,    -1,  2811,    -1,    -1,    -1,    -1,    -1,    -1,  2818,
12552:       -1,    -1,    68,    69,    -1,    -1,    -1,    -1,    -1,  2828,
12553:       -1,    -1,  2831,    -1,  2833,    -1,    -1,   275,  2837,    -1,
12554:      278,  2840,  2841,    -1,    -1,  2844,  2845,    -1,    -1,    -1,
12555:       -1,    -1,    -1,  2852,   292,    -1,    -1,   295,    -1,    -1,
12556:       -1,    -1,  2861,   109,   110,    -1,   394,   113,   114,    -1,
12557:       -1,    -1,   177,    -1,    -1,    -1,    -1,  2876,    -1,    -1,
12558:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   194,
12559:       -1,    -1,    -1,    -1,   199,    -1,    -1,    -1,    -1,    -1,
12560:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12561:       -1,    -1,    -1,    -1,    -1,  2914,    -1,   222,   223,    -1,
12562:       -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,
12563:       -1,    -1,   237,    15,    16,    17,    18,    19,    20,    21,
12564:       -1,    -1,    -1,   189,   190,    -1,    -1,    -1,    -1,    -1,
12565:       -1,    -1,    -1,    -1,    36,    -1,   394,    -1,    -1,    -1,
12566:       -1,    -1,    -1,    -1,    46,    -1,    -1,    -1,    -1,    -1,
12567:      275,    53,    -1,   278,   502,    -1,    -1,   505,   506,   507,
12568:       -1,   509,   510,   511,   512,   513,   514,   292,    -1,    -1,
12569:      295,   519,    -1,    -1,    -1,    -1,    -1,    -1,    80,    -1,
12570:       -1,    -1,    -1,    -1,    -1,    -1,    -1,   253,   254,   255,
12571:      256,   257,   258,   259,   260,    -1,    -1,   263,   264,    -1,
12572:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12573:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12574:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12575:       -1,    -1,    -1,    -1,    -1,    -1,    -1,  3056,  3057,    -1,
12576:       -1,    -1,    -1,    -1,   502,    -1,    -1,   505,   506,   507,
12577:       -1,   509,   510,   511,   512,   513,   514,    -1,    -1,    -1,
12578:       -1,   519,  3081,  3082,    -1,    -1,    -1,    -1,    -1,   394,
12579:       -1,   337,   338,    -1,    -1,   177,    -1,    -1,    -1,    -1,
12580:       -1,    -1,    -1,    -1,    -1,    -1,  3105,    -1,    -1,    -1,
12581:     3109,    -1,   194,  3112,  3113,  3114,    -1,   199,  3117,    -1,
12582:       -1,  3120,  3121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12583:     3129,    -1,   378,   379,    -1,    -1,    -1,    -1,    -1,    -1,
12584:      222,   223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12585:       -1,    -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,    -1,
12586:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12587:       -1,  3170,    -1,    -1,    -1,    -1,    -1,  3176,    -1,    -1,
12588:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12589:     3189,    -1,    -1,   275,    -1,    -1,   278,   502,    -1,    -1,
12590:      505,   506,   507,    -1,   509,   510,   511,   512,   513,   514,
12591:      292,    -1,    -1,   295,   519,    -1,    -1,    -1,    -1,    -1,
12592:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   474,   475,
12593:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12594:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3248,
12595:       -1,    -1,   498,   499,    -1,    -1,    -1,    -1,    -1,    -1,
12596:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12597:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12598:       -1,    -1,  3281,  3282,  3283,    -1,    -1,    -1,    -1,    -1,
12599:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12600:       -1,    -1,  3301,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12601:       -1,    -1,   394,    -1,  3313,    -1,    -1,    -1,    -1,    -1,
12602:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12603:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12604:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12605:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12606:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12607:       -1,    -1,    -1,    -1,    -1,  3374,    -1,    -1,    -1,    -1,
12608:       -1,    -1,    -1,    -1,  3383,    -1,    -1,    -1,    -1,    -1,
12609:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12610:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3408,
12611:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12612:      502,    -1,    -1,   505,   506,   507,    -1,   509,   510,   511,
12613:      512,   513,   514,    -1,  3433,    -1,    -1,   519,    -1,    -1,
12614:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12615:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12616:        3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
12617:       -1,    -1,    -1,    -1,    -1,    -1,    -1,  3476,    -1,    22,
12618:       23,    24,    25,    26,    27,    28,    29,    -1,    31,    32,
12619:       33,    -1,    -1,    -1,    -1,    -1,    39,    -1,    -1,    42,
12620:       43,    44,    -1,    46,    47,    48,    49,    50,    51,    52,
12621:       53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
12622:       63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
12623:       73,  3530,    75,    76,    77,    78,    79,    -1,    81,    -1,
12624:       83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
12625:       -1,    94,    95,    96,    97,    98,    99,    -1,   101,   102,
12626:      103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
12627:      113,   114,   115,   116,   117,   118,    -1,   120,   121,   122,
12628:      123,   124,   125,    -1,    -1,   128,   129,   130,   131,    -1,
12629:       -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
12630:       -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
12631:      153,   154,   155,   156,   157,   158,   159,   160,   161,    -1,
12632:      163,   164,   165,   166,    -1,   168,    -1,   170,   171,    -1,
12633:      173,   174,   175,   176,   177,   178,    -1,   180,    -1,   182,
12634:      183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
12635:      193,   194,   195,   196,   197,   198,    -1,   200,   201,   202,
12636:      203,   204,   205,   206,    -1,   208,   209,   210,   211,   212,
12637:      213,   214,   215,   216,   217,    -1,   219,    -1,   221,   222,
12638:      223,   224,   225,   226,   227,   228,   229,   230,   231,    -1,
12639:       -1,   234,   235,   236,   237,    -1,   239,   240,   241,   242,
12640:      243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
12641:      253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
12642:      263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
12643:      273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
12644:      283,   284,   285,   286,    -1,   288,   289,    -1,    -1,   292,
12645:      293,   294,    -1,    -1,   297,   298,   299,   300,   301,   302,
12646:      303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
12647:      313,   314,    -1,    -1,    -1,    -1,   319,   320,   321,   322,
12648:      323,   324,   325,   326,   327,   328,    -1,   330,   331,   332,
12649:      333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
12650:      343,   344,   345,   346,    -1,   348,   349,   350,   351,   352,
12651:      353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
12652:      363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
12653:      373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
12654:       -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
12655:       -1,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
12656:      403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
12657:      413,   414,    -1,    -1,   417,   418,    -1,   420,   421,   422,
12658:      423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
12659:      433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
12660:      443,   444,   445,   446,    -1,    -1,   449,   450,   451,    -1,
12661:      453,   454,   455,   456,    -1,   458,   459,   460,   461,   462,
12662:      463,   464,   465,    -1,   467,   468,   469,   470,   471,   472,
12663:      473,   474,   475,    -1,    -1,   478,    -1,    -1,   481,   482,
12664:      483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
12665:      493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
12666:       -1,    -1,    -1,    -1,    -1,    -1,   509,   510,   511,    -1,
12667:       -1,    -1,    -1,   516,    -1,   518,    -1,    -1,    -1,    -1,
12668:      523,   524,   525,   526,    -1,   528,     3,     4,     5,     6,
12669:        7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
12670:       -1,    -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,
12671:       27,    28,    29,    -1,    31,    32,    33,    -1,    -1,    -1,
12672:       -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,
12673:       47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
12674:       57,    -1,    59,    60,    61,    62,    63,    64,    65,    66,
12675:       67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
12676:       77,    78,    79,    -1,    81,    -1,    83,    84,    85,    86,
12677:       87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
12678:       97,    98,    99,    -1,   101,   102,   103,   104,   105,   106,
12679:      107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
12680:      117,   118,    -1,   120,   121,   122,   123,   124,   125,    -1,
12681:       -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
12682:      137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
12683:       -1,   148,   149,   150,   151,   152,   153,   154,   155,   156,
12684:      157,   158,   159,   160,   161,    -1,   163,   164,   165,   166,
12685:       -1,   168,    -1,   170,   171,    -1,   173,   174,   175,   176,
12686:      177,   178,    -1,   180,    -1,   182,   183,   184,   185,    -1,
12687:      187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
12688:      197,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
12689:       -1,   208,   209,   210,   211,   212,   213,   214,   215,   216,
12690:      217,    -1,   219,    -1,   221,   222,   223,   224,   225,   226,
12691:      227,   228,   229,   230,   231,    -1,    -1,   234,   235,   236,
12692:      237,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
12693:      247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
12694:      257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
12695:      267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
12696:      277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
12697:       -1,   288,   289,    -1,    -1,   292,   293,   294,    -1,    -1,
12698:      297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
12699:      307,   308,   309,   310,   311,   312,   313,   314,    -1,    -1,
12700:       -1,    -1,   319,   320,   321,   322,   323,   324,   325,   326,
12701:      327,   328,    -1,   330,   331,   332,   333,   334,   335,    -1,
12702:      337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
12703:       -1,   348,   349,   350,   351,   352,   353,   354,   355,   356,
12704:      357,   358,   359,   360,    -1,   362,   363,   364,   365,   366,
12705:      367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
12706:      377,   378,   379,   380,   381,    -1,    -1,   384,   385,   386,
12707:      387,   388,   389,   390,   391,   392,    -1,   394,   395,   396,
12708:      397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
12709:      407,   408,   409,   410,   411,   412,   413,   414,    -1,    -1,
12710:      417,   418,    -1,   420,   421,   422,   423,   424,   425,   426,
12711:       -1,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
12712:      437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
12713:       -1,    -1,   449,   450,   451,    -1,   453,   454,   455,   456,
12714:       -1,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
12715:      467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
12716:       -1,   478,    -1,    -1,   481,   482,   483,   484,   485,   486,
12717:      487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
12718:      497,   498,   499,   500,   501,   502,    -1,    -1,    -1,    -1,
12719:       -1,    -1,   509,   510,   511,    -1,    -1,    -1,    -1,   516,
12720:       -1,   518,    -1,    -1,    -1,    -1,   523,   524,   525,   526,
12721:       -1,   528,     3,     4,     5,     6,     7,     8,     9,    10,
12722:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12723:       -1,    22,    23,    24,    25,    26,    27,    28,    29,    -1,
12724:       31,    32,    33,    -1,    -1,    -1,    -1,    -1,    39,    -1,
12725:       -1,    42,    43,    44,    -1,    46,    47,    48,    49,    50,
12726:       51,    52,    53,    54,    55,    56,    57,    -1,    59,    60,
12727:       61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
12728:       71,    72,    73,    -1,    75,    76,    77,    78,    79,    -1,
12729:       81,    -1,    83,    84,    85,    86,    87,    88,    89,    90,
12730:       91,    92,    -1,    94,    95,    96,    97,    98,    99,    -1,
12731:      101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
12732:      111,   112,   113,   114,   115,   116,   117,   118,    -1,   120,
12733:      121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
12734:      131,    -1,    -1,   134,   135,   136,   137,   138,    -1,   140,
12735:      141,   142,    -1,   144,   145,   146,    -1,   148,   149,   150,
12736:      151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
12737:      161,    -1,   163,   164,   165,   166,    -1,   168,    -1,   170,
12738:      171,   172,   173,   174,   175,   176,   177,   178,    -1,   180,
12739:       -1,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
12740:      191,   192,   193,   194,   195,   196,   197,   198,    -1,   200,
12741:      201,   202,   203,   204,   205,   206,    -1,   208,   209,   210,
12742:      211,   212,   213,   214,   215,   216,   217,    -1,   219,    -1,
12743:      221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
12744:      231,    -1,    -1,   234,   235,   236,   237,    -1,   239,   240,
12745:      241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
12746:      251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
12747:      261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
12748:      271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
12749:      281,   282,   283,   284,   285,   286,    -1,   288,   289,    -1,
12750:       -1,   292,   293,   294,    -1,    -1,   297,   298,   299,   300,
12751:      301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
12752:      311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
12753:      321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
12754:      331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
12755:      341,   342,   343,   344,   345,   346,    -1,   348,   349,   350,
12756:      351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
12757:       -1,   362,   363,   364,   365,   366,   367,   368,   369,   370,
12758:      371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
12759:      381,   382,    -1,   384,   385,   386,   387,   388,   389,   390,
12760:      391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
12761:      401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
12762:      411,   412,   413,   414,   415,    -1,   417,   418,   419,   420,
12763:      421,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
12764:       -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
12765:      441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
12766:      451,   452,   453,   454,   455,   456,    -1,   458,   459,   460,
12767:      461,   462,   463,   464,   465,    -1,   467,   468,   469,   470,
12768:      471,   472,   473,   474,   475,    -1,    -1,   478,    -1,   480,
12769:      481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
12770:      491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
12771:      501,   502,    -1,   504,    -1,    -1,    -1,    -1,   509,   510,
12772:      511,    -1,    -1,    -1,    -1,   516,    -1,   518,   519,    -1,
12773:       -1,    -1,   523,   524,   525,   526,     3,     4,     5,     6,
12774:        7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
12775:       -1,    -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,
12776:       27,    28,    29,    -1,    31,    32,    33,    -1,    -1,    -1,
12777:       -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,
12778:       47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
12779:       57,    -1,    59,    60,    61,    62,    63,    64,    65,    66,
12780:       67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
12781:       77,    78,    79,    -1,    81,    -1,    83,    84,    85,    86,
12782:       87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
12783:       97,    98,    99,    -1,   101,   102,   103,   104,   105,   106,
12784:      107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
12785:      117,   118,    -1,   120,   121,   122,   123,   124,   125,   126,
12786:      127,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
12787:      137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
12788:       -1,   148,   149,   150,   151,   152,   153,   154,   155,   156,
12789:      157,   158,   159,   160,   161,    -1,   163,   164,   165,   166,
12790:       -1,   168,    -1,   170,   171,   172,   173,   174,   175,   176,
12791:      177,   178,    -1,   180,    -1,   182,   183,   184,   185,    -1,
12792:      187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
12793:      197,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
12794:       -1,   208,   209,   210,   211,   212,   213,   214,   215,   216,
12795:      217,    -1,   219,    -1,   221,   222,   223,   224,   225,   226,
12796:      227,   228,   229,   230,   231,    -1,    -1,   234,   235,   236,
12797:      237,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
12798:      247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
12799:      257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
12800:      267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
12801:      277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
12802:       -1,   288,   289,    -1,    -1,   292,   293,   294,    -1,    -1,
12803:      297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
12804:      307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
12805:      317,    -1,   319,   320,   321,   322,   323,   324,   325,   326,
12806:      327,   328,    -1,   330,   331,   332,   333,   334,   335,    -1,
12807:      337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
12808:       -1,   348,   349,   350,   351,   352,   353,   354,   355,   356,
12809:      357,   358,   359,   360,    -1,   362,   363,   364,   365,   366,
12810:      367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
12811:      377,   378,   379,   380,   381,   382,    -1,   384,   385,   386,
12812:      387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
12813:      397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
12814:      407,   408,   409,   410,   411,   412,   413,   414,   415,    -1,
12815:      417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
12816:       -1,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
12817:      437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
12818:       -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
12819:       -1,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
12820:      467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
12821:       -1,   478,    -1,   480,   481,   482,   483,   484,   485,   486,
12822:      487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
12823:      497,   498,   499,   500,   501,   502,    -1,   504,    -1,    -1,
12824:       -1,    -1,   509,   510,   511,    -1,    -1,    -1,    -1,   516,
12825:       -1,   518,    -1,    -1,    -1,    -1,   523,   524,   525,   526,
12826:        3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
12827:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    22,
12828:       23,    24,    25,    26,    27,    28,    29,    -1,    31,    32,
12829:       33,    -1,    -1,    -1,    -1,    -1,    39,    -1,    -1,    42,
12830:       43,    44,    -1,    46,    47,    48,    49,    50,    51,    52,
12831:       53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
12832:       63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
12833:       73,    -1,    75,    76,    77,    78,    79,    -1,    81,    -1,
12834:       83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
12835:       -1,    94,    95,    96,    97,    98,    99,    -1,   101,   102,
12836:      103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
12837:      113,   114,   115,   116,   117,   118,    -1,   120,   121,   122,
12838:      123,   124,   125,    -1,    -1,   128,   129,   130,   131,    -1,
12839:       -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
12840:       -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
12841:      153,   154,   155,   156,   157,   158,   159,   160,   161,    -1,
12842:      163,   164,   165,   166,    -1,   168,    -1,   170,   171,   172,
12843:      173,   174,   175,   176,   177,   178,    -1,   180,    -1,   182,
12844:      183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
12845:      193,   194,   195,   196,   197,   198,    -1,   200,   201,   202,
12846:      203,   204,   205,   206,    -1,   208,   209,   210,   211,   212,
12847:      213,   214,   215,   216,   217,    -1,   219,    -1,   221,   222,
12848:      223,   224,   225,   226,   227,   228,   229,   230,   231,    -1,
12849:       -1,   234,   235,   236,   237,    -1,   239,   240,   241,   242,
12850:      243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
12851:      253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
12852:      263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
12853:      273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
12854:      283,   284,   285,   286,    -1,   288,   289,    -1,    -1,   292,
12855:      293,   294,    -1,    -1,   297,   298,   299,   300,   301,   302,
12856:      303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
12857:      313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
12858:      323,   324,   325,   326,   327,   328,    -1,   330,   331,   332,
12859:      333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
12860:      343,   344,   345,   346,    -1,   348,   349,   350,   351,   352,
12861:      353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
12862:      363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
12863:      373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
12864:       -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
12865:       -1,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
12866:      403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
12867:      413,   414,    -1,    -1,   417,   418,   419,   420,   421,   422,
12868:      423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
12869:      433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
12870:      443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
12871:      453,   454,   455,   456,    -1,   458,   459,   460,   461,   462,
12872:      463,   464,   465,    -1,   467,   468,   469,   470,   471,   472,
12873:      473,   474,   475,    -1,    -1,   478,    -1,   480,   481,   482,
12874:      483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
12875:      493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
12876:       -1,   504,    -1,    -1,    -1,    -1,   509,   510,   511,    -1,
12877:       -1,    -1,    -1,   516,    -1,   518,    -1,    -1,    -1,    -1,
12878:      523,   524,   525,   526,     3,     4,     5,     6,     7,     8,
12879:        9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
12880:       -1,    -1,    -1,    22,    23,    24,    25,    26,    27,    28,
12881:       29,    30,    31,    32,    33,    -1,    -1,    -1,    37,    -1,
12882:       39,    -1,    -1,    42,    43,    44,    -1,    46,    47,    48,
12883:       49,    50,    51,    52,    53,    54,    55,    56,    57,    -1,
12884:       59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
12885:       69,    70,    71,    72,    73,    -1,    75,    76,    77,    78,
12886:       79,    -1,    81,    -1,    83,    84,    85,    86,    87,    88,
12887:       89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
12888:       99,    -1,   101,   102,   103,   104,   105,   106,   107,   108,
12889:      109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
12890:       -1,   120,   121,   122,   123,   124,   125,    -1,    -1,   128,
12891:      129,   130,   131,   132,    -1,   134,   135,   136,   137,   138,
12892:       -1,   140,   141,   142,    -1,   144,   145,   146,    -1,   148,
12893:      149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
12894:      159,   160,   161,    -1,   163,   164,   165,   166,    -1,   168,
12895:       -1,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
12896:       -1,   180,    -1,   182,   183,   184,   185,    -1,   187,   188,
12897:      189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
12898:       -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
12899:      209,   210,   211,   212,   213,   214,   215,   216,   217,    -1,
12900:      219,    -1,   221,   222,   223,   224,   225,   226,   227,   228,
12901:      229,   230,   231,    -1,    -1,   234,   235,   236,   237,    -1,
12902:      239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
12903:      249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
12904:      259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
12905:      269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
12906:      279,   280,   281,   282,   283,   284,   285,   286,    -1,   288,
12907:      289,    -1,    -1,   292,   293,   294,    -1,    -1,   297,   298,
12908:      299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
12909:      309,   310,   311,   312,   313,   314,    -1,    -1,    -1,    -1,
12910:      319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
12911:       -1,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
12912:      339,   340,   341,   342,   343,   344,   345,   346,    -1,   348,
12913:      349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
12914:      359,   360,    -1,   362,   363,   364,   365,   366,   367,   368,
12915:      369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
12916:      379,   380,   381,    -1,   383,   384,   385,   386,   387,   388,
12917:      389,   390,   391,   392,    -1,   394,   395,   396,   397,   398,
12918:       -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
12919:      409,   410,   411,   412,   413,   414,    -1,    -1,   417,   418,
12920:       -1,   420,   421,   422,   423,   424,   425,   426,    -1,   428,
12921:      429,   430,    -1,    -1,   433,   434,   435,   436,   437,   438,
12922:      439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
12923:      449,   450,   451,    -1,   453,   454,   455,   456,    -1,   458,
12924:      459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
12925:      469,   470,   471,   472,   473,   474,   475,    -1,    -1,   478,
12926:       -1,    -1,   481,   482,   483,   484,   485,   486,   487,   488,
12927:      489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
12928:      499,   500,   501,   502,    -1,    -1,    -1,    -1,    -1,    -1,
12929:      509,   510,   511,    -1,    -1,    -1,    -1,   516,    -1,   518,
12930:      519,    -1,    -1,    -1,   523,   524,   525,   526,     3,     4,
12931:        5,     6,     7,    -1,     9,    10,    -1,    -1,    -1,    -1,
12932:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    22,    23,    24,
12933:       25,    26,    27,    28,    29,    -1,    31,    32,    33,    -1,
12934:       -1,    -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,
12935:       -1,    46,    47,    48,    49,    50,    51,    52,    53,    54,
12936:       55,    56,    57,    -1,    59,    60,    61,    62,    63,    64,
12937:       65,    66,    67,    68,    69,    70,    71,    72,    73,    -1,
12938:       75,    76,    77,    78,    79,    -1,    81,    -1,    83,    84,
12939:       85,    86,    87,    88,    89,    90,    91,    92,    -1,    94,
12940:       95,    96,    97,    98,    99,    -1,   101,   102,   103,   104,
12941:      105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
12942:      115,   116,    -1,   118,    -1,   120,   121,   122,   123,   124,
12943:      125,   126,   127,   128,   129,   130,   131,    -1,    -1,   134,
12944:      135,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
12945:      145,   146,    -1,   148,   149,   150,   151,   152,   153,   154,
12946:      155,   156,   157,   158,   159,   160,   161,    -1,   163,   164,
12947:      165,   166,    -1,   168,    -1,   170,   171,   172,   173,   174,
12948:      175,   176,   177,   178,    -1,   180,    -1,   182,   183,   184,
12949:      185,    -1,   187,   188,   189,   190,   191,   192,   193,   194,
12950:      195,   196,   197,   198,    -1,   200,   201,   202,   203,   204,
12951:      205,   206,    -1,   208,   209,   210,   211,   212,   213,   214,
12952:      215,   216,   217,    -1,   219,    -1,   221,   222,   223,   224,
12953:      225,   226,   227,   228,   229,   230,   231,    -1,    -1,   234,
12954:      235,   236,   237,    -1,   239,   240,   241,   242,   243,   244,
12955:      245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
12956:      255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
12957:      265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
12958:       -1,   276,   277,   278,   279,   280,   281,   282,   283,   284,
12959:      285,   286,    -1,   288,   289,    -1,    -1,   292,   293,   294,
12960:       -1,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
12961:      305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
12962:      315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
12963:      325,   326,   327,   328,    -1,   330,   331,   332,   333,   334,
12964:      335,    -1,   337,   338,   339,   340,   341,   342,   343,   344,
12965:      345,   346,    -1,   348,   349,   350,   351,   352,   353,   354,
12966:      355,   356,   357,   358,   359,   360,    -1,   362,   363,   364,
12967:      365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
12968:      375,   376,   377,   378,   379,   380,   381,   382,    -1,   384,
12969:      385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
12970:      395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
12971:      405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
12972:      415,    -1,   417,   418,   419,   420,   421,   422,   423,   424,
12973:      425,   426,    -1,   428,   429,   430,    -1,    -1,   433,   434,
12974:      435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
12975:      445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
12976:      455,   456,    -1,   458,   459,   460,   461,   462,   463,   464,
12977:      465,    -1,   467,   468,   469,   470,   471,   472,   473,   474,
12978:      475,    -1,    -1,   478,    -1,   480,   481,   482,   483,   484,
12979:      485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
12980:      495,   496,   497,   498,   499,   500,   501,    -1,    -1,   504,
12981:       -1,    -1,    -1,     3,     4,     5,     6,     7,     8,     9,
12982:       10,   516,    -1,   518,    -1,    -1,    -1,    -1,   523,   524,
12983:      525,   526,    22,    23,    24,    25,    26,    27,    28,    29,
12984:       -1,    31,    32,    33,    -1,    -1,    -1,    -1,    -1,    39,
12985:       -1,    -1,    42,    43,    44,    -1,    46,    47,    48,    49,
12986:       50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
12987:       60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
12988:       70,    71,    72,    73,    -1,    75,    76,    77,    78,    79,
12989:       -1,    81,    -1,    83,    84,    85,    86,    87,    88,    89,
12990:       90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
12991:       -1,   101,   102,   103,   104,   105,   106,   107,   108,   109,
12992:      110,   111,   112,   113,   114,   115,   116,   117,   118,    -1,
12993:      120,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
12994:      130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
12995:      140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
12996:      150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
12997:      160,   161,    -1,   163,   164,   165,   166,    -1,   168,    -1,
12998:      170,   171,   172,   173,   174,   175,   176,   177,   178,    -1,
12999:      180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
13000:      190,   191,   192,   193,   194,   195,   196,   197,   198,    -1,
13001:      200,   201,   202,   203,   204,   205,   206,    -1,   208,   209,
13002:      210,   211,   212,   213,   214,   215,   216,   217,    -1,   219,
13003:       -1,   221,   222,   223,   224,   225,   226,   227,   228,   229,
13004:      230,   231,    -1,   233,   234,   235,   236,   237,    -1,   239,
13005:      240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
13006:      250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
13007:      260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
13008:      270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
13009:      280,   281,   282,   283,   284,   285,   286,    -1,   288,   289,
13010:       -1,    -1,   292,   293,   294,    -1,    -1,   297,   298,   299,
13011:      300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
13012:      310,   311,   312,   313,   314,    -1,    -1,    -1,    -1,   319,
13013:      320,   321,   322,   323,   324,   325,   326,   327,   328,    -1,
13014:      330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
13015:      340,   341,   342,   343,   344,   345,   346,    -1,   348,   349,
13016:      350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
13017:      360,    -1,   362,   363,   364,   365,   366,   367,   368,   369,
13018:      370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
13019:      380,   381,    -1,    -1,   384,   385,   386,   387,   388,   389,
13020:      390,   391,   392,    -1,   394,   395,   396,   397,   398,    -1,
13021:      400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
13022:      410,   411,   412,   413,   414,    -1,    -1,   417,   418,    -1,
13023:      420,   421,   422,   423,   424,   425,   426,    -1,   428,   429,
13024:      430,    -1,   432,   433,   434,   435,   436,   437,   438,   439,
13025:      440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
13026:      450,   451,    -1,   453,   454,   455,   456,    -1,   458,   459,
13027:      460,   461,   462,   463,   464,   465,    -1,   467,   468,   469,
13028:      470,   471,   472,   473,   474,   475,    -1,    -1,   478,    -1,
13029:       -1,   481,   482,   483,   484,   485,   486,   487,   488,   489,
13030:      490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
13031:      500,   501,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,
13032:      510,   511,    -1,    -1,    -1,    -1,   516,    -1,   518,    -1,
13033:       -1,    -1,    -1,   523,   524,   525,   526,     3,     4,     5,
13034:        6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
13035:       -1,    -1,    -1,    -1,    -1,    -1,    22,    23,    24,    25,
13036:       26,    27,    28,    29,    -1,    31,    32,    33,    -1,    -1,
13037:       -1,    37,    -1,    39,    -1,    -1,    42,    43,    44,    -1,
13038:       46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
13039:       56,    57,    -1,    59,    60,    61,    62,    63,    64,    65,
13040:       66,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
13041:       76,    77,    78,    79,    -1,    81,    -1,    83,    84,    85,
13042:       86,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
13043:       96,    97,    98,    99,    -1,   101,   102,   103,   104,   105,
13044:      106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
13045:      116,   117,   118,    -1,   120,   121,   122,   123,   124,   125,
13046:       -1,    -1,   128,   129,   130,   131,    -1,    -1,   134,   135,
13047:      136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
13048:      146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
13049:      156,   157,   158,   159,   160,   161,    -1,   163,   164,   165,
13050:      166,    -1,   168,    -1,   170,   171,    -1,   173,   174,   175,
13051:      176,   177,   178,    -1,   180,    -1,   182,   183,   184,   185,
13052:       -1,   187,   188,   189,   190,   191,   192,   193,   194,   195,
13053:      196,   197,   198,    -1,   200,   201,   202,   203,   204,   205,
13054:      206,    -1,   208,   209,   210,   211,   212,   213,   214,   215,
13055:      216,   217,    -1,   219,    -1,   221,   222,   223,   224,   225,
13056:      226,   227,   228,   229,   230,   231,    -1,    -1,   234,   235,
13057:      236,   237,    -1,   239,   240,   241,   242,   243,   244,   245,
13058:      246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
13059:      256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
13060:      266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
13061:      276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
13062:      286,    -1,   288,   289,    -1,    -1,   292,   293,   294,    -1,
13063:       -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
13064:      306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
13065:       -1,    -1,    -1,   319,   320,   321,   322,   323,   324,   325,
13066:      326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
13067:       -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
13068:      346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
13069:      356,   357,   358,   359,   360,    -1,   362,   363,   364,   365,
13070:      366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
13071:      376,   377,   378,   379,   380,   381,    -1,   383,   384,   385,
13072:      386,   387,   388,   389,   390,   391,   392,    -1,   394,   395,
13073:      396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
13074:      406,   407,   408,   409,   410,   411,   412,   413,   414,    -1,
13075:       -1,   417,   418,    -1,   420,   421,   422,   423,   424,   425,
13076:      426,    -1,   428,   429,   430,    -1,    -1,   433,   434,   435,
13077:      436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
13078:      446,    -1,    -1,   449,   450,   451,    -1,   453,   454,   455,
13079:      456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
13080:      466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
13081:       -1,    -1,   478,    -1,    -1,   481,   482,   483,   484,   485,
13082:      486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
13083:      496,   497,   498,   499,   500,   501,   502,    -1,    -1,    -1,
13084:       -1,    -1,    -1,   509,   510,   511,    -1,    -1,    -1,    -1,
13085:      516,    -1,   518,    -1,    -1,    -1,    -1,   523,   524,   525,
13086:      526,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
13087:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
13088:       22,    23,    24,    25,    26,    27,    28,    29,    -1,    31,
13089:       32,    33,    -1,    -1,    -1,    37,    -1,    39,    -1,    -1,
13090:       42,    43,    44,    -1,    46,    47,    48,    49,    50,    51,
13091:       52,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
13092:       62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
13093:       72,    73,    -1,    75,    76,    77,    78,    79,    -1,    81,
13094:       -1,    83,    84,    85,    86,    87,    88,    89,    90,    91,
13095:       92,    -1,    94,    95,    96,    97,    98,    99,    -1,   101,
13096:      102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
13097:      112,   113,   114,   115,   116,   117,   118,    -1,   120,   121,
13098:      122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
13099:       -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
13100:      142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
13101:      152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
13102:       -1,   163,   164,   165,   166,    -1,   168,    -1,   170,   171,
13103:       -1,   173,   174,   175,   176,   177,   178,    -1,   180,    -1,
13104:      182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
13105:      192,   193,   194,   195,   196,   197,   198,    -1,   200,   201,
13106:      202,   203,   204,   205,   206,    -1,   208,   209,   210,   211,
13107:      212,   213,   214,   215,   216,   217,    -1,   219,    -1,   221,
13108:      222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
13109:       -1,    -1,   234,   235,   236,   237,    -1,   239,   240,   241,
13110:      242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
13111:      252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
13112:      262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
13113:      272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
13114:      282,   283,   284,   285,   286,    -1,   288,   289,    -1,    -1,
13115:      292,   293,   294,    -1,    -1,   297,   298,   299,   300,   301,
13116:      302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
13117:      312,   313,   314,    -1,    -1,    -1,    -1,   319,   320,   321,
13118:      322,   323,   324,   325,   326,   327,   328,    -1,   330,   331,
13119:      332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
13120:      342,   343,   344,   345,   346,    -1,   348,   349,   350,   351,
13121:      352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
13122:      362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
13123:      372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
13124:       -1,   383,   384,   385,   386,   387,   388,   389,   390,   391,
13125:      392,    -1,   394,   395,   396,   397,   398,    -1,   400,   401,
13126:      402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
13127:      412,   413,   414,    -1,    -1,   417,   418,    -1,   420,   421,
13128:      422,   423,   424,   425,   426,    -1,   428,   429,   430,    -1,
13129:       -1,   433,   434,   435,   436,   437,   438,   439,   440,   441,
13130:      442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
13131:       -1,   453,   454,   455,   456,    -1,   458,   459,   460,   461,
13132:      462,   463,   464,   465,    -1,   467,   468,   469,   470,   471,
13133:      472,   473,   474,   475,    -1,    -1,   478,    -1,    -1,   481,
13134:      482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
13135:      492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
13136:      502,    -1,    -1,    -1,    -1,    -1,    -1,   509,   510,   511,
13137:       -1,    -1,    -1,    -1,   516,    -1,   518,   519,    -1,    -1,
13138:       -1,   523,   524,   525,   526,     3,     4,     5,     6,     7,
13139:        8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
13140:       -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,    27,
13141:       28,    29,    30,    31,    32,    33,    -1,    -1,    -1,    -1,
13142:       38,    39,    -1,    -1,    42,    43,    44,    -1,    46,    47,
13143:       48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
13144:       -1,    59,    60,    61,    62,    63,    64,    65,    66,    67,
13145:       68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
13146:       78,    79,    -1,    81,    -1,    83,    84,    85,    86,    87,
13147:       88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
13148:       98,    99,    -1,   101,   102,   103,   104,   105,   106,   107,
13149:      108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
13150:      118,    -1,   120,   121,   122,   123,   124,   125,    -1,    -1,
13151:      128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
13152:      138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
13153:      148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
13154:      158,   159,   160,   161,    -1,   163,   164,   165,   166,    -1,
13155:      168,    -1,   170,   171,    -1,   173,   174,   175,   176,   177,
13156:      178,    -1,   180,    -1,   182,   183,   184,   185,    -1,   187,
13157:      188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
13158:      198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
13159:      208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
13160:       -1,   219,    -1,   221,   222,   223,   224,   225,   226,   227,
13161:      228,   229,   230,   231,    -1,    -1,   234,   235,   236,   237,
13162:       -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
13163:      248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
13164:      258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
13165:      268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
13166:      278,   279,   280,   281,   282,   283,   284,   285,   286,    -1,
13167:      288,   289,    -1,    -1,   292,   293,   294,    -1,    -1,   297,
13168:      298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
13169:      308,   309,   310,   311,   312,   313,   314,    -1,    -1,    -1,
13170:       -1,   319,   320,   321,   322,   323,   324,   325,   326,   327,
13171:      328,    -1,   330,   331,   332,   333,   334,   335,    -1,   337,
13172:      338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
13173:      348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
13174:      358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
13175:      368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
13176:      378,   379,   380,   381,    -1,    -1,   384,   385,   386,   387,
13177:      388,   389,   390,   391,   392,    -1,   394,   395,   396,   397,
13178:      398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
13179:      408,   409,   410,   411,   412,   413,   414,    -1,    -1,   417,
13180:      418,    -1,   420,   421,   422,   423,   424,   425,   426,    -1,
13181:      428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
13182:      438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
13183:       -1,   449,   450,   451,    -1,   453,   454,   455,   456,    -1,
13184:      458,   459,   460,   461,   462,   463,   464,   465,    -1,   467,
13185:      468,   469,   470,   471,   472,   473,   474,   475,    -1,    -1,
13186:      478,    -1,    -1,   481,   482,   483,   484,   485,   486,   487,
13187:      488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
13188:      498,   499,   500,   501,   502,    -1,    -1,    -1,    -1,    -1,
13189:       -1,   509,   510,   511,    -1,    -1,    -1,    -1,   516,    -1,
13190:      518,    -1,    -1,    -1,    -1,   523,   524,   525,   526,     3,
13191:        4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
13192:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    22,    23,
13193:       24,    25,    26,    27,    28,    29,    -1,    31,    32,    33,
13194:       -1,    -1,    -1,    37,    -1,    39,    -1,    -1,    42,    43,
13195:       44,    -1,    46,    47,    48,    49,    50,    51,    52,    53,
13196:       54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
13197:       64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
13198:       -1,    75,    76,    77,    78,    79,    -1,    81,    -1,    83,
13199:       84,    85,    86,    87,    88,    89,    90,    91,    92,    -1,
13200:       94,    95,    96,    97,    98,    99,    -1,   101,   102,   103,
13201:      104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
13202:      114,   115,   116,   117,   118,    -1,   120,   121,   122,   123,
13203:      124,   125,    -1,    -1,   128,   129,   130,   131,    -1,    -1,
13204:      134,   135,   136,   137,   138,    -1,   140,   141,   142,    -1,
13205:      144,   145,   146,    -1,   148,   149,   150,   151,   152,   153,
13206:      154,   155,   156,   157,   158,   159,   160,   161,    -1,   163,
13207:      164,   165,   166,    -1,   168,    -1,   170,   171,    -1,   173,
13208:      174,   175,   176,   177,   178,    -1,   180,    -1,   182,   183,
13209:      184,   185,    -1,   187,   188,   189,   190,   191,   192,   193,
13210:      194,   195,   196,   197,   198,    -1,   200,   201,   202,   203,
13211:      204,   205,   206,    -1,   208,   209,   210,   211,   212,   213,
13212:      214,   215,   216,   217,    -1,   219,    -1,   221,   222,   223,
13213:      224,   225,   226,   227,   228,   229,   230,   231,    -1,    -1,
13214:      234,   235,   236,   237,    -1,   239,   240,   241,   242,   243,
13215:      244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
13216:      254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
13217:      264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
13218:      274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
13219:      284,   285,   286,    -1,   288,   289,    -1,    -1,   292,   293,
13220:      294,    -1,    -1,   297,   298,   299,   300,   301,   302,   303,
13221:      304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
13222:      314,    -1,    -1,    -1,    -1,   319,   320,   321,   322,   323,
13223:      324,   325,   326,   327,   328,    -1,   330,   331,   332,   333,
13224:      334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
13225:      344,   345,   346,    -1,   348,   349,   350,   351,   352,   353,
13226:      354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
13227:      364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
13228:      374,   375,   376,   377,   378,   379,   380,   381,    -1,   383,
13229:      384,   385,   386,   387,   388,   389,   390,   391,   392,    -1,
13230:      394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
13231:      404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
13232:      414,    -1,    -1,   417,   418,    -1,   420,   421,   422,   423,
13233:      424,   425,   426,    -1,   428,   429,   430,    -1,    -1,   433,
13234:      434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
13235:      444,   445,   446,    -1,    -1,   449,   450,   451,    -1,   453,
13236:      454,   455,   456,    -1,   458,   459,   460,   461,   462,   463,
13237:      464,   465,    -1,   467,   468,   469,   470,   471,   472,   473,
13238:      474,   475,    -1,    -1,   478,    -1,    -1,   481,   482,   483,
13239:      484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
13240:      494,   495,   496,   497,   498,   499,   500,   501,   502,    -1,
13241:       -1,    -1,    -1,    -1,    -1,   509,   510,   511,    -1,    -1,
13242:       -1,    -1,   516,    -1,   518,   519,    -1,    -1,    -1,   523,
13243:      524,   525,   526,     3,     4,     5,     6,     7,     8,     9,
13244:       10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
13245:       -1,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
13246:       -1,    31,    32,    33,    -1,    -1,    -1,    37,    -1,    39,
13247:       -1,    -1,    42,    43,    44,    -1,    46,    47,    48,    49,
13248:       50,    51,    52,    53,    54,    55,    56,    57,    -1,    59,
13249:       60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
13250:       70,    71,    72,    73,    -1,    75,    76,    77,    78,    79,
13251:       -1,    81,    -1,    83,    84,    85,    86,    87,    88,    89,
13252:       90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
13253:       -1,   101,   102,   103,   104,   105,   106,   107,   108,   109,
13254:      110,   111,   112,   113,   114,   115,   116,   117,   118,    -1,
13255:      120,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
13256:      130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
13257:      140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
13258:      150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
13259:      160,   161,    -1,   163,   164,   165,   166,    -1,   168,    -1,
13260:      170,   171,    -1,   173,   174,   175,   176,   177,   178,    -1,
13261:      180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
13262:      190,   191,   192,   193,   194,   195,   196,   197,   198,    -1,
13263:      200,   201,   202,   203,   204,   205,   206,    -1,   208,   209,
13264:      210,   211,   212,   213,   214,   215,   216,   217,    -1,   219,
13265:       -1,   221,   222,   223,   224,   225,   226,   227,   228,   229,
13266:      230,   231,    -1,    -1,   234,   235,   236,   237,    -1,   239,
13267:      240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
13268:      250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
13269:      260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
13270:      270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
13271:      280,   281,   282,   283,   284,   285,   286,    -1,   288,   289,
13272:       -1,    -1,   292,   293,   294,    -1,    -1,   297,   298,   299,
13273:      300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
13274:      310,   311,   312,   313,   314,    -1,    -1,    -1,    -1,   319,
13275:      320,   321,   322,   323,   324,   325,   326,   327,   328,    -1,
13276:      330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
13277:      340,   341,   342,   343,   344,   345,   346,    -1,   348,   349,
13278:      350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
13279:      360,    -1,   362,   363,   364,   365,   366,   367,   368,   369,
13280:      370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
13281:      380,   381,    -1,   383,   384,   385,   386,   387,   388,   389,
13282:      390,   391,   392,    -1,   394,   395,   396,   397,   398,    -1,
13283:      400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
13284:      410,   411,   412,   413,   414,    -1,    -1,   417,   418,    -1,
13285:      420,   421,   422,   423,   424,   425,   426,    -1,   428,   429,
13286:      430,    -1,    -1,   433,   434,   435,   436,   437,   438,   439,
13287:      440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
13288:      450,   451,    -1,   453,   454,   455,   456,    -1,   458,   459,
13289:      460,   461,   462,   463,   464,   465,    -1,   467,   468,   469,
13290:      470,   471,   472,   473,   474,   475,    -1,    -1,   478,    -1,
13291:       -1,   481,   482,   483,   484,   485,   486,   487,   488,   489,
13292:      490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
13293:      500,   501,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,
13294:      510,   511,    -1,    -1,    -1,    -1,   516,    -1,   518,    -1,
13295:       -1,    -1,    -1,   523,   524,   525,   526,     3,     4,     5,
13296:        6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
13297:       -1,    -1,    -1,    -1,    -1,    -1,    22,    23,    24,    25,
13298:       26,    27,    28,    29,    30,    31,    32,    33,    -1,    -1,
13299:       -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,
13300:       46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
13301:       56,    57,    -1,    59,    60,    61,    62,    63,    64,    65,
13302:       66,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
13303:       76,    77,    78,    79,    -1,    81,    -1,    83,    84,    85,
13304:       86,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
13305:       96,    97,    98,    99,    -1,   101,   102,   103,   104,   105,
13306:      106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
13307:      116,   117,   118,    -1,   120,   121,   122,   123,   124,   125,
13308:       -1,    -1,   128,   129,   130,   131,    -1,    -1,   134,   135,
13309:      136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
13310:      146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
13311:      156,   157,   158,   159,   160,   161,    -1,   163,   164,   165,
13312:      166,    -1,   168,    -1,   170,   171,    -1,   173,   174,   175,
13313:      176,   177,   178,    -1,   180,    -1,   182,   183,   184,   185,
13314:       -1,   187,   188,   189,   190,   191,   192,   193,   194,   195,
13315:      196,   197,   198,    -1,   200,   201,   202,   203,   204,   205,
13316:      206,    -1,   208,   209,   210,   211,   212,   213,   214,   215,
13317:      216,   217,    -1,   219,    -1,   221,   222,   223,   224,   225,
13318:      226,   227,   228,   229,   230,   231,    -1,    -1,   234,   235,
13319:      236,   237,    -1,   239,   240,   241,   242,   243,   244,   245,
13320:      246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
13321:      256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
13322:      266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
13323:      276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
13324:      286,    -1,   288,   289,    -1,    -1,   292,   293,   294,    -1,
13325:       -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
13326:      306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
13327:       -1,    -1,    -1,   319,   320,   321,   322,   323,   324,   325,
13328:      326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
13329:       -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
13330:      346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
13331:      356,   357,   358,   359,   360,    -1,   362,   363,   364,   365,
13332:      366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
13333:      376,   377,   378,   379,   380,   381,    -1,    -1,   384,   385,
13334:      386,   387,   388,   389,   390,   391,   392,    -1,   394,   395,
13335:      396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
13336:      406,   407,   408,   409,   410,   411,   412,   413,   414,    -1,
13337:       -1,   417,   418,    -1,   420,   421,   422,   423,   424,   425,
13338:      426,    -1,   428,   429,   430,    -1,    -1,   433,   434,   435,
13339:      436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
13340:      446,    -1,    -1,   449,   450,   451,    -1,   453,   454,   455,
13341:      456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
13342:       -1,   467,   468,   469,   470,   471,   472,   473,   474,   475,
13343:       -1,    -1,   478,    -1,    -1,   481,   482,   483,   484,   485,
13344:      486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
13345:      496,   497,   498,   499,   500,   501,   502,    -1,    -1,    -1,
13346:       -1,    -1,    -1,   509,   510,   511,    -1,    -1,    -1,    -1,
13347:      516,    -1,   518,    -1,    -1,    -1,    -1,   523,   524,   525,
13348:      526,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
13349:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
13350:       22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
13351:       32,    33,    -1,    -1,    -1,    -1,    -1,    39,    -1,    -1,
13352:       42,    43,    44,    -1,    46,    47,    48,    49,    50,    51,
13353:       52,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
13354:       62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
13355:       72,    73,    -1,    75,    76,    77,    78,    79,    -1,    81,
13356:       -1,    83,    84,    85,    86,    87,    88,    89,    90,    91,
13357:       92,    -1,    94,    95,    96,    97,    98,    99,    -1,   101,
13358:      102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
13359:      112,   113,   114,   115,   116,   117,   118,    -1,   120,   121,
13360:      122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
13361:       -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
13362:      142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
13363:      152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
13364:       -1,   163,   164,   165,   166,    -1,   168,    -1,   170,   171,
13365:       -1,   173,   174,   175,   176,   177,   178,    -1,   180,    -1,
13366:      182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
13367:      192,   193,   194,   195,   196,   197,   198,    -1,   200,   201,
13368:      202,   203,   204,   205,   206,    -1,   208,   209,   210,   211,
13369:      212,   213,   214,   215,   216,   217,    -1,   219,    -1,   221,
13370:      222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
13371:       -1,    -1,   234,   235,   236,   237,    -1,   239,   240,   241,
13372:      242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
13373:      252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
13374:      262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
13375:      272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
13376:      282,   283,   284,   285,   286,    -1,   288,   289,    -1,    -1,
13377:      292,   293,   294,    -1,    -1,   297,   298,   299,   300,   301,
13378:      302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
13379:      312,   313,   314,    -1,    -1,    -1,    -1,   319,   320,   321,
13380:      322,   323,   324,   325,   326,   327,   328,    -1,   330,   331,
13381:      332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
13382:      342,   343,   344,   345,   346,    -1,   348,   349,   350,   351,
13383:      352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
13384:      362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
13385:      372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
13386:       -1,    -1,   384,   385,   386,   387,   388,   389,   390,   391,
13387:      392,    -1,   394,   395,   396,   397,   398,    -1,   400,   401,
13388:      402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
13389:      412,   413,   414,    -1,    -1,   417,   418,    -1,   420,   421,
13390:      422,   423,   424,   425,   426,    -1,   428,   429,   430,    -1,
13391:       -1,   433,   434,   435,   436,   437,   438,   439,   440,   441,
13392:      442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
13393:       -1,   453,   454,   455,   456,    -1,   458,   459,   460,   461,
13394:      462,   463,   464,   465,    -1,   467,   468,   469,   470,   471,
13395:      472,   473,   474,   475,    -1,    -1,   478,    -1,    -1,   481,
13396:      482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
13397:      492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
13398:      502,    -1,    -1,    -1,    -1,    -1,    -1,   509,   510,   511,
13399:       -1,    -1,    -1,    -1,   516,    -1,   518,    -1,    -1,    -1,
13400:       -1,   523,   524,   525,   526,     3,     4,     5,     6,     7,
13401:        8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
13402:       -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,    27,
13403:       28,    29,    -1,    31,    32,    33,    -1,    -1,    -1,    -1,
13404:       -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,    47,
13405:       48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
13406:       -1,    59,    60,    61,    62,    63,    64,    65,    66,    67,
13407:       68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
13408:       78,    79,    -1,    81,    -1,    83,    84,    85,    86,    87,
13409:       88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
13410:       98,    99,    -1,   101,   102,   103,   104,   105,   106,   107,
13411:      108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
13412:      118,    -1,   120,   121,   122,   123,   124,   125,    -1,    -1,
13413:      128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
13414:      138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
13415:      148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
13416:      158,   159,   160,   161,    -1,   163,   164,   165,   166,    -1,
13417:      168,    -1,   170,   171,   172,   173,   174,   175,   176,   177,
13418:      178,    -1,   180,    -1,   182,   183,   184,   185,    -1,   187,
13419:      188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
13420:      198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
13421:      208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
13422:       -1,   219,    -1,   221,   222,   223,   224,   225,   226,   227,
13423:      228,   229,   230,   231,    -1,    -1,   234,   235,   236,   237,
13424:       -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
13425:      248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
13426:      258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
13427:      268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
13428:      278,   279,   280,   281,   282,   283,   284,   285,   286,    -1,
13429:      288,   289,    -1,    -1,   292,   293,   294,    -1,    -1,   297,
13430:      298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
13431:      308,   309,   310,   311,   312,   313,   314,    -1,    -1,    -1,
13432:       -1,   319,   320,   321,   322,   323,   324,   325,   326,   327,
13433:      328,    -1,   330,   331,   332,   333,   334,   335,    -1,   337,
13434:      338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
13435:      348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
13436:      358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
13437:      368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
13438:      378,   379,   380,   381,    -1,    -1,   384,   385,   386,   387,
13439:      388,   389,   390,   391,   392,    -1,   394,   395,   396,   397,
13440:      398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
13441:      408,   409,   410,   411,   412,   413,   414,    -1,    -1,   417,
13442:      418,    -1,   420,   421,   422,   423,   424,   425,   426,    -1,
13443:      428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
13444:      438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
13445:       -1,   449,   450,   451,    -1,   453,   454,   455,   456,    -1,
13446:      458,   459,   460,   461,   462,   463,   464,   465,    -1,   467,
13447:      468,   469,   470,   471,   472,   473,   474,   475,    -1,    -1,
13448:      478,    -1,    -1,   481,   482,   483,   484,   485,   486,   487,
13449:      488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
13450:      498,   499,   500,   501,   502,    -1,    -1,    -1,    -1,    -1,
13451:       -1,   509,   510,   511,    -1,    -1,    -1,    -1,   516,    -1,
13452:      518,    -1,    -1,    -1,    -1,   523,   524,   525,   526,     3,
13453:        4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
13454:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    22,    23,
13455:       24,    25,    26,    27,    28,    29,    -1,    31,    32,    33,
13456:       -1,    -1,    -1,    -1,    -1,    39,    -1,    -1,    42,    43,
13457:       44,    -1,    46,    47,    48,    49,    50,    51,    52,    53,
13458:       54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
13459:       64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
13460:       -1,    75,    76,    77,    78,    79,    -1,    81,    -1,    83,
13461:       84,    85,    86,    87,    88,    89,    90,    91,    92,    -1,
13462:       94,    95,    96,    97,    98,    99,    -1,   101,   102,   103,
13463:      104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
13464:      114,   115,   116,   117,   118,    -1,   120,   121,   122,   123,
13465:      124,   125,    -1,    -1,   128,   129,   130,   131,    -1,    -1,
13466:      134,   135,   136,   137,   138,    -1,   140,   141,   142,    -1,
13467:      144,   145,   146,    -1,   148,   149,   150,   151,   152,   153,
13468:      154,   155,   156,   157,   158,   159,   160,   161,    -1,   163,
13469:      164,   165,   166,    -1,   168,    -1,   170,   171,    -1,   173,
13470:      174,   175,   176,   177,   178,    -1,   180,    -1,   182,   183,
13471:      184,   185,    -1,   187,   188,   189,   190,   191,   192,   193,
13472:      194,   195,   196,   197,   198,    -1,   200,   201,   202,   203,
13473:      204,   205,   206,    -1,   208,   209,   210,   211,   212,   213,
13474:      214,   215,   216,   217,    -1,   219,    -1,   221,   222,   223,
13475:      224,   225,   226,   227,   228,   229,   230,   231,    -1,    -1,
13476:      234,   235,   236,   237,    -1,   239,   240,   241,   242,   243,
13477:      244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
13478:      254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
13479:      264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
13480:      274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
13481:      284,   285,   286,    -1,   288,   289,    -1,    -1,   292,   293,
13482:      294,    -1,    -1,   297,   298,   299,   300,   301,   302,   303,
13483:      304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
13484:      314,    -1,    -1,    -1,    -1,   319,   320,   321,   322,   323,
13485:      324,   325,   326,   327,   328,    -1,   330,   331,   332,   333,
13486:      334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
13487:      344,   345,   346,    -1,   348,   349,   350,   351,   352,   353,
13488:      354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
13489:      364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
13490:      374,   375,   376,   377,   378,   379,   380,   381,    -1,    -1,
13491:      384,   385,   386,   387,   388,   389,   390,   391,   392,    -1,
13492:      394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
13493:      404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
13494:      414,    -1,    -1,   417,   418,    -1,   420,   421,   422,   423,
13495:      424,   425,   426,    -1,   428,   429,   430,    -1,    -1,   433,
13496:      434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
13497:      444,   445,   446,    -1,    -1,   449,   450,   451,    -1,   453,
13498:      454,   455,   456,    -1,   458,   459,   460,   461,   462,   463,
13499:      464,   465,    -1,   467,   468,   469,   470,   471,   472,   473,
13500:      474,   475,    -1,    -1,   478,    -1,    -1,   481,   482,   483,
13501:      484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
13502:      494,   495,   496,   497,   498,   499,   500,   501,   502,    -1,
13503:       -1,    -1,    -1,    -1,    -1,   509,   510,   511,    -1,    -1,
13504:       -1,    -1,   516,    -1,   518,   519,    -1,    -1,    -1,   523,
13505:      524,   525,   526,     3,     4,     5,     6,     7,     8,     9,
13506:       10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
13507:       -1,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
13508:       -1,    31,    32,    33,    -1,    -1,    -1,    -1,    -1,    39,
13509:       -1,    -1,    42,    43,    44,    -1,    46,    47,    48,    49,
13510:       50,    51,    52,    53,    54,    55,    56,    57,    -1,    59,
13511:       60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
13512:       70,    71,    72,    73,    -1,    75,    76,    77,    78,    79,
13513:       -1,    81,    -1,    83,    84,    85,    86,    87,    88,    89,
13514:       90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
13515:       -1,   101,   102,   103,   104,   105,   106,   107,   108,   109,
13516:      110,   111,   112,   113,   114,   115,   116,   117,   118,    -1,
13517:      120,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
13518:      130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
13519:      140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
13520:      150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
13521:      160,   161,    -1,   163,   164,   165,   166,    -1,   168,    -1,
13522:      170,   171,    -1,   173,   174,   175,   176,   177,   178,    -1,
13523:      180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
13524:      190,   191,   192,   193,   194,   195,   196,   197,   198,    -1,
13525:      200,   201,   202,   203,   204,   205,   206,    -1,   208,   209,
13526:      210,   211,   212,   213,   214,   215,   216,   217,    -1,   219,
13527:       -1,   221,   222,   223,   224,   225,   226,   227,   228,   229,
13528:      230,   231,    -1,    -1,   234,   235,   236,   237,    -1,   239,
13529:      240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
13530:      250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
13531:      260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
13532:      270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
13533:      280,   281,   282,   283,   284,   285,   286,    -1,   288,   289,
13534:       -1,    -1,   292,   293,   294,    -1,    -1,   297,   298,   299,
13535:      300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
13536:      310,   311,   312,   313,   314,    -1,    -1,    -1,    -1,   319,
13537:      320,   321,   322,   323,   324,   325,   326,   327,   328,    -1,
13538:      330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
13539:      340,   341,   342,   343,   344,   345,   346,    -1,   348,   349,
13540:      350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
13541:      360,    -1,   362,   363,   364,   365,   366,   367,   368,   369,
13542:      370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
13543:      380,   381,    -1,    -1,   384,   385,   386,   387,   388,   389,
13544:      390,   391,   392,    -1,   394,   395,   396,   397,   398,    -1,
13545:      400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
13546:      410,   411,   412,   413,   414,    -1,    -1,   417,   418,   419,
13547:      420,   421,   422,   423,   424,   425,   426,    -1,   428,   429,
13548:      430,    -1,    -1,   433,   434,   435,   436,   437,   438,   439,
13549:      440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
13550:      450,   451,    -1,   453,   454,   455,   456,    -1,   458,   459,
13551:      460,   461,   462,   463,   464,   465,    -1,   467,   468,   469,
13552:      470,   471,   472,   473,   474,   475,    -1,    -1,   478,    -1,
13553:       -1,   481,   482,   483,   484,   485,   486,   487,   488,   489,
13554:      490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
13555:      500,   501,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,
13556:      510,   511,    -1,    -1,    -1,    -1,   516,    -1,   518,    -1,
13557:       -1,    -1,    -1,   523,   524,   525,   526,     3,     4,     5,
13558:        6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
13559:       -1,    -1,    -1,    -1,    -1,    -1,    22,    23,    24,    25,
13560:       26,    27,    28,    29,    -1,    31,    32,    33,    -1,    -1,
13561:       -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,
13562:       46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
13563:       56,    57,    -1,    59,    60,    61,    62,    63,    64,    65,
13564:       66,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
13565:       76,    77,    78,    79,    -1,    81,    -1,    83,    84,    85,
13566:       86,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
13567:       96,    97,    98,    99,    -1,   101,   102,   103,   104,   105,
13568:      106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
13569:      116,   117,   118,    -1,   120,   121,   122,   123,   124,   125,
13570:       -1,    -1,   128,   129,   130,   131,    -1,    -1,   134,   135,
13571:      136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
13572:      146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
13573:      156,   157,   158,   159,   160,   161,    -1,   163,   164,   165,
13574:      166,    -1,   168,    -1,   170,   171,    -1,   173,   174,   175,
13575:      176,   177,   178,    -1,   180,    -1,   182,   183,   184,   185,
13576:       -1,   187,   188,   189,   190,   191,   192,   193,   194,   195,
13577:      196,   197,   198,    -1,   200,   201,   202,   203,   204,   205,
13578:      206,    -1,   208,   209,   210,   211,   212,   213,   214,   215,
13579:      216,   217,    -1,   219,    -1,   221,   222,   223,   224,   225,
13580:      226,   227,   228,   229,   230,   231,    -1,    -1,   234,   235,
13581:      236,   237,    -1,   239,   240,   241,   242,   243,   244,   245,
13582:      246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
13583:      256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
13584:      266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
13585:      276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
13586:      286,    -1,   288,   289,    -1,    -1,   292,   293,   294,    -1,
13587:       -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
13588:      306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
13589:       -1,    -1,    -1,   319,   320,   321,   322,   323,   324,   325,
13590:      326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
13591:       -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
13592:      346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
13593:      356,   357,   358,   359,   360,    -1,   362,   363,   364,   365,
13594:      366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
13595:      376,   377,   378,   379,   380,   381,    -1,    -1,   384,   385,
13596:      386,   387,   388,   389,   390,   391,   392,    -1,   394,   395,
13597:      396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
13598:      406,   407,   408,   409,   410,   411,   412,   413,   414,    -1,
13599:       -1,   417,   418,    -1,   420,   421,   422,   423,   424,   425,
13600:      426,    -1,   428,   429,   430,    -1,    -1,   433,   434,   435,
13601:      436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
13602:      446,    -1,    -1,   449,   450,   451,    -1,   453,   454,   455,
13603:      456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
13604:       -1,   467,   468,   469,   470,   471,   472,   473,   474,   475,
13605:       -1,   477,   478,    -1,    -1,   481,   482,   483,   484,   485,
13606:      486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
13607:      496,   497,   498,   499,   500,   501,   502,    -1,    -1,    -1,
13608:       -1,    -1,    -1,   509,   510,   511,    -1,    -1,    -1,    -1,
13609:      516,    -1,   518,    -1,    -1,    -1,    -1,   523,   524,   525,
13610:      526,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
13611:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
13612:       22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
13613:       32,    33,    -1,    -1,    -1,    -1,    -1,    39,    -1,    -1,
13614:       42,    43,    44,    -1,    46,    47,    48,    49,    50,    51,
13615:       52,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
13616:       62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
13617:       72,    73,    -1,    75,    76,    77,    78,    79,    -1,    81,
13618:       -1,    83,    84,    85,    86,    87,    88,    89,    90,    91,
13619:       92,    -1,    94,    95,    96,    97,    98,    99,    -1,   101,
13620:      102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
13621:      112,   113,   114,   115,   116,   117,   118,    -1,   120,   121,
13622:      122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
13623:       -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
13624:      142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
13625:      152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
13626:       -1,   163,   164,   165,   166,    -1,   168,    -1,   170,   171,
13627:       -1,   173,   174,   175,   176,   177,   178,    -1,   180,    -1,
13628:      182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
13629:      192,   193,   194,   195,   196,   197,   198,    -1,   200,   201,
13630:      202,   203,   204,   205,   206,    -1,   208,   209,   210,   211,
13631:      212,   213,   214,   215,   216,   217,    -1,   219,    -1,   221,
13632:      222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
13633:       -1,    -1,   234,   235,   236,   237,    -1,   239,   240,   241,
13634:      242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
13635:      252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
13636:      262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
13637:      272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
13638:      282,   283,   284,   285,   286,    -1,   288,   289,    -1,    -1,
13639:      292,   293,   294,    -1,    -1,   297,   298,   299,   300,   301,
13640:      302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
13641:      312,   313,   314,    -1,    -1,    -1,    -1,   319,   320,   321,
13642:      322,   323,   324,   325,   326,   327,   328,    -1,   330,   331,
13643:      332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
13644:      342,   343,   344,   345,   346,    -1,   348,   349,   350,   351,
13645:      352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
13646:      362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
13647:      372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
13648:       -1,    -1,   384,   385,   386,   387,   388,   389,   390,   391,
13649:      392,    -1,   394,   395,   396,   397,   398,    -1,   400,   401,
13650:      402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
13651:      412,   413,   414,    -1,    -1,   417,   418,    -1,   420,   421,
13652:      422,   423,   424,   425,   426,    -1,   428,   429,   430,    -1,
13653:       -1,   433,   434,   435,   436,   437,   438,   439,   440,   441,
13654:      442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
13655:       -1,   453,   454,   455,   456,    -1,   458,   459,   460,   461,
13656:      462,   463,   464,   465,    -1,   467,   468,   469,   470,   471,
13657:      472,   473,   474,   475,    -1,    -1,   478,    -1,    -1,   481,
13658:      482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
13659:      492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
13660:      502,    -1,    -1,    -1,    -1,    -1,    -1,   509,   510,   511,
13661:       -1,    -1,    -1,    -1,   516,    -1,   518,    -1,    -1,    -1,
13662:       -1,   523,   524,   525,   526,     3,     4,     5,     6,     7,
13663:        8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
13664:       -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,    27,
13665:       28,    29,    -1,    31,    32,    33,    -1,    -1,    -1,    -1,
13666:       -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,    47,
13667:       48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
13668:       -1,    59,    60,    61,    62,    63,    64,    65,    66,    67,
13669:       68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
13670:       78,    79,    -1,    81,    -1,    83,    84,    85,    86,    87,
13671:       88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
13672:       98,    99,    -1,   101,   102,   103,   104,   105,   106,   107,
13673:      108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
13674:      118,    -1,   120,   121,   122,   123,   124,   125,    -1,    -1,
13675:      128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
13676:      138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
13677:      148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
13678:      158,   159,   160,   161,    -1,   163,   164,   165,   166,    -1,
13679:      168,    -1,   170,   171,    -1,   173,   174,   175,   176,   177,
13680:      178,    -1,   180,    -1,   182,   183,   184,   185,    -1,   187,
13681:      188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
13682:      198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
13683:      208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
13684:       -1,   219,    -1,   221,   222,   223,   224,   225,   226,   227,
13685:      228,   229,   230,   231,    -1,    -1,   234,   235,   236,   237,
13686:       -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
13687:      248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
13688:      258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
13689:      268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
13690:      278,   279,   280,   281,   282,   283,   284,   285,   286,    -1,
13691:      288,   289,    -1,    -1,   292,   293,   294,    -1,    -1,   297,
13692:      298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
13693:      308,   309,   310,   311,   312,   313,   314,    -1,    -1,    -1,
13694:       -1,   319,   320,   321,   322,   323,   324,   325,   326,   327,
13695:      328,    -1,   330,   331,   332,   333,   334,   335,    -1,   337,
13696:      338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
13697:      348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
13698:      358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
13699:      368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
13700:      378,   379,   380,   381,    -1,    -1,   384,   385,   386,   387,
13701:      388,   389,   390,   391,   392,    -1,   394,   395,   396,   397,
13702:      398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
13703:      408,   409,   410,   411,   412,   413,   414,    -1,    -1,   417,
13704:      418,    -1,   420,   421,   422,   423,   424,   425,   426,    -1,
13705:      428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
13706:      438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
13707:       -1,   449,   450,   451,    -1,   453,   454,   455,   456,    -1,
13708:      458,   459,   460,   461,   462,   463,   464,   465,    -1,   467,
13709:      468,   469,   470,   471,   472,   473,   474,   475,    -1,    -1,
13710:      478,    -1,    -1,   481,   482,   483,   484,   485,   486,   487,
13711:      488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
13712:      498,   499,   500,   501,   502,    -1,    -1,    -1,    -1,    -1,
13713:       -1,   509,   510,   511,    -1,    -1,    -1,    -1,   516,    -1,
13714:      518,    -1,    -1,    -1,    -1,   523,   524,   525,   526,     3,
13715:        4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
13716:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    22,    23,
13717:       24,    25,    26,    27,    28,    29,    -1,    31,    32,    33,
13718:       -1,    -1,    -1,    -1,    -1,    39,    -1,    -1,    42,    43,
13719:       44,    -1,    46,    47,    48,    49,    50,    51,    52,    53,
13720:       54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
13721:       64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
13722:       -1,    75,    76,    77,    78,    79,    -1,    81,    -1,    83,
13723:       84,    85,    86,    87,    88,    89,    90,    91,    92,    -1,
13724:       94,    95,    96,    97,    98,    99,    -1,   101,   102,   103,
13725:      104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
13726:      114,   115,   116,   117,   118,    -1,   120,   121,   122,   123,
13727:      124,   125,    -1,    -1,   128,   129,   130,   131,    -1,    -1,
13728:      134,   135,   136,   137,   138,    -1,   140,   141,   142,    -1,
13729:      144,   145,   146,    -1,   148,   149,   150,   151,   152,   153,
13730:      154,   155,   156,   157,   158,   159,   160,   161,    -1,   163,
13731:      164,   165,   166,    -1,   168,    -1,   170,   171,    -1,   173,
13732:      174,   175,   176,   177,   178,    -1,   180,    -1,   182,   183,
13733:      184,   185,    -1,   187,   188,   189,   190,   191,   192,   193,
13734:      194,   195,   196,   197,   198,    -1,   200,   201,   202,   203,
13735:      204,   205,   206,    -1,   208,   209,   210,   211,   212,   213,
13736:      214,   215,   216,   217,    -1,   219,    -1,   221,   222,   223,
13737:      224,   225,   226,   227,   228,   229,   230,   231,    -1,    -1,
13738:      234,   235,   236,   237,    -1,   239,   240,   241,   242,   243,
13739:      244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
13740:      254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
13741:      264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
13742:      274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
13743:      284,   285,   286,    -1,   288,   289,    -1,    -1,   292,   293,
13744:      294,    -1,    -1,   297,   298,   299,   300,   301,   302,   303,
13745:      304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
13746:      314,    -1,    -1,    -1,    -1,   319,   320,   321,   322,   323,
13747:      324,   325,   326,   327,   328,    -1,   330,   331,   332,   333,
13748:      334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
13749:      344,   345,   346,    -1,   348,   349,   350,   351,   352,   353,
13750:      354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
13751:      364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
13752:      374,   375,   376,   377,   378,   379,   380,   381,    -1,    -1,
13753:      384,   385,   386,   387,   388,   389,   390,   391,   392,    -1,
13754:      394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
13755:      404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
13756:      414,    -1,    -1,   417,   418,    -1,   420,   421,   422,   423,
13757:      424,   425,   426,    -1,   428,   429,   430,    -1,    -1,   433,
13758:      434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
13759:      444,   445,   446,    -1,    -1,   449,   450,   451,    -1,   453,
13760:      454,   455,   456,    -1,   458,   459,   460,   461,   462,   463,
13761:      464,   465,    -1,   467,   468,   469,   470,   471,   472,   473,
13762:      474,   475,    -1,    -1,   478,    -1,    -1,   481,   482,   483,
13763:      484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
13764:      494,   495,   496,   497,   498,   499,   500,   501,   502,    -1,
13765:       -1,    -1,    -1,    -1,    -1,   509,   510,   511,    -1,    -1,
13766:       -1,    -1,   516,    -1,   518,    -1,    -1,    -1,    -1,   523,
13767:      524,   525,   526,     3,     4,     5,     6,     7,     8,     9,
13768:       10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
13769:       -1,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
13770:       -1,    31,    32,    33,    -1,    -1,    -1,    -1,    -1,    39,
13771:       -1,    -1,    42,    43,    44,    -1,    46,    47,    48,    49,
13772:       50,    51,    52,    53,    54,    55,    56,    57,    -1,    59,
13773:       60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
13774:       70,    71,    72,    73,    -1,    75,    76,    77,    78,    79,
13775:       -1,    81,    -1,    83,    84,    85,    86,    87,    88,    89,
13776:       90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
13777:       -1,   101,   102,   103,   104,   105,   106,   107,   108,   109,
13778:      110,   111,   112,   113,   114,   115,   116,   117,   118,    -1,
13779:      120,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
13780:      130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
13781:      140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
13782:      150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
13783:      160,   161,    -1,   163,   164,   165,   166,    -1,   168,    -1,
13784:      170,   171,    -1,   173,   174,   175,   176,   177,   178,    -1,
13785:      180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
13786:      190,   191,   192,   193,   194,   195,   196,   197,   198,    -1,
13787:      200,   201,   202,   203,   204,   205,   206,    -1,   208,   209,
13788:      210,   211,   212,   213,   214,   215,   216,   217,    -1,   219,
13789:       -1,   221,   222,   223,   224,   225,   226,   227,   228,   229,
13790:      230,   231,    -1,    -1,   234,   235,   236,   237,    -1,   239,
13791:      240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
13792:      250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
13793:      260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
13794:      270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
13795:      280,   281,   282,   283,   284,   285,   286,    -1,   288,   289,
13796:       -1,    -1,   292,   293,   294,    -1,    -1,   297,   298,   299,
13797:      300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
13798:      310,   311,   312,   313,   314,    -1,    -1,    -1,    -1,   319,
13799:      320,   321,   322,   323,   324,   325,   326,   327,   328,    -1,
13800:      330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
13801:      340,   341,   342,   343,   344,   345,   346,    -1,   348,   349,
13802:      350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
13803:      360,    -1,   362,   363,   364,   365,   366,   367,   368,   369,
13804:      370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
13805:      380,   381,    -1,    -1,   384,   385,   386,   387,   388,   389,
13806:      390,   391,   392,    -1,   394,   395,   396,   397,   398,    -1,
13807:      400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
13808:      410,   411,   412,   413,   414,    -1,    -1,   417,   418,    -1,
13809:      420,   421,   422,   423,   424,   425,   426,    -1,   428,   429,
13810:      430,    -1,    -1,   433,   434,   435,   436,   437,   438,   439,
13811:      440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
13812:      450,   451,    -1,   453,   454,   455,   456,    -1,   458,   459,
13813:      460,   461,   462,   463,   464,   465,    -1,   467,   468,   469,
13814:      470,   471,   472,   473,   474,   475,    -1,    -1,   478,    -1,
13815:       -1,   481,   482,   483,   484,   485,   486,   487,   488,   489,
13816:      490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
13817:      500,   501,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,
13818:      510,   511,    -1,    -1,    -1,    -1,   516,    -1,   518,    -1,
13819:       -1,    -1,    -1,   523,   524,   525,   526,     3,     4,     5,
13820:        6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
13821:       -1,    -1,    -1,    -1,    -1,    -1,    22,    23,    24,    25,
13822:       26,    27,    28,    29,    -1,    31,    32,    33,    -1,    -1,
13823:       -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,
13824:       46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
13825:       56,    57,    -1,    59,    60,    61,    62,    63,    64,    65,
13826:       66,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
13827:       76,    77,    78,    79,    -1,    81,    -1,    83,    84,    85,
13828:       86,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
13829:       96,    97,    98,    99,    -1,   101,   102,   103,   104,   105,
13830:      106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
13831:      116,   117,   118,    -1,   120,   121,   122,   123,   124,   125,
13832:       -1,    -1,   128,   129,   130,   131,    -1,    -1,   134,   135,
13833:      136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
13834:      146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
13835:      156,   157,   158,   159,   160,   161,    -1,   163,   164,   165,
13836:      166,    -1,   168,    -1,   170,   171,    -1,   173,   174,   175,
13837:      176,   177,   178,    -1,   180,    -1,   182,   183,   184,   185,
13838:       -1,   187,   188,   189,   190,   191,   192,   193,   194,   195,
13839:      196,   197,   198,    -1,   200,   201,   202,   203,   204,   205,
13840:      206,    -1,   208,   209,   210,   211,   212,   213,   214,   215,
13841:      216,   217,    -1,   219,    -1,   221,   222,   223,   224,   225,
13842:      226,   227,   228,   229,   230,   231,    -1,    -1,   234,   235,
13843:      236,   237,    -1,   239,   240,   241,   242,   243,   244,   245,
13844:      246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
13845:      256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
13846:      266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
13847:      276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
13848:      286,    -1,   288,   289,    -1,    -1,   292,   293,   294,    -1,
13849:       -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
13850:      306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
13851:       -1,    -1,    -1,   319,   320,   321,   322,   323,   324,   325,
13852:      326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
13853:       -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
13854:      346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
13855:      356,   357,   358,   359,   360,    -1,   362,   363,   364,   365,
13856:      366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
13857:      376,   377,   378,   379,   380,   381,    -1,    -1,   384,   385,
13858:      386,   387,   388,   389,   390,   391,   392,    -1,   394,   395,
13859:      396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
13860:      406,   407,   408,   409,   410,   411,   412,   413,   414,    -1,
13861:       -1,   417,   418,    -1,   420,   421,   422,   423,   424,   425,
13862:      426,    -1,   428,   429,   430,    -1,    -1,   433,   434,   435,
13863:      436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
13864:      446,    -1,    -1,   449,   450,   451,    -1,   453,   454,   455,
13865:      456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
13866:       -1,   467,   468,   469,   470,   471,   472,   473,   474,   475,
13867:       -1,    -1,   478,    -1,    -1,   481,   482,   483,   484,   485,
13868:      486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
13869:      496,   497,   498,   499,   500,   501,   502,    -1,    -1,    -1,
13870:       -1,    -1,    -1,   509,   510,   511,    -1,    -1,    -1,    -1,
13871:      516,    -1,   518,    -1,    -1,    -1,    -1,   523,   524,   525,
13872:      526,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
13873:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
13874:       22,    23,    24,    25,    26,    27,    28,    29,    -1,    31,
13875:       32,    33,    -1,    -1,    -1,    -1,    -1,    39,    -1,    -1,
13876:       42,    43,    44,    -1,    46,    47,    48,    49,    50,    51,
13877:       52,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
13878:       62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
13879:       72,    73,    -1,    75,    76,    77,    78,    79,    -1,    81,
13880:       -1,    83,    84,    85,    86,    87,    88,    89,    90,    91,
13881:       92,    -1,    94,    95,    96,    97,    98,    99,    -1,   101,
13882:      102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
13883:      112,   113,   114,   115,   116,   117,   118,    -1,   120,   121,
13884:      122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
13885:       -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
13886:      142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
13887:      152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
13888:       -1,   163,   164,   165,   166,    -1,   168,    -1,   170,   171,
13889:       -1,   173,   174,   175,   176,   177,   178,    -1,   180,    -1,
13890:      182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
13891:      192,   193,   194,   195,   196,   197,   198,    -1,   200,   201,
13892:      202,   203,   204,   205,   206,    -1,   208,   209,   210,   211,
13893:      212,   213,   214,   215,   216,   217,    -1,   219,    -1,   221,
13894:      222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
13895:       -1,    -1,   234,   235,   236,   237,    -1,   239,   240,   241,
13896:      242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
13897:      252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
13898:      262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
13899:      272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
13900:      282,   283,   284,   285,   286,    -1,   288,   289,    -1,    -1,
13901:      292,   293,   294,    -1,    -1,   297,   298,   299,   300,   301,
13902:      302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
13903:      312,   313,   314,    -1,    -1,    -1,    -1,   319,   320,   321,
13904:      322,   323,   324,   325,   326,   327,   328,    -1,   330,   331,
13905:      332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
13906:      342,   343,   344,   345,   346,    -1,   348,   349,   350,   351,
13907:      352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
13908:      362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
13909:      372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
13910:       -1,    -1,   384,   385,   386,   387,   388,   389,   390,   391,
13911:      392,    -1,   394,   395,   396,   397,   398,    -1,   400,   401,
13912:      402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
13913:      412,   413,   414,    -1,    -1,   417,   418,    -1,   420,   421,
13914:      422,   423,   424,   425,   426,    -1,   428,   429,   430,    -1,
13915:       -1,   433,   434,   435,   436,   437,   438,   439,   440,   441,
13916:      442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
13917:       -1,   453,   454,   455,   456,    -1,   458,   459,   460,   461,
13918:      462,   463,   464,   465,    -1,   467,   468,   469,   470,   471,
13919:      472,   473,   474,   475,    -1,    -1,   478,    -1,    -1,   481,
13920:      482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
13921:      492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
13922:      502,    -1,    -1,    -1,    -1,    -1,    -1,   509,   510,   511,
13923:       -1,    -1,    -1,    -1,   516,    -1,   518,    -1,    -1,    -1,
13924:       -1,   523,   524,   525,   526,     3,     4,     5,     6,     7,
13925:        8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
13926:       -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,    27,
13927:       28,    29,    -1,    31,    32,    33,    -1,    -1,    -1,    -1,
13928:       -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,    47,
13929:       48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
13930:       -1,    59,    60,    61,    62,    63,    64,    65,    66,    67,
13931:       68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
13932:       78,    79,    -1,    81,    -1,    83,    84,    85,    86,    87,
13933:       88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
13934:       98,    99,    -1,   101,   102,   103,   104,   105,   106,   107,
13935:      108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
13936:      118,    -1,   120,   121,   122,   123,   124,   125,    -1,    -1,
13937:      128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
13938:      138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
13939:      148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
13940:      158,   159,   160,   161,    -1,   163,   164,   165,   166,    -1,
13941:      168,    -1,   170,   171,    -1,   173,   174,   175,   176,   177,
13942:      178,    -1,   180,    -1,   182,   183,   184,   185,    -1,   187,
13943:      188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
13944:      198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
13945:      208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
13946:       -1,   219,    -1,   221,   222,   223,   224,   225,   226,   227,
13947:      228,   229,   230,   231,    -1,    -1,   234,   235,   236,   237,
13948:       -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
13949:      248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
13950:      258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
13951:      268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
13952:      278,   279,   280,   281,   282,   283,   284,   285,   286,    -1,
13953:      288,   289,    -1,    -1,   292,   293,   294,    -1,    -1,   297,
13954:      298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
13955:      308,   309,   310,   311,   312,   313,   314,    -1,    -1,    -1,
13956:       -1,   319,   320,   321,   322,   323,   324,   325,   326,   327,
13957:      328,    -1,   330,   331,   332,   333,   334,   335,    -1,   337,
13958:      338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
13959:      348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
13960:      358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
13961:      368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
13962:      378,   379,   380,   381,    -1,    -1,   384,   385,   386,   387,
13963:      388,   389,   390,   391,   392,    -1,   394,   395,   396,   397,
13964:      398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
13965:      408,   409,   410,   411,   412,   413,   414,    -1,    -1,   417,
13966:      418,    -1,   420,   421,   422,   423,   424,   425,   426,    -1,
13967:      428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
13968:      438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
13969:       -1,   449,   450,   451,    -1,   453,   454,   455,   456,    -1,
13970:      458,   459,   460,   461,   462,   463,   464,   465,    -1,   467,
13971:      468,   469,   470,   471,   472,   473,   474,   475,    -1,    -1,
13972:      478,    -1,    -1,   481,   482,   483,   484,   485,   486,   487,
13973:      488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
13974:      498,   499,   500,   501,   502,    -1,    -1,    -1,    -1,    -1,
13975:       -1,   509,   510,   511,    -1,    -1,    -1,    -1,   516,    -1,
13976:      518,    -1,    -1,    -1,    -1,   523,   524,   525,   526,     3,
13977:        4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
13978:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    22,    23,
13979:       24,    25,    26,    27,    28,    29,    -1,    31,    32,    33,
13980:       -1,    -1,    -1,    -1,    -1,    39,    -1,    -1,    42,    43,
13981:       44,    -1,    46,    47,    48,    49,    50,    51,    52,    53,
13982:       54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
13983:       64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
13984:       -1,    75,    76,    77,    78,    79,    -1,    81,    -1,    83,
13985:       84,    85,    86,    87,    88,    89,    90,    91,    92,    -1,
13986:       94,    95,    96,    97,    98,    99,    -1,   101,   102,   103,
13987:      104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
13988:      114,   115,   116,   117,   118,    -1,   120,   121,   122,   123,
13989:      124,   125,    -1,    -1,   128,   129,   130,   131,    -1,    -1,
13990:      134,   135,   136,   137,   138,    -1,   140,   141,   142,    -1,
13991:      144,   145,   146,    -1,   148,   149,   150,   151,   152,   153,
13992:      154,   155,   156,   157,   158,   159,   160,   161,    -1,   163,
13993:      164,   165,   166,    -1,   168,    -1,   170,   171,    -1,   173,
13994:      174,   175,   176,   177,   178,    -1,   180,    -1,   182,   183,
13995:      184,   185,    -1,   187,   188,   189,   190,   191,   192,   193,
13996:      194,   195,   196,   197,   198,    -1,   200,   201,   202,   203,
13997:      204,   205,   206,    -1,   208,   209,   210,   211,   212,   213,
13998:      214,   215,   216,   217,    -1,   219,    -1,   221,   222,   223,
13999:      224,   225,   226,   227,   228,   229,   230,   231,    -1,    -1,
14000:      234,   235,   236,   237,    -1,   239,   240,   241,   242,   243,
14001:      244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
14002:      254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
14003:      264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
14004:      274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
14005:      284,   285,   286,    -1,   288,   289,    -1,    -1,   292,   293,
14006:      294,    -1,    -1,   297,   298,   299,   300,   301,   302,   303,
14007:      304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
14008:      314,    -1,    -1,    -1,    -1,   319,   320,   321,   322,   323,
14009:      324,   325,   326,   327,   328,    -1,   330,   331,   332,   333,
14010:      334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
14011:      344,   345,   346,    -1,   348,   349,   350,   351,   352,   353,
14012:      354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
14013:      364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
14014:      374,   375,   376,   377,   378,   379,   380,   381,    -1,    -1,
14015:      384,   385,   386,   387,   388,   389,   390,   391,   392,    -1,
14016:      394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
14017:      404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
14018:      414,    -1,    -1,   417,   418,    -1,   420,   421,   422,   423,
14019:      424,   425,   426,    -1,   428,   429,   430,    -1,    -1,   433,
14020:      434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
14021:      444,   445,   446,    -1,    -1,   449,   450,   451,    -1,   453,
14022:      454,   455,   456,    -1,   458,   459,   460,   461,   462,   463,
14023:      464,   465,    -1,   467,   468,   469,   470,   471,   472,   473,
14024:      474,   475,    -1,    -1,   478,    -1,    -1,   481,   482,   483,
14025:      484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
14026:      494,   495,   496,   497,   498,   499,   500,   501,   502,    -1,
14027:       -1,    -1,    -1,    -1,    -1,   509,   510,   511,    -1,    -1,
14028:       -1,    -1,   516,    -1,   518,    -1,    -1,    -1,    -1,   523,
14029:      524,   525,   526,     3,     4,     5,     6,     7,     8,     9,
14030:       10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
14031:       -1,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
14032:       -1,    31,    32,    33,    -1,    -1,    -1,    -1,    -1,    39,
14033:       -1,    -1,    42,    43,    44,    -1,    46,    47,    48,    49,
14034:       50,    51,    52,    53,    54,    55,    56,    57,    -1,    59,
14035:       60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
14036:       70,    71,    72,    73,    -1,    75,    76,    77,    78,    79,
14037:       -1,    81,    -1,    83,    84,    85,    86,    87,    88,    89,
14038:       90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
14039:       -1,   101,   102,   103,   104,   105,   106,   107,   108,   109,
14040:      110,   111,   112,   113,   114,   115,   116,   117,   118,    -1,
14041:      120,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
14042:      130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
14043:      140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
14044:      150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
14045:      160,   161,    -1,   163,   164,   165,   166,    -1,   168,    -1,
14046:      170,   171,    -1,   173,   174,   175,   176,   177,   178,    -1,
14047:      180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
14048:      190,   191,   192,   193,   194,   195,   196,   197,   198,    -1,
14049:      200,   201,   202,   203,   204,   205,   206,    -1,   208,   209,
14050:      210,   211,   212,   213,   214,   215,   216,   217,    -1,   219,
14051:       -1,   221,   222,   223,   224,   225,   226,   227,   228,   229,
14052:      230,   231,    -1,    -1,   234,   235,   236,   237,    -1,   239,
14053:      240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
14054:      250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
14055:      260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
14056:      270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
14057:      280,   281,   282,   283,   284,   285,   286,    -1,   288,   289,
14058:       -1,    -1,   292,   293,   294,    -1,    -1,   297,   298,   299,
14059:      300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
14060:      310,   311,   312,   313,   314,    -1,    -1,    -1,    -1,   319,
14061:      320,   321,   322,   323,   324,   325,   326,   327,   328,    -1,
14062:      330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
14063:      340,   341,   342,   343,   344,   345,   346,    -1,   348,   349,
14064:      350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
14065:      360,    -1,   362,   363,   364,   365,   366,   367,   368,   369,
14066:      370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
14067:      380,   381,    -1,    -1,   384,   385,   386,   387,   388,   389,
14068:      390,   391,   392,    -1,   394,   395,   396,   397,   398,    -1,
14069:      400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
14070:      410,   411,   412,   413,   414,    -1,    -1,   417,   418,    -1,
14071:      420,   421,   422,   423,   424,   425,   426,    -1,   428,   429,
14072:      430,    -1,    -1,   433,   434,   435,   436,   437,   438,   439,
14073:      440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
14074:      450,   451,    -1,   453,   454,   455,   456,    -1,   458,   459,
14075:      460,   461,   462,   463,   464,   465,    -1,   467,   468,   469,
14076:      470,   471,   472,   473,   474,   475,    -1,    -1,   478,    -1,
14077:       -1,   481,   482,   483,   484,   485,   486,   487,   488,   489,
14078:      490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
14079:      500,   501,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,
14080:      510,   511,    -1,    -1,    -1,    -1,   516,    -1,   518,    -1,
14081:       -1,    -1,    -1,   523,   524,   525,   526,     3,     4,     5,
14082:        6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
14083:       -1,    -1,    -1,    -1,    -1,    -1,    22,    23,    24,    25,
14084:       26,    27,    28,    29,    -1,    31,    32,    33,    -1,    -1,
14085:       -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,
14086:       46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
14087:       56,    57,    -1,    59,    60,    61,    62,    63,    64,    65,
14088:       66,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
14089:       76,    77,    78,    79,    -1,    81,    -1,    83,    84,    85,
14090:       86,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
14091:       96,    97,    98,    99,    -1,   101,   102,   103,   104,   105,
14092:      106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
14093:      116,   117,   118,    -1,   120,   121,   122,   123,   124,   125,
14094:       -1,    -1,   128,   129,   130,   131,    -1,    -1,   134,   135,
14095:      136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
14096:      146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
14097:      156,   157,   158,   159,   160,   161,    -1,   163,   164,   165,
14098:      166,    -1,   168,    -1,   170,   171,    -1,   173,   174,   175,
14099:      176,   177,   178,    -1,   180,    -1,   182,   183,   184,   185,
14100:       -1,   187,   188,   189,   190,   191,   192,   193,   194,   195,
14101:      196,   197,   198,    -1,   200,   201,   202,   203,   204,   205,
14102:      206,    -1,   208,   209,   210,   211,   212,   213,   214,   215,
14103:      216,   217,    -1,   219,    -1,   221,   222,   223,   224,   225,
14104:      226,   227,   228,   229,   230,   231,    -1,    -1,   234,   235,
14105:      236,   237,    -1,   239,   240,   241,   242,   243,   244,   245,
14106:      246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
14107:      256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
14108:      266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
14109:      276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
14110:      286,    -1,   288,   289,    -1,    -1,   292,   293,   294,    -1,
14111:       -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
14112:      306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
14113:       -1,    -1,    -1,   319,   320,   321,   322,   323,   324,   325,
14114:      326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
14115:       -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
14116:      346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
14117:      356,   357,   358,   359,   360,    -1,   362,   363,   364,   365,
14118:      366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
14119:      376,   377,   378,   379,   380,   381,    -1,    -1,   384,   385,
14120:      386,   387,   388,   389,   390,   391,   392,    -1,   394,   395,
14121:      396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
14122:      406,   407,   408,   409,   410,   411,   412,   413,   414,    -1,
14123:       -1,   417,   418,    -1,   420,   421,   422,   423,   424,   425,
14124:      426,    -1,   428,   429,   430,    -1,    -1,   433,   434,   435,
14125:      436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
14126:      446,    -1,    -1,   449,   450,   451,    -1,   453,   454,   455,
14127:      456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
14128:       -1,   467,   468,   469,   470,   471,   472,   473,   474,   475,
14129:       -1,    -1,   478,    -1,    -1,   481,   482,   483,   484,   485,
14130:      486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
14131:      496,   497,   498,   499,   500,   501,   502,    -1,    -1,    -1,
14132:       -1,    -1,    -1,   509,   510,   511,    -1,    -1,    -1,    -1,
14133:      516,    -1,   518,    -1,    -1,    -1,    -1,   523,   524,   525,
14134:      526,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
14135:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
14136:       22,    23,    24,    25,    26,    27,    28,    29,    -1,    31,
14137:       32,    33,    -1,    -1,    -1,    -1,    -1,    39,    -1,    -1,
14138:       42,    43,    44,    -1,    46,    47,    48,    49,    50,    51,
14139:       52,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
14140:       62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
14141:       72,    73,    -1,    75,    76,    77,    78,    79,    -1,    81,
14142:       -1,    83,    84,    85,    86,    87,    88,    89,    90,    91,
14143:       92,    -1,    94,    95,    96,    97,    98,    99,    -1,   101,
14144:      102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
14145:      112,   113,   114,   115,   116,    -1,   118,    -1,   120,   121,
14146:      122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
14147:       -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
14148:      142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
14149:      152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
14150:       -1,   163,   164,   165,   166,    -1,   168,    -1,   170,   171,
14151:       -1,   173,   174,   175,   176,   177,   178,    -1,   180,    -1,
14152:      182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
14153:      192,   193,   194,   195,   196,   197,   198,    -1,   200,   201,
14154:      202,   203,   204,   205,   206,    -1,   208,   209,   210,   211,
14155:      212,   213,   214,   215,   216,   217,    -1,   219,    -1,   221,
14156:      222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
14157:       -1,    -1,   234,   235,   236,   237,    -1,   239,   240,   241,
14158:      242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
14159:      252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
14160:      262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
14161:      272,   273,   274,    -1,   276,   277,   278,   279,   280,   281,
14162:      282,   283,   284,   285,   286,    -1,   288,   289,    -1,    -1,
14163:      292,   293,   294,    -1,    -1,   297,   298,   299,   300,   301,
14164:      302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
14165:      312,   313,   314,    -1,    -1,    -1,    -1,   319,   320,   321,
14166:      322,   323,   324,   325,   326,   327,   328,    -1,   330,   331,
14167:      332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
14168:      342,   343,   344,   345,   346,    -1,   348,   349,   350,   351,
14169:      352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
14170:      362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
14171:      372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
14172:       -1,    -1,   384,   385,   386,   387,   388,   389,   390,   391,
14173:      392,    -1,   394,   395,   396,   397,   398,    -1,   400,   401,
14174:      402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
14175:      412,   413,   414,    -1,    -1,   417,   418,    -1,   420,   421,
14176:      422,   423,   424,   425,   426,    -1,   428,   429,   430,    -1,
14177:       -1,   433,   434,   435,   436,   437,   438,   439,   440,   441,
14178:      442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
14179:       -1,   453,   454,   455,   456,    -1,   458,   459,   460,   461,
14180:      462,   463,   464,   465,    -1,   467,   468,   469,   470,   471,
14181:      472,   473,   474,   475,    -1,    -1,   478,    -1,    -1,   481,
14182:      482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
14183:      492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
14184:       -1,    -1,    -1,    -1,    -1,    -1,    -1,   509,   510,    -1,
14185:       -1,    -1,    -1,    -1,   516,    -1,   518,    -1,    -1,    -1,
14186:       -1,   523,   524,   525,   526,     3,     4,     5,     6,     7,
14187:        8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
14188:       -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,    27,
14189:       28,    29,    -1,    31,    32,    33,    -1,    -1,    -1,    -1,
14190:       -1,    39,    -1,    -1,    42,    43,    44,    -1,    46,    47,
14191:       48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
14192:       -1,    59,    60,    61,    62,    63,    64,    65,    66,    67,
14193:       68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
14194:       78,    79,    -1,    81,    -1,    83,    84,    85,    86,    87,
14195:       88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
14196:       98,    99,    -1,   101,   102,   103,   104,   105,   106,   107,
14197:      108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
14198:      118,    -1,   120,   121,   122,   123,   124,   125,    -1,    -1,
14199:      128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
14200:      138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
14201:      148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
14202:      158,   159,   160,   161,    -1,   163,   164,   165,   166,    -1,
14203:      168,    -1,   170,   171,    -1,   173,   174,   175,   176,   177,
14204:      178,    -1,   180,    -1,   182,   183,   184,   185,    -1,   187,
14205:      188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
14206:      198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
14207:      208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
14208:       -1,   219,    -1,   221,    -1,    -1,   224,   225,   226,   227,
14209:      228,   229,   230,   231,    -1,    -1,   234,   235,   236,   237,
14210:       -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
14211:      248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
14212:      258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
14213:      268,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
14214:       -1,   279,   280,   281,   282,   283,   284,   285,   286,    -1,
14215:      288,   289,    -1,    -1,   292,   293,   294,    -1,    -1,   297,
14216:      298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
14217:      308,   309,   310,   311,   312,   313,   314,    -1,    -1,    -1,
14218:       -1,   319,   320,   321,   322,   323,   324,   325,   326,   327,
14219:      328,    -1,   330,   331,   332,   333,   334,   335,    -1,   337,
14220:      338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
14221:      348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
14222:      358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
14223:      368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
14224:      378,   379,   380,   381,    -1,    -1,   384,   385,   386,   387,
14225:      388,   389,   390,   391,   392,    -1,   394,   395,   396,   397,
14226:      398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
14227:      408,   409,   410,   411,   412,   413,   414,    -1,    -1,   417,
14228:      418,    -1,   420,   421,   422,   423,   424,   425,   426,    -1,
14229:      428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
14230:      438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
14231:       -1,   449,   450,   451,    -1,   453,   454,   455,   456,    -1,
14232:      458,   459,   460,   461,   462,   463,   464,   465,    -1,   467,
14233:      468,   469,   470,   471,   472,   473,   474,   475,    -1,    -1,
14234:      478,    -1,    -1,   481,   482,   483,   484,   485,   486,   487,
14235:      488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
14236:      498,   499,   500,   501,   502,    -1,    -1,    -1,    -1,    -1,
14237:       -1,   509,   510,   511,    -1,    -1,    -1,    -1,   516,    -1,
14238:      518,    -1,    -1,    -1,    -1,   523,   524,   525,   526,     3,
14239:        4,     5,     6,     7,    -1,     9,    10,    -1,    -1,    -1,
14240:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    22,    23,
14241:       24,    25,    26,    27,    28,    29,    -1,    31,    32,    33,
14242:       -1,    -1,    -1,    -1,    -1,    39,    -1,    -1,    42,    43,
14243:       44,    -1,    46,    47,    48,    49,    50,    51,    52,    53,
14244:       54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
14245:       64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
14246:       -1,    75,    76,    77,    78,    79,    -1,    81,    -1,    83,
14247:       84,    85,    86,    87,    88,    89,    90,    91,    92,    -1,
14248:       94,    95,    96,    97,    98,    99,    -1,   101,   102,   103,
14249:      104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
14250:      114,   115,   116,    -1,   118,    -1,   120,   121,   122,   123,
14251:      124,   125,    -1,    -1,   128,   129,   130,   131,    -1,    -1,
14252:      134,   135,   136,   137,   138,    -1,   140,   141,   142,    -1,
14253:      144,   145,   146,    -1,   148,   149,   150,   151,   152,   153,
14254:      154,   155,   156,   157,   158,   159,   160,   161,    -1,   163,
14255:      164,   165,   166,    -1,   168,    -1,   170,   171,    -1,   173,
14256:      174,   175,   176,   177,   178,    -1,   180,    -1,   182,   183,
14257:      184,   185,    -1,   187,   188,   189,   190,   191,   192,   193,
14258:      194,   195,   196,   197,   198,    -1,   200,   201,   202,   203,
14259:      204,   205,   206,    -1,   208,   209,   210,   211,   212,   213,
14260:      214,   215,   216,   217,    -1,   219,    -1,   221,   222,   223,
14261:      224,   225,   226,   227,   228,   229,   230,   231,    -1,    -1,
14262:      234,   235,   236,   237,    -1,   239,   240,   241,   242,   243,
14263:      244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
14264:      254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
14265:      264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
14266:      274,    -1,   276,   277,   278,   279,   280,   281,   282,   283,
14267:      284,   285,   286,    -1,   288,   289,    -1,    -1,   292,   293,
14268:      294,    -1,    -1,   297,   298,   299,   300,   301,   302,   303,
14269:      304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
14270:      314,    -1,    -1,    -1,    -1,   319,   320,   321,   322,   323,
14271:      324,   325,   326,   327,   328,    -1,   330,   331,   332,   333,
14272:      334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
14273:      344,   345,   346,    -1,   348,   349,   350,   351,   352,   353,
14274:      354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
14275:      364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
14276:      374,   375,   376,   377,   378,   379,   380,   381,    -1,    -1,
14277:      384,   385,   386,   387,   388,   389,   390,   391,   392,    -1,
14278:      394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
14279:      404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
14280:      414,    -1,    -1,   417,   418,    -1,   420,   421,   422,   423,
14281:      424,   425,   426,    -1,   428,   429,   430,    -1,    -1,   433,
14282:      434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
14283:      444,   445,   446,    -1,    -1,   449,   450,   451,    -1,   453,
14284:      454,   455,   456,    -1,   458,   459,   460,   461,   462,   463,
14285:      464,   465,    -1,   467,   468,   469,   470,   471,   472,   473,
14286:      474,   475,    -1,    -1,   478,    -1,    -1,   481,   482,   483,
14287:      484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
14288:      494,   495,   496,   497,   498,   499,   500,   501,    -1,    -1,
14289:       -1,    -1,    -1,    -1,    -1,   509,   510,    -1,    -1,    -1,
14290:       -1,    -1,   516,    -1,   518,    -1,    -1,    -1,    -1,   523,
14291:      524,   525,   526,     3,     4,     5,     6,     7,     8,     9,
14292:       10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
14293:       -1,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
14294:       -1,    31,    32,    33,    -1,    -1,    -1,    -1,    -1,    39,
14295:       -1,    -1,    42,    43,    44,    -1,    46,    47,    48,    49,
14296:       50,    51,    52,    53,    54,    55,    56,    57,    -1,    59,
14297:       60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
14298:       70,    71,    72,    73,    -1,    75,    76,    77,    78,    79,
14299:       -1,    81,    -1,    83,    84,    85,    86,    87,    88,    89,
14300:       90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
14301:       -1,   101,   102,   103,   104,   105,   106,   107,   108,   109,
14302:      110,   111,   112,   113,   114,   115,   116,    -1,   118,    -1,
14303:      120,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
14304:      130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
14305:      140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
14306:      150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
14307:      160,   161,    -1,   163,   164,   165,   166,    -1,   168,    -1,
14308:      170,   171,    -1,   173,   174,   175,   176,   177,   178,    -1,
14309:      180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
14310:      190,   191,   192,   193,   194,   195,   196,   197,   198,    -1,
14311:      200,   201,   202,   203,   204,   205,   206,    -1,   208,   209,
14312:      210,   211,   212,   213,   214,   215,   216,   217,    -1,   219,
14313:       -1,   221,    -1,   223,   224,   225,   226,   227,   228,   229,
14314:      230,   231,    -1,    -1,   234,   235,   236,   237,    -1,   239,
14315:      240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
14316:      250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
14317:      260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
14318:      270,   271,   272,   273,   274,    -1,   276,   277,   278,   279,
14319:      280,   281,   282,   283,   284,   285,   286,    -1,   288,   289,
14320:       -1,    -1,   292,   293,   294,    -1,    -1,   297,   298,   299,
14321:      300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
14322:      310,   311,   312,   313,   314,    -1,    -1,    -1,    -1,   319,
14323:      320,   321,   322,   323,   324,   325,   326,   327,   328,    -1,
14324:      330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
14325:      340,   341,   342,   343,   344,   345,   346,    -1,   348,   349,
14326:      350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
14327:      360,    -1,   362,   363,   364,   365,   366,   367,   368,   369,
14328:      370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
14329:      380,   381,    -1,    -1,   384,   385,   386,   387,   388,   389,
14330:      390,   391,   392,    -1,   394,   395,   396,   397,   398,    -1,
14331:      400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
14332:      410,   411,   412,   413,   414,    -1,    -1,   417,   418,    -1,
14333:      420,   421,   422,   423,   424,   425,   426,    -1,   428,   429,
14334:      430,    -1,    -1,   433,   434,   435,   436,   437,   438,   439,
14335:      440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
14336:      450,   451,    -1,   453,   454,   455,   456,    -1,   458,   459,
14337:      460,   461,   462,   463,   464,   465,    -1,   467,   468,   469,
14338:      470,   471,   472,   473,   474,   475,    -1,    -1,   478,    -1,
14339:       -1,   481,   482,   483,   484,   485,   486,   487,   488,   489,
14340:      490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
14341:      500,   501,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   509,
14342:      510,    -1,    -1,    -1,    -1,    -1,   516,    -1,   518,    -1,
14343:       -1,    -1,    -1,   523,   524,   525,   526,     3,     4,     5,
14344:        6,     7,    -1,     9,    10,    -1,    -1,    -1,    -1,    -1,
14345:       -1,    -1,    -1,    -1,    -1,    -1,    22,    23,    24,    25,
14346:       26,    27,    28,    29,    -1,    31,    32,    33,    -1,    -1,
14347:       -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,
14348:       46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
14349:       56,    57,    -1,    59,    60,    61,    62,    63,    64,    65,
14350:       66,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
14351:       76,    77,    78,    79,    -1,    81,    -1,    83,    84,    85,
14352:       86,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
14353:       96,    97,    98,    99,    -1,   101,   102,   103,   104,   105,
14354:      106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
14355:      116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
14356:       -1,    -1,   128,   129,   130,   131,    -1,    -1,   134,   135,
14357:      136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
14358:      146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
14359:      156,   157,   158,   159,   160,   161,    -1,   163,   164,   165,
14360:      166,    -1,   168,    -1,   170,   171,    -1,   173,   174,   175,
14361:      176,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
14362:       -1,   187,   188,   189,   190,   191,   192,   193,   194,   195,
14363:      196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
14364:      206,    -1,   208,   209,   210,   211,   212,   213,   214,   215,
14365:      216,   217,    -1,   219,    -1,   221,   222,   223,   224,   225,
14366:      226,   227,   228,   229,   230,   231,    -1,    -1,   234,   235,
14367:      236,   237,    -1,   239,   240,   241,   242,   243,   244,   245,
14368:      246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
14369:      256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
14370:      266,   267,   268,   269,   270,   271,   272,   273,   274,    -1,
14371:      276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
14372:      286,    -1,   288,   289,    -1,    -1,   292,   293,   294,    -1,
14373:       -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
14374:      306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
14375:       -1,    -1,    -1,   319,   320,   321,   322,   323,   324,   325,
14376:      326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
14377:       -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
14378:      346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
14379:      356,   357,   358,   359,   360,    -1,   362,   363,   364,   365,
14380:      366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
14381:      376,   377,   378,   379,   380,   381,    -1,    -1,   384,   385,
14382:      386,   387,   388,   389,   390,   391,   392,    -1,   394,   395,
14383:      396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
14384:      406,   407,   408,   409,   410,   411,   412,   413,   414,    -1,
14385:       -1,   417,   418,    -1,   420,   421,   422,   423,   424,   425,
14386:      426,    -1,   428,   429,   430,    -1,    -1,   433,   434,   435,
14387:      436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
14388:      446,    -1,    -1,   449,   450,   451,    -1,   453,   454,   455,
14389:      456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
14390:       -1,   467,   468,   469,   470,   471,   472,   473,   474,   475,
14391:       -1,    -1,   478,    -1,    -1,   481,   482,   483,   484,   485,
14392:      486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
14393:      496,   497,   498,   499,   500,   501,    -1,    -1,    -1,    -1,
14394:       -1,    -1,     3,     4,     5,     6,     7,    -1,     9,    10,
14395:      516,    -1,   518,    -1,    -1,    -1,    -1,   523,   524,   525,
14396:      526,    22,    23,    24,    25,    26,    27,    28,    29,    -1,
14397:       31,    32,    33,    -1,    -1,    -1,    -1,    -1,    39,    -1,
14398:       -1,    42,    43,    44,    -1,    46,    47,    48,    49,    50,
14399:       51,    52,    53,    54,    55,    56,    57,    -1,    59,    60,
14400:       61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
14401:       71,    72,    73,    -1,    75,    76,    77,    78,    79,    -1,
14402:       81,    -1,    83,    84,    85,    86,    87,    88,    89,    90,
14403:       91,    92,    -1,    94,    95,    96,    97,    98,    99,    -1,
14404:      101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
14405:      111,   112,   113,   114,   115,   116,    -1,   118,    -1,   120,
14406:      121,   122,   123,   124,   125,    -1,    -1,   128,   129,   130,
14407:      131,    -1,    -1,   134,   135,   136,   137,   138,    -1,   140,
14408:      141,   142,    -1,   144,   145,   146,    -1,   148,   149,   150,
14409:      151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
14410:      161,    -1,   163,   164,   165,   166,    -1,   168,    -1,   170,
14411:      171,    -1,   173,   174,   175,   176,   177,   178,    -1,   180,
14412:       -1,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
14413:      191,   192,   193,   194,   195,   196,   197,   198,    -1,   200,
14414:      201,   202,   203,   204,   205,   206,    -1,   208,   209,   210,
14415:      211,   212,   213,   214,   215,   216,   217,    -1,   219,    -1,
14416:      221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
14417:      231,    -1,    -1,   234,   235,   236,   237,    -1,   239,   240,
14418:      241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
14419:      251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
14420:      261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
14421:      271,   272,   273,   274,    -1,   276,   277,   278,   279,   280,
14422:      281,   282,   283,   284,   285,   286,    -1,   288,   289,    -1,
14423:       -1,   292,   293,   294,    -1,    -1,   297,   298,   299,   300,
14424:      301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
14425:      311,   312,   313,   314,    -1,    -1,    -1,    -1,   319,   320,
14426:      321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
14427:      331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
14428:      341,   342,   343,   344,   345,   346,    -1,   348,   349,   350,
14429:      351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
14430:       -1,   362,   363,   364,   365,   366,   367,   368,   369,   370,
14431:      371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
14432:      381,    -1,    -1,   384,   385,   386,   387,   388,   389,   390,
14433:      391,   392,    -1,   394,   395,   396,   397,   398,    -1,   400,
14434:      401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
14435:      411,   412,   413,   414,    -1,    -1,   417,   418,    -1,   420,
14436:      421,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
14437:       -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
14438:      441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
14439:      451,    -1,   453,   454,   455,   456,    -1,   458,   459,   460,
14440:      461,   462,   463,   464,   465,    -1,   467,   468,   469,   470,
14441:      471,   472,   473,   474,   475,    -1,    -1,   478,    -1,    -1,
14442:      481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
14443:      491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
14444:      501,    -1,    -1,    -1,    -1,    -1,    -1,     3,     4,     5,
14445:        6,     7,    -1,     9,    10,   516,    -1,   518,    -1,    -1,
14446:       -1,    -1,   523,   524,   525,   526,    22,    23,    24,    25,
14447:       26,    27,    28,    29,    -1,    31,    32,    33,    -1,    -1,
14448:       -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,
14449:       46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
14450:       56,    57,    -1,    59,    60,    61,    62,    63,    64,    65,
14451:       66,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
14452:       76,    77,    78,    79,    -1,    81,    -1,    83,    84,    85,
14453:       86,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
14454:       96,    97,    98,    99,    -1,   101,   102,   103,   104,   105,
14455:      106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
14456:      116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
14457:       -1,    -1,   128,   129,   130,   131,    -1,    -1,   134,   135,
14458:      136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
14459:      146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
14460:      156,   157,   158,   159,   160,   161,    -1,   163,   164,   165,
14461:      166,    -1,   168,    -1,   170,   171,    -1,   173,   174,   175,
14462:      176,   177,   178,    -1,   180,    -1,   182,   183,   184,   185,
14463:       -1,   187,   188,   189,   190,   191,   192,   193,   194,   195,
14464:      196,   197,   198,    -1,   200,   201,   202,   203,   204,   205,
14465:      206,    -1,   208,   209,   210,   211,   212,   213,   214,   215,
14466:      216,   217,    -1,   219,    -1,   221,   222,   223,   224,   225,
14467:      226,   227,   228,   229,   230,   231,    -1,    -1,   234,   235,
14468:      236,   237,    -1,   239,   240,   241,   242,   243,   244,   245,
14469:      246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
14470:      256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
14471:      266,   267,   268,   269,   270,   271,   272,   273,   274,    -1,
14472:      276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
14473:      286,    -1,   288,   289,    -1,    -1,   292,   293,   294,    -1,
14474:       -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
14475:      306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
14476:       -1,    -1,    -1,   319,   320,   321,   322,   323,   324,   325,
14477:      326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
14478:       -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
14479:      346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
14480:      356,   357,   358,   359,   360,    -1,   362,   363,   364,   365,
14481:      366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
14482:      376,   377,   378,   379,   380,   381,    -1,    -1,   384,   385,
14483:      386,   387,   388,   389,   390,   391,   392,    -1,   394,   395,
14484:      396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
14485:      406,   407,   408,   409,   410,   411,   412,   413,   414,    -1,
14486:       -1,   417,   418,    -1,   420,   421,   422,   423,   424,   425,
14487:      426,    -1,   428,   429,   430,    -1,    -1,   433,   434,   435,
14488:      436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
14489:      446,    -1,    -1,   449,   450,   451,    -1,   453,   454,   455,
14490:      456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
14491:       -1,   467,   468,   469,   470,   471,   472,   473,   474,   475,
14492:       -1,    -1,   478,    -1,    -1,   481,   482,   483,   484,   485,
14493:      486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
14494:      496,   497,   498,   499,   500,   501,    -1,    -1,    -1,    -1,
14495:       -1,    -1,     3,     4,     5,     6,     7,     8,     9,    10,
14496:      516,    -1,   518,    -1,    -1,    -1,    -1,   523,   524,   525,
14497:      526,    22,    23,    24,    25,    26,    27,    28,    29,    -1,
14498:       31,    32,    33,    -1,    -1,    -1,    -1,    -1,    39,    -1,
14499:       -1,    42,    43,    44,    -1,    46,    47,    48,    49,    50,
14500:       51,    52,    -1,    54,    55,    56,    57,    -1,    59,    60,
14501:       61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
14502:       71,    72,    73,    -1,    75,    76,    77,    78,    79,    -1,
14503:       81,    -1,    83,    84,    85,    86,    87,    88,    89,    90,
14504:       91,    92,    -1,    94,    95,    96,    97,    98,    99,    -1,
14505:      101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
14506:      111,   112,   113,   114,   115,   116,   117,   118,    -1,   120,
14507:      121,   122,   123,   124,   125,    -1,    -1,   128,   129,   130,
14508:      131,    -1,    -1,   134,   135,   136,   137,   138,    -1,   140,
14509:      141,   142,    -1,   144,    -1,   146,    -1,   148,   149,   150,
14510:      151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
14511:      161,    -1,   163,   164,   165,   166,    -1,   168,    -1,   170,
14512:      171,    -1,   173,   174,   175,   176,    -1,   178,    -1,   180,
14513:       -1,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
14514:      191,   192,   193,    -1,   195,   196,   197,   198,    -1,   200,
14515:      201,   202,   203,   204,   205,   206,    -1,   208,   209,   210,
14516:      211,   212,   213,   214,   215,   216,   217,    -1,   219,    -1,
14517:      221,    -1,    -1,   224,   225,   226,   227,   228,   229,   230,
14518:      231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,
14519:      241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
14520:      251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
14521:      261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
14522:      271,   272,   273,   274,    -1,   276,   277,    -1,   279,   280,
14523:      281,   282,   283,   284,   285,   286,    -1,   288,   289,    -1,
14524:       -1,   292,   293,   294,    -1,    -1,   297,   298,   299,   300,
14525:      301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
14526:      311,   312,   313,   314,    -1,    -1,    -1,    -1,   319,   320,
14527:      321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
14528:      331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
14529:      341,   342,   343,   344,   345,   346,    -1,   348,   349,   350,
14530:      351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
14531:       -1,   362,   363,   364,   365,   366,   367,   368,   369,   370,
14532:      371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
14533:      381,    -1,    -1,   384,   385,   386,   387,   388,   389,   390,
14534:      391,   392,    -1,    -1,   395,   396,   397,   398,    -1,   400,
14535:      401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
14536:      411,   412,   413,   414,    -1,    -1,   417,   418,    -1,   420,
14537:      421,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
14538:       -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
14539:      441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
14540:      451,    -1,   453,   454,   455,   456,    -1,   458,   459,   460,
14541:      461,   462,   463,   464,   465,    -1,   467,   468,   469,   470,
14542:      471,   472,   473,   474,   475,    -1,    -1,   478,    -1,    -1,
14543:      481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
14544:      491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
14545:      501,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   509,   510,
14546:      511,    -1,     3,     4,     5,   516,    -1,   518,     9,    -1,
14547:       -1,    -1,   523,   524,   525,   526,    -1,    -1,    -1,    -1,
14548:       -1,    22,    23,    24,    25,    26,    27,    28,    29,    -1,
14549:       31,    32,    33,    -1,    -1,    -1,    37,    -1,    -1,    -1,
14550:       -1,    42,    43,    44,    -1,    46,    47,    48,    49,    50,
14551:       51,    52,    53,    54,    55,    56,    57,    -1,    59,    60,
14552:       61,    62,    63,    64,    -1,    -1,    67,    68,    69,    70,
14553:       71,    72,    73,    -1,    75,    76,    77,    78,    79,    -1,
14554:       81,    -1,    83,    84,    85,    86,    87,    88,    89,    90,
14555:       91,    92,    -1,    94,    95,    96,    97,    98,    99,    -1,
14556:      101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
14557:      111,   112,   113,   114,   115,   116,    -1,   118,    -1,   120,
14558:      121,   122,   123,   124,   125,    -1,    -1,   128,   129,   130,
14559:      131,    -1,    -1,   134,   135,   136,   137,   138,    -1,   140,
14560:      141,   142,    -1,   144,   145,   146,    -1,   148,   149,   150,
14561:      151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
14562:      161,    -1,   163,   164,   165,   166,    -1,   168,    -1,   170,
14563:      171,    -1,   173,   174,   175,   176,   177,   178,    -1,   180,
14564:       -1,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
14565:      191,   192,   193,   194,   195,   196,   197,   198,    -1,   200,
14566:      201,   202,   203,   204,   205,   206,    -1,   208,   209,   210,
14567:      211,   212,   213,   214,   215,   216,   217,    -1,   219,    -1,
14568:      221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
14569:      231,    -1,    -1,   234,   235,   236,   237,    -1,   239,   240,
14570:      241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
14571:      251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
14572:      261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
14573:      271,   272,   273,   274,    -1,   276,   277,   278,   279,    -1,
14574:      281,   282,   283,   284,   285,   286,    -1,   288,   289,   290,
14575:       -1,   292,   293,   294,    -1,    -1,   297,   298,   299,   300,
14576:      301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
14577:      311,   312,   313,   314,    -1,    -1,    -1,    -1,   319,   320,
14578:      321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
14579:      331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
14580:      341,   342,   343,   344,   345,   346,    -1,   348,   349,   350,
14581:      351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
14582:       -1,   362,   363,   364,   365,   366,   367,   368,   369,   370,
14583:      371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
14584:      381,    -1,   383,   384,   385,   386,   387,   388,   389,   390,
14585:      391,   392,    -1,   394,   395,   396,   397,   398,    -1,   400,
14586:      401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
14587:      411,   412,   413,   414,    -1,    -1,   417,   418,    -1,   420,
14588:      421,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
14589:       -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
14590:      441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
14591:      451,    -1,   453,   454,   455,   456,    -1,   458,   459,   460,
14592:      461,   462,   463,   464,   465,    -1,   467,   468,   469,   470,
14593:      471,   472,   473,   474,   475,    -1,    -1,   478,    -1,    -1,
14594:      481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
14595:      491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
14596:      501,    -1,    -1,    -1,    -1,    -1,    -1,     3,   509,   510,
14597:      511,    -1,    -1,    -1,    10,   516,    -1,   518,    -1,    -1,
14598:       -1,    -1,    -1,    -1,    -1,   526,    22,    23,    24,    25,
14599:       26,    27,    28,    29,    -1,    31,    32,    33,    -1,    -1,
14600:       -1,    -1,    -1,    39,    -1,    -1,    42,    43,    44,    -1,
14601:       46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
14602:       56,    57,    -1,    59,    60,    61,    62,    63,    64,    65,
14603:       66,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
14604:       76,    77,    78,    79,    -1,    81,    -1,    83,    84,    85,
14605:       86,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
14606:       96,    97,    98,    99,    -1,   101,   102,   103,   104,   105,
14607:      106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
14608:      116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
14609:       -1,    -1,   128,   129,   130,   131,    -1,    -1,   134,   135,
14610:      136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
14611:      146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
14612:      156,   157,   158,   159,    -1,   161,    -1,   163,   164,   165,
14613:      166,    -1,   168,    -1,   170,   171,    -1,   173,   174,   175,
14614:      176,   177,   178,    -1,   180,    -1,   182,   183,   184,   185,
14615:       -1,   187,   188,   189,   190,   191,   192,   193,   194,   195,
14616:      196,   197,   198,    -1,   200,   201,   202,   203,   204,   205,
14617:      206,    -1,   208,   209,   210,   211,   212,   213,   214,   215,
14618:      216,   217,    -1,   219,    -1,   221,   222,   223,   224,   225,
14619:      226,   227,   228,   229,   230,   231,    -1,    -1,   234,   235,
14620:      236,   237,    -1,   239,   240,   241,   242,   243,   244,   245,
14621:      246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
14622:      256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
14623:      266,   267,   268,   269,   270,   271,   272,   273,   274,    -1,
14624:      276,   277,   278,   279,    -1,   281,   282,   283,   284,   285,
14625:      286,    -1,   288,   289,    -1,    -1,   292,   293,   294,    -1,
14626:       -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
14627:      306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
14628:       -1,    -1,    -1,   319,   320,   321,   322,   323,   324,   325,
14629:      326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
14630:       -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
14631:      346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
14632:      356,   357,   358,   359,   360,    -1,   362,   363,   364,   365,
14633:      366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
14634:      376,   377,   378,   379,   380,   381,    -1,    -1,   384,   385,
14635:      386,   387,   388,   389,   390,   391,   392,    -1,   394,   395,
14636:      396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
14637:      406,   407,   408,   409,   410,   411,   412,   413,   414,    -1,
14638:       -1,   417,   418,    -1,   420,   421,   422,   423,   424,   425,
14639:      426,    -1,   428,   429,   430,    -1,    -1,   433,   434,   435,
14640:      436,   437,    -1,   439,   440,   441,   442,   443,   444,   445,
14641:      446,    -1,    -1,   449,   450,   451,    -1,   453,   454,   455,
14642:      456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
14643:       -1,   467,   468,   469,   470,   471,   472,   473,   474,   475,
14644:       -1,    -1,   478,    -1,    -1,   481,   482,   483,   484,   485,
14645:      486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
14646:      496,   497,   498,   499,   500,   501,    -1,    -1,    -1,    -1,
14647:       -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
14648:      516,    -1,   518,    -1,    -1,    -1,    -1,   523,   524,   525,
14649:      526,    22,    23,    24,    25,    26,    27,    28,    29,    -1,
14650:       31,    32,    33,    -1,    -1,    -1,    -1,    -1,    -1,    40,
14651:       -1,    -1,    43,    44,    -1,    46,    47,    48,    -1,    50,
14652:       51,    52,    53,    54,    -1,    56,    57,    -1,    59,    60,
14653:       61,    62,    63,    64,    -1,    -1,    67,    68,    69,    70,
14654:       71,    72,    73,    -1,    75,    76,    77,    78,    79,    -1,
14655:       -1,    -1,    83,    84,    85,    86,    87,    88,    -1,    90,
14656:       91,    92,    -1,    94,    95,    96,    97,    98,    99,    -1,
14657:       -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
14658:      111,   112,   113,   114,   115,   116,    -1,   118,    -1,   120,
14659:      121,   122,   123,   124,   125,    -1,    -1,   128,   129,   130,
14660:      131,    -1,    -1,   134,   135,   136,   137,   138,    -1,   140,
14661:      141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
14662:      151,   152,   153,   154,   155,   156,   157,   158,   159,    -1,
14663:      161,   162,   163,   164,   165,   166,   167,   168,    -1,   170,
14664:       -1,    -1,    -1,   174,   175,   176,    -1,   178,    -1,   180,
14665:       -1,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
14666:      191,   192,   193,    -1,   195,   196,   197,   198,    -1,   200,
14667:      201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
14668:      211,   212,   213,   214,   215,   216,   217,   218,   219,    -1,
14669:      221,    -1,    -1,   224,    -1,   226,   227,   228,   229,   230,
14670:      231,    -1,    -1,   234,    -1,   236,    -1,   238,   239,   240,
14671:      241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
14672:      251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
14673:      261,   262,   263,   264,   265,   266,   267,   268,    -1,   270,
14674:      271,   272,   273,   274,    -1,   276,   277,    -1,   279,    -1,
14675:      281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
14676:       -1,   292,   293,   294,    -1,   296,   297,   298,   299,    -1,
14677:      301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
14678:      311,   312,   313,   314,    -1,    -1,    -1,    -1,   319,   320,
14679:      321,    -1,   323,   324,   325,   326,   327,   328,    -1,   330,
14680:      331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
14681:      341,   342,   343,   344,   345,   346,    -1,   348,   349,   350,
14682:      351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
14683:       -1,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
14684:      371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
14685:      381,    -1,    -1,   384,   385,   386,   387,   388,   389,   390,
14686:      391,   392,    -1,    -1,   395,   396,   397,   398,    -1,   400,
14687:      401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
14688:      411,   412,   413,   414,    -1,    -1,   417,   418,    -1,   420,
14689:       -1,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
14690:       -1,    -1,   433,   434,   435,   436,   437,    -1,   439,   440,
14691:      441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
14692:      451,    -1,   453,   454,   455,   456,    -1,   458,   459,   460,
14693:      461,   462,   463,   464,   465,    -1,   467,    -1,   469,   470,
14694:      471,   472,   473,   474,   475,    -1,    -1,   478,    -1,    -1,
14695:      481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
14696:      491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
14697:      501,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
14698:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   519,    -1,
14699:       22,    23,    24,    25,    26,    27,    28,    29,    -1,    31,
14700:       32,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
14701:       -1,    43,    44,    -1,    46,    47,    48,    -1,    50,    51,
14702:       52,    53,    54,    -1,    56,    57,    -1,    59,    60,    61,
14703:       62,    63,    64,    -1,    -1,    67,    68,    69,    70,    71,
14704:       72,    73,    -1,    75,    76,    77,    78,    79,    -1,    -1,
14705:       -1,    83,    84,    85,    86,    87,    88,    -1,    90,    91,
14706:       92,    -1,    94,    95,    96,    97,    98,    99,    -1,    -1,
14707:      102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
14708:      112,   113,   114,   115,   116,    -1,   118,    -1,   120,   121,
14709:      122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
14710:       -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
14711:      142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
14712:      152,   153,   154,   155,   156,   157,   158,   159,    -1,   161,
14713:       -1,   163,   164,   165,   166,    -1,   168,    -1,   170,    -1,
14714:       -1,    -1,   174,   175,   176,    -1,   178,    -1,   180,    -1,
14715:      182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
14716:      192,   193,    -1,   195,   196,   197,   198,    -1,   200,   201,
14717:      202,   203,   204,   205,   206,    -1,   208,    -1,   210,   211,
14718:      212,   213,   214,   215,   216,   217,    -1,   219,    -1,   221,
14719:       -1,    -1,   224,    -1,   226,   227,   228,   229,   230,   231,
14720:       -1,    -1,   234,    -1,   236,    -1,    -1,   239,   240,   241,
14721:      242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
14722:      252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
14723:      262,   263,   264,   265,   266,   267,   268,    -1,   270,   271,
14724:      272,   273,   274,    -1,   276,   277,    -1,   279,    -1,   281,
14725:      282,   283,   284,   285,   286,    -1,   288,   289,    -1,    -1,
14726:      292,   293,   294,    -1,    -1,   297,   298,   299,    -1,   301,
14727:       -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
14728:      312,   313,   314,    -1,    -1,    -1,    -1,   319,   320,   321,
14729:       -1,   323,   324,   325,   326,   327,   328,    -1,   330,   331,
14730:      332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
14731:      342,   343,   344,   345,   346,    -1,   348,   349,   350,   351,
14732:      352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
14733:      362,   363,    -1,   365,   366,   367,   368,   369,   370,   371,
14734:      372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
14735:       -1,    -1,   384,   385,   386,   387,   388,   389,   390,   391,
14736:      392,    -1,    -1,   395,   396,   397,   398,    -1,   400,   401,
14737:      402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
14738:      412,   413,   414,    -1,    -1,   417,   418,    -1,   420,    -1,
14739:      422,   423,   424,   425,   426,    -1,   428,   429,   430,    -1,
14740:       -1,   433,   434,   435,   436,   437,    -1,   439,   440,   441,
14741:      442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
14742:       -1,   453,   454,   455,   456,    -1,   458,   459,   460,   461,
14743:      462,   463,   464,   465,    -1,   467,    -1,   469,   470,   471,
14744:      472,   473,   474,   475,    -1,    -1,   478,    -1,    -1,   481,
14745:      482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
14746:      492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
14747:        3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
14748:       -1,    -1,    -1,    -1,    -1,    -1,   518,   519,    -1,    22,
14749:       23,    24,    25,    26,    27,    28,    29,    -1,    31,    32,
14750:       33,    34,    35,    -1,    37,    -1,    -1,    -1,    -1,    42,
14751:       43,    44,    -1,    46,    47,    48,    49,    50,    51,    52,
14752:       53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
14753:       63,    64,    -1,    -1,    67,    68,    69,    70,    71,    72,
14754:       73,    -1,    75,    76,    77,    78,    79,    -1,    81,    -1,
14755:       83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
14756:       -1,    94,    95,    96,    97,    98,    99,    -1,   101,   102,
14757:      103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
14758:      113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
14759:      123,   124,   125,   126,   127,   128,   129,   130,   131,    -1,
14760:       -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
14761:       -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
14762:      153,   154,   155,   156,   157,   158,   159,    -1,   161,    -1,
14763:      163,   164,   165,   166,    -1,   168,    -1,   170,   171,   172,
14764:      173,   174,   175,   176,   177,   178,    -1,   180,    -1,   182,
14765:      183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
14766:      193,   194,   195,   196,   197,   198,    -1,   200,   201,   202,
14767:      203,   204,   205,   206,    -1,   208,   209,   210,   211,   212,
14768:      213,   214,   215,   216,   217,    -1,   219,    -1,   221,   222,
14769:      223,   224,   225,   226,   227,   228,   229,   230,   231,    -1,
14770:       -1,   234,   235,   236,   237,    -1,   239,   240,   241,   242,
14771:      243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
14772:      253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
14773:      263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
14774:      273,   274,    -1,   276,   277,   278,   279,    -1,   281,   282,
14775:      283,   284,   285,   286,    -1,   288,   289,    -1,    -1,   292,
14776:      293,   294,    -1,    -1,   297,   298,   299,   300,   301,   302,
14777:      303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
14778:      313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
14779:      323,   324,   325,   326,   327,   328,    -1,   330,   331,   332,
14780:      333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
14781:      343,   344,   345,   346,    -1,   348,   349,   350,   351,   352,
14782:      353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
14783:      363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
14784:      373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
14785:      383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
14786:      393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
14787:      403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
14788:      413,   414,   415,    -1,   417,   418,   419,   420,   421,   422,
14789:      423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
14790:      433,   434,   435,   436,   437,    -1,   439,   440,   441,   442,
14791:      443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
14792:      453,   454,   455,   456,    -1,   458,   459,   460,   461,   462,
14793:      463,   464,   465,    -1,   467,   468,   469,   470,   471,   472,
14794:      473,   474,   475,    -1,    -1,   478,    -1,   480,   481,   482,
14795:      483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
14796:      493,   494,   495,   496,   497,   498,   499,   500,   501,    -1,
14797:        3,   504,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
14798:       -1,    -1,    -1,    -1,    -1,   518,    -1,    -1,    -1,    22,
14799:       23,    24,    25,    26,    27,    28,    29,    -1,    31,    32,
14800:       33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    42,
14801:       43,    44,    -1,    46,    47,    48,    49,    50,    51,    52,
14802:       53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
14803:       63,    64,    -1,    66,    67,    68,    69,    70,    71,    72,
14804:       73,    -1,    75,    76,    77,    78,    79,    -1,    81,    -1,
14805:       83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
14806:       -1,    94,    95,    96,    97,    98,    99,    -1,   101,   102,
14807:      103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
14808:      113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
14809:      123,   124,   125,   126,   127,   128,   129,   130,   131,    -1,
14810:       -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
14811:       -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
14812:      153,   154,   155,   156,   157,   158,   159,    -1,   161,    -1,
14813:      163,   164,   165,   166,    -1,   168,    -1,   170,   171,   172,
14814:      173,   174,   175,   176,   177,   178,    -1,   180,    -1,   182,
14815:      183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
14816:      193,   194,   195,   196,   197,   198,    -1,   200,   201,   202,
14817:      203,   204,   205,   206,    -1,   208,   209,   210,   211,   212,
14818:      213,   214,   215,   216,   217,    -1,   219,    -1,   221,   222,
14819:      223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
14820:       -1,   234,   235,   236,   237,    -1,   239,   240,   241,   242,
14821:      243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
14822:      253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
14823:      263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
14824:      273,   274,    -1,   276,   277,   278,   279,    -1,   281,   282,
14825:      283,   284,   285,   286,    -1,   288,   289,    -1,   291,   292,
14826:      293,   294,    -1,    -1,   297,   298,   299,   300,   301,   302,
14827:      303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
14828:      313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
14829:      323,   324,   325,   326,   327,   328,    -1,   330,   331,   332,
14830:      333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
14831:      343,   344,   345,   346,    -1,   348,   349,   350,   351,   352,
14832:      353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
14833:      363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
14834:      373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
14835:       -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
14836:      393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
14837:      403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
14838:      413,   414,   415,    -1,   417,   418,   419,   420,   421,   422,
14839:      423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
14840:      433,   434,   435,   436,   437,    -1,   439,   440,   441,   442,
14841:      443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
14842:      453,   454,   455,   456,    -1,   458,   459,   460,   461,   462,
14843:      463,   464,   465,    -1,   467,   468,   469,   470,   471,   472,
14844:      473,   474,   475,    -1,    -1,   478,    -1,   480,   481,   482,
14845:      483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
14846:      493,   494,   495,   496,   497,   498,   499,   500,   501,    -1,
14847:        3,   504,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
14848:       -1,    -1,    -1,    -1,    -1,   518,    -1,    -1,    -1,    22,
14849:       23,    24,    25,    26,    27,    28,    29,    -1,    31,    32,
14850:       33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    42,
14851:       43,    44,    -1,    46,    47,    48,    49,    50,    51,    52,
14852:       53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
14853:       63,    64,    -1,    66,    67,    68,    69,    70,    71,    72,
14854:       73,    -1,    75,    76,    77,    78,    79,    -1,    81,    -1,
14855:       83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
14856:       -1,    94,    95,    96,    97,    98,    99,    -1,   101,   102,
14857:      103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
14858:      113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
14859:      123,   124,   125,    -1,    -1,   128,   129,   130,   131,    -1,
14860:       -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
14861:       -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
14862:      153,   154,   155,   156,   157,   158,   159,    -1,   161,    -1,
14863:      163,   164,   165,   166,    -1,   168,    -1,   170,   171,    -1,
14864:      173,   174,   175,   176,   177,   178,    -1,   180,    -1,   182,
14865:      183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
14866:      193,   194,   195,   196,   197,   198,    -1,   200,   201,   202,
14867:      203,   204,   205,   206,    -1,   208,   209,   210,   211,   212,
14868:      213,   214,   215,   216,   217,    -1,   219,    -1,   221,   222,
14869:      223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
14870:       -1,   234,   235,   236,   237,    -1,   239,   240,   241,   242,
14871:      243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
14872:      253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
14873:      263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
14874:      273,   274,    -1,   276,   277,   278,   279,    -1,   281,   282,
14875:      283,   284,   285,   286,    -1,   288,   289,    -1,   291,   292,
14876:      293,   294,    -1,    -1,   297,   298,   299,   300,   301,   302,
14877:      303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
14878:      313,   314,    -1,    -1,    -1,    -1,   319,   320,   321,   322,
14879:      323,   324,   325,   326,   327,   328,    -1,   330,   331,   332,
14880:      333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
14881:      343,   344,   345,   346,    -1,   348,   349,   350,   351,   352,
14882:      353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
14883:      363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
14884:      373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
14885:       -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
14886:       -1,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
14887:      403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
14888:      413,   414,    -1,    -1,   417,   418,    -1,   420,   421,   422,
14889:      423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
14890:      433,   434,   435,   436,   437,    -1,   439,   440,   441,   442,
14891:      443,   444,   445,   446,    -1,    -1,   449,   450,   451,    -1,
14892:      453,   454,   455,   456,    -1,   458,   459,   460,   461,   462,
14893:      463,   464,   465,    -1,   467,   468,   469,   470,   471,   472,
14894:      473,   474,   475,    -1,    -1,   478,    -1,    -1,   481,   482,
14895:      483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
14896:      493,   494,   495,   496,   497,   498,   499,   500,   501,     3,
14897:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
14898:       -1,    -1,    -1,    -1,    -1,   518,    -1,    -1,    22,    23,
14899:       24,    25,    26,    27,    28,    29,    -1,    31,    32,    33,
14900:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    42,    43,
14901:       44,    -1,    46,    47,    48,    49,    50,    51,    52,    53,
14902:       54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
14903:       64,    -1,    66,    67,    68,    69,    70,    71,    72,    73,
14904:       -1,    75,    76,    77,    78,    79,    -1,    81,    -1,    83,
14905:       84,    85,    86,    87,    88,    89,    90,    91,    92,    -1,
14906:       94,    95,    96,    97,    98,    99,    -1,   101,   102,   103,
14907:      104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
14908:      114,   115,   116,    -1,   118,    -1,   120,   121,   122,   123,
14909:      124,   125,    -1,    -1,   128,   129,   130,   131,    -1,    -1,
14910:      134,   135,   136,   137,   138,    -1,   140,   141,   142,    -1,
14911:      144,   145,   146,    -1,   148,   149,   150,   151,   152,   153,
14912:      154,   155,   156,   157,   158,   159,    -1,   161,    -1,   163,
14913:      164,   165,   166,    -1,   168,    -1,   170,   171,    -1,   173,
14914:      174,   175,   176,   177,   178,    -1,   180,    -1,   182,   183,
14915:      184,   185,    -1,   187,   188,   189,   190,   191,   192,   193,
14916:      194,   195,   196,   197,   198,    -1,   200,   201,   202,   203,
14917:      204,   205,   206,    -1,   208,   209,   210,   211,   212,   213,
14918:      214,   215,   216,   217,    -1,   219,    -1,   221,   222,   223,
14919:      224,   225,   226,   227,   228,   229,   230,   231,    -1,    -1,
14920:      234,   235,   236,   237,    -1,   239,   240,   241,   242,   243,
14921:      244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
14922:      254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
14923:      264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
14924:      274,    -1,   276,   277,   278,   279,    -1,   281,   282,   283,
14925:      284,   285,   286,    -1,   288,   289,    -1,    -1,   292,   293,
14926:      294,    -1,    -1,   297,   298,   299,   300,   301,   302,   303,
14927:      304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
14928:      314,    -1,    -1,    -1,    -1,   319,   320,   321,   322,   323,
14929:      324,   325,   326,   327,   328,    -1,   330,   331,   332,   333,
14930:      334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
14931:      344,   345,   346,    -1,   348,   349,   350,   351,   352,   353,
14932:      354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
14933:      364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
14934:      374,   375,   376,   377,   378,   379,   380,   381,    -1,    -1,
14935:      384,   385,   386,   387,   388,   389,   390,   391,   392,    -1,
14936:      394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
14937:      404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
14938:      414,    -1,    -1,   417,   418,    -1,   420,   421,   422,   423,
14939:      424,   425,   426,    -1,   428,   429,   430,    -1,    -1,   433,
14940:      434,   435,   436,   437,    -1,   439,   440,   441,   442,   443,
14941:      444,   445,   446,    -1,    -1,   449,   450,   451,    -1,   453,
14942:      454,   455,   456,    -1,   458,   459,   460,   461,   462,   463,
14943:      464,   465,    -1,   467,   468,   469,   470,   471,   472,   473,
14944:      474,   475,    -1,    -1,   478,    -1,    -1,   481,   482,   483,
14945:      484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
14946:      494,   495,   496,   497,   498,   499,   500,   501,     3,    -1,
14947:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
14948:       -1,    -1,    -1,    -1,   518,    -1,    -1,    22,    23,    24,
14949:       25,    26,    27,    28,    29,    -1,    31,    32,    33,    -1,
14950:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    42,    43,    44,
14951:       -1,    46,    47,    48,    49,    50,    51,    52,    53,    54,
14952:       55,    56,    57,    -1,    59,    60,    61,    62,    63,    64,
14953:       -1,    66,    67,    68,    69,    70,    71,    72,    73,    -1,
14954:       75,    76,    77,    78,    79,    -1,    81,    -1,    83,    84,
14955:       85,    86,    87,    88,    89,    90,    91,    92,    -1,    94,
14956:       95,    96,    97,    98,    99,    -1,   101,   102,   103,   104,
14957:      105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
14958:      115,   116,    -1,   118,    -1,   120,   121,   122,   123,   124,
14959:      125,    -1,    -1,   128,   129,   130,   131,    -1,    -1,   134,
14960:      135,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
14961:      145,   146,    -1,   148,   149,   150,   151,   152,   153,   154,
14962:      155,   156,   157,   158,   159,    -1,   161,    -1,   163,   164,
14963:      165,   166,    -1,   168,    -1,   170,   171,    -1,   173,   174,
14964:      175,   176,   177,   178,    -1,   180,    -1,   182,   183,   184,
14965:      185,    -1,   187,   188,   189,   190,   191,   192,   193,   194,
14966:      195,   196,   197,   198,    -1,   200,   201,   202,   203,   204,
14967:      205,   206,    -1,   208,   209,   210,   211,   212,   213,   214,
14968:      215,   216,   217,    -1,   219,    -1,   221,   222,   223,   224,
14969:      225,   226,   227,   228,   229,   230,   231,    -1,    -1,   234,
14970:      235,   236,   237,    -1,   239,   240,   241,   242,   243,   244,
14971:      245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
14972:      255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
14973:      265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
14974:       -1,   276,   277,   278,   279,    -1,   281,   282,   283,   284,
14975:      285,   286,    -1,   288,   289,    -1,    -1,   292,   293,   294,
14976:       -1,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
14977:      305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
14978:       -1,    -1,    -1,    -1,   319,   320,   321,   322,   323,   324,
14979:      325,   326,   327,   328,    -1,   330,   331,   332,   333,   334,
14980:      335,    -1,   337,   338,   339,   340,   341,   342,   343,   344,
14981:      345,   346,    -1,   348,   349,   350,   351,   352,   353,   354,
14982:      355,   356,   357,   358,   359,   360,    -1,   362,   363,   364,
14983:      365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
14984:      375,   376,   377,   378,   379,   380,   381,    -1,    -1,   384,
14985:      385,   386,   387,   388,   389,   390,   391,   392,    -1,   394,
14986:      395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
14987:      405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
14988:       -1,    -1,   417,   418,    -1,   420,   421,   422,   423,   424,
14989:      425,   426,    -1,   428,   429,   430,    -1,    -1,   433,   434,
14990:      435,   436,   437,    -1,   439,   440,   441,   442,   443,   444,
14991:      445,   446,    -1,    -1,   449,   450,   451,    -1,   453,   454,
14992:      455,   456,    -1,   458,   459,   460,   461,   462,   463,   464,
14993:      465,    -1,   467,   468,   469,   470,   471,   472,   473,   474,
14994:      475,    -1,    -1,   478,    -1,    -1,   481,   482,   483,   484,
14995:      485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
14996:      495,   496,   497,   498,   499,   500,   501,     3,    -1,    -1,
14997:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
14998:       -1,    -1,    -1,   518,    -1,    -1,    22,    23,    24,    25,
14999:       26,    27,    28,    29,    -1,    31,    32,    33,    -1,    -1,
15000:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,    44,    -1,
15001:       46,    47,    48,    -1,    50,    51,    52,    53,    54,    -1,
15002:       56,    57,    -1,    59,    60,    61,    62,    63,    64,    -1,
15003:       -1,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
15004:       76,    77,    78,    79,    -1,    -1,    -1,    83,    84,    85,
15005:       86,    87,    88,    -1,    90,    91,    92,    -1,    94,    95,
15006:       96,    97,    98,    99,    -1,    -1,   102,   103,   104,   105,
15007:      106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
15008:      116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
15009:      126,   127,   128,   129,   130,   131,    -1,    -1,   134,   135,
15010:      136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
15011:      146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
15012:      156,   157,   158,   159,    -1,   161,    -1,   163,   164,   165,
15013:      166,    -1,   168,    -1,   170,    -1,   172,    -1,   174,   175,
15014:      176,    -1,   178,    -1,   180,    -1,   182,   183,   184,   185,
15015:       -1,   187,   188,   189,   190,   191,   192,   193,    -1,   195,
15016:      196,   197,   198,    -1,   200,   201,   202,   203,   204,   205,
15017:      206,    -1,   208,    -1,   210,   211,   212,   213,   214,   215,
15018:      216,   217,    -1,   219,    -1,   221,    -1,    -1,   224,    -1,
15019:      226,   227,   228,   229,   230,   231,    -1,    -1,   234,    -1,
15020:      236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
15021:      246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
15022:      256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
15023:      266,   267,   268,    -1,   270,   271,   272,   273,   274,    -1,
15024:      276,   277,    -1,   279,    -1,   281,   282,   283,   284,   285,
15025:      286,    -1,   288,   289,    -1,    -1,   292,   293,   294,    -1,
15026:       -1,   297,   298,   299,    -1,   301,    -1,   303,   304,   305,
15027:      306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
15028:      316,   317,    -1,   319,   320,   321,    -1,   323,   324,   325,
15029:      326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
15030:       -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
15031:      346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
15032:      356,   357,   358,   359,   360,    -1,   362,   363,    -1,   365,
15033:      366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
15034:      376,   377,   378,   379,   380,   381,   382,    -1,   384,   385,
15035:      386,   387,   388,   389,   390,   391,   392,   393,    -1,   395,
15036:      396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
15037:      406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
15038:       -1,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
15039:      426,    -1,   428,   429,   430,    -1,    -1,   433,   434,   435,
15040:      436,   437,    -1,   439,   440,   441,   442,   443,   444,   445,
15041:      446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
15042:      456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
15043:       -1,   467,    -1,   469,   470,   471,   472,   473,   474,   475,
15044:       -1,    -1,   478,    -1,   480,   481,   482,   483,   484,   485,
15045:      486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
15046:      496,   497,   498,   499,   500,   501,     3,    -1,   504,    -1,
15047:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15048:       -1,    -1,   518,    -1,    -1,    22,    23,    24,    25,    26,
15049:       27,    28,    29,    30,    31,    32,    33,    -1,    -1,    -1,
15050:       -1,    -1,    -1,    -1,    -1,    -1,    43,    44,    -1,    46,
15051:       47,    48,    -1,    50,    51,    52,    53,    54,    -1,    56,
15052:       57,    -1,    59,    60,    61,    62,    63,    64,    -1,    -1,
15053:       67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
15054:       77,    78,    79,    -1,    -1,    -1,    83,    84,    85,    86,
15055:       87,    88,    -1,    90,    91,    92,    -1,    94,    95,    96,
15056:       97,    98,    99,    -1,    -1,   102,   103,   104,   105,   106,
15057:      107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
15058:       -1,   118,    -1,   120,   121,   122,   123,   124,   125,    -1,
15059:       -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
15060:      137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
15061:       -1,   148,   149,   150,   151,   152,   153,   154,   155,   156,
15062:      157,   158,   159,    -1,   161,    -1,   163,   164,   165,   166,
15063:       -1,   168,    -1,   170,    -1,   172,    -1,   174,   175,   176,
15064:       -1,   178,    -1,   180,    -1,   182,   183,   184,   185,    -1,
15065:      187,   188,   189,   190,   191,   192,   193,    -1,   195,   196,
15066:      197,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
15067:       -1,   208,    -1,   210,   211,   212,   213,   214,   215,   216,
15068:      217,    -1,   219,    -1,   221,    -1,    -1,   224,    -1,   226,
15069:      227,   228,   229,   230,   231,    -1,    -1,   234,    -1,   236,
15070:       -1,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
15071:      247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
15072:      257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
15073:      267,   268,    -1,   270,   271,   272,   273,   274,    -1,   276,
15074:      277,    -1,   279,    -1,   281,   282,   283,   284,   285,   286,
15075:       -1,   288,   289,    -1,    -1,   292,   293,   294,    -1,    -1,
15076:      297,   298,   299,    -1,   301,    -1,   303,   304,   305,   306,
15077:      307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
15078:      317,    -1,   319,   320,   321,    -1,   323,   324,   325,   326,
15079:      327,   328,    -1,   330,   331,   332,   333,   334,   335,    -1,
15080:      337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
15081:       -1,   348,   349,   350,   351,   352,   353,   354,   355,   356,
15082:      357,   358,   359,   360,    -1,   362,   363,    -1,   365,   366,
15083:      367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
15084:      377,   378,   379,   380,   381,   382,    -1,   384,   385,   386,
15085:      387,   388,   389,   390,   391,   392,    -1,    -1,   395,   396,
15086:      397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
15087:      407,   408,   409,   410,   411,   412,   413,   414,    -1,    -1,
15088:      417,   418,   419,   420,    -1,   422,   423,   424,   425,   426,
15089:       -1,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
15090:      437,    -1,   439,   440,   441,   442,   443,   444,   445,   446,
15091:       -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
15092:       -1,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
15093:      467,    -1,   469,   470,   471,   472,   473,   474,   475,    -1,
15094:       -1,   478,    -1,   480,   481,   482,   483,   484,   485,   486,
15095:      487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
15096:      497,   498,   499,   500,   501,     3,    -1,   504,    -1,    -1,
15097:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15098:       -1,   518,    -1,    -1,    22,    23,    24,    25,    26,    27,
15099:       28,    29,    -1,    31,    32,    33,    -1,    -1,    -1,    -1,
15100:       -1,    -1,    -1,    -1,    -1,    43,    44,    -1,    46,    47,
15101:       48,    -1,    50,    51,    52,    53,    54,    -1,    56,    57,
15102:       -1,    59,    60,    61,    62,    63,    64,    -1,    -1,    67,
15103:       68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
15104:       78,    79,    -1,    -1,    -1,    83,    84,    85,    86,    87,
15105:       88,    -1,    90,    91,    92,    -1,    94,    95,    96,    97,
15106:       98,    99,    -1,    -1,   102,   103,   104,   105,   106,   107,
15107:      108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
15108:      118,    -1,   120,   121,   122,   123,   124,   125,    -1,    -1,
15109:      128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
15110:      138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
15111:      148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
15112:      158,   159,    -1,   161,    -1,   163,   164,   165,   166,    -1,
15113:      168,    -1,   170,    -1,   172,    -1,   174,   175,   176,    -1,
15114:      178,    -1,   180,    -1,   182,   183,   184,   185,    -1,   187,
15115:      188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
15116:      198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
15117:      208,    -1,   210,   211,   212,   213,   214,   215,   216,   217,
15118:       -1,   219,    -1,   221,    -1,    -1,   224,    -1,   226,   227,
15119:      228,   229,   230,   231,    -1,    -1,   234,    -1,   236,    -1,
15120:       -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
15121:      248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
15122:      258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
15123:      268,    -1,   270,   271,   272,   273,   274,    -1,   276,   277,
15124:       -1,   279,    -1,   281,   282,   283,   284,   285,   286,    -1,
15125:      288,   289,    -1,    -1,   292,   293,   294,    -1,    -1,   297,
15126:      298,   299,    -1,   301,    -1,   303,   304,   305,   306,   307,
15127:      308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
15128:       -1,   319,   320,   321,    -1,   323,   324,   325,   326,   327,
15129:      328,    -1,   330,   331,   332,   333,   334,   335,    -1,   337,
15130:      338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
15131:      348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
15132:      358,   359,   360,    -1,   362,   363,    -1,   365,   366,   367,
15133:      368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
15134:      378,   379,   380,   381,   382,    -1,   384,   385,   386,   387,
15135:      388,   389,   390,   391,   392,    -1,    -1,   395,   396,   397,
15136:      398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
15137:      408,   409,   410,   411,   412,   413,   414,    -1,    -1,   417,
15138:      418,   419,   420,    -1,   422,   423,   424,   425,   426,    -1,
15139:      428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
15140:       -1,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
15141:       -1,   449,   450,   451,   452,   453,   454,   455,   456,    -1,
15142:      458,   459,   460,   461,   462,   463,   464,   465,    -1,   467,
15143:       -1,   469,   470,   471,   472,   473,   474,   475,    -1,    -1,
15144:      478,    -1,   480,   481,   482,   483,   484,   485,   486,   487,
15145:      488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
15146:      498,   499,   500,   501,    -1,     3,   504,     5,    -1,    -1,
15147:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15148:      518,    -1,    -1,    -1,    22,    23,    24,    25,    26,    27,
15149:       28,    29,    -1,    31,    32,    33,    -1,    -1,    -1,    -1,
15150:       -1,    -1,    -1,    -1,    -1,    43,    44,    -1,    46,    47,
15151:       48,    -1,    50,    51,    52,    53,    54,    -1,    56,    57,
15152:       -1,    59,    60,    61,    62,    63,    64,    -1,    -1,    67,
15153:       68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
15154:       78,    79,    -1,    -1,    -1,    83,    84,    85,    86,    87,
15155:       88,    -1,    90,    91,    92,    -1,    94,    95,    96,    97,
15156:       98,    99,    -1,    -1,   102,   103,   104,   105,   106,   107,
15157:      108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
15158:      118,    -1,   120,   121,   122,   123,   124,   125,    -1,    -1,
15159:      128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
15160:      138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
15161:      148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
15162:      158,   159,    -1,   161,    -1,   163,   164,   165,   166,    -1,
15163:      168,    -1,   170,    -1,    -1,    -1,   174,   175,   176,    -1,
15164:      178,    -1,   180,    -1,   182,   183,   184,   185,    -1,   187,
15165:      188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
15166:      198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
15167:      208,    -1,   210,   211,   212,   213,   214,   215,   216,   217,
15168:       -1,   219,    -1,   221,    -1,    -1,   224,    -1,   226,   227,
15169:      228,   229,   230,   231,    -1,    -1,   234,    -1,   236,    -1,
15170:       -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
15171:      248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
15172:      258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
15173:      268,    -1,   270,   271,   272,   273,   274,    -1,   276,   277,
15174:       -1,   279,    -1,   281,   282,   283,   284,   285,   286,    -1,
15175:      288,   289,    -1,    -1,   292,   293,   294,    -1,    -1,   297,
15176:      298,   299,    -1,   301,    -1,   303,   304,   305,   306,   307,
15177:      308,   309,   310,   311,   312,   313,   314,    -1,    -1,    -1,
15178:       -1,   319,   320,   321,    -1,   323,   324,   325,   326,   327,
15179:      328,    -1,   330,   331,   332,   333,   334,   335,    -1,   337,
15180:      338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
15181:      348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
15182:      358,   359,   360,    -1,   362,   363,    -1,   365,   366,   367,
15183:      368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
15184:      378,   379,   380,   381,    -1,    -1,   384,   385,   386,   387,
15185:      388,   389,   390,   391,   392,    -1,    -1,   395,   396,   397,
15186:      398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
15187:      408,   409,   410,   411,   412,   413,   414,    -1,    -1,   417,
15188:      418,    -1,   420,    -1,   422,   423,   424,   425,   426,    -1,
15189:      428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
15190:       -1,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
15191:       -1,   449,   450,   451,    -1,   453,   454,   455,   456,    -1,
15192:      458,   459,   460,   461,   462,   463,   464,   465,    -1,   467,
15193:       -1,   469,   470,   471,   472,   473,   474,   475,    -1,    -1,
15194:      478,    -1,    -1,   481,   482,   483,   484,   485,   486,   487,
15195:      488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
15196:      498,   499,   500,   501,     3,    -1,     5,    -1,    -1,    -1,
15197:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15198:      518,    -1,    -1,    22,    23,    24,    25,    26,    27,    28,
15199:       29,    -1,    31,    32,    33,    -1,    -1,    -1,    -1,    -1,
15200:       -1,    -1,    -1,    -1,    43,    44,    -1,    46,    47,    48,
15201:       -1,    50,    51,    52,    53,    54,    -1,    56,    57,    -1,
15202:       59,    60,    61,    62,    63,    64,    -1,    -1,    67,    68,
15203:       69,    70,    71,    72,    73,    -1,    75,    76,    77,    78,
15204:       79,    -1,    -1,    -1,    83,    84,    85,    86,    87,    88,
15205:       -1,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
15206:       99,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
15207:      109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
15208:       -1,   120,   121,   122,   123,   124,   125,    -1,    -1,   128,
15209:      129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
15210:       -1,   140,   141,   142,    -1,   144,   145,   146,    -1,   148,
15211:      149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
15212:      159,    -1,   161,    -1,   163,   164,   165,   166,    -1,   168,
15213:       -1,   170,    -1,    -1,    -1,   174,   175,   176,    -1,   178,
15214:       -1,   180,    -1,   182,   183,   184,   185,    -1,   187,   188,
15215:      189,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
15216:       -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
15217:       -1,   210,   211,   212,   213,   214,   215,   216,   217,    -1,
15218:      219,    -1,   221,    -1,    -1,   224,    -1,   226,   227,   228,
15219:      229,   230,   231,    -1,    -1,   234,    -1,   236,    -1,    -1,
15220:      239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
15221:      249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
15222:      259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
15223:       -1,   270,   271,   272,   273,   274,    -1,   276,   277,    -1,
15224:      279,    -1,   281,   282,   283,   284,   285,   286,    -1,   288,
15225:      289,    -1,    -1,   292,   293,   294,    -1,    -1,   297,   298,
15226:      299,    -1,   301,    -1,   303,   304,   305,   306,   307,   308,
15227:      309,   310,   311,   312,   313,   314,    -1,    -1,    -1,    -1,
15228:      319,   320,   321,    -1,   323,   324,   325,   326,   327,   328,
15229:       -1,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
15230:      339,   340,   341,   342,   343,   344,   345,   346,    -1,   348,
15231:      349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
15232:      359,   360,    -1,   362,   363,    -1,   365,   366,   367,   368,
15233:      369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
15234:      379,   380,   381,    -1,    -1,   384,   385,   386,   387,   388,
15235:      389,   390,   391,   392,    -1,    -1,   395,   396,   397,   398,
15236:       -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
15237:      409,   410,   411,   412,   413,   414,    -1,    -1,   417,   418,
15238:       -1,   420,    -1,   422,   423,   424,   425,   426,    -1,   428,
15239:      429,   430,    -1,    -1,   433,   434,   435,   436,   437,    -1,
15240:      439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
15241:      449,   450,   451,    -1,   453,   454,   455,   456,    -1,   458,
15242:      459,   460,   461,   462,   463,   464,   465,    -1,   467,    -1,
15243:      469,   470,   471,   472,   473,   474,   475,    -1,    -1,   478,
15244:       -1,    -1,   481,   482,   483,   484,   485,   486,   487,   488,
15245:      489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
15246:      499,   500,   501,     3,    -1,     5,    -1,    -1,    -1,    -1,
15247:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   518,
15248:       -1,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
15249:       -1,    31,    32,    33,    -1,    -1,    -1,    -1,    -1,    -1,
15250:       -1,    -1,    -1,    43,    44,    -1,    46,    47,    48,    -1,
15251:       50,    51,    52,    53,    54,    -1,    56,    57,    -1,    59,
15252:       60,    61,    62,    63,    64,    -1,    -1,    67,    68,    69,
15253:       70,    71,    72,    73,    -1,    75,    76,    77,    78,    79,
15254:       -1,    -1,    -1,    83,    84,    85,    86,    87,    88,    -1,
15255:       90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
15256:       -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
15257:      110,   111,   112,   113,   114,   115,   116,    -1,   118,    -1,
15258:      120,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
15259:      130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
15260:      140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
15261:      150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
15262:       -1,   161,    -1,   163,   164,   165,   166,    -1,   168,    -1,
15263:      170,    -1,    -1,    -1,   174,   175,   176,    -1,   178,    -1,
15264:      180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
15265:      190,   191,   192,   193,    -1,   195,   196,   197,   198,    -1,
15266:      200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
15267:      210,   211,   212,   213,   214,   215,   216,   217,    -1,   219,
15268:       -1,   221,    -1,    -1,   224,    -1,   226,   227,   228,   229,
15269:      230,   231,    -1,    -1,   234,    -1,   236,    -1,    -1,   239,
15270:      240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
15271:      250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
15272:      260,   261,   262,   263,   264,   265,   266,   267,   268,    -1,
15273:      270,   271,   272,   273,   274,    -1,   276,   277,    -1,   279,
15274:       -1,   281,   282,   283,   284,   285,   286,    -1,   288,   289,
15275:       -1,    -1,   292,   293,   294,    -1,    -1,   297,   298,   299,
15276:       -1,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
15277:      310,   311,   312,   313,   314,    -1,    -1,    -1,    -1,   319,
15278:      320,   321,    -1,   323,   324,   325,   326,   327,   328,    -1,
15279:      330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
15280:      340,   341,   342,   343,   344,   345,   346,    -1,   348,   349,
15281:      350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
15282:      360,    -1,   362,   363,    -1,   365,   366,   367,   368,   369,
15283:      370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
15284:      380,   381,    -1,    -1,   384,   385,   386,   387,   388,   389,
15285:      390,   391,   392,    -1,    -1,   395,   396,   397,   398,    -1,
15286:      400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
15287:      410,   411,   412,   413,   414,    -1,    -1,   417,   418,    -1,
15288:      420,    -1,   422,   423,   424,   425,   426,    -1,   428,   429,
15289:      430,    -1,    -1,   433,   434,   435,   436,   437,    -1,   439,
15290:      440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
15291:      450,   451,    -1,   453,   454,   455,   456,    -1,   458,   459,
15292:      460,   461,   462,   463,   464,   465,    -1,   467,    -1,   469,
15293:      470,   471,   472,   473,   474,   475,    -1,    -1,   478,    -1,
15294:       -1,   481,   482,   483,   484,   485,   486,   487,   488,   489,
15295:      490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
15296:      500,   501,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
15297:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   518,    -1,
15298:       -1,    22,    23,    24,    25,    26,    27,    28,    29,    -1,
15299:       31,    32,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15300:       -1,    -1,    43,    44,    -1,    46,    47,    48,    -1,    50,
15301:       51,    52,    53,    54,    -1,    56,    57,    -1,    59,    60,
15302:       61,    62,    63,    64,    -1,    -1,    67,    68,    69,    70,
15303:       71,    72,    73,    -1,    75,    76,    77,    78,    79,    -1,
15304:       -1,    -1,    83,    84,    85,    86,    87,    88,    -1,    90,
15305:       91,    92,    -1,    94,    95,    96,    97,    98,    99,    -1,
15306:       -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
15307:      111,   112,   113,   114,   115,   116,    -1,   118,    -1,   120,
15308:      121,   122,   123,   124,   125,    -1,    -1,   128,   129,   130,
15309:      131,    -1,    -1,   134,   135,   136,   137,   138,    -1,   140,
15310:      141,   142,    -1,   144,   145,   146,    -1,   148,   149,   150,
15311:      151,   152,   153,   154,   155,   156,   157,   158,   159,    -1,
15312:      161,    -1,   163,   164,   165,   166,    -1,   168,    -1,   170,
15313:       -1,    -1,    -1,   174,   175,   176,    -1,   178,    -1,   180,
15314:       -1,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
15315:      191,   192,   193,    -1,   195,   196,   197,   198,    -1,   200,
15316:      201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
15317:      211,   212,   213,   214,   215,   216,   217,    -1,   219,    -1,
15318:      221,    -1,    -1,   224,    -1,   226,   227,   228,   229,   230,
15319:      231,    -1,    -1,   234,    -1,   236,    -1,    -1,   239,   240,
15320:      241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
15321:      251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
15322:      261,   262,   263,   264,   265,   266,   267,   268,    -1,   270,
15323:      271,   272,   273,   274,    -1,   276,   277,    -1,   279,    -1,
15324:      281,   282,   283,   284,   285,   286,    -1,   288,   289,    -1,
15325:       -1,   292,   293,   294,    -1,    -1,   297,   298,   299,    -1,
15326:      301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
15327:      311,   312,   313,   314,    -1,    -1,    -1,    -1,   319,   320,
15328:      321,    -1,   323,   324,   325,   326,   327,   328,    -1,   330,
15329:      331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
15330:      341,   342,   343,   344,   345,   346,    -1,   348,   349,   350,
15331:      351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
15332:       -1,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
15333:      371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
15334:      381,    -1,    -1,   384,   385,   386,   387,   388,   389,   390,
15335:      391,   392,    -1,    -1,   395,   396,   397,   398,    -1,   400,
15336:      401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
15337:      411,   412,   413,   414,    -1,    -1,   417,   418,    -1,   420,
15338:       -1,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
15339:       -1,    -1,   433,   434,   435,   436,   437,    -1,   439,   440,
15340:      441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
15341:      451,    -1,   453,   454,   455,   456,    -1,   458,   459,   460,
15342:      461,   462,   463,   464,   465,    -1,   467,    -1,   469,   470,
15343:      471,   472,   473,   474,   475,    -1,    -1,   478,    -1,    -1,
15344:      481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
15345:      491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
15346:      501,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
15347:       -1,    -1,    -1,    -1,    -1,    -1,    -1,   518,    -1,    -1,
15348:       22,    23,    24,    25,    26,    27,    28,    29,    -1,    31,
15349:       32,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15350:       -1,    43,    44,    -1,    46,    47,    48,    -1,    50,    51,
15351:       52,    53,    54,    -1,    56,    57,    -1,    59,    60,    61,
15352:       62,    63,    64,    -1,    -1,    67,    68,    69,    70,    71,
15353:       72,    73,    -1,    75,    76,    77,    78,    79,    -1,    -1,
15354:       -1,    83,    84,    85,    86,    87,    88,    -1,    90,    91,
15355:       92,    -1,    94,    95,    96,    97,    98,    99,    -1,    -1,
15356:      102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
15357:      112,   113,   114,   115,   116,    -1,   118,    -1,   120,   121,
15358:      122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
15359:       -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
15360:      142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
15361:      152,   153,   154,   155,   156,   157,   158,   159,    -1,   161,
15362:       -1,   163,   164,   165,   166,    -1,   168,    -1,   170,    -1,
15363:       -1,    -1,   174,   175,   176,    -1,   178,    -1,   180,    -1,
15364:      182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
15365:      192,   193,    -1,   195,   196,   197,   198,    -1,   200,   201,
15366:      202,   203,   204,   205,   206,    -1,   208,    -1,   210,   211,
15367:      212,   213,   214,   215,   216,   217,    -1,   219,    -1,   221,
15368:       -1,    -1,   224,    -1,   226,   227,   228,   229,   230,   231,
15369:       -1,    -1,   234,    -1,   236,    -1,    -1,   239,   240,   241,
15370:      242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
15371:      252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
15372:      262,   263,   264,   265,   266,   267,   268,    -1,   270,   271,
15373:      272,   273,   274,    -1,   276,   277,    -1,   279,    -1,   281,
15374:      282,   283,   284,   285,   286,    -1,   288,   289,    -1,    -1,
15375:      292,   293,   294,    -1,    -1,   297,   298,   299,    -1,   301,
15376:       -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
15377:      312,   313,   314,    -1,    -1,    -1,    -1,   319,   320,   321,
15378:       -1,   323,   324,   325,   326,   327,   328,    -1,   330,   331,
15379:      332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
15380:      342,   343,   344,   345,   346,    -1,   348,   349,   350,   351,
15381:      352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
15382:      362,   363,    -1,   365,   366,   367,   368,   369,   370,   371,
15383:      372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
15384:       -1,    -1,   384,   385,   386,   387,   388,   389,   390,   391,
15385:      392,    -1,    -1,   395,   396,   397,   398,    -1,   400,   401,
15386:      402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
15387:      412,   413,   414,    -1,    -1,   417,   418,    -1,   420,    -1,
15388:      422,   423,   424,   425,   426,    -1,   428,   429,   430,    -1,
15389:       -1,   433,   434,   435,   436,   437,    -1,   439,   440,   441,
15390:      442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
15391:       -1,   453,   454,   455,   456,    -1,   458,   459,   460,   461,
15392:      462,   463,   464,   465,    -1,   467,    -1,   469,   470,   471,
15393:      472,   473,   474,   475,    -1,    -1,   478,    -1,    -1,   481,
15394:      482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
15395:      492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
15396:        3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15397:       -1,    -1,    -1,    -1,    -1,    -1,   518,    -1,    -1,    22,
15398:       23,    24,    25,    26,    27,    28,    29,    -1,    31,    32,
15399:       33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15400:       43,    44,    -1,    46,    47,    48,    -1,    50,    51,    52,
15401:       53,    54,    -1,    56,    57,    -1,    59,    60,    61,    62,
15402:       63,    64,    -1,    -1,    67,    68,    69,    70,    71,    72,
15403:       73,    -1,    75,    76,    77,    78,    79,    -1,    -1,    -1,
15404:       83,    84,    85,    86,    87,    88,    -1,    90,    91,    92,
15405:       -1,    94,    95,    96,    97,    98,    99,    -1,    -1,   102,
15406:      103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
15407:      113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
15408:      123,   124,   125,    -1,    -1,   128,   129,   130,   131,    -1,
15409:       -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
15410:       -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
15411:      153,   154,   155,   156,   157,   158,   159,    -1,   161,    -1,
15412:      163,   164,   165,   166,    -1,   168,    -1,   170,    -1,    -1,
15413:       -1,   174,   175,   176,    -1,   178,    -1,   180,    -1,   182,
15414:      183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
15415:      193,    -1,   195,   196,   197,   198,    -1,   200,   201,   202,
15416:      203,   204,   205,   206,    -1,   208,    -1,   210,   211,   212,
15417:      213,   214,   215,   216,   217,    -1,   219,    -1,   221,    -1,
15418:       -1,   224,    -1,   226,   227,   228,   229,   230,   231,    -1,
15419:       -1,   234,    -1,   236,    -1,    -1,   239,   240,   241,   242,
15420:      243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
15421:      253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
15422:      263,   264,   265,   266,   267,   268,    -1,   270,   271,   272,
15423:      273,   274,    -1,   276,   277,    -1,   279,    -1,   281,   282,
15424:      283,   284,   285,   286,    -1,   288,   289,    -1,    -1,   292,
15425:      293,   294,    -1,    -1,   297,   298,   299,    -1,   301,    -1,
15426:      303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
15427:      313,   314,    -1,    -1,    -1,    -1,   319,   320,   321,    -1,
15428:      323,   324,   325,   326,   327,   328,    -1,   330,   331,   332,
15429:      333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
15430:      343,   344,   345,   346,    -1,   348,   349,   350,   351,   352,
15431:      353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
15432:      363,    -1,   365,   366,   367,   368,   369,   370,   371,   372,
15433:      373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
15434:       -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
15435:       -1,    -1,   395,   396,   397,   398,    -1,   400,   401,   402,
15436:      403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
15437:      413,   414,    -1,    -1,   417,   418,    -1,   420,    -1,   422,
15438:      423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
15439:      433,   434,   435,   436,   437,    -1,   439,   440,   441,   442,
15440:      443,   444,   445,   446,    -1,    -1,   449,   450,   451,    -1,
15441:      453,   454,   455,   456,    -1,   458,   459,   460,   461,   462,
15442:      463,   464,   465,    -1,   467,    -1,   469,   470,   471,   472,
15443:      473,   474,   475,    -1,    -1,   478,    -1,    -1,   481,   482,
15444:      483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
15445:      493,   494,   495,   496,   497,   498,   499,   500,   501,     3,
15446:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15447:       -1,    -1,    -1,    -1,    -1,   518,    -1,    -1,    22,    23,
15448:       24,    25,    26,    27,    28,    29,    -1,    31,    32,    33,
15449:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,
15450:       44,    -1,    46,    47,    48,    -1,    50,    51,    52,    53,
15451:       54,    -1,    56,    57,    -1,    59,    60,    61,    62,    63,
15452:       64,    -1,    -1,    67,    68,    69,    70,    71,    72,    73,
15453:       -1,    75,    76,    77,    78,    79,    -1,    -1,    -1,    83,
15454:       84,    85,    86,    87,    88,    -1,    90,    91,    92,    -1,
15455:       94,    95,    96,    97,    98,    99,    -1,    -1,   102,   103,
15456:      104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
15457:      114,   115,   116,    -1,   118,    -1,   120,   121,   122,   123,
15458:      124,   125,    -1,    -1,   128,   129,   130,   131,    -1,    -1,
15459:      134,   135,   136,   137,   138,    -1,   140,   141,   142,    -1,
15460:      144,   145,   146,    -1,   148,   149,   150,   151,   152,   153,
15461:      154,   155,   156,   157,   158,   159,    -1,   161,    -1,   163,
15462:      164,   165,   166,    -1,   168,    -1,   170,    -1,    -1,    -1,
15463:      174,   175,   176,    -1,   178,    -1,   180,    -1,   182,   183,
15464:      184,   185,    -1,   187,   188,   189,   190,   191,   192,   193,
15465:       -1,   195,   196,   197,   198,    -1,   200,   201,   202,   203,
15466:      204,   205,   206,    -1,   208,    -1,   210,   211,   212,   213,
15467:      214,   215,   216,   217,    -1,   219,    -1,   221,    -1,    -1,
15468:      224,    -1,   226,   227,   228,   229,   230,   231,    -1,    -1,
15469:      234,    -1,   236,    -1,    -1,   239,   240,   241,   242,   243,
15470:      244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
15471:      254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
15472:      264,   265,   266,   267,   268,    -1,   270,   271,   272,   273,
15473:      274,    -1,   276,   277,    -1,   279,    -1,   281,   282,   283,
15474:      284,   285,   286,    -1,   288,   289,    -1,    -1,   292,   293,
15475:      294,    -1,    -1,   297,   298,   299,    -1,   301,    -1,   303,
15476:      304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
15477:      314,    -1,    -1,    -1,    -1,   319,   320,   321,    -1,   323,
15478:      324,   325,   326,   327,   328,    -1,   330,   331,   332,   333,
15479:      334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
15480:      344,   345,   346,    -1,   348,   349,   350,   351,   352,   353,
15481:      354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
15482:       -1,   365,   366,   367,   368,   369,   370,   371,   372,   373,
15483:      374,   375,   376,   377,   378,   379,   380,   381,    -1,    -1,
15484:      384,   385,   386,   387,   388,   389,   390,   391,   392,    -1,
15485:       -1,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
15486:      404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
15487:      414,    -1,    -1,   417,   418,    -1,   420,    -1,   422,   423,
15488:      424,   425,   426,    -1,   428,   429,   430,    -1,    -1,   433,
15489:      434,   435,   436,   437,    -1,   439,   440,   441,   442,   443,
15490:      444,   445,   446,    -1,    -1,   449,   450,   451,    -1,   453,
15491:      454,   455,   456,    -1,   458,   459,   460,   461,   462,   463,
15492:      464,   465,    -1,   467,    -1,   469,   470,   471,   472,   473,
15493:      474,   475,    -1,    -1,   478,    -1,    -1,   481,   482,   483,
15494:      484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
15495:      494,   495,   496,   497,   498,   499,   500,   501,     3,    -1,
15496:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15497:       -1,    -1,    -1,    -1,   518,    -1,    -1,    22,    23,    24,
15498:       25,    26,    27,    28,    29,    -1,    31,    32,    33,    -1,
15499:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,    44,
15500:       -1,    46,    47,    48,    -1,    50,    51,    52,    53,    54,
15501:       -1,    56,    57,    -1,    59,    60,    61,    62,    63,    64,
15502:       -1,    -1,    67,    68,    69,    70,    71,    72,    73,    -1,
15503:       75,    76,    77,    78,    79,    -1,    -1,    -1,    83,    84,
15504:       85,    86,    87,    88,    -1,    90,    91,    92,    -1,    94,
15505:       95,    96,    97,    98,    99,    -1,    -1,   102,   103,   104,
15506:      105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
15507:      115,   116,    -1,   118,    -1,   120,   121,   122,   123,   124,
15508:      125,    -1,    -1,   128,   129,   130,   131,    -1,    -1,   134,
15509:      135,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
15510:      145,   146,    -1,   148,   149,   150,   151,   152,   153,   154,
15511:      155,   156,   157,   158,   159,    -1,   161,    -1,   163,   164,
15512:      165,   166,    -1,   168,    -1,   170,    -1,    -1,    -1,   174,
15513:      175,   176,    -1,   178,    -1,   180,    -1,   182,   183,   184,
15514:      185,    -1,   187,   188,   189,   190,   191,   192,   193,    -1,
15515:      195,   196,   197,   198,    -1,   200,   201,   202,   203,   204,
15516:      205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
15517:      215,   216,   217,    -1,   219,    -1,   221,    -1,    -1,   224,
15518:       -1,   226,   227,   228,   229,   230,   231,    -1,    -1,   234,
15519:       -1,   236,    -1,    -1,   239,   240,   241,   242,   243,   244,
15520:      245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
15521:      255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
15522:      265,   266,   267,   268,    -1,   270,   271,   272,   273,   274,
15523:       -1,   276,   277,    -1,   279,    -1,   281,   282,   283,   284,
15524:      285,   286,    -1,   288,   289,    -1,    -1,   292,   293,   294,
15525:       -1,    -1,   297,   298,   299,    -1,   301,    -1,   303,   304,
15526:      305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
15527:       -1,    -1,    -1,    -1,   319,   320,   321,    -1,   323,   324,
15528:      325,   326,   327,   328,    -1,   330,   331,   332,   333,   334,
15529:      335,    -1,   337,   338,   339,   340,   341,   342,   343,   344,
15530:      345,   346,    -1,   348,   349,   350,   351,   352,   353,   354,
15531:      355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
15532:      365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
15533:      375,   376,   377,   378,   379,   380,   381,    -1,    -1,   384,
15534:      385,   386,   387,   388,   389,   390,   391,   392,    -1,    -1,
15535:      395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
15536:      405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
15537:       -1,    -1,   417,   418,    -1,   420,    -1,   422,   423,   424,
15538:      425,   426,    -1,   428,   429,   430,    -1,    -1,   433,   434,
15539:      435,   436,   437,    -1,   439,   440,   441,   442,   443,   444,
15540:      445,   446,    -1,    -1,   449,   450,   451,    -1,   453,   454,
15541:      455,   456,    -1,   458,   459,   460,   461,   462,   463,   464,
15542:      465,    -1,   467,    -1,   469,   470,   471,   472,   473,   474,
15543:      475,    -1,    -1,   478,    -1,    -1,   481,   482,   483,   484,
15544:      485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
15545:      495,   496,   497,   498,   499,   500,   501,     3,    -1,    -1,
15546:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15547:       -1,    -1,    -1,   518,    -1,    -1,    22,    23,    24,    25,
15548:       26,    27,    28,    29,    -1,    31,    32,    33,    -1,    -1,
15549:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,    44,    -1,
15550:       46,    47,    48,    -1,    50,    51,    52,    53,    54,    -1,
15551:       56,    57,    -1,    59,    60,    61,    62,    63,    64,    -1,
15552:       -1,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
15553:       76,    77,    78,    79,    -1,    -1,    -1,    83,    84,    85,
15554:       86,    87,    88,    -1,    90,    91,    92,    -1,    94,    95,
15555:       96,    97,    98,    99,    -1,    -1,   102,   103,   104,   105,
15556:      106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
15557:      116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
15558:       -1,    -1,   128,   129,   130,   131,    -1,    -1,   134,   135,
15559:      136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
15560:      146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
15561:      156,   157,   158,   159,    -1,   161,    -1,   163,   164,   165,
15562:      166,    -1,   168,    -1,   170,    -1,    -1,    -1,   174,   175,
15563:      176,    -1,   178,    -1,   180,    -1,   182,   183,   184,   185,
15564:       -1,   187,   188,   189,   190,   191,   192,   193,    -1,   195,
15565:      196,   197,   198,    -1,   200,   201,   202,   203,   204,   205,
15566:      206,    -1,   208,    -1,   210,   211,   212,   213,   214,   215,
15567:      216,   217,    -1,   219,    -1,   221,    -1,    -1,   224,    -1,
15568:      226,   227,   228,   229,   230,   231,    -1,    -1,   234,    -1,
15569:      236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
15570:      246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
15571:      256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
15572:      266,   267,   268,    -1,   270,   271,   272,   273,   274,    -1,
15573:      276,   277,    -1,   279,    -1,   281,   282,   283,   284,   285,
15574:      286,    -1,   288,   289,    -1,    -1,   292,   293,   294,    -1,
15575:       -1,   297,   298,   299,    -1,   301,    -1,   303,   304,   305,
15576:      306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
15577:       -1,    -1,    -1,   319,   320,   321,    -1,   323,   324,   325,
15578:      326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
15579:       -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
15580:      346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
15581:      356,   357,   358,   359,   360,    -1,   362,   363,    -1,   365,
15582:      366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
15583:      376,   377,   378,   379,   380,   381,    -1,    -1,   384,   385,
15584:      386,   387,   388,   389,   390,   391,   392,    -1,    -1,   395,
15585:      396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
15586:      406,   407,   408,   409,   410,   411,   412,   413,   414,    -1,
15587:       -1,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
15588:      426,    -1,   428,   429,   430,    -1,    -1,   433,   434,   435,
15589:      436,   437,    -1,   439,   440,   441,   442,   443,   444,   445,
15590:      446,    -1,    -1,   449,   450,   451,    -1,   453,   454,   455,
15591:      456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
15592:       -1,   467,    -1,   469,   470,   471,   472,   473,   474,   475,
15593:       -1,    -1,   478,    -1,    -1,   481,   482,   483,   484,   485,
15594:      486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
15595:      496,   497,   498,   499,   500,   501,    -1,     3,     4,     5,
15596:       -1,    -1,     8,     9,    -1,    -1,    -1,    -1,    -1,    15,
15597:       16,    -1,   518,    19,    20,    21,    22,    23,    24,    25,
15598:       26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
15599:       36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
15600:       46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
15601:       56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
15602:       66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
15603:       76,    77,    78,    -1,    80,    81,    82,    83,    84,    85,
15604:       86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
15605:       96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
15606:      106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
15607:      116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
15608:      126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
15609:      136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
15610:      146,   147,   148,   149,   150,   151,    -1,   153,   154,   155,
15611:      156,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
15612:      166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
15613:      176,   177,   178,   179,   180,   181,    -1,    -1,   184,   185,
15614:      186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
15615:      196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
15616:      206,   207,   208,   209,    -1,   211,   212,   213,   214,   215,
15617:      216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
15618:      226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
15619:      236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
15620:      246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
15621:      256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
15622:      266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
15623:      276,   277,   278,   279,   280,    -1,   282,   283,   284,   285,
15624:      286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
15625:      296,   297,   298,    -1,   300,   301,   302,    -1,   304,   305,
15626:      306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
15627:      316,   317,   318,   319,   320,    -1,   322,   323,   324,    -1,
15628:      326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
15629:      336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
15630:      346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
15631:      356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
15632:      366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
15633:      376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
15634:      386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
15635:      396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
15636:      406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
15637:      416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
15638:      426,   427,   428,   429,   430,   431,   432,   433,   434,    -1,
15639:      436,    -1,   438,   439,   440,   441,   442,   443,   444,   445,
15640:      446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
15641:      456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
15642:      466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
15643:      476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
15644:      486,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15645:       -1,    -1,   498,   499,   500,   501,    -1,     3,    -1,   505,
15646:      506,   507,     8,   509,   510,   511,   512,   513,   514,    15,
15647:       16,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
15648:       26,    27,    28,    29,    -1,    31,    32,    33,    -1,    -1,
15649:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,    44,    -1,
15650:       46,    47,    48,    -1,    50,    51,    52,    53,    54,    -1,
15651:       56,    57,    -1,    59,    60,    61,    62,    63,    64,    -1,
15652:       -1,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
15653:       76,    77,    78,    79,    -1,    -1,    -1,    83,    84,    85,
15654:       86,    87,    88,    -1,    90,    91,    92,    -1,    94,    95,
15655:       96,    97,    98,    99,    -1,    -1,   102,   103,   104,   105,
15656:      106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
15657:      116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
15658:       -1,    -1,   128,   129,   130,   131,    -1,    -1,   134,   135,
15659:      136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
15660:      146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
15661:      156,   157,   158,   159,    -1,   161,    -1,   163,   164,   165,
15662:      166,    -1,   168,    -1,   170,    -1,    -1,    -1,   174,   175,
15663:      176,    -1,   178,    -1,   180,    -1,   182,   183,   184,   185,
15664:       -1,   187,   188,   189,   190,   191,   192,   193,    -1,   195,
15665:      196,   197,   198,    -1,   200,   201,   202,   203,   204,   205,
15666:      206,    -1,   208,    -1,   210,   211,   212,   213,   214,   215,
15667:      216,   217,    -1,   219,    -1,   221,    -1,    -1,   224,    -1,
15668:      226,   227,   228,   229,   230,   231,    -1,    -1,   234,    -1,
15669:      236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
15670:      246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
15671:      256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
15672:      266,   267,   268,    -1,   270,   271,   272,   273,   274,    -1,
15673:      276,   277,    -1,   279,    -1,   281,   282,   283,   284,   285,
15674:      286,    -1,   288,   289,    -1,    -1,   292,   293,   294,    -1,
15675:       -1,   297,   298,   299,    -1,   301,    -1,   303,   304,   305,
15676:      306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
15677:       -1,    -1,    -1,   319,   320,   321,    -1,   323,   324,   325,
15678:      326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
15679:       -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
15680:      346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
15681:      356,   357,   358,   359,   360,    -1,   362,   363,    -1,   365,
15682:      366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
15683:      376,   377,   378,   379,   380,   381,    -1,    -1,   384,   385,
15684:      386,   387,   388,   389,   390,   391,   392,    -1,    -1,   395,
15685:      396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
15686:      406,   407,   408,   409,   410,   411,   412,   413,   414,    -1,
15687:       -1,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
15688:      426,    -1,   428,   429,   430,    -1,    -1,   433,   434,   435,
15689:      436,   437,    -1,   439,   440,   441,   442,   443,   444,   445,
15690:      446,    -1,    -1,   449,   450,   451,    -1,   453,   454,   455,
15691:      456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
15692:       -1,   467,    -1,   469,   470,   471,   472,   473,   474,   475,
15693:       -1,    -1,   478,    -1,    -1,   481,   482,   483,   484,   485,
15694:      486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
15695:      496,   497,   498,   499,   500,   501,    -1,    -1,    -1,   505,
15696:      506,   507,    -1,   509,   510,   511,   512,   513,   514,     8,
15697:       -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,    18,
15698:       19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15699:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    36,    -1,    -1,
15700:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    46,     8,    -1,
15701:       -1,    11,    -1,    -1,    53,    15,    16,    17,    18,    19,
15702:       20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15703:       -1,    -1,    -1,    -1,    -1,    -1,    36,    -1,    -1,    -1,
15704:       -1,    80,    -1,    -1,    -1,    -1,    46,     8,    -1,    -1,
15705:       11,    -1,    -1,    53,    15,    16,    17,    18,    19,    20,
15706:       21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15707:       -1,    -1,    -1,    -1,    -1,    36,    -1,    -1,    -1,    -1,
15708:       80,    -1,    -1,    -1,    -1,    46,    -1,    -1,    -1,    -1,
15709:       -1,    -1,    53,    -1,    -1,     8,    -1,    -1,    11,    -1,
15710:       -1,    -1,    15,    16,    17,    18,    19,    20,    21,    -1,
15711:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    80,
15712:       -1,    -1,    -1,    36,    -1,    -1,    -1,    -1,    -1,    -1,
15713:       -1,    -1,    -1,    46,     8,    -1,    -1,    11,   177,    -1,
15714:       53,    15,    16,    17,    18,    19,    20,    21,    -1,    -1,
15715:       -1,    -1,    -1,    -1,    -1,   194,    -1,    -1,    -1,    -1,
15716:      199,    -1,    36,    -1,    -1,    -1,    -1,    80,    -1,    -1,
15717:       -1,    -1,    46,    -1,    -1,    -1,    -1,   177,    -1,    53,
15718:       -1,    -1,    -1,   222,   223,    -1,    -1,    -1,    -1,    -1,
15719:       -1,    -1,    -1,    -1,   194,    -1,    -1,    -1,   237,   199,
15720:       -1,    -1,    -1,    -1,    -1,    -1,    80,    -1,    -1,    -1,
15721:       -1,    -1,    -1,    -1,    -1,    -1,   177,    -1,    -1,    -1,
15722:       -1,    -1,   222,   223,    -1,    -1,    -1,    -1,    -1,    -1,
15723:       -1,    -1,    -1,   194,    -1,    -1,   275,   237,   199,   278,
15724:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15725:       -1,    -1,    -1,   292,    -1,    -1,   295,    -1,    -1,    -1,
15726:       -1,   222,   223,    -1,   177,    -1,    -1,    -1,    -1,    -1,
15727:       -1,    -1,    -1,    -1,    -1,   275,   237,    -1,   278,    -1,
15728:       -1,   194,    -1,    -1,    -1,    -1,   199,    -1,    -1,    -1,
15729:       -1,    -1,   292,    -1,    -1,   295,    -1,    -1,    -1,    -1,
15730:       -1,    -1,    -1,   177,    -1,    -1,    -1,    -1,    -1,   222,
15731:      223,    -1,    -1,    -1,   275,    -1,    -1,   278,    -1,    -1,
15732:      194,    -1,    -1,    -1,   237,   199,    -1,    -1,    -1,    -1,
15733:       -1,   292,    -1,    -1,   295,    -1,    -1,    -1,    -1,    -1,
15734:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   222,   223,
15735:       -1,    -1,    -1,    -1,    -1,   394,    -1,    -1,    -1,    -1,
15736:       -1,    -1,   275,   237,    -1,   278,    -1,    -1,    -1,    -1,
15737:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   292,
15738:       -1,    -1,   295,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15739:       -1,    -1,    -1,    -1,   394,    -1,    -1,    -1,    -1,    -1,
15740:       -1,   275,    -1,    -1,   278,    -1,    -1,    -1,    -1,    -1,
15741:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   292,    -1,
15742:       -1,   295,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15743:       -1,    -1,    -1,   394,    -1,    -1,    -1,    -1,    -1,    -1,
15744:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15745:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15746:       -1,    -1,    -1,   502,    -1,    -1,   505,   506,   507,    -1,
15747:      509,   510,   511,   512,   513,   514,    -1,    -1,    -1,    -1,
15748:      519,   394,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,
15749:       11,    -1,    -1,    -1,    15,    16,    17,    18,    19,    20,
15750:       21,    -1,   502,    -1,    -1,   505,   506,   507,    -1,   509,
15751:      510,   511,   512,   513,   514,    36,    -1,    -1,    -1,   519,
15752:      394,    -1,    -1,    -1,    -1,    46,    -1,    -1,    -1,    -1,
15753:       -1,    -1,    53,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15754:       -1,   502,    -1,    -1,   505,   506,   507,    -1,   509,   510,
15755:      511,   512,   513,   514,    -1,    -1,    -1,    -1,   519,    80,
15756:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15757:       -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
15758:       -1,    15,    16,    17,    18,    19,    20,    21,    -1,   502,
15759:       -1,    -1,   505,   506,   507,    -1,   509,   510,   511,   512,
15760:      513,   514,    36,    -1,    -1,    -1,   519,    -1,    -1,    -1,
15761:       -1,    -1,    46,     8,    -1,    -1,    11,    -1,    -1,    53,
15762:       15,    16,    17,    18,    19,    20,    21,    -1,   502,    -1,
15763:       -1,   505,   506,   507,    -1,   509,   510,   511,   512,   513,
15764:      514,    36,    -1,    -1,    -1,   519,    80,    -1,    -1,    -1,
15765:       -1,    46,     8,    -1,    -1,    11,   177,    -1,    53,    15,
15766:       16,    17,    18,    19,    20,    21,    -1,    -1,    -1,    -1,
15767:       -1,    -1,    -1,   194,    -1,    -1,    -1,    -1,   199,    -1,
15768:       36,    -1,    -1,    -1,    -1,    80,    -1,    -1,    -1,    -1,
15769:       46,    -1,    -1,    -1,    -1,    -1,    -1,    53,    -1,    -1,
15770:       -1,   222,   223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15771:       -1,    -1,    -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,
15772:       -1,    -1,    -1,    -1,    80,    -1,    -1,    -1,    -1,    -1,
15773:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,
15774:       -1,    -1,    11,   177,    -1,    -1,    15,    16,    17,    18,
15775:       19,    20,    21,    -1,   275,    -1,    -1,   278,    -1,    -1,
15776:      194,    -1,    -1,    -1,    -1,   199,    -1,    36,    -1,    -1,
15777:       -1,   292,    -1,    -1,   295,    -1,    -1,    46,    -1,    -1,
15778:       -1,    -1,   177,    -1,    53,    -1,    -1,    -1,   222,   223,
15779:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   194,
15780:       -1,    -1,    -1,   237,   199,    -1,    -1,    -1,    -1,    -1,
15781:       -1,    80,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15782:       -1,   177,    -1,    -1,    -1,    -1,    -1,   222,   223,    -1,
15783:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   194,    -1,
15784:       -1,   275,   237,   199,   278,    -1,    -1,    -1,    -1,    -1,
15785:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   292,    -1,
15786:       -1,   295,    -1,    -1,    -1,    -1,   222,   223,    -1,    -1,
15787:       -1,    -1,    -1,   394,    -1,    -1,    -1,    -1,    -1,    -1,
15788:      275,   237,    -1,   278,    -1,    -1,    -1,    -1,    -1,    -1,
15789:       -1,    -1,    -1,    -1,    -1,    -1,    -1,   292,    -1,    -1,
15790:      295,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   177,    -1,
15791:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   275,
15792:       -1,    -1,   278,    -1,    -1,   194,    -1,    -1,    -1,    -1,
15793:      199,    -1,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,
15794:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15795:       -1,    -1,    -1,   222,   223,    -1,    -1,    -1,    -1,    -1,
15796:      394,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   237,    -1,
15797:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15798:       -1,   502,    -1,    -1,   505,   506,   507,    -1,   509,   510,
15799:      511,   512,   513,   514,    -1,    -1,    -1,    -1,   519,   394,
15800:       -1,    -1,    -1,    -1,    -1,    -1,   275,    -1,    -1,   278,
15801:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15802:       -1,    68,    69,   292,    -1,    -1,   295,    -1,    -1,    -1,
15803:       -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,   394,    11,
15804:       -1,    -1,    -1,    15,    16,    17,    18,    19,    20,    21,
15805:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15806:       -1,    -1,   109,   110,    36,    -1,   113,   114,   502,    -1,
15807:       -1,   505,   506,   507,    46,   509,   510,   511,   512,   513,
15808:      514,    53,    -1,    -1,    -1,   519,    -1,    -1,    -1,    -1,
15809:       -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
15810:       15,    16,    17,    18,    19,    20,    21,   502,    80,    -1,
15811:      505,   506,   507,    -1,   509,   510,   511,   512,   513,   514,
15812:       -1,    36,    -1,    -1,   519,   394,    -1,    -1,    -1,    -1,
15813:       -1,    46,    -1,    -1,    -1,    -1,    -1,    -1,    53,    -1,
15814:       -1,    -1,   189,   190,    -1,    -1,   502,    -1,    -1,   505,
15815:      506,   507,    -1,   509,   510,   511,   512,   513,   514,    -1,
15816:       -1,   517,    -1,    -1,    -1,    80,    -1,    -1,    -1,    -1,
15817:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15818:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15819:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15820:       -1,    -1,    -1,    -1,    -1,   177,   253,   254,   255,   256,
15821:      257,   258,   259,   260,    -1,    -1,   263,   264,    -1,    -1,
15822:       -1,    -1,   194,    -1,    -1,    -1,    -1,   199,    -1,    -1,
15823:       -1,    -1,    -1,   502,    -1,    -1,   505,   506,   507,    -1,
15824:      509,   510,   511,   512,   513,   514,    -1,    -1,   517,    -1,
15825:      222,   223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15826:       -1,    -1,   177,    -1,    -1,   237,    -1,    -1,    -1,    -1,
15827:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   194,
15828:       -1,    -1,    -1,    -1,   199,    -1,    -1,    -1,    -1,    -1,
15829:      337,   338,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15830:       -1,    -1,    -1,   275,    -1,    -1,   278,   222,   223,    -1,
15831:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15832:      292,    -1,   237,   295,    -1,    -1,    -1,    -1,    -1,    -1,
15833:       -1,   378,   379,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15834:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15835:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15836:      275,    -1,    -1,   278,    -1,    -1,    -1,    -1,    -1,    -1,
15837:       -1,    -1,    -1,    -1,    -1,    -1,    -1,   292,    -1,    -1,
15838:      295,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15839:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15840:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15841:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15842:       -1,    -1,   394,    -1,    -1,    -1,    -1,   474,   475,    -1,
15843:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15844:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15845:       -1,   498,   499,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15846:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15847:       -1,   518,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
15848:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15849:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15850:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15851:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15852:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15853:      502,    -1,    -1,   505,   506,   507,    -1,   509,   510,   511,
15854:      512,   513,   514,    -1,    -1,   517,    -1,    -1,    -1,    -1,
15855:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15856:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15857:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15858:       -1,    -1,    -1,    -1,     3,    -1,    -1,   502,    -1,    -1,
15859:      505,   506,   507,    -1,   509,   510,   511,   512,   513,   514,
15860:       -1,    -1,   517,    22,    23,    24,    25,    26,    27,    28,
15861:       29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
15862:       39,    40,    41,    42,    43,    44,    45,    46,    47,    48,
15863:       49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
15864:       59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
15865:       69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
15866:       79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
15867:       89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
15868:       99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
15869:      109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
15870:      119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
15871:      129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
15872:      139,   140,   141,   142,   143,   144,   145,   146,   147,   148,
15873:      149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
15874:      159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
15875:      169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
15876:      179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
15877:      189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
15878:      199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
15879:      209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
15880:      219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
15881:      229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
15882:      239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
15883:      249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
15884:      259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
15885:      269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
15886:      279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
15887:      289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
15888:      299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
15889:      309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
15890:      319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
15891:      329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
15892:      339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
15893:      349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
15894:      359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
15895:      369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
15896:      379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
15897:      389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
15898:      399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
15899:      409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
15900:      419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
15901:      429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
15902:      439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
15903:      449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
15904:      459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
15905:      469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
15906:      479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
15907:      489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
15908:      499,   500,   501,     3,    -1,    -1,    -1,    -1,    -1,    -1,
15909:       -1,    -1,   511,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15910:       -1,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
15911:       -1,    31,    32,    33,    -1,    -1,    -1,    -1,    -1,    -1,
15912:       -1,    -1,    -1,    43,    44,    -1,    46,    47,    48,    -1,
15913:       50,    51,    52,    53,    54,    -1,    56,    57,    -1,    59,
15914:       60,    61,    62,    63,    64,    -1,    -1,    67,    68,    69,
15915:       70,    71,    72,    73,    -1,    75,    76,    77,    78,    79,
15916:       -1,    -1,    -1,    83,    84,    85,    86,    87,    88,    -1,
15917:       90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
15918:       -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
15919:      110,   111,   112,   113,   114,   115,   116,    -1,   118,    -1,
15920:      120,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
15921:      130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
15922:      140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
15923:      150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
15924:       -1,   161,    -1,   163,   164,   165,   166,    -1,   168,    -1,
15925:      170,    -1,    -1,    -1,   174,   175,   176,    -1,   178,    -1,
15926:      180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
15927:      190,   191,   192,   193,    -1,   195,   196,   197,   198,    -1,
15928:      200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
15929:      210,   211,   212,   213,   214,   215,   216,   217,    -1,   219,
15930:       -1,   221,    -1,    -1,   224,    -1,   226,   227,   228,   229,
15931:      230,   231,    -1,    -1,   234,    -1,   236,    -1,    -1,   239,
15932:      240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
15933:      250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
15934:      260,   261,   262,   263,   264,   265,   266,   267,   268,    -1,
15935:      270,   271,   272,   273,   274,    -1,   276,   277,    -1,   279,
15936:       -1,   281,   282,   283,   284,   285,   286,    -1,   288,   289,
15937:       -1,    -1,   292,   293,   294,    -1,    -1,   297,   298,   299,
15938:       -1,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
15939:      310,   311,   312,   313,   314,    -1,    -1,    -1,    -1,   319,
15940:      320,   321,    -1,   323,   324,   325,   326,   327,   328,    -1,
15941:      330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
15942:      340,   341,   342,   343,   344,   345,   346,    -1,   348,   349,
15943:      350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
15944:      360,    -1,   362,   363,    -1,   365,   366,   367,   368,   369,
15945:      370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
15946:      380,   381,    -1,    -1,   384,   385,   386,   387,   388,   389,
15947:      390,   391,   392,    -1,    -1,   395,   396,   397,   398,    -1,
15948:      400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
15949:      410,   411,   412,   413,   414,    -1,    -1,   417,   418,    -1,
15950:      420,    -1,   422,   423,   424,   425,   426,    -1,   428,   429,
15951:      430,    -1,    -1,   433,   434,   435,   436,   437,    -1,   439,
15952:      440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
15953:      450,   451,    -1,   453,   454,   455,   456,    -1,   458,   459,
15954:      460,   461,   462,   463,   464,   465,    -1,   467,    -1,   469,
15955:      470,   471,   472,   473,   474,   475,    -1,    -1,   478,    -1,
15956:       -1,   481,   482,   483,   484,   485,   486,   487,   488,   489,
15957:      490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
15958:      500,   501,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15959:       -1,   511,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15960:       -1,    22,    23,    24,    25,    26,    27,    28,    29,    -1,
15961:       31,    32,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
15962:       -1,    -1,    43,    44,    -1,    46,    47,    48,    -1,    50,
15963:       51,    52,    53,    54,    -1,    56,    57,    -1,    59,    60,
15964:       61,    62,    63,    64,    -1,    -1,    67,    68,    69,    70,
15965:       71,    72,    73,    -1,    75,    76,    77,    78,    79,    -1,
15966:       -1,    -1,    83,    84,    85,    86,    87,    88,    -1,    90,
15967:       91,    92,    -1,    94,    95,    96,    97,    98,    99,    -1,
15968:       -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
15969:      111,   112,   113,   114,   115,   116,    -1,   118,    -1,   120,
15970:      121,   122,   123,   124,   125,    -1,    -1,   128,   129,   130,
15971:      131,    -1,    -1,   134,   135,   136,   137,   138,    -1,   140,
15972:      141,   142,    -1,   144,   145,   146,    -1,   148,   149,   150,
15973:      151,   152,   153,   154,   155,   156,   157,   158,   159,    -1,
15974:      161,    -1,   163,   164,   165,   166,    -1,   168,    -1,   170,
15975:       -1,    -1,    -1,   174,   175,   176,    -1,   178,    -1,   180,
15976:       -1,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
15977:      191,   192,   193,    -1,   195,   196,   197,   198,    -1,   200,
15978:      201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
15979:      211,   212,   213,   214,   215,   216,   217,    -1,   219,    -1,
15980:      221,    -1,    -1,   224,    -1,   226,   227,   228,   229,   230,
15981:      231,    -1,    -1,   234,    -1,   236,    -1,    -1,   239,   240,
15982:      241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
15983:      251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
15984:      261,   262,   263,   264,   265,   266,   267,   268,    -1,   270,
15985:      271,   272,   273,   274,    -1,   276,   277,    -1,   279,    -1,
15986:      281,   282,   283,   284,   285,   286,    -1,   288,   289,    -1,
15987:       -1,   292,   293,   294,    -1,    -1,   297,   298,   299,    -1,
15988:      301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
15989:      311,   312,   313,   314,    -1,    -1,    -1,    -1,   319,   320,
15990:      321,    -1,   323,   324,   325,   326,   327,   328,    -1,   330,
15991:      331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
15992:      341,   342,   343,   344,   345,   346,    -1,   348,   349,   350,
15993:      351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
15994:       -1,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
15995:      371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
15996:      381,    -1,    -1,   384,   385,   386,   387,   388,   389,   390,
15997:      391,   392,    -1,    -1,   395,   396,   397,   398,    -1,   400,
15998:      401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
15999:      411,   412,   413,   414,    -1,    -1,   417,   418,    -1,   420,
16000:       -1,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
16001:       -1,    -1,   433,   434,   435,   436,   437,    -1,   439,   440,
16002:      441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
16003:      451,    -1,   453,   454,   455,   456,    -1,   458,   459,   460,
16004:      461,   462,   463,   464,   465,    -1,   467,    -1,   469,   470,
16005:      471,   472,   473,   474,   475,    -1,    -1,   478,    -1,    -1,
16006:      481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
16007:      491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
16008:      501,     3,     4,     5,    -1,    -1,    -1,     9,    -1,    -1,
16009:      511,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16010:       22,    23,    24,    25,    26,    27,    28,    29,    -1,    31,
16011:       32,    33,    -1,    -1,    -1,    37,    -1,    -1,    -1,    -1,
16012:       42,    43,    44,    -1,    46,    47,    48,    49,    50,    51,
16013:       52,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
16014:       62,    63,    64,    -1,    -1,    67,    68,    69,    70,    71,
16015:       72,    73,    -1,    75,    76,    77,    78,    79,    -1,    81,
16016:       -1,    83,    84,    85,    86,    87,    88,    89,    90,    91,
16017:       92,    -1,    94,    95,    96,    97,    98,    99,    -1,   101,
16018:      102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
16019:      112,   113,   114,   115,   116,    -1,   118,    -1,   120,   121,
16020:      122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
16021:       -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
16022:      142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
16023:      152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
16024:       -1,   163,   164,   165,   166,    -1,   168,    -1,   170,   171,
16025:       -1,   173,   174,   175,   176,   177,   178,    -1,   180,    -1,
16026:      182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
16027:      192,   193,   194,   195,   196,   197,   198,    -1,   200,   201,
16028:      202,   203,   204,   205,   206,    -1,   208,   209,   210,   211,
16029:      212,   213,   214,   215,   216,   217,    -1,   219,    -1,   221,
16030:      222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
16031:       -1,    -1,   234,   235,   236,   237,    -1,   239,   240,   241,
16032:      242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
16033:      252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
16034:      262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
16035:      272,   273,   274,    -1,   276,   277,   278,   279,    -1,   281,
16036:      282,   283,   284,   285,   286,    -1,   288,   289,   290,    -1,
16037:      292,   293,   294,    -1,    -1,   297,   298,   299,   300,   301,
16038:      302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
16039:      312,   313,   314,    -1,    -1,    -1,    -1,   319,   320,   321,
16040:      322,   323,   324,   325,   326,   327,   328,    -1,   330,   331,
16041:      332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
16042:      342,   343,   344,   345,   346,    -1,   348,   349,   350,   351,
16043:      352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
16044:      362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
16045:      372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
16046:       -1,   383,   384,   385,   386,   387,   388,   389,   390,   391,
16047:      392,    -1,   394,   395,   396,   397,   398,    -1,   400,   401,
16048:      402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
16049:      412,   413,   414,    -1,    -1,   417,   418,    -1,   420,   421,
16050:      422,   423,   424,   425,   426,    -1,   428,   429,   430,    -1,
16051:       -1,   433,   434,   435,   436,   437,   438,   439,   440,   441,
16052:      442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
16053:       -1,   453,   454,   455,   456,    -1,   458,   459,   460,   461,
16054:      462,   463,   464,   465,    -1,   467,   468,   469,   470,   471,
16055:      472,   473,   474,   475,    -1,    -1,   478,    -1,    -1,   481,
16056:      482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
16057:      492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
16058:       -1,    -1,     8,    -1,    -1,    11,    -1,   509,   510,    15,
16059:       16,    17,    18,    19,    20,    21,    -1,    -1,    -1,    -1,
16060:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16061:       36,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,
16062:       46,     8,    -1,    -1,    11,    -1,    -1,    53,    15,    16,
16063:       17,    18,    19,    20,    21,    -1,    -1,    -1,    -1,     8,
16064:       -1,    -1,    11,    -1,    -1,    -1,    15,    16,    -1,    36,
16065:       19,    20,    21,    -1,    80,    -1,    -1,    -1,    -1,    46,
16066:        8,    -1,    -1,    11,    -1,    -1,    53,    15,    16,    17,
16067:       18,    19,    20,    21,    -1,    -1,    -1,    46,    -1,    -1,
16068:       -1,    -1,    -1,    -1,    53,    -1,    -1,    -1,    36,    -1,
16069:       -1,    -1,    -1,    80,    -1,    -1,    -1,    -1,    46,    -1,
16070:      126,    -1,    -1,    -1,    -1,    53,    -1,     8,    -1,    -1,
16071:       11,    80,    -1,    -1,    15,    16,    17,    18,    19,    20,
16072:       21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16073:       -1,    -1,    80,    -1,    -1,    36,    -1,    -1,    -1,    40,
16074:       -1,    -1,    -1,    -1,    -1,    46,    -1,    -1,    -1,    -1,
16075:       -1,   177,    53,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16076:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   194,    -1,
16077:       -1,    -1,    -1,   199,    -1,    -1,    -1,    -1,    -1,    80,
16078:      167,    -1,    -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,
16079:      177,    -1,    -1,    -1,    -1,    -1,   222,   223,    -1,    -1,
16080:       -1,    -1,    -1,    -1,    -1,    -1,    -1,   194,   177,    -1,
16081:       -1,   237,   199,    -1,    -1,    -1,    -1,    -1,   166,    -1,
16082:       -1,    -1,    -1,    -1,    -1,   194,    -1,    -1,    -1,   177,
16083:      199,    -1,    -1,    -1,    -1,   222,   223,    -1,    -1,    -1,
16084:       -1,    -1,    -1,    -1,    -1,    -1,   194,    -1,    -1,   275,
16085:      237,   199,   278,   222,   223,    -1,    -1,    -1,    -1,    -1,
16086:       -1,    -1,    -1,    -1,    -1,    -1,   292,    -1,   237,   295,
16087:       -1,    -1,    -1,    -1,   222,   223,   177,    -1,    -1,    -1,
16088:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   275,   237,
16089:       -1,   278,    -1,   194,    -1,    -1,    -1,    -1,   199,    -1,
16090:       -1,    -1,    -1,    -1,    -1,   292,   275,    -1,   295,   278,
16091:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16092:       -1,   222,   223,   292,    -1,    -1,    -1,   275,    -1,    -1,
16093:      278,    -1,    -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,
16094:       -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,    -1,
16095:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16096:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,    -1,
16097:       -1,    -1,    -1,    -1,   275,    -1,   324,   278,    -1,    -1,
16098:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16099:       -1,   292,    -1,    -1,   295,    -1,    -1,    -1,    -1,    -1,
16100:       -1,    -1,     8,    -1,    -1,    11,    -1,   394,    -1,    15,
16101:       16,    17,    18,    19,    20,    21,    -1,    -1,    -1,    -1,
16102:       -1,    -1,    -1,    -1,    -1,   394,    -1,    -1,    -1,    -1,
16103:       36,   457,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16104:       46,    -1,    -1,    -1,    -1,    -1,   394,    53,    -1,    -1,
16105:       -1,    -1,    -1,    68,    69,    -1,    -1,    -1,    -1,    -1,
16106:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16107:       -1,    -1,    -1,    -1,    80,    -1,   502,    -1,    -1,   505,
16108:      506,   507,    -1,   509,   510,   511,   512,   513,   514,    -1,
16109:       -1,    -1,    -1,   394,   109,   110,    -1,    -1,   113,   114,
16110:       -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,
16111:       -1,    -1,    19,    20,    21,   502,    -1,    -1,   505,   506,
16112:      507,    -1,   509,   510,   511,   512,   513,   514,    -1,    36,
16113:       -1,    -1,    -1,   502,    -1,    -1,   505,   506,   507,    46,
16114:      509,   510,   511,   512,   513,   514,    53,    -1,    -1,    -1,
16115:       -1,    -1,    -1,    -1,   502,    -1,    -1,   505,   506,   507,
16116:       -1,   509,   510,   511,   512,   513,   514,    -1,    -1,    -1,
16117:       -1,   177,    -1,    80,   189,   190,    -1,    -1,    -1,    -1,
16118:       -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,   194,    -1,
16119:       11,    -1,    -1,   199,    15,    16,    17,    18,    19,    20,
16120:       21,   502,    -1,    -1,   505,   506,   507,    -1,   509,   510,
16121:      511,   512,   513,   514,    -1,    36,   222,   223,    -1,    40,
16122:       -1,    -1,    -1,    -1,    -1,    46,    -1,    -1,    -1,    -1,
16123:       -1,   237,    53,    -1,    -1,    -1,    -1,    -1,   253,   254,
16124:      255,   256,   257,   258,   259,   260,    -1,    -1,   263,   264,
16125:       -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    80,
16126:       15,    16,    17,    18,    19,    20,    21,    -1,    -1,   275,
16127:      177,    -1,   278,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16128:       -1,    36,    -1,    -1,    -1,    -1,   292,   194,    -1,   295,
16129:       -1,    46,   199,    -1,    -1,    -1,    -1,    -1,    53,    -1,
16130:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16131:       -1,    -1,   318,    -1,    -1,   222,   223,    -1,    -1,    -1,
16132:       -1,    -1,   337,   338,    -1,    80,    -1,    -1,    -1,    -1,
16133:      237,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16134:       -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,
16135:       16,    17,    18,    19,    20,    21,   177,    -1,    -1,    -1,
16136:       -1,    -1,    -1,   378,   379,    -1,    -1,    -1,   275,    -1,
16137:       36,   278,    -1,   194,    40,    -1,    -1,    -1,   199,    -1,
16138:       46,    -1,    -1,    -1,    -1,   292,    -1,    53,   394,    -1,
16139:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16140:       -1,   222,   223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16141:       -1,    -1,    -1,    -1,    80,    -1,   237,   172,    -1,    -1,
16142:       -1,    -1,   177,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16143:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   194,
16144:       -1,    -1,    -1,    -1,   199,    -1,    -1,    -1,    -1,    -1,
16145:       -1,    -1,    -1,    -1,   275,    -1,    -1,   278,    -1,   474,
16146:      475,    -1,    -1,    -1,    -1,    -1,    -1,   222,   223,    -1,
16147:       -1,   292,    -1,    -1,   295,    -1,    -1,    -1,    -1,    -1,
16148:       -1,    -1,   237,   498,   499,    -1,    -1,   394,    -1,    -1,
16149:       -1,    -1,    -1,    -1,    -1,    -1,   502,    -1,    -1,   505,
16150:      506,   507,    -1,   509,   510,   511,   512,   513,   514,    -1,
16151:       -1,   177,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16152:      275,    -1,    -1,   278,    -1,    -1,    -1,    -1,   194,    -1,
16153:       -1,    -1,    -1,   199,    -1,    -1,    -1,   292,    -1,    -1,
16154:      295,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16155:       -1,     8,    -1,    -1,    11,    -1,   222,   223,    15,    16,
16156:       17,    18,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,
16157:       -1,   237,    -1,   394,    -1,    -1,    -1,    -1,    -1,    36,
16158:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    46,
16159:       -1,    -1,    -1,    -1,    -1,   502,    53,    -1,   505,   506,
16160:      507,    -1,   509,   510,   511,   512,   513,   514,     8,   275,
16161:       -1,    11,   278,    -1,    -1,    15,    16,    17,    18,    19,
16162:       20,    21,    -1,    80,    -1,    -1,   292,    -1,    -1,   295,
16163:       -1,    -1,    -1,    -1,    -1,    -1,    36,    -1,    -1,   394,
16164:       -1,    -1,    -1,    -1,    -1,    -1,    46,    -1,    -1,    -1,
16165:       -1,    -1,    -1,    53,    -1,    -1,    -1,    -1,    -1,    -1,
16166:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16167:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16168:       80,   502,    -1,    -1,   505,   506,   507,    -1,   509,   510,
16169:      511,   512,   513,   514,    -1,     8,    -1,    -1,    11,    -1,
16170:       -1,    -1,    15,    16,    17,    18,    19,    20,    21,    -1,
16171:      167,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16172:      177,    -1,    -1,    36,    -1,    -1,    -1,    40,   394,    -1,
16173:       -1,    -1,    -1,    46,    -1,    -1,    -1,   194,    -1,    -1,
16174:       53,    -1,   199,    -1,    -1,    -1,    -1,   502,    -1,    -1,
16175:      505,   506,   507,    -1,   509,   510,   511,   512,   513,   514,
16176:       -1,    -1,    -1,    -1,    -1,   222,   223,    80,    -1,    -1,
16177:       -1,    -1,    -1,    -1,    -1,    -1,    -1,   177,    -1,    -1,
16178:      237,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16179:       -1,    -1,    -1,    -1,   194,    -1,    -1,    -1,    -1,   199,
16180:       -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
16181:       -1,    15,    16,    17,    18,    19,    20,    21,   275,    -1,
16182:       -1,   278,   222,   223,    -1,    -1,    -1,    -1,    -1,    -1,
16183:       -1,    -1,    36,    -1,    -1,   292,   502,   237,   295,   505,
16184:      506,   507,    46,   509,   510,   511,   512,   513,   514,    53,
16185:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16186:       -1,    -1,    -1,    -1,   177,    -1,    -1,    -1,    -1,    -1,
16187:       -1,    -1,    -1,    -1,    -1,   275,    80,    -1,   278,    -1,
16188:       -1,   194,    -1,    -1,    -1,    -1,   199,    -1,    -1,    -1,
16189:       -1,    -1,   292,    -1,    -1,   295,    -1,    -1,    -1,    -1,
16190:       -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,   222,
16191:      223,    15,    16,    17,    18,    19,    20,    21,    -1,    -1,
16192:       -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,    -1,    -1,
16193:       -1,    -1,    36,    -1,    -1,    -1,    -1,   394,    -1,    -1,
16194:       -1,    -1,    46,    -1,    -1,    -1,    -1,    -1,    -1,    53,
16195:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16196:       -1,    -1,   275,    -1,    -1,   278,    -1,    -1,    -1,    -1,
16197:       -1,    -1,    -1,   177,    -1,    -1,    80,    -1,    -1,   292,
16198:       -1,    -1,   295,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16199:      194,    -1,    -1,     8,   394,   199,    11,    -1,    -1,    -1,
16200:       15,    16,    17,    18,    19,    20,    21,    -1,    -1,    -1,
16201:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   222,   223,
16202:       -1,    36,    -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,
16203:       -1,    46,    -1,   237,    -1,    -1,    -1,    -1,    53,    -1,
16204:       -1,    -1,    -1,    -1,    -1,   502,    -1,    -1,   505,   506,
16205:      507,    -1,   509,   510,   511,   512,   513,   514,    -1,    -1,
16206:       -1,    -1,    -1,    -1,    -1,    80,    -1,    -1,    -1,    -1,
16207:       -1,   275,    -1,   177,   278,    -1,    -1,    -1,    -1,    -1,
16208:       -1,   394,    -1,    -1,    -1,    -1,    -1,    -1,   292,    -1,
16209:      194,   295,    -1,    -1,    -1,   199,    -1,    -1,    -1,    -1,
16210:       -1,    -1,   502,    -1,    -1,   505,   506,   507,    -1,   509,
16211:      510,   511,   512,   513,   514,    -1,    -1,    -1,   222,   223,
16212:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16213:       -1,    -1,    -1,   237,    -1,    -1,    -1,    -1,    -1,    -1,
16214:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16215:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16216:       -1,    -1,   177,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16217:       -1,   275,    -1,    -1,   278,    -1,    -1,    -1,    -1,   194,
16218:       -1,    -1,    -1,    -1,   199,    -1,    -1,    -1,   292,   502,
16219:      394,   295,   505,   506,   507,    -1,   509,   510,   511,   512,
16220:      513,   514,    -1,    -1,    -1,    -1,    -1,   222,   223,    -1,
16221:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16222:       -1,    -1,   237,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16223:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16224:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16225:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16226:      275,    -1,    -1,   278,    -1,    -1,    -1,    -1,    -1,    -1,
16227:       -1,    -1,    -1,    -1,    -1,    -1,    -1,   292,    -1,    -1,
16228:      295,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16229:      394,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   502,    -1,
16230:       -1,   505,   506,   507,    -1,   509,   510,   511,   512,   513,
16231:      514,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16232:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16233:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16234:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16235:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16236:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16237:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
16238:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16239:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   502,    -1,
16240:       -1,   505,   506,   507,    -1,   509,   510,   511,   512,   513,
16241:      514,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16242:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16243:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16244:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16245:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16246:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16247:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16248:       -1,     3,    -1,     5,    -1,    -1,    -1,   502,    -1,    -1,
16249:      505,   506,   507,    -1,   509,   510,   511,   512,   513,   514,
16250:       22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
16251:       32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
16252:       42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
16253:       52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
16254:       62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
16255:       72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
16256:       82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
16257:       92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
16258:      102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
16259:      112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
16260:      122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
16261:      132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
16262:      142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
16263:      152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
16264:      162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
16265:      172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
16266:      182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
16267:      192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
16268:      202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
16269:      212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
16270:      222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
16271:      232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
16272:      242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
16273:      252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
16274:      262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
16275:      272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
16276:      282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
16277:      292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
16278:      302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
16279:      312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
16280:      322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
16281:      332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
16282:      342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
16283:      352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
16284:      362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
16285:      372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
16286:      382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
16287:      392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
16288:      402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
16289:      412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
16290:      422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
16291:      432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
16292:      442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
16293:      452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
16294:      462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
16295:      472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
16296:      482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
16297:      492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
16298:        3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16299:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    22,
16300:       23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
16301:       33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
16302:       43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
16303:       53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
16304:       63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
16305:       73,    74,    75,    76,    77,    78,    79,    80,    81,    82,
16306:       83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
16307:       93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
16308:      103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
16309:      113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
16310:      123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
16311:      133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
16312:      143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
16313:      153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
16314:      163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
16315:      173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
16316:      183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
16317:      193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
16318:      203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
16319:      213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
16320:      223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
16321:      233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
16322:      243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
16323:      253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
16324:      263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
16325:      273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
16326:      283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
16327:      293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
16328:      303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
16329:      313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
16330:      323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
16331:      333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
16332:      343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
16333:      353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
16334:      363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
16335:      373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
16336:      383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
16337:      393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
16338:      403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
16339:      413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
16340:      423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
16341:      433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
16342:      443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
16343:      453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
16344:      463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
16345:      473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
16346:      483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
16347:      493,   494,   495,   496,   497,   498,   499,   500,   501,     3,
16348:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16349:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    22,    23,
16350:       24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
16351:       34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
16352:       44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
16353:       54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
16354:       64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
16355:       74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
16356:       84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
16357:       94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
16358:      104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
16359:      114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
16360:      124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
16361:      134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
16362:      144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
16363:      154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
16364:      164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
16365:      174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
16366:      184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
16367:      194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
16368:      204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
16369:      214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
16370:      224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
16371:      234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
16372:      244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
16373:      254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
16374:      264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
16375:      274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
16376:      284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
16377:      294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
16378:      304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
16379:      314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
16380:      324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
16381:      334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
16382:      344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
16383:      354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
16384:      364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
16385:      374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
16386:      384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
16387:      394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
16388:      404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
16389:      414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
16390:      424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
16391:      434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
16392:      444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
16393:      454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
16394:      464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
16395:      474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
16396:      484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
16397:      494,   495,   496,   497,   498,   499,   500,   501,     3,    -1,
16398:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16399:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    22,    23,    24,
16400:       25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
16401:       35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
16402:       45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
16403:       55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
16404:       65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
16405:       75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
16406:       85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
16407:       95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
16408:      105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
16409:      115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
16410:      125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
16411:      135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
16412:      145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
16413:      155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
16414:      165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
16415:      175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
16416:      185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
16417:      195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
16418:      205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
16419:      215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
16420:      225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
16421:      235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
16422:      245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
16423:      255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
16424:      265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
16425:      275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
16426:      285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
16427:      295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
16428:      305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
16429:      315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
16430:      325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
16431:      335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
16432:      345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
16433:      355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
16434:      365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
16435:      375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
16436:      385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
16437:      395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
16438:      405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
16439:      415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
16440:      425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
16441:      435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
16442:      445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
16443:      455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
16444:      465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
16445:      475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
16446:      485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
16447:      495,   496,   497,   498,   499,   500,   501,     3,    -1,    -1,
16448:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16449:       -1,    -1,    -1,    -1,    -1,    -1,    22,    23,    24,    25,
16450:       26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
16451:       36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
16452:       46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
16453:       56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
16454:       66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
16455:       76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
16456:       86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
16457:       96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
16458:      106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
16459:      116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
16460:      126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
16461:      136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
16462:      146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
16463:      156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
16464:      166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
16465:      176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
16466:      186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
16467:      196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
16468:      206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
16469:      216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
16470:      226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
16471:      236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
16472:      246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
16473:      256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
16474:      266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
16475:      276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
16476:      286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
16477:      296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
16478:      306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
16479:      316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
16480:      326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
16481:      336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
16482:      346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
16483:      356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
16484:      366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
16485:      376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
16486:      386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
16487:      396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
16488:      406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
16489:      416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
16490:      426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
16491:      436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
16492:      446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
16493:      456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
16494:      466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
16495:      476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
16496:      486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
16497:      496,   497,   498,   499,   500,   501,     3,    -1,     5,    -1,
16498:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16499:       -1,    -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,
16500:       27,    28,    29,    -1,    31,    32,    33,    -1,    -1,    -1,
16501:       37,    -1,    -1,    -1,    -1,    42,    43,    44,    -1,    46,
16502:       47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
16503:       57,    -1,    59,    60,    61,    62,    63,    64,    -1,    -1,
16504:       67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
16505:       77,    78,    79,    -1,    81,    -1,    83,    84,    85,    86,
16506:       87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
16507:       97,    98,    99,    -1,   101,   102,   103,   104,   105,   106,
16508:      107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
16509:       -1,   118,    -1,   120,   121,   122,   123,   124,   125,    -1,
16510:       -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
16511:      137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
16512:       -1,   148,   149,   150,   151,   152,   153,   154,   155,   156,
16513:      157,   158,   159,   160,   161,    -1,   163,   164,   165,   166,
16514:       -1,   168,    -1,   170,   171,    -1,   173,   174,   175,   176,
16515:      177,   178,    -1,   180,    -1,   182,   183,   184,   185,    -1,
16516:      187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
16517:      197,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
16518:       -1,   208,   209,   210,   211,   212,   213,   214,   215,   216,
16519:      217,    -1,   219,    -1,   221,   222,   223,   224,   225,   226,
16520:      227,   228,   229,   230,   231,    -1,    -1,   234,   235,   236,
16521:      237,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
16522:      247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
16523:      257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
16524:      267,   268,   269,   270,   271,   272,   273,   274,    -1,   276,
16525:      277,   278,   279,    -1,   281,   282,   283,   284,   285,   286,
16526:       -1,   288,   289,   290,    -1,   292,   293,   294,    -1,    -1,
16527:      297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
16528:      307,   308,   309,   310,   311,   312,   313,   314,    -1,    -1,
16529:       -1,    -1,   319,   320,   321,   322,   323,   324,   325,   326,
16530:      327,   328,    -1,   330,   331,   332,   333,   334,   335,    -1,
16531:      337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
16532:       -1,   348,   349,   350,   351,   352,   353,   354,   355,   356,
16533:      357,   358,   359,   360,    -1,   362,   363,   364,   365,   366,
16534:      367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
16535:      377,   378,   379,   380,   381,    -1,   383,   384,   385,   386,
16536:      387,   388,   389,   390,   391,   392,    -1,   394,   395,   396,
16537:      397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
16538:      407,   408,   409,   410,   411,   412,   413,   414,    -1,    -1,
16539:      417,   418,    -1,   420,   421,   422,   423,   424,   425,   426,
16540:       -1,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
16541:      437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
16542:       -1,    -1,   449,   450,   451,    -1,   453,   454,   455,   456,
16543:       -1,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
16544:      467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
16545:       -1,   478,    -1,    -1,   481,   482,   483,   484,   485,   486,
16546:      487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
16547:      497,   498,   499,   500,   501,     3,    -1,    -1,    -1,    -1,
16548:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16549:       -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,    27,
16550:       28,    29,    -1,    31,    32,    33,    34,    35,    -1,    37,
16551:       -1,    -1,    -1,    -1,    42,    43,    44,    -1,    46,    47,
16552:       48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
16553:       -1,    59,    60,    61,    62,    63,    64,    -1,    -1,    67,
16554:       68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
16555:       78,    79,    -1,    81,    -1,    83,    84,    85,    86,    87,
16556:       88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
16557:       98,    99,    -1,   101,   102,   103,   104,   105,   106,   107,
16558:      108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
16559:      118,    -1,   120,   121,   122,   123,   124,   125,    -1,    -1,
16560:      128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
16561:      138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
16562:      148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
16563:      158,   159,    -1,   161,    -1,   163,   164,   165,   166,    -1,
16564:      168,    -1,   170,   171,    -1,   173,   174,   175,   176,   177,
16565:      178,    -1,   180,    -1,   182,   183,   184,   185,    -1,   187,
16566:      188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
16567:      198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
16568:      208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
16569:       -1,   219,    -1,   221,   222,   223,   224,   225,   226,   227,
16570:      228,   229,   230,   231,    -1,    -1,   234,   235,   236,   237,
16571:       -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
16572:      248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
16573:      258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
16574:      268,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
16575:      278,   279,    -1,   281,   282,   283,   284,   285,   286,    -1,
16576:      288,   289,    -1,    -1,   292,   293,   294,    -1,    -1,   297,
16577:      298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
16578:      308,   309,   310,   311,   312,   313,   314,    -1,    -1,    -1,
16579:       -1,   319,   320,   321,   322,   323,   324,   325,   326,   327,
16580:      328,    -1,   330,   331,   332,   333,   334,   335,    -1,   337,
16581:      338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
16582:      348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
16583:      358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
16584:      368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
16585:      378,   379,   380,   381,    -1,   383,   384,   385,   386,   387,
16586:      388,   389,   390,   391,   392,    -1,   394,   395,   396,   397,
16587:      398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
16588:      408,   409,   410,   411,   412,   413,   414,    -1,    -1,   417,
16589:      418,    -1,   420,   421,   422,   423,   424,   425,   426,    -1,
16590:      428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
16591:       -1,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
16592:       -1,   449,   450,   451,    -1,   453,   454,   455,   456,    -1,
16593:      458,   459,   460,   461,   462,   463,   464,   465,    -1,   467,
16594:      468,   469,   470,   471,   472,   473,   474,   475,    -1,    -1,
16595:      478,    -1,    -1,   481,   482,   483,   484,   485,   486,   487,
16596:      488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
16597:      498,   499,   500,   501,     3,    -1,    -1,    -1,    -1,    -1,
16598:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16599:       -1,    -1,    -1,    22,    23,    24,    25,    26,    27,    28,
16600:       29,    -1,    31,    32,    33,    -1,    -1,    -1,    -1,    -1,
16601:       -1,    -1,    -1,    42,    43,    44,    -1,    46,    47,    48,
16602:       49,    50,    51,    52,    53,    54,    55,    56,    57,    -1,
16603:       59,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
16604:       69,    70,    71,    72,    73,    -1,    75,    76,    77,    78,
16605:       79,    -1,    81,    -1,    83,    84,    85,    86,    87,    88,
16606:       89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
16607:       99,    -1,   101,   102,   103,   104,   105,   106,   107,   108,
16608:      109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
16609:       -1,   120,   121,   122,   123,   124,   125,    -1,    -1,   128,
16610:      129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
16611:       -1,   140,   141,   142,    -1,   144,   145,   146,    -1,   148,
16612:      149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
16613:      159,    -1,   161,    -1,   163,   164,   165,   166,    -1,   168,
16614:       -1,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
16615:       -1,   180,    -1,   182,   183,   184,   185,    -1,   187,   188,
16616:      189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
16617:       -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
16618:      209,   210,   211,   212,   213,   214,   215,   216,   217,    -1,
16619:      219,    -1,   221,   222,   223,   224,   225,   226,   227,   228,
16620:      229,   230,   231,    -1,    -1,   234,   235,   236,   237,    -1,
16621:      239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
16622:      249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
16623:      259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
16624:      269,   270,   271,   272,   273,   274,    -1,   276,   277,   278,
16625:      279,    -1,   281,   282,   283,   284,   285,   286,    -1,   288,
16626:      289,    -1,    -1,   292,   293,   294,    -1,    -1,   297,   298,
16627:      299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
16628:      309,   310,   311,   312,   313,   314,    -1,    -1,    -1,    -1,
16629:      319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
16630:       -1,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
16631:      339,   340,   341,   342,   343,   344,   345,   346,    -1,   348,
16632:      349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
16633:      359,   360,    -1,   362,   363,   364,   365,   366,   367,   368,
16634:      369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
16635:      379,   380,   381,    -1,    -1,   384,   385,   386,   387,   388,
16636:      389,   390,   391,   392,    -1,   394,   395,   396,   397,   398,
16637:       -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
16638:      409,   410,   411,   412,   413,   414,    -1,    -1,   417,   418,
16639:       -1,   420,   421,   422,   423,   424,   425,   426,    -1,   428,
16640:      429,   430,    -1,    -1,   433,   434,   435,   436,   437,    -1,
16641:      439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
16642:      449,   450,   451,    -1,   453,   454,   455,   456,    -1,   458,
16643:      459,   460,   461,   462,   463,   464,   465,    -1,   467,   468,
16644:      469,   470,   471,   472,   473,   474,   475,    -1,    -1,   478,
16645:       -1,    -1,   481,   482,   483,   484,   485,   486,   487,   488,
16646:      489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
16647:      499,   500,   501,     3,    -1,    -1,    -1,    -1,    -1,    -1,
16648:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16649:       -1,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
16650:       -1,    31,    32,    33,    -1,    -1,    -1,    -1,    -1,    -1,
16651:       -1,    -1,    42,    43,    44,    -1,    46,    47,    48,    49,
16652:       50,    51,    52,    53,    54,    55,    56,    57,    -1,    59,
16653:       60,    61,    62,    63,    64,    -1,    -1,    67,    68,    69,
16654:       70,    71,    72,    73,    -1,    75,    76,    77,    78,    79,
16655:       -1,    81,    -1,    83,    84,    85,    86,    87,    88,    89,
16656:       90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
16657:       -1,   101,   102,   103,   104,   105,   106,   107,   108,   109,
16658:      110,   111,   112,   113,   114,   115,   116,    -1,   118,    -1,
16659:      120,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
16660:      130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
16661:      140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
16662:      150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
16663:       -1,   161,    -1,   163,   164,   165,   166,    -1,   168,    -1,
16664:      170,   171,    -1,   173,   174,   175,   176,   177,   178,    -1,
16665:      180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
16666:      190,   191,   192,   193,   194,   195,   196,   197,   198,    -1,
16667:      200,   201,   202,   203,   204,   205,   206,    -1,   208,   209,
16668:      210,   211,   212,   213,   214,   215,   216,   217,    -1,   219,
16669:       -1,   221,   222,   223,   224,   225,   226,   227,   228,   229,
16670:      230,   231,    -1,    -1,   234,   235,   236,   237,    -1,   239,
16671:      240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
16672:      250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
16673:      260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
16674:      270,   271,   272,   273,   274,    -1,   276,   277,   278,   279,
16675:       -1,   281,   282,   283,   284,   285,   286,    -1,   288,   289,
16676:       -1,    -1,   292,   293,   294,    -1,    -1,   297,   298,   299,
16677:      300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
16678:      310,   311,   312,   313,   314,    -1,    -1,    -1,    -1,   319,
16679:      320,   321,   322,   323,   324,   325,   326,   327,   328,    -1,
16680:      330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
16681:      340,   341,   342,   343,   344,   345,   346,    -1,   348,   349,
16682:      350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
16683:      360,    -1,   362,   363,   364,   365,   366,   367,   368,   369,
16684:      370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
16685:      380,   381,    -1,    -1,   384,   385,   386,   387,   388,   389,
16686:      390,   391,   392,    -1,   394,   395,   396,   397,   398,    -1,
16687:      400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
16688:      410,   411,   412,   413,   414,    -1,    -1,   417,   418,    -1,
16689:      420,   421,   422,   423,   424,   425,   426,    -1,   428,   429,
16690:      430,    -1,    -1,   433,   434,   435,   436,   437,    -1,   439,
16691:      440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
16692:      450,   451,    -1,   453,   454,   455,   456,    -1,   458,   459,
16693:      460,   461,   462,   463,   464,   465,    -1,   467,   468,   469,
16694:      470,   471,   472,   473,   474,   475,    -1,    -1,   478,    -1,
16695:       -1,   481,   482,   483,   484,   485,   486,   487,   488,   489,
16696:      490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
16697:      500,   501,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16698:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16699:       -1,    22,    23,    24,    25,    26,    27,    28,    29,    -1,
16700:       31,    32,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16701:       -1,    -1,    43,    44,    -1,    46,    47,    48,    -1,    50,
16702:       51,    52,    53,    54,    -1,    56,    57,    -1,    59,    60,
16703:       61,    62,    63,    64,    -1,    -1,    67,    68,    69,    70,
16704:       71,    72,    73,    74,    75,    76,    77,    78,    79,    -1,
16705:       -1,    82,    83,    84,    85,    86,    87,    88,    -1,    90,
16706:       91,    92,    93,    94,    95,    96,    97,    98,    99,    -1,
16707:       -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
16708:      111,   112,   113,   114,   115,   116,    -1,   118,    -1,   120,
16709:      121,   122,   123,   124,   125,    -1,    -1,   128,   129,   130,
16710:      131,    -1,    -1,   134,   135,   136,   137,   138,    -1,   140,
16711:      141,   142,    -1,   144,   145,   146,    -1,   148,   149,   150,
16712:      151,   152,   153,   154,   155,   156,   157,   158,   159,    -1,
16713:      161,    -1,   163,   164,   165,   166,    -1,   168,   169,   170,
16714:       -1,    -1,    -1,   174,   175,   176,    -1,   178,    -1,   180,
16715:       -1,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
16716:      191,   192,   193,    -1,   195,   196,   197,   198,    -1,   200,
16717:      201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
16718:      211,   212,   213,   214,   215,   216,   217,    -1,   219,    -1,
16719:      221,    -1,    -1,   224,    -1,   226,   227,   228,   229,   230,
16720:      231,    -1,    -1,   234,    -1,   236,    -1,    -1,   239,   240,
16721:      241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
16722:      251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
16723:      261,   262,   263,   264,   265,   266,   267,   268,    -1,   270,
16724:      271,   272,   273,   274,    -1,   276,   277,    -1,   279,    -1,
16725:      281,   282,   283,   284,   285,   286,    -1,   288,   289,    -1,
16726:       -1,   292,   293,   294,    -1,    -1,   297,   298,   299,    -1,
16727:      301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
16728:      311,   312,   313,   314,    -1,    -1,    -1,    -1,   319,   320,
16729:      321,    -1,   323,   324,   325,   326,   327,   328,   329,   330,
16730:      331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
16731:      341,   342,   343,   344,   345,   346,    -1,   348,   349,   350,
16732:      351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
16733:       -1,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
16734:      371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
16735:      381,    -1,    -1,   384,   385,   386,   387,   388,   389,   390,
16736:      391,   392,    -1,    -1,   395,   396,   397,   398,    -1,   400,
16737:      401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
16738:      411,   412,   413,   414,    -1,    -1,   417,   418,    -1,   420,
16739:       -1,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
16740:       -1,    -1,   433,   434,   435,   436,   437,    -1,   439,   440,
16741:      441,   442,   443,   444,   445,   446,    -1,   448,   449,   450,
16742:      451,    -1,   453,   454,   455,   456,    -1,   458,   459,   460,
16743:      461,   462,   463,   464,   465,    -1,   467,    -1,   469,   470,
16744:      471,   472,   473,   474,   475,    -1,    -1,   478,    -1,    -1,
16745:      481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
16746:      491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
16747:      501,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16748:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16749:       22,    23,    24,    25,    26,    27,    28,    29,    -1,    31,
16750:       32,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16751:       -1,    43,    44,    -1,    46,    47,    48,    -1,    50,    51,
16752:       52,    53,    54,    -1,    56,    57,    -1,    59,    60,    61,
16753:       62,    63,    64,    -1,    -1,    67,    68,    69,    70,    71,
16754:       72,    73,    74,    75,    76,    77,    78,    79,    -1,    -1,
16755:       -1,    83,    84,    85,    86,    87,    88,    -1,    90,    91,
16756:       92,    93,    94,    95,    96,    97,    98,    99,    -1,    -1,
16757:      102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
16758:      112,   113,   114,   115,   116,    -1,   118,    -1,   120,   121,
16759:      122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
16760:       -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
16761:      142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
16762:      152,   153,   154,   155,   156,   157,   158,   159,    -1,   161,
16763:       -1,   163,   164,   165,   166,    -1,   168,   169,   170,    -1,
16764:       -1,    -1,   174,   175,   176,    -1,   178,    -1,   180,    -1,
16765:      182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
16766:      192,   193,    -1,   195,   196,   197,   198,    -1,   200,   201,
16767:      202,   203,   204,   205,   206,    -1,   208,    -1,   210,   211,
16768:      212,   213,   214,   215,   216,   217,    -1,   219,    -1,   221,
16769:       -1,    -1,   224,    -1,   226,   227,   228,   229,   230,   231,
16770:       -1,    -1,   234,    -1,   236,   237,    -1,   239,   240,   241,
16771:      242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
16772:      252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
16773:      262,   263,   264,   265,   266,   267,   268,    -1,   270,   271,
16774:      272,   273,   274,    -1,   276,   277,    -1,   279,    -1,   281,
16775:      282,   283,   284,   285,   286,    -1,   288,   289,    -1,    -1,
16776:      292,   293,   294,    -1,    -1,   297,   298,   299,    -1,   301,
16777:       -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
16778:      312,   313,   314,    -1,    -1,    -1,    -1,   319,   320,   321,
16779:       -1,   323,   324,   325,   326,   327,   328,   329,   330,   331,
16780:      332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
16781:      342,   343,   344,   345,   346,    -1,   348,   349,   350,   351,
16782:      352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
16783:      362,   363,    -1,   365,   366,   367,   368,   369,   370,   371,
16784:      372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
16785:       -1,    -1,   384,   385,   386,   387,   388,   389,   390,   391,
16786:      392,    -1,    -1,   395,   396,   397,   398,    -1,   400,   401,
16787:      402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
16788:      412,   413,   414,    -1,    -1,   417,   418,    -1,   420,    -1,
16789:      422,   423,   424,   425,   426,    -1,   428,   429,   430,    -1,
16790:       -1,   433,   434,   435,   436,   437,    -1,   439,   440,   441,
16791:      442,   443,   444,   445,   446,    -1,   448,   449,   450,   451,
16792:       -1,   453,   454,   455,   456,    -1,   458,   459,   460,   461,
16793:      462,   463,   464,   465,    -1,   467,    -1,   469,   470,   471,
16794:      472,   473,   474,   475,    -1,    -1,   478,    -1,    -1,   481,
16795:      482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
16796:      492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
16797:        3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16798:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    22,
16799:       23,    24,    25,    26,    27,    28,    29,    -1,    31,    32,
16800:       33,    34,    35,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16801:       43,    44,    -1,    46,    47,    48,    -1,    50,    51,    52,
16802:       53,    54,    -1,    56,    57,    -1,    59,    60,    61,    62,
16803:       63,    64,    -1,    -1,    67,    68,    69,    70,    71,    72,
16804:       73,    -1,    75,    76,    77,    78,    79,    -1,    -1,    -1,
16805:       83,    84,    85,    86,    87,    88,    -1,    90,    91,    92,
16806:       -1,    94,    95,    96,    97,    98,    99,    -1,    -1,   102,
16807:      103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
16808:      113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
16809:      123,   124,   125,    -1,    -1,   128,   129,   130,   131,    -1,
16810:       -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
16811:       -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
16812:      153,   154,   155,   156,   157,   158,   159,    -1,   161,    -1,
16813:      163,   164,   165,   166,    -1,   168,    -1,   170,    -1,    -1,
16814:       -1,   174,   175,   176,    -1,   178,    -1,   180,    -1,   182,
16815:      183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
16816:      193,    -1,   195,   196,   197,   198,    -1,   200,   201,   202,
16817:      203,   204,   205,   206,    -1,   208,    -1,   210,   211,   212,
16818:      213,   214,   215,   216,   217,    -1,   219,    -1,   221,    -1,
16819:       -1,   224,    -1,   226,   227,   228,   229,   230,   231,    -1,
16820:       -1,   234,    -1,   236,    -1,    -1,   239,   240,   241,   242,
16821:      243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
16822:      253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
16823:      263,   264,   265,   266,   267,   268,    -1,   270,   271,   272,
16824:      273,   274,    -1,   276,   277,    -1,   279,    -1,   281,   282,
16825:      283,   284,   285,   286,    -1,   288,   289,    -1,    -1,   292,
16826:      293,   294,    -1,    -1,   297,   298,   299,    -1,   301,    -1,
16827:      303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
16828:      313,   314,    -1,    -1,    -1,    -1,   319,   320,   321,    -1,
16829:      323,   324,   325,   326,   327,   328,    -1,   330,   331,   332,
16830:      333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
16831:      343,   344,   345,   346,    -1,   348,   349,   350,   351,   352,
16832:      353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
16833:      363,    -1,   365,   366,   367,   368,   369,   370,   371,   372,
16834:      373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
16835:       -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
16836:       -1,    -1,   395,   396,   397,   398,    -1,   400,   401,   402,
16837:      403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
16838:      413,   414,    -1,    -1,   417,   418,    -1,   420,    -1,   422,
16839:      423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
16840:      433,   434,   435,   436,   437,    -1,   439,   440,   441,   442,
16841:      443,   444,   445,   446,    -1,    -1,   449,   450,   451,    -1,
16842:      453,   454,   455,   456,    -1,   458,   459,   460,   461,   462,
16843:      463,   464,   465,    -1,   467,    -1,   469,   470,   471,   472,
16844:      473,   474,   475,    -1,    -1,   478,    -1,    -1,   481,   482,
16845:      483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
16846:      493,   494,   495,   496,   497,   498,   499,   500,   501,     3,
16847:       -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16848:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    22,    23,
16849:       24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
16850:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,
16851:       44,    -1,    46,    47,    48,    -1,    50,    51,    52,    53,
16852:       54,    -1,    56,    57,    -1,    59,    60,    61,    62,    63,
16853:       64,    -1,    -1,    67,    68,    69,    70,    71,    72,    73,
16854:       -1,    75,    76,    77,    78,    79,    -1,    -1,    -1,    83,
16855:       84,    85,    86,    87,    88,    -1,    90,    91,    92,    -1,
16856:       94,    95,    96,    97,    98,    99,    -1,    -1,   102,   103,
16857:      104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
16858:      114,   115,   116,    -1,   118,    -1,   120,   121,   122,   123,
16859:      124,   125,    -1,    -1,   128,   129,   130,   131,    -1,    -1,
16860:      134,   135,   136,   137,   138,    -1,   140,   141,   142,    -1,
16861:      144,   145,   146,    -1,   148,   149,   150,   151,   152,   153,
16862:      154,   155,   156,   157,   158,   159,    -1,   161,    -1,   163,
16863:      164,   165,   166,    -1,   168,    -1,   170,    -1,    -1,    -1,
16864:      174,   175,   176,    -1,   178,    -1,   180,    -1,   182,   183,
16865:      184,   185,    -1,   187,   188,   189,   190,   191,   192,   193,
16866:       -1,   195,   196,   197,   198,    -1,   200,   201,   202,   203,
16867:      204,   205,   206,    -1,   208,    -1,   210,   211,   212,   213,
16868:      214,   215,   216,   217,    -1,   219,    -1,   221,    -1,    -1,
16869:      224,    -1,   226,   227,   228,   229,   230,   231,    -1,    -1,
16870:      234,    -1,   236,    -1,    -1,   239,   240,   241,   242,   243,
16871:      244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
16872:      254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
16873:      264,   265,   266,   267,   268,    -1,   270,   271,   272,   273,
16874:      274,    -1,   276,   277,    -1,   279,    -1,   281,   282,   283,
16875:      284,   285,   286,    -1,   288,   289,    -1,    -1,   292,   293,
16876:      294,    -1,    -1,   297,   298,   299,    -1,   301,    -1,   303,
16877:      304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
16878:      314,    -1,    -1,    -1,    -1,   319,   320,   321,    -1,   323,
16879:      324,   325,   326,   327,   328,    -1,   330,   331,   332,   333,
16880:      334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
16881:      344,   345,   346,    -1,   348,   349,   350,   351,   352,   353,
16882:      354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
16883:       -1,   365,   366,   367,   368,   369,   370,   371,   372,   373,
16884:      374,   375,   376,   377,   378,   379,   380,   381,    -1,    -1,
16885:      384,   385,   386,   387,   388,   389,   390,   391,   392,    -1,
16886:       -1,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
16887:      404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
16888:      414,    -1,    -1,   417,   418,    -1,   420,    -1,   422,   423,
16889:      424,   425,   426,    -1,   428,   429,   430,    -1,    -1,   433,
16890:      434,   435,   436,   437,    -1,   439,   440,   441,   442,   443,
16891:      444,   445,   446,    -1,    -1,   449,   450,   451,    -1,   453,
16892:      454,   455,   456,    -1,   458,   459,   460,   461,   462,   463,
16893:      464,   465,    -1,   467,    -1,   469,   470,   471,   472,   473,
16894:      474,   475,    -1,    -1,   478,    -1,    -1,   481,   482,   483,
16895:      484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
16896:      494,   495,   496,   497,   498,   499,   500,   501,     3,    -1,
16897:        5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16898:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    22,    23,    24,
16899:       25,    26,    27,    28,    29,    -1,    31,    32,    33,    -1,
16900:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,    44,
16901:       -1,    46,    47,    48,    -1,    50,    51,    52,    53,    54,
16902:       -1,    56,    57,    -1,    59,    60,    61,    62,    63,    64,
16903:       -1,    -1,    67,    68,    69,    70,    71,    72,    73,    -1,
16904:       75,    76,    77,    78,    79,    -1,    -1,    -1,    83,    84,
16905:       85,    86,    87,    88,    -1,    90,    91,    92,    -1,    94,
16906:       95,    96,    97,    98,    99,    -1,    -1,   102,   103,   104,
16907:      105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
16908:      115,   116,    -1,   118,    -1,   120,   121,   122,   123,   124,
16909:      125,    -1,    -1,   128,   129,   130,   131,    -1,    -1,   134,
16910:      135,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
16911:      145,   146,    -1,   148,   149,   150,   151,   152,   153,   154,
16912:      155,   156,   157,   158,   159,    -1,   161,    -1,   163,   164,
16913:      165,   166,    -1,   168,    -1,   170,    -1,    -1,    -1,   174,
16914:      175,   176,    -1,   178,    -1,   180,    -1,   182,   183,   184,
16915:      185,    -1,   187,   188,   189,   190,   191,   192,   193,    -1,
16916:      195,   196,   197,   198,    -1,   200,   201,   202,   203,   204,
16917:      205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
16918:      215,   216,   217,    -1,   219,    -1,   221,    -1,    -1,   224,
16919:       -1,   226,   227,   228,   229,   230,   231,    -1,    -1,   234,
16920:       -1,   236,    -1,    -1,   239,   240,   241,   242,   243,   244,
16921:      245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
16922:      255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
16923:      265,   266,   267,   268,    -1,   270,   271,   272,   273,   274,
16924:       -1,   276,   277,    -1,   279,    -1,   281,   282,   283,   284,
16925:      285,   286,    -1,   288,   289,    -1,   291,   292,   293,   294,
16926:       -1,    -1,   297,   298,   299,    -1,   301,    -1,   303,   304,
16927:      305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
16928:       -1,    -1,    -1,    -1,   319,   320,   321,    -1,   323,   324,
16929:      325,   326,   327,   328,    -1,   330,   331,   332,   333,   334,
16930:      335,    -1,   337,   338,   339,   340,   341,   342,   343,   344,
16931:      345,   346,    -1,   348,   349,   350,   351,   352,   353,   354,
16932:      355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
16933:      365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
16934:      375,   376,   377,   378,   379,   380,   381,    -1,    -1,   384,
16935:      385,   386,   387,   388,   389,   390,   391,   392,    -1,    -1,
16936:      395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
16937:      405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
16938:       -1,    -1,   417,   418,    -1,   420,    -1,   422,   423,   424,
16939:      425,   426,    -1,   428,   429,   430,    -1,    -1,   433,   434,
16940:      435,   436,   437,    -1,   439,   440,   441,   442,   443,   444,
16941:      445,   446,    -1,    -1,   449,   450,   451,    -1,   453,   454,
16942:      455,   456,    -1,   458,   459,   460,   461,   462,   463,   464,
16943:      465,    -1,   467,    -1,   469,   470,   471,   472,   473,   474,
16944:      475,    -1,    -1,   478,    -1,    -1,   481,   482,   483,   484,
16945:      485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
16946:      495,   496,   497,   498,   499,   500,   501,     3,    -1,     5,
16947:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16948:       -1,    -1,    -1,    -1,    -1,    -1,    22,    23,    24,    25,
16949:       26,    27,    28,    29,    -1,    31,    32,    33,    -1,    -1,
16950:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,    44,    -1,
16951:       46,    47,    48,    -1,    50,    51,    52,    53,    54,    -1,
16952:       56,    57,    -1,    59,    60,    61,    62,    63,    64,    -1,
16953:       -1,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
16954:       76,    77,    78,    79,    -1,    -1,    -1,    83,    84,    85,
16955:       86,    87,    88,    -1,    90,    91,    92,    -1,    94,    95,
16956:       96,    97,    98,    99,    -1,    -1,   102,   103,   104,   105,
16957:      106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
16958:      116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
16959:       -1,    -1,   128,   129,   130,   131,    -1,    -1,   134,   135,
16960:      136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
16961:      146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
16962:      156,   157,   158,   159,    -1,   161,    -1,   163,   164,   165,
16963:      166,    -1,   168,    -1,   170,    -1,    -1,    -1,   174,   175,
16964:      176,    -1,   178,    -1,   180,    -1,   182,   183,   184,   185,
16965:       -1,   187,   188,   189,   190,   191,   192,   193,    -1,   195,
16966:      196,   197,   198,    -1,   200,   201,   202,   203,   204,   205,
16967:      206,    -1,   208,    -1,   210,   211,   212,   213,   214,   215,
16968:      216,   217,    -1,   219,    -1,   221,    -1,    -1,   224,    -1,
16969:      226,   227,   228,   229,   230,   231,    -1,    -1,   234,    -1,
16970:      236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
16971:      246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
16972:      256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
16973:      266,   267,   268,    -1,   270,   271,   272,   273,   274,    -1,
16974:      276,   277,    -1,   279,    -1,   281,   282,   283,   284,   285,
16975:      286,    -1,   288,   289,    -1,   291,   292,   293,   294,    -1,
16976:       -1,   297,   298,   299,    -1,   301,    -1,   303,   304,   305,
16977:      306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
16978:       -1,    -1,    -1,   319,   320,   321,    -1,   323,   324,   325,
16979:      326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
16980:       -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
16981:      346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
16982:      356,   357,   358,   359,   360,    -1,   362,   363,    -1,   365,
16983:      366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
16984:      376,   377,   378,   379,   380,   381,    -1,    -1,   384,   385,
16985:      386,   387,   388,   389,   390,   391,   392,    -1,    -1,   395,
16986:      396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
16987:      406,   407,   408,   409,   410,   411,   412,   413,   414,    -1,
16988:       -1,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
16989:      426,    -1,   428,   429,   430,    -1,    -1,   433,   434,   435,
16990:      436,   437,    -1,   439,   440,   441,   442,   443,   444,   445,
16991:      446,    -1,    -1,   449,   450,   451,    -1,   453,   454,   455,
16992:      456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
16993:       -1,   467,    -1,   469,   470,   471,   472,   473,   474,   475,
16994:       -1,    -1,   478,    -1,    -1,   481,   482,   483,   484,   485,
16995:      486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
16996:      496,   497,   498,   499,   500,   501,     3,    -1,     5,    -1,
16997:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
16998:       -1,    -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,
16999:       27,    28,    29,    30,    31,    32,    33,    -1,    -1,    -1,
17000:       -1,    -1,    -1,    -1,    -1,    -1,    43,    44,    -1,    46,
17001:       47,    48,    -1,    50,    51,    52,    53,    54,    -1,    56,
17002:       57,    -1,    59,    60,    61,    62,    63,    64,    -1,    -1,
17003:       67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
17004:       77,    78,    79,    -1,    -1,    -1,    83,    84,    85,    86,
17005:       87,    88,    -1,    90,    91,    92,    -1,    94,    95,    96,
17006:       97,    98,    99,    -1,    -1,   102,   103,   104,   105,   106,
17007:      107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
17008:       -1,   118,    -1,   120,   121,   122,   123,   124,   125,    -1,
17009:       -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
17010:      137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
17011:       -1,   148,   149,   150,   151,   152,   153,   154,   155,   156,
17012:      157,   158,   159,    -1,   161,    -1,   163,   164,   165,   166,
17013:       -1,   168,    -1,   170,    -1,    -1,    -1,   174,   175,   176,
17014:       -1,   178,    -1,   180,    -1,   182,   183,   184,   185,    -1,
17015:      187,   188,   189,   190,   191,   192,   193,    -1,   195,   196,
17016:      197,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
17017:       -1,   208,    -1,   210,   211,   212,   213,   214,   215,   216,
17018:      217,    -1,   219,    -1,   221,    -1,    -1,   224,    -1,   226,
17019:      227,   228,   229,   230,   231,    -1,    -1,   234,    -1,   236,
17020:       -1,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
17021:      247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
17022:      257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
17023:      267,   268,    -1,   270,   271,   272,   273,   274,    -1,   276,
17024:      277,    -1,   279,    -1,   281,   282,   283,   284,   285,   286,
17025:       -1,   288,   289,    -1,    -1,   292,   293,   294,    -1,    -1,
17026:      297,   298,   299,    -1,   301,    -1,   303,   304,   305,   306,
17027:      307,   308,   309,   310,   311,   312,   313,   314,    -1,    -1,
17028:       -1,    -1,   319,   320,   321,    -1,   323,   324,   325,   326,
17029:      327,   328,    -1,   330,   331,   332,   333,   334,   335,    -1,
17030:      337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
17031:       -1,   348,   349,   350,   351,   352,   353,   354,   355,   356,
17032:      357,   358,   359,   360,    -1,   362,   363,    -1,   365,   366,
17033:      367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
17034:      377,   378,   379,   380,   381,    -1,    -1,   384,   385,   386,
17035:      387,   388,   389,   390,   391,   392,    -1,    -1,   395,   396,
17036:      397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
17037:      407,   408,   409,   410,   411,   412,   413,   414,    -1,    -1,
17038:      417,   418,    -1,   420,    -1,   422,   423,   424,   425,   426,
17039:       -1,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
17040:      437,    -1,   439,   440,   441,   442,   443,   444,   445,   446,
17041:       -1,    -1,   449,   450,   451,    -1,   453,   454,   455,   456,
17042:       -1,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
17043:      467,    -1,   469,   470,   471,   472,   473,   474,   475,    -1,
17044:       -1,   478,    -1,    -1,   481,   482,   483,   484,   485,   486,
17045:      487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
17046:      497,   498,   499,   500,   501,     3,    -1,     5,    -1,    -1,
17047:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17048:       -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,    27,
17049:       28,    29,    -1,    31,    32,    33,    -1,    -1,    -1,    -1,
17050:       -1,    -1,    -1,    -1,    -1,    43,    44,    -1,    46,    47,
17051:       48,    -1,    50,    51,    52,    53,    54,    -1,    56,    57,
17052:       -1,    59,    60,    61,    62,    63,    64,    -1,    -1,    67,
17053:       68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
17054:       78,    79,    -1,    -1,    -1,    83,    84,    85,    86,    87,
17055:       88,    -1,    90,    91,    92,    -1,    94,    95,    96,    97,
17056:       98,    99,    -1,    -1,   102,   103,   104,   105,   106,   107,
17057:      108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
17058:      118,    -1,   120,   121,   122,   123,   124,   125,    -1,    -1,
17059:      128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
17060:      138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
17061:      148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
17062:      158,   159,    -1,   161,    -1,   163,   164,   165,   166,    -1,
17063:      168,    -1,   170,    -1,    -1,    -1,   174,   175,   176,    -1,
17064:      178,    -1,   180,    -1,   182,   183,   184,   185,    -1,   187,
17065:      188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
17066:      198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
17067:      208,    -1,   210,   211,   212,   213,   214,   215,   216,   217,
17068:       -1,   219,    -1,   221,    -1,    -1,   224,    -1,   226,   227,
17069:      228,   229,   230,   231,    -1,    -1,   234,    -1,   236,    -1,
17070:       -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
17071:      248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
17072:      258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
17073:      268,    -1,   270,   271,   272,   273,   274,    -1,   276,   277,
17074:       -1,   279,    -1,   281,   282,   283,   284,   285,   286,    -1,
17075:      288,   289,    -1,   291,   292,   293,   294,    -1,    -1,   297,
17076:      298,   299,    -1,   301,    -1,   303,   304,   305,   306,   307,
17077:      308,   309,   310,   311,   312,   313,   314,    -1,    -1,    -1,
17078:       -1,   319,   320,   321,    -1,   323,   324,   325,   326,   327,
17079:      328,    -1,   330,   331,   332,   333,   334,   335,    -1,   337,
17080:      338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
17081:      348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
17082:      358,   359,   360,    -1,   362,   363,    -1,   365,   366,   367,
17083:      368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
17084:      378,   379,   380,   381,    -1,    -1,   384,   385,   386,   387,
17085:      388,   389,   390,   391,   392,    -1,    -1,   395,   396,   397,
17086:      398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
17087:      408,   409,   410,   411,   412,   413,   414,    -1,    -1,   417,
17088:      418,    -1,   420,    -1,   422,   423,   424,   425,   426,    -1,
17089:      428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
17090:       -1,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
17091:       -1,   449,   450,   451,    -1,   453,   454,   455,   456,    -1,
17092:      458,   459,   460,   461,   462,   463,   464,   465,    -1,   467,
17093:       -1,   469,   470,   471,   472,   473,   474,   475,    -1,    -1,
17094:      478,    -1,    -1,   481,   482,   483,   484,   485,   486,   487,
17095:      488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
17096:      498,   499,   500,   501,     3,     4,    -1,    -1,    -1,    -1,
17097:        9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17098:       -1,    -1,    -1,    22,    23,    24,    25,    26,    27,    28,
17099:       29,    -1,    31,    32,    33,    -1,    -1,    -1,    -1,    -1,
17100:       -1,    -1,    -1,    -1,    43,    44,    -1,    46,    47,    48,
17101:       -1,    50,    51,    52,    53,    54,    -1,    56,    57,    -1,
17102:       59,    60,    61,    62,    63,    64,    -1,    -1,    67,    68,
17103:       69,    70,    71,    72,    73,    -1,    75,    76,    77,    78,
17104:       79,    -1,    -1,    -1,    83,    84,    85,    86,    87,    88,
17105:       -1,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
17106:       99,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
17107:      109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
17108:       -1,   120,   121,   122,   123,   124,   125,    -1,    -1,   128,
17109:      129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
17110:       -1,   140,   141,   142,    -1,   144,   145,   146,    -1,   148,
17111:      149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
17112:      159,    -1,   161,    -1,   163,   164,   165,   166,    -1,   168,
17113:       -1,   170,    -1,    -1,    -1,   174,   175,   176,    -1,   178,
17114:       -1,   180,    -1,   182,   183,   184,   185,    -1,   187,   188,
17115:      189,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
17116:       -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
17117:       -1,   210,   211,   212,   213,   214,   215,   216,   217,    -1,
17118:      219,    -1,   221,    -1,    -1,   224,    -1,   226,   227,   228,
17119:      229,   230,   231,    -1,    -1,   234,    -1,   236,    -1,    -1,
17120:      239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
17121:      249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
17122:      259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
17123:       -1,   270,   271,   272,   273,   274,    -1,   276,   277,    -1,
17124:      279,    -1,   281,   282,   283,   284,   285,   286,    -1,   288,
17125:      289,    -1,    -1,   292,   293,   294,    -1,    -1,   297,   298,
17126:      299,    -1,   301,    -1,   303,   304,   305,   306,   307,   308,
17127:      309,   310,   311,   312,   313,   314,    -1,    -1,    -1,    -1,
17128:      319,   320,   321,    -1,   323,   324,   325,   326,   327,   328,
17129:       -1,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
17130:      339,   340,   341,   342,   343,   344,   345,   346,    -1,   348,
17131:      349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
17132:      359,   360,    -1,   362,   363,    -1,   365,   366,   367,   368,
17133:      369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
17134:      379,   380,   381,    -1,    -1,   384,   385,   386,   387,   388,
17135:      389,   390,   391,   392,    -1,    -1,   395,   396,   397,   398,
17136:       -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
17137:      409,   410,   411,   412,   413,   414,    -1,    -1,   417,   418,
17138:       -1,   420,    -1,   422,   423,   424,   425,   426,    -1,   428,
17139:      429,   430,    -1,    -1,   433,   434,   435,   436,   437,    -1,
17140:      439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
17141:      449,   450,   451,    -1,   453,   454,   455,   456,    -1,   458,
17142:      459,   460,   461,   462,   463,   464,   465,    -1,   467,    -1,
17143:      469,   470,   471,   472,   473,   474,   475,    -1,    -1,   478,
17144:       -1,    -1,   481,   482,   483,   484,   485,   486,   487,   488,
17145:      489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
17146:      499,   500,   501,     3,    -1,     5,    -1,    -1,    -1,    -1,
17147:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17148:       -1,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
17149:       -1,    31,    32,    33,    -1,    -1,    -1,    -1,    -1,    -1,
17150:       -1,    -1,    -1,    43,    44,    -1,    46,    47,    48,    -1,
17151:       50,    51,    52,    53,    54,    -1,    56,    57,    -1,    59,
17152:       60,    61,    62,    63,    64,    -1,    -1,    67,    68,    69,
17153:       70,    71,    72,    73,    -1,    75,    76,    77,    78,    79,
17154:       -1,    -1,    -1,    83,    84,    85,    86,    87,    88,    -1,
17155:       90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
17156:       -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
17157:      110,   111,   112,   113,   114,   115,   116,    -1,   118,    -1,
17158:      120,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
17159:      130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
17160:      140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
17161:      150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
17162:       -1,   161,    -1,   163,   164,   165,   166,    -1,   168,    -1,
17163:      170,    -1,    -1,    -1,   174,   175,   176,    -1,   178,    -1,
17164:      180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
17165:      190,   191,   192,   193,    -1,   195,   196,   197,   198,    -1,
17166:      200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
17167:      210,   211,   212,   213,   214,   215,   216,   217,    -1,   219,
17168:       -1,   221,    -1,    -1,   224,    -1,   226,   227,   228,   229,
17169:      230,   231,    -1,    -1,   234,    -1,   236,    -1,    -1,   239,
17170:      240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
17171:      250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
17172:      260,   261,   262,   263,   264,   265,   266,   267,   268,    -1,
17173:      270,   271,   272,   273,   274,    -1,   276,   277,    -1,   279,
17174:       -1,   281,   282,   283,   284,   285,   286,    -1,   288,   289,
17175:       -1,    -1,   292,   293,   294,    -1,    -1,   297,   298,   299,
17176:       -1,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
17177:      310,   311,   312,   313,   314,    -1,    -1,    -1,    -1,   319,
17178:      320,   321,    -1,   323,   324,   325,   326,   327,   328,    -1,
17179:      330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
17180:      340,   341,   342,   343,   344,   345,   346,    -1,   348,   349,
17181:      350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
17182:      360,    -1,   362,   363,    -1,   365,   366,   367,   368,   369,
17183:      370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
17184:      380,   381,    -1,    -1,   384,   385,   386,   387,   388,   389,
17185:      390,   391,   392,    -1,    -1,   395,   396,   397,   398,    -1,
17186:      400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
17187:      410,   411,   412,   413,   414,    -1,    -1,   417,   418,   419,
17188:      420,    -1,   422,   423,   424,   425,   426,    -1,   428,   429,
17189:      430,    -1,    -1,   433,   434,   435,   436,   437,    -1,   439,
17190:      440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
17191:      450,   451,    -1,   453,   454,   455,   456,    -1,   458,   459,
17192:      460,   461,   462,   463,   464,   465,    -1,   467,    -1,   469,
17193:      470,   471,   472,   473,   474,   475,    -1,    -1,   478,    -1,
17194:       -1,   481,   482,   483,   484,   485,   486,   487,   488,   489,
17195:      490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
17196:      500,   501,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
17197:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17198:       -1,    22,    23,    24,    25,    26,    27,    28,    29,    -1,
17199:       31,    32,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17200:       -1,    -1,    43,    44,    -1,    46,    47,    48,    -1,    50,
17201:       51,    52,    53,    54,    -1,    56,    57,    -1,    59,    60,
17202:       61,    62,    63,    64,    -1,    -1,    67,    68,    69,    70,
17203:       71,    72,    73,    -1,    75,    76,    77,    78,    79,    -1,
17204:       -1,    -1,    83,    84,    85,    86,    87,    88,    -1,    90,
17205:       91,    92,    -1,    94,    95,    96,    97,    98,    99,    -1,
17206:       -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
17207:      111,   112,   113,   114,   115,   116,    -1,   118,    -1,   120,
17208:      121,   122,   123,   124,   125,    -1,    -1,   128,   129,   130,
17209:      131,    -1,    -1,   134,   135,   136,   137,   138,    -1,   140,
17210:      141,   142,    -1,   144,   145,   146,    -1,   148,   149,   150,
17211:      151,   152,   153,   154,   155,   156,   157,   158,   159,    -1,
17212:      161,    -1,   163,   164,   165,   166,    -1,   168,    -1,   170,
17213:       -1,    -1,    -1,   174,   175,   176,    -1,   178,    -1,   180,
17214:       -1,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
17215:      191,   192,   193,    -1,   195,   196,   197,   198,    -1,   200,
17216:      201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
17217:      211,   212,   213,   214,   215,   216,   217,    -1,   219,    -1,
17218:      221,    -1,    -1,   224,    -1,   226,   227,   228,   229,   230,
17219:      231,    -1,    -1,   234,    -1,   236,    -1,    -1,   239,   240,
17220:      241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
17221:      251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
17222:      261,   262,   263,   264,   265,   266,   267,   268,    -1,   270,
17223:      271,   272,   273,   274,    -1,   276,   277,    -1,   279,    -1,
17224:      281,   282,   283,   284,   285,   286,    -1,   288,   289,    -1,
17225:       -1,   292,   293,   294,    -1,    -1,   297,   298,   299,    -1,
17226:      301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
17227:      311,   312,   313,   314,    -1,    -1,    -1,    -1,   319,   320,
17228:      321,    -1,   323,   324,   325,   326,   327,   328,    -1,   330,
17229:      331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
17230:      341,   342,   343,   344,   345,   346,    -1,   348,   349,   350,
17231:      351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
17232:       -1,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
17233:      371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
17234:      381,    -1,    -1,   384,   385,   386,   387,   388,   389,   390,
17235:      391,   392,    -1,    -1,   395,   396,   397,   398,    -1,   400,
17236:      401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
17237:      411,   412,   413,   414,    -1,    -1,   417,   418,    -1,   420,
17238:       -1,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
17239:       -1,    -1,   433,   434,   435,   436,   437,    -1,   439,   440,
17240:      441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
17241:      451,    -1,   453,   454,   455,   456,    -1,   458,   459,   460,
17242:      461,   462,   463,   464,   465,    -1,   467,    -1,   469,   470,
17243:      471,   472,   473,   474,   475,    -1,    -1,   478,    -1,    -1,
17244:      481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
17245:      491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
17246:      501,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
17247:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17248:       22,    23,    24,    25,    26,    27,    28,    29,    -1,    31,
17249:       32,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17250:       -1,    43,    44,    -1,    46,    47,    48,    -1,    50,    51,
17251:       52,    53,    54,    -1,    56,    57,    -1,    59,    60,    61,
17252:       62,    63,    64,    -1,    -1,    67,    68,    69,    70,    71,
17253:       72,    73,    -1,    75,    76,    77,    78,    79,    -1,    -1,
17254:       -1,    83,    84,    85,    86,    87,    88,    -1,    90,    91,
17255:       92,    -1,    94,    95,    96,    97,    98,    99,    -1,    -1,
17256:      102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
17257:      112,   113,   114,   115,   116,    -1,   118,    -1,   120,   121,
17258:      122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
17259:       -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
17260:      142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
17261:      152,   153,   154,   155,   156,   157,   158,   159,    -1,   161,
17262:       -1,   163,   164,   165,   166,    -1,   168,    -1,   170,    -1,
17263:       -1,    -1,   174,   175,   176,    -1,   178,    -1,   180,    -1,
17264:      182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
17265:      192,   193,    -1,   195,   196,   197,   198,    -1,   200,   201,
17266:      202,   203,   204,   205,   206,    -1,   208,    -1,   210,   211,
17267:      212,   213,   214,   215,   216,   217,    -1,   219,    -1,   221,
17268:       -1,    -1,   224,    -1,   226,   227,   228,   229,   230,   231,
17269:       -1,    -1,   234,    -1,   236,    -1,    -1,   239,   240,   241,
17270:      242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
17271:      252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
17272:      262,   263,   264,   265,   266,   267,   268,    -1,   270,   271,
17273:      272,   273,   274,    -1,   276,   277,    -1,   279,    -1,   281,
17274:      282,   283,   284,   285,   286,    -1,   288,   289,    -1,    -1,
17275:      292,   293,   294,    -1,    -1,   297,   298,   299,    -1,   301,
17276:       -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
17277:      312,   313,   314,    -1,    -1,    -1,    -1,   319,   320,   321,
17278:       -1,   323,   324,   325,   326,   327,   328,    -1,   330,   331,
17279:      332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
17280:      342,   343,   344,   345,   346,    -1,   348,   349,   350,   351,
17281:      352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
17282:      362,   363,    -1,   365,   366,   367,   368,   369,   370,   371,
17283:      372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
17284:       -1,    -1,   384,   385,   386,   387,   388,   389,   390,   391,
17285:      392,    -1,    -1,   395,   396,   397,   398,    -1,   400,   401,
17286:      402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
17287:      412,   413,   414,    -1,    -1,   417,   418,    -1,   420,    -1,
17288:      422,   423,   424,   425,   426,    -1,   428,   429,   430,    -1,
17289:       -1,   433,   434,   435,   436,   437,    -1,   439,   440,   441,
17290:      442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
17291:       -1,   453,   454,   455,   456,    -1,   458,   459,   460,   461,
17292:      462,   463,   464,   465,    -1,   467,    -1,   469,   470,   471,
17293:      472,   473,   474,   475,    -1,    -1,   478,    -1,    -1,   481,
17294:      482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
17295:      492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
17296:        3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17297:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    22,
17298:       23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
17299:       33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17300:       43,    44,    -1,    46,    47,    48,    -1,    50,    51,    52,
17301:       53,    54,    -1,    56,    57,    -1,    59,    60,    61,    62,
17302:       63,    64,    -1,    -1,    67,    68,    69,    70,    71,    72,
17303:       73,    -1,    75,    76,    77,    78,    79,    -1,    -1,    -1,
17304:       83,    84,    85,    86,    87,    88,    -1,    90,    91,    92,
17305:       -1,    94,    95,    96,    97,    98,    99,    -1,    -1,   102,
17306:      103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
17307:      113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
17308:      123,   124,   125,    -1,    -1,   128,   129,   130,   131,    -1,
17309:       -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
17310:       -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
17311:      153,   154,   155,   156,   157,   158,   159,    -1,   161,    -1,
17312:      163,   164,   165,   166,    -1,   168,    -1,   170,    -1,    -1,
17313:       -1,   174,   175,   176,    -1,   178,    -1,   180,    -1,   182,
17314:      183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
17315:      193,    -1,   195,   196,   197,   198,    -1,   200,   201,   202,
17316:      203,   204,   205,   206,    -1,   208,    -1,   210,   211,   212,
17317:      213,   214,   215,   216,   217,    -1,   219,    -1,   221,    -1,
17318:       -1,   224,    -1,   226,   227,   228,   229,   230,   231,    -1,
17319:       -1,   234,    -1,   236,    -1,    -1,   239,   240,   241,   242,
17320:      243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
17321:      253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
17322:      263,   264,   265,   266,   267,   268,    -1,   270,   271,   272,
17323:      273,   274,    -1,   276,   277,    -1,   279,    -1,   281,   282,
17324:      283,   284,   285,   286,    -1,   288,   289,    -1,    -1,   292,
17325:      293,   294,    -1,    -1,   297,   298,   299,    -1,   301,    -1,
17326:      303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
17327:      313,   314,    -1,    -1,    -1,    -1,   319,   320,   321,    -1,
17328:      323,   324,   325,   326,   327,   328,    -1,   330,   331,   332,
17329:      333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
17330:      343,   344,   345,   346,    -1,   348,   349,   350,   351,   352,
17331:      353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
17332:      363,    -1,   365,   366,   367,   368,   369,   370,   371,   372,
17333:      373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
17334:       -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
17335:       -1,    -1,   395,   396,   397,   398,    -1,   400,   401,   402,
17336:      403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
17337:      413,   414,    -1,    -1,   417,   418,    -1,   420,    -1,   422,
17338:      423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
17339:      433,   434,   435,   436,   437,    -1,   439,   440,   441,   442,
17340:      443,   444,   445,   446,    -1,    -1,   449,   450,   451,    -1,
17341:      453,   454,   455,   456,    -1,   458,   459,   460,   461,   462,
17342:      463,   464,   465,    -1,   467,    -1,   469,   470,   471,   472,
17343:      473,   474,   475,    -1,    -1,   478,    -1,    -1,   481,   482,
17344:      483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
17345:      493,   494,   495,   496,   497,   498,   499,   500,   501,     3,
17346:       -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17347:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    22,    23,
17348:       24,    25,    26,    27,    28,    29,    -1,    31,    32,    33,
17349:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,
17350:       44,    -1,    46,    47,    48,    -1,    50,    51,    52,    53,
17351:       54,    -1,    56,    57,    -1,    59,    60,    61,    62,    63,
17352:       64,    -1,    -1,    67,    68,    69,    70,    71,    72,    73,
17353:       -1,    75,    76,    77,    78,    79,    -1,    -1,    -1,    83,
17354:       84,    85,    86,    87,    88,    -1,    90,    91,    92,    -1,
17355:       94,    95,    96,    97,    98,    99,    -1,    -1,   102,   103,
17356:      104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
17357:      114,   115,   116,    -1,   118,    -1,   120,   121,   122,   123,
17358:      124,   125,    -1,    -1,   128,   129,   130,   131,    -1,    -1,
17359:      134,   135,   136,   137,   138,    -1,   140,   141,   142,    -1,
17360:      144,   145,   146,    -1,   148,   149,   150,   151,   152,   153,
17361:      154,   155,   156,   157,   158,   159,    -1,   161,    -1,   163,
17362:      164,   165,   166,    -1,   168,    -1,   170,    -1,    -1,    -1,
17363:      174,   175,   176,    -1,   178,    -1,   180,    -1,   182,   183,
17364:      184,   185,    -1,   187,   188,   189,   190,   191,   192,   193,
17365:       -1,   195,   196,   197,   198,    -1,   200,   201,   202,   203,
17366:      204,   205,   206,    -1,   208,    -1,   210,   211,   212,   213,
17367:      214,   215,   216,   217,    -1,   219,    -1,   221,    -1,    -1,
17368:      224,    -1,   226,   227,   228,   229,   230,   231,    -1,    -1,
17369:      234,    -1,   236,    -1,    -1,   239,   240,   241,   242,   243,
17370:      244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
17371:      254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
17372:      264,   265,   266,   267,   268,    -1,   270,   271,   272,   273,
17373:      274,    -1,   276,   277,    -1,   279,    -1,   281,   282,   283,
17374:      284,   285,   286,    -1,   288,   289,    -1,    -1,   292,   293,
17375:      294,    -1,    -1,   297,   298,   299,    -1,   301,    -1,   303,
17376:      304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
17377:      314,    -1,    -1,    -1,    -1,   319,   320,   321,    -1,   323,
17378:      324,   325,   326,   327,   328,    -1,   330,   331,   332,   333,
17379:      334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
17380:      344,   345,   346,    -1,   348,   349,   350,   351,   352,   353,
17381:      354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
17382:       -1,   365,   366,   367,   368,   369,   370,   371,   372,   373,
17383:      374,   375,   376,   377,   378,   379,   380,   381,    -1,    -1,
17384:      384,   385,   386,   387,   388,   389,   390,   391,   392,    -1,
17385:       -1,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
17386:      404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
17387:      414,    -1,    -1,   417,   418,    -1,   420,    -1,   422,   423,
17388:      424,   425,   426,    -1,   428,   429,   430,    -1,    -1,   433,
17389:      434,   435,   436,   437,    -1,   439,   440,   441,   442,   443,
17390:      444,   445,   446,    -1,    -1,   449,   450,   451,    -1,   453,
17391:      454,   455,   456,    -1,   458,   459,   460,   461,   462,   463,
17392:      464,   465,    -1,   467,    -1,   469,   470,   471,   472,   473,
17393:      474,   475,    -1,    -1,   478,    -1,    -1,   481,   482,   483,
17394:      484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
17395:      494,   495,   496,   497,   498,   499,   500,   501,     3,    -1,
17396:        5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17397:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    22,    23,    24,
17398:       25,    26,    27,    28,    29,    -1,    31,    32,    33,    -1,
17399:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,    44,
17400:       -1,    46,    47,    48,    -1,    50,    51,    52,    53,    54,
17401:       -1,    56,    57,    -1,    59,    60,    61,    62,    63,    64,
17402:       -1,    -1,    67,    68,    69,    70,    71,    72,    73,    -1,
17403:       75,    76,    77,    78,    79,    -1,    -1,    -1,    83,    84,
17404:       85,    86,    87,    88,    -1,    90,    91,    92,    -1,    94,
17405:       95,    96,    97,    98,    99,    -1,    -1,   102,   103,   104,
17406:      105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
17407:      115,   116,    -1,   118,    -1,   120,   121,   122,   123,   124,
17408:      125,    -1,    -1,   128,   129,   130,   131,    -1,    -1,   134,
17409:      135,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
17410:      145,   146,    -1,   148,   149,   150,   151,   152,   153,   154,
17411:      155,   156,   157,   158,   159,    -1,   161,    -1,   163,   164,
17412:      165,   166,    -1,   168,    -1,   170,    -1,    -1,    -1,   174,
17413:      175,   176,    -1,   178,    -1,   180,    -1,   182,   183,   184,
17414:      185,    -1,   187,   188,   189,   190,   191,   192,   193,    -1,
17415:      195,   196,   197,   198,    -1,   200,   201,   202,   203,   204,
17416:      205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
17417:      215,   216,   217,    -1,   219,    -1,   221,    -1,    -1,   224,
17418:       -1,   226,   227,   228,   229,   230,   231,    -1,    -1,   234,
17419:       -1,   236,    -1,    -1,   239,   240,   241,   242,   243,   244,
17420:      245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
17421:      255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
17422:      265,   266,   267,   268,    -1,   270,   271,   272,   273,   274,
17423:       -1,   276,   277,    -1,   279,    -1,   281,   282,   283,   284,
17424:      285,   286,    -1,   288,   289,    -1,    -1,   292,   293,   294,
17425:       -1,    -1,   297,   298,   299,    -1,   301,    -1,   303,   304,
17426:      305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
17427:       -1,    -1,    -1,    -1,   319,   320,   321,    -1,   323,   324,
17428:      325,   326,   327,   328,    -1,   330,   331,   332,   333,   334,
17429:      335,    -1,   337,   338,   339,   340,   341,   342,   343,   344,
17430:      345,   346,    -1,   348,   349,   350,   351,   352,   353,   354,
17431:      355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
17432:      365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
17433:      375,   376,   377,   378,   379,   380,   381,    -1,    -1,   384,
17434:      385,   386,   387,   388,   389,   390,   391,   392,    -1,    -1,
17435:      395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
17436:      405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
17437:       -1,    -1,   417,   418,    -1,   420,    -1,   422,   423,   424,
17438:      425,   426,    -1,   428,   429,   430,    -1,    -1,   433,   434,
17439:      435,   436,   437,    -1,   439,   440,   441,   442,   443,   444,
17440:      445,   446,    -1,    -1,   449,   450,   451,    -1,   453,   454,
17441:      455,   456,    -1,   458,   459,   460,   461,   462,   463,   464,
17442:      465,    -1,   467,    -1,   469,   470,   471,   472,   473,   474,
17443:      475,    -1,    -1,   478,    -1,    -1,   481,   482,   483,   484,
17444:      485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
17445:      495,   496,   497,   498,   499,   500,   501,     3,    -1,     5,
17446:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17447:       -1,    -1,    -1,    -1,    -1,    -1,    22,    23,    24,    25,
17448:       26,    27,    28,    29,    -1,    31,    32,    33,    -1,    -1,
17449:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,    44,    -1,
17450:       46,    47,    48,    -1,    50,    51,    52,    53,    54,    -1,
17451:       56,    57,    -1,    59,    60,    61,    62,    63,    64,    -1,
17452:       -1,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
17453:       76,    77,    78,    79,    -1,    -1,    -1,    83,    84,    85,
17454:       86,    87,    88,    -1,    90,    91,    92,    -1,    94,    95,
17455:       96,    97,    98,    99,    -1,    -1,   102,   103,   104,   105,
17456:      106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
17457:      116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
17458:       -1,    -1,   128,   129,   130,   131,    -1,    -1,   134,   135,
17459:      136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
17460:      146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
17461:      156,   157,   158,   159,    -1,   161,    -1,   163,   164,   165,
17462:      166,    -1,   168,    -1,   170,    -1,    -1,    -1,   174,   175,
17463:      176,    -1,   178,    -1,   180,    -1,   182,   183,   184,   185,
17464:       -1,   187,   188,   189,   190,   191,   192,   193,    -1,   195,
17465:      196,   197,   198,    -1,   200,   201,   202,   203,   204,   205,
17466:      206,    -1,   208,    -1,   210,   211,   212,   213,   214,   215,
17467:      216,   217,    -1,   219,    -1,   221,    -1,    -1,   224,    -1,
17468:      226,   227,   228,   229,   230,   231,    -1,    -1,   234,    -1,
17469:      236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
17470:      246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
17471:      256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
17472:      266,   267,   268,    -1,   270,   271,   272,   273,   274,    -1,
17473:      276,   277,    -1,   279,    -1,   281,   282,   283,   284,   285,
17474:      286,    -1,   288,   289,    -1,    -1,   292,   293,   294,    -1,
17475:       -1,   297,   298,   299,    -1,   301,    -1,   303,   304,   305,
17476:      306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
17477:       -1,    -1,    -1,   319,   320,   321,    -1,   323,   324,   325,
17478:      326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
17479:       -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
17480:      346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
17481:      356,   357,   358,   359,   360,    -1,   362,   363,    -1,   365,
17482:      366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
17483:      376,   377,   378,   379,   380,   381,    -1,    -1,   384,   385,
17484:      386,   387,   388,   389,   390,   391,   392,    -1,    -1,   395,
17485:      396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
17486:      406,   407,   408,   409,   410,   411,   412,   413,   414,    -1,
17487:       -1,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
17488:      426,    -1,   428,   429,   430,    -1,    -1,   433,   434,   435,
17489:      436,   437,    -1,   439,   440,   441,   442,   443,   444,   445,
17490:      446,    -1,    -1,   449,   450,   451,    -1,   453,   454,   455,
17491:      456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
17492:       -1,   467,    -1,   469,   470,   471,   472,   473,   474,   475,
17493:       -1,    -1,   478,    -1,    -1,   481,   482,   483,   484,   485,
17494:      486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
17495:      496,   497,   498,   499,   500,   501,     3,    -1,     5,    -1,
17496:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17497:       -1,    -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,
17498:       27,    28,    29,    -1,    31,    32,    33,    -1,    -1,    -1,
17499:       -1,    -1,    -1,    -1,    -1,    -1,    43,    44,    -1,    46,
17500:       47,    48,    -1,    50,    51,    52,    53,    54,    -1,    56,
17501:       57,    -1,    59,    60,    61,    62,    63,    64,    -1,    -1,
17502:       67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
17503:       77,    78,    79,    -1,    -1,    -1,    83,    84,    85,    86,
17504:       87,    88,    -1,    90,    91,    92,    -1,    94,    95,    96,
17505:       97,    98,    99,    -1,    -1,   102,   103,   104,   105,   106,
17506:      107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
17507:       -1,   118,    -1,   120,   121,   122,   123,   124,   125,    -1,
17508:       -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
17509:      137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
17510:       -1,   148,   149,   150,   151,   152,   153,   154,   155,   156,
17511:      157,   158,   159,    -1,   161,    -1,   163,   164,   165,   166,
17512:       -1,   168,    -1,   170,    -1,    -1,    -1,   174,   175,   176,
17513:       -1,   178,    -1,   180,    -1,   182,   183,   184,   185,    -1,
17514:      187,   188,   189,   190,   191,   192,   193,    -1,   195,   196,
17515:      197,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
17516:       -1,   208,    -1,   210,   211,   212,   213,   214,   215,   216,
17517:      217,    -1,   219,    -1,   221,    -1,    -1,   224,    -1,   226,
17518:      227,   228,   229,   230,   231,    -1,    -1,   234,    -1,   236,
17519:       -1,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
17520:      247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
17521:      257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
17522:      267,   268,    -1,   270,   271,   272,   273,   274,    -1,   276,
17523:      277,    -1,   279,    -1,   281,   282,   283,   284,   285,   286,
17524:       -1,   288,   289,    -1,    -1,   292,   293,   294,    -1,    -1,
17525:      297,   298,   299,    -1,   301,    -1,   303,   304,   305,   306,
17526:      307,   308,   309,   310,   311,   312,   313,   314,    -1,    -1,
17527:       -1,    -1,   319,   320,   321,    -1,   323,   324,   325,   326,
17528:      327,   328,    -1,   330,   331,   332,   333,   334,   335,    -1,
17529:      337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
17530:       -1,   348,   349,   350,   351,   352,   353,   354,   355,   356,
17531:      357,   358,   359,   360,    -1,   362,   363,    -1,   365,   366,
17532:      367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
17533:      377,   378,   379,   380,   381,    -1,    -1,   384,   385,   386,
17534:      387,   388,   389,   390,   391,   392,    -1,    -1,   395,   396,
17535:      397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
17536:      407,   408,   409,   410,   411,   412,   413,   414,    -1,    -1,
17537:      417,   418,    -1,   420,    -1,   422,   423,   424,   425,   426,
17538:       -1,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
17539:      437,    -1,   439,   440,   441,   442,   443,   444,   445,   446,
17540:       -1,    -1,   449,   450,   451,    -1,   453,   454,   455,   456,
17541:       -1,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
17542:      467,    -1,   469,   470,   471,   472,   473,   474,   475,    -1,
17543:       -1,   478,    -1,    -1,   481,   482,   483,   484,   485,   486,
17544:      487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
17545:      497,   498,   499,   500,   501,     3,    -1,     5,    -1,    -1,
17546:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17547:       -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,    27,
17548:       28,    29,    -1,    31,    32,    33,    -1,    -1,    -1,    -1,
17549:       -1,    -1,    -1,    -1,    -1,    43,    44,    -1,    46,    47,
17550:       48,    -1,    50,    51,    52,    53,    54,    -1,    56,    57,
17551:       -1,    59,    60,    61,    62,    63,    64,    -1,    -1,    67,
17552:       68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
17553:       78,    79,    -1,    -1,    -1,    83,    84,    85,    86,    87,
17554:       88,    -1,    90,    91,    92,    -1,    94,    95,    96,    97,
17555:       98,    99,    -1,    -1,   102,   103,   104,   105,   106,   107,
17556:      108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
17557:      118,    -1,   120,   121,   122,   123,   124,   125,    -1,    -1,
17558:      128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
17559:      138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
17560:      148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
17561:      158,   159,    -1,   161,    -1,   163,   164,   165,   166,    -1,
17562:      168,    -1,   170,    -1,    -1,    -1,   174,   175,   176,    -1,
17563:      178,    -1,   180,    -1,   182,   183,   184,   185,    -1,   187,
17564:      188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
17565:      198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
17566:      208,    -1,   210,   211,   212,   213,   214,   215,   216,   217,
17567:       -1,   219,    -1,   221,    -1,    -1,   224,    -1,   226,   227,
17568:      228,   229,   230,   231,    -1,    -1,   234,    -1,   236,    -1,
17569:       -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
17570:      248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
17571:      258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
17572:      268,    -1,   270,   271,   272,   273,   274,    -1,   276,   277,
17573:       -1,   279,    -1,   281,   282,   283,   284,   285,   286,    -1,
17574:      288,   289,    -1,    -1,   292,   293,   294,    -1,    -1,   297,
17575:      298,   299,    -1,   301,    -1,   303,   304,   305,   306,   307,
17576:      308,   309,   310,   311,   312,   313,   314,    -1,    -1,    -1,
17577:       -1,   319,   320,   321,    -1,   323,   324,   325,   326,   327,
17578:      328,    -1,   330,   331,   332,   333,   334,   335,    -1,   337,
17579:      338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
17580:      348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
17581:      358,   359,   360,    -1,   362,   363,    -1,   365,   366,   367,
17582:      368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
17583:      378,   379,   380,   381,    -1,    -1,   384,   385,   386,   387,
17584:      388,   389,   390,   391,   392,    -1,    -1,   395,   396,   397,
17585:      398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
17586:      408,   409,   410,   411,   412,   413,   414,    -1,    -1,   417,
17587:      418,    -1,   420,    -1,   422,   423,   424,   425,   426,    -1,
17588:      428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
17589:       -1,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
17590:       -1,   449,   450,   451,    -1,   453,   454,   455,   456,    -1,
17591:      458,   459,   460,   461,   462,   463,   464,   465,    -1,   467,
17592:       -1,   469,   470,   471,   472,   473,   474,   475,    -1,    -1,
17593:      478,    -1,    -1,   481,   482,   483,   484,   485,   486,   487,
17594:      488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
17595:      498,   499,   500,   501,     3,    -1,     5,    -1,    -1,    -1,
17596:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17597:       -1,    -1,    -1,    22,    23,    24,    25,    26,    27,    28,
17598:       29,    -1,    31,    32,    33,    -1,    -1,    -1,    -1,    -1,
17599:       -1,    -1,    -1,    -1,    43,    44,    -1,    46,    47,    48,
17600:       -1,    50,    51,    52,    53,    54,    -1,    56,    57,    -1,
17601:       59,    60,    61,    62,    63,    64,    -1,    -1,    67,    68,
17602:       69,    70,    71,    72,    73,    -1,    75,    76,    77,    78,
17603:       79,    -1,    -1,    -1,    83,    84,    85,    86,    87,    88,
17604:       -1,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
17605:       99,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
17606:      109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
17607:       -1,   120,   121,   122,   123,   124,   125,    -1,    -1,   128,
17608:      129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
17609:       -1,   140,   141,   142,    -1,   144,   145,   146,    -1,   148,
17610:      149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
17611:      159,    -1,   161,    -1,   163,   164,   165,   166,    -1,   168,
17612:       -1,   170,    -1,    -1,    -1,   174,   175,   176,    -1,   178,
17613:       -1,   180,    -1,   182,   183,   184,   185,    -1,   187,   188,
17614:      189,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
17615:       -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
17616:       -1,   210,   211,   212,   213,   214,   215,   216,   217,    -1,
17617:      219,    -1,   221,    -1,    -1,   224,    -1,   226,   227,   228,
17618:      229,   230,   231,    -1,    -1,   234,    -1,   236,    -1,    -1,
17619:      239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
17620:      249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
17621:      259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
17622:       -1,   270,   271,   272,   273,   274,    -1,   276,   277,    -1,
17623:      279,    -1,   281,   282,   283,   284,   285,   286,    -1,   288,
17624:      289,    -1,    -1,   292,   293,   294,    -1,    -1,   297,   298,
17625:      299,    -1,   301,    -1,   303,   304,   305,   306,   307,   308,
17626:      309,   310,   311,   312,   313,   314,    -1,    -1,    -1,    -1,
17627:      319,   320,   321,    -1,   323,   324,   325,   326,   327,   328,
17628:       -1,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
17629:      339,   340,   341,   342,   343,   344,   345,   346,    -1,   348,
17630:      349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
17631:      359,   360,    -1,   362,   363,    -1,   365,   366,   367,   368,
17632:      369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
17633:      379,   380,   381,    -1,    -1,   384,   385,   386,   387,   388,
17634:      389,   390,   391,   392,    -1,    -1,   395,   396,   397,   398,
17635:       -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
17636:      409,   410,   411,   412,   413,   414,    -1,    -1,   417,   418,
17637:       -1,   420,    -1,   422,   423,   424,   425,   426,    -1,   428,
17638:      429,   430,    -1,    -1,   433,   434,   435,   436,   437,    -1,
17639:      439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
17640:      449,   450,   451,    -1,   453,   454,   455,   456,    -1,   458,
17641:      459,   460,   461,   462,   463,   464,   465,    -1,   467,    -1,
17642:      469,   470,   471,   472,   473,   474,   475,    -1,    -1,   478,
17643:       -1,    -1,   481,   482,   483,   484,   485,   486,   487,   488,
17644:      489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
17645:      499,   500,   501,     3,    -1,     5,    -1,    -1,    -1,    -1,
17646:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17647:       -1,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
17648:       -1,    31,    32,    33,    -1,    -1,    -1,    -1,    -1,    -1,
17649:       -1,    -1,    -1,    43,    44,    -1,    46,    47,    48,    -1,
17650:       50,    51,    52,    53,    54,    -1,    56,    57,    -1,    59,
17651:       60,    61,    62,    63,    64,    -1,    -1,    67,    68,    69,
17652:       70,    71,    72,    73,    -1,    75,    76,    77,    78,    79,
17653:       -1,    -1,    -1,    83,    84,    85,    86,    87,    88,    -1,
17654:       90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
17655:       -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
17656:      110,   111,   112,   113,   114,   115,   116,    -1,   118,    -1,
17657:      120,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
17658:      130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
17659:      140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
17660:      150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
17661:       -1,   161,    -1,   163,   164,   165,   166,    -1,   168,    -1,
17662:      170,    -1,    -1,    -1,   174,   175,   176,    -1,   178,    -1,
17663:      180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
17664:      190,   191,   192,   193,    -1,   195,   196,   197,   198,    -1,
17665:      200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
17666:      210,   211,   212,   213,   214,   215,   216,   217,    -1,   219,
17667:       -1,   221,    -1,    -1,   224,    -1,   226,   227,   228,   229,
17668:      230,   231,    -1,    -1,   234,    -1,   236,    -1,    -1,   239,
17669:      240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
17670:      250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
17671:      260,   261,   262,   263,   264,   265,   266,   267,   268,    -1,
17672:      270,   271,   272,   273,   274,    -1,   276,   277,    -1,   279,
17673:       -1,   281,   282,   283,   284,   285,   286,    -1,   288,   289,
17674:       -1,    -1,   292,   293,   294,    -1,    -1,   297,   298,   299,
17675:       -1,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
17676:      310,   311,   312,   313,   314,    -1,    -1,    -1,    -1,   319,
17677:      320,   321,    -1,   323,   324,   325,   326,   327,   328,    -1,
17678:      330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
17679:      340,   341,   342,   343,   344,   345,   346,    -1,   348,   349,
17680:      350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
17681:      360,    -1,   362,   363,    -1,   365,   366,   367,   368,   369,
17682:      370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
17683:      380,   381,    -1,    -1,   384,   385,   386,   387,   388,   389,
17684:      390,   391,   392,    -1,    -1,   395,   396,   397,   398,    -1,
17685:      400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
17686:      410,   411,   412,   413,   414,    -1,    -1,   417,   418,    -1,
17687:      420,    -1,   422,   423,   424,   425,   426,    -1,   428,   429,
17688:      430,    -1,    -1,   433,   434,   435,   436,   437,    -1,   439,
17689:      440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
17690:      450,   451,    -1,   453,   454,   455,   456,    -1,   458,   459,
17691:      460,   461,   462,   463,   464,   465,    -1,   467,    -1,   469,
17692:      470,   471,   472,   473,   474,   475,    -1,    -1,   478,    -1,
17693:       -1,   481,   482,   483,   484,   485,   486,   487,   488,   489,
17694:      490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
17695:      500,   501,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17696:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17697:       -1,    22,    23,    24,    25,    26,    27,    28,    29,    -1,
17698:       31,    32,    33,    -1,    -1,    -1,    -1,    -1,    -1,    40,
17699:       -1,    -1,    43,    44,    -1,    46,    47,    48,    -1,    50,
17700:       51,    52,    53,    54,    -1,    56,    57,    -1,    59,    60,
17701:       61,    62,    63,    64,    -1,    -1,    67,    68,    69,    70,
17702:       71,    72,    73,    -1,    75,    76,    77,    78,    79,    -1,
17703:       -1,    -1,    83,    84,    85,    86,    87,    88,    -1,    90,
17704:       91,    92,    -1,    94,    95,    96,    97,    98,    99,    -1,
17705:       -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
17706:      111,   112,   113,   114,   115,   116,    -1,   118,    -1,   120,
17707:      121,   122,   123,   124,   125,    -1,    -1,   128,   129,   130,
17708:      131,    -1,    -1,   134,   135,   136,   137,   138,    -1,   140,
17709:      141,   142,    -1,   144,   145,   146,    -1,   148,   149,   150,
17710:      151,   152,   153,   154,   155,   156,   157,   158,   159,    -1,
17711:      161,    -1,   163,   164,   165,   166,    -1,   168,    -1,   170,
17712:       -1,    -1,    -1,   174,   175,   176,    -1,   178,    -1,   180,
17713:       -1,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
17714:      191,   192,   193,    -1,   195,   196,   197,   198,    -1,   200,
17715:      201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
17716:      211,   212,   213,   214,   215,   216,   217,    -1,   219,    -1,
17717:      221,    -1,    -1,   224,    -1,   226,   227,   228,   229,   230,
17718:      231,    -1,    -1,   234,    -1,   236,    -1,    -1,   239,   240,
17719:      241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
17720:      251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
17721:      261,   262,   263,   264,   265,   266,   267,   268,    -1,   270,
17722:      271,   272,   273,   274,    -1,   276,   277,    -1,   279,    -1,
17723:      281,   282,   283,   284,   285,   286,    -1,   288,   289,    -1,
17724:       -1,   292,   293,   294,    -1,    -1,   297,   298,   299,    -1,
17725:      301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
17726:      311,   312,   313,   314,    -1,    -1,    -1,    -1,   319,   320,
17727:      321,    -1,   323,   324,   325,   326,   327,   328,    -1,   330,
17728:      331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
17729:      341,   342,   343,   344,   345,   346,    -1,   348,   349,   350,
17730:      351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
17731:       -1,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
17732:      371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
17733:      381,    -1,    -1,   384,   385,   386,   387,   388,   389,   390,
17734:      391,   392,    -1,    -1,   395,   396,   397,   398,    -1,   400,
17735:      401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
17736:      411,   412,   413,   414,    -1,    -1,   417,   418,    -1,   420,
17737:       -1,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
17738:       -1,    -1,   433,   434,   435,   436,   437,    -1,   439,   440,
17739:      441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
17740:      451,    -1,   453,   454,   455,   456,    -1,   458,   459,   460,
17741:      461,   462,   463,   464,   465,    -1,   467,    -1,   469,   470,
17742:      471,   472,   473,   474,   475,    -1,    -1,   478,    -1,    -1,
17743:      481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
17744:      491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
17745:      501,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17746:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17747:       22,    23,    24,    25,    26,    27,    28,    29,    -1,    31,
17748:       32,    33,    -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,
17749:       -1,    43,    44,    -1,    46,    47,    48,    -1,    50,    51,
17750:       52,    53,    54,    -1,    56,    57,    -1,    59,    60,    61,
17751:       62,    63,    64,    -1,    -1,    67,    68,    69,    70,    71,
17752:       72,    73,    -1,    75,    76,    77,    78,    79,    -1,    -1,
17753:       -1,    83,    84,    85,    86,    87,    88,    -1,    90,    91,
17754:       92,    -1,    94,    95,    96,    97,    98,    99,    -1,    -1,
17755:      102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
17756:      112,   113,   114,   115,   116,    -1,   118,    -1,   120,   121,
17757:      122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
17758:       -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
17759:      142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
17760:      152,   153,   154,   155,   156,   157,   158,   159,    -1,   161,
17761:       -1,   163,   164,   165,   166,    -1,   168,    -1,   170,    -1,
17762:       -1,    -1,   174,   175,   176,    -1,   178,    -1,   180,    -1,
17763:      182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
17764:      192,   193,    -1,   195,   196,   197,   198,    -1,   200,   201,
17765:      202,   203,   204,   205,   206,    -1,   208,    -1,   210,   211,
17766:      212,   213,   214,   215,   216,   217,    -1,   219,    -1,   221,
17767:       -1,    -1,   224,    -1,   226,   227,   228,   229,   230,   231,
17768:       -1,    -1,   234,    -1,   236,    -1,    -1,   239,   240,   241,
17769:      242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
17770:      252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
17771:      262,   263,   264,   265,   266,   267,   268,    -1,   270,   271,
17772:      272,   273,   274,    -1,   276,   277,    -1,   279,    -1,   281,
17773:      282,   283,   284,   285,   286,    -1,   288,   289,    -1,    -1,
17774:      292,   293,   294,    -1,    -1,   297,   298,   299,    -1,   301,
17775:       -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
17776:      312,   313,   314,    -1,    -1,    -1,    -1,   319,   320,   321,
17777:       -1,   323,   324,   325,   326,   327,   328,    -1,   330,   331,
17778:      332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
17779:      342,   343,   344,   345,   346,    -1,   348,   349,   350,   351,
17780:      352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
17781:      362,   363,    -1,   365,   366,   367,   368,   369,   370,   371,
17782:      372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
17783:       -1,    -1,   384,   385,   386,   387,   388,   389,   390,   391,
17784:      392,    -1,    -1,   395,   396,   397,   398,    -1,   400,   401,
17785:      402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
17786:      412,   413,   414,    -1,    -1,   417,   418,    -1,   420,    -1,
17787:      422,   423,   424,   425,   426,    -1,   428,   429,   430,    -1,
17788:       -1,   433,   434,   435,   436,   437,    -1,   439,   440,   441,
17789:      442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
17790:       -1,   453,   454,   455,   456,    -1,   458,   459,   460,   461,
17791:      462,   463,   464,   465,    -1,   467,    -1,   469,   470,   471,
17792:      472,   473,   474,   475,    -1,    -1,   478,    -1,    -1,   481,
17793:      482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
17794:      492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
17795:        3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17796:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    22,
17797:       23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
17798:       33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17799:       43,    44,    -1,    46,    47,    48,    -1,    50,    51,    52,
17800:       53,    54,    -1,    56,    57,    -1,    59,    60,    61,    62,
17801:       63,    64,    -1,    -1,    67,    68,    69,    70,    71,    72,
17802:       73,    -1,    75,    76,    77,    78,    79,    -1,    -1,    -1,
17803:       83,    84,    85,    86,    87,    88,    -1,    90,    91,    92,
17804:       -1,    94,    95,    96,    97,    98,    99,    -1,    -1,   102,
17805:      103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
17806:      113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
17807:      123,   124,   125,    -1,    -1,   128,   129,   130,   131,    -1,
17808:       -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
17809:       -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
17810:      153,   154,   155,   156,   157,   158,   159,    -1,   161,    -1,
17811:      163,   164,   165,   166,    -1,   168,    -1,   170,    -1,    -1,
17812:       -1,   174,   175,   176,    -1,   178,    -1,   180,    -1,   182,
17813:      183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
17814:      193,    -1,   195,   196,   197,   198,    -1,   200,   201,   202,
17815:      203,   204,   205,   206,    -1,   208,    -1,   210,   211,   212,
17816:      213,   214,   215,   216,   217,    -1,   219,    -1,   221,    -1,
17817:       -1,   224,    -1,   226,   227,   228,   229,   230,   231,    -1,
17818:       -1,   234,    -1,   236,    -1,    -1,   239,   240,   241,   242,
17819:      243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
17820:      253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
17821:      263,   264,   265,   266,   267,   268,    -1,   270,   271,   272,
17822:      273,   274,    -1,   276,   277,    -1,   279,    -1,   281,   282,
17823:      283,   284,   285,   286,    -1,   288,   289,    -1,    -1,   292,
17824:      293,   294,    -1,    -1,   297,   298,   299,    -1,   301,    -1,
17825:      303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
17826:      313,   314,    -1,    -1,    -1,    -1,   319,   320,   321,    -1,
17827:      323,   324,   325,   326,   327,   328,    -1,   330,   331,   332,
17828:      333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
17829:      343,   344,   345,   346,    -1,   348,   349,   350,   351,   352,
17830:      353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
17831:      363,    -1,   365,   366,   367,   368,   369,   370,   371,   372,
17832:      373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
17833:       -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
17834:       -1,    -1,   395,   396,   397,   398,    -1,   400,   401,   402,
17835:      403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
17836:      413,   414,    -1,    -1,   417,   418,    -1,   420,    -1,   422,
17837:      423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
17838:      433,   434,   435,   436,   437,    -1,   439,   440,   441,   442,
17839:      443,   444,   445,   446,    -1,    -1,   449,   450,   451,    -1,
17840:      453,   454,   455,   456,    -1,   458,   459,   460,   461,   462,
17841:      463,   464,   465,    -1,   467,    -1,   469,   470,   471,   472,
17842:      473,   474,   475,    -1,    -1,   478,    -1,    -1,   481,   482,
17843:      483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
17844:      493,   494,   495,   496,   497,   498,   499,   500,   501,     3,
17845:       -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17846:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    22,    23,
17847:       24,    25,    26,    27,    28,    29,    -1,    31,    32,    33,
17848:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,
17849:       44,    -1,    46,    47,    48,    -1,    50,    51,    52,    53,
17850:       54,    -1,    56,    57,    -1,    59,    60,    61,    62,    63,
17851:       64,    -1,    -1,    67,    68,    69,    70,    71,    72,    73,
17852:       -1,    75,    76,    77,    78,    79,    -1,    -1,    -1,    83,
17853:       84,    85,    86,    87,    88,    -1,    90,    91,    92,    -1,
17854:       94,    95,    96,    97,    98,    99,    -1,    -1,   102,   103,
17855:      104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
17856:      114,   115,   116,    -1,   118,    -1,   120,   121,   122,   123,
17857:      124,   125,    -1,    -1,   128,   129,   130,   131,    -1,    -1,
17858:      134,   135,   136,   137,   138,    -1,   140,   141,   142,    -1,
17859:      144,   145,   146,    -1,   148,   149,   150,   151,   152,   153,
17860:      154,   155,   156,   157,   158,   159,    -1,   161,    -1,   163,
17861:      164,   165,   166,    -1,   168,    -1,   170,    -1,    -1,    -1,
17862:      174,   175,   176,    -1,   178,    -1,   180,    -1,   182,   183,
17863:      184,   185,    -1,   187,   188,   189,   190,   191,   192,   193,
17864:       -1,   195,   196,   197,   198,    -1,   200,   201,   202,   203,
17865:      204,   205,   206,    -1,   208,    -1,   210,   211,   212,   213,
17866:      214,   215,   216,   217,    -1,   219,    -1,   221,    -1,    -1,
17867:      224,    -1,   226,   227,   228,   229,   230,   231,    -1,    -1,
17868:      234,    -1,   236,    -1,    -1,   239,   240,   241,   242,   243,
17869:      244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
17870:      254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
17871:      264,   265,   266,   267,   268,    -1,   270,   271,   272,   273,
17872:      274,    -1,   276,   277,    -1,   279,    -1,   281,   282,   283,
17873:      284,   285,   286,    -1,   288,   289,    -1,    -1,   292,   293,
17874:      294,    -1,    -1,   297,   298,   299,    -1,   301,    -1,   303,
17875:      304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
17876:      314,    -1,    -1,    -1,    -1,   319,   320,   321,    -1,   323,
17877:      324,   325,   326,   327,   328,    -1,   330,   331,   332,   333,
17878:      334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
17879:      344,   345,   346,    -1,   348,   349,   350,   351,   352,   353,
17880:      354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
17881:       -1,   365,   366,   367,   368,   369,   370,   371,   372,   373,
17882:      374,   375,   376,   377,   378,   379,   380,   381,    -1,    -1,
17883:      384,   385,   386,   387,   388,   389,   390,   391,   392,    -1,
17884:       -1,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
17885:      404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
17886:      414,    -1,    -1,   417,   418,    -1,   420,    -1,   422,   423,
17887:      424,   425,   426,    -1,   428,   429,   430,    -1,    -1,   433,
17888:      434,   435,   436,   437,    -1,   439,   440,   441,   442,   443,
17889:      444,   445,   446,    -1,    -1,   449,   450,   451,    -1,   453,
17890:      454,   455,   456,    -1,   458,   459,   460,   461,   462,   463,
17891:      464,   465,    -1,   467,    -1,   469,   470,   471,   472,   473,
17892:      474,   475,    -1,    -1,   478,    -1,    -1,   481,   482,   483,
17893:      484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
17894:      494,   495,   496,   497,   498,   499,   500,   501,     3,    -1,
17895:        5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17896:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    22,    23,    24,
17897:       25,    26,    27,    28,    29,    -1,    31,    32,    33,    -1,
17898:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,    44,
17899:       -1,    46,    47,    48,    -1,    50,    51,    52,    53,    54,
17900:       -1,    56,    57,    -1,    59,    60,    61,    62,    63,    64,
17901:       -1,    -1,    67,    68,    69,    70,    71,    72,    73,    -1,
17902:       75,    76,    77,    78,    79,    -1,    -1,    -1,    83,    84,
17903:       85,    86,    87,    88,    -1,    90,    91,    92,    -1,    94,
17904:       95,    96,    97,    98,    99,    -1,    -1,   102,   103,   104,
17905:      105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
17906:      115,   116,    -1,   118,    -1,   120,   121,   122,   123,   124,
17907:      125,    -1,    -1,   128,   129,   130,   131,    -1,    -1,   134,
17908:      135,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
17909:      145,   146,    -1,   148,   149,   150,   151,   152,   153,   154,
17910:      155,   156,   157,   158,   159,    -1,   161,    -1,   163,   164,
17911:      165,   166,    -1,   168,    -1,   170,    -1,    -1,    -1,   174,
17912:      175,   176,    -1,   178,    -1,   180,    -1,   182,   183,   184,
17913:      185,    -1,   187,   188,   189,   190,   191,   192,   193,    -1,
17914:      195,   196,   197,   198,    -1,   200,   201,   202,   203,   204,
17915:      205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
17916:      215,   216,   217,    -1,   219,    -1,   221,    -1,    -1,   224,
17917:       -1,   226,   227,   228,   229,   230,   231,    -1,    -1,   234,
17918:       -1,   236,    -1,    -1,   239,   240,   241,   242,   243,   244,
17919:      245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
17920:      255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
17921:      265,   266,   267,   268,    -1,   270,   271,   272,   273,   274,
17922:       -1,   276,   277,    -1,   279,    -1,   281,   282,   283,   284,
17923:      285,   286,    -1,   288,   289,    -1,    -1,   292,   293,   294,
17924:       -1,    -1,   297,   298,   299,    -1,   301,    -1,   303,   304,
17925:      305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
17926:       -1,    -1,    -1,    -1,   319,   320,   321,    -1,   323,   324,
17927:      325,   326,   327,   328,    -1,   330,   331,   332,   333,   334,
17928:      335,    -1,   337,   338,   339,   340,   341,   342,   343,   344,
17929:      345,   346,    -1,   348,   349,   350,   351,   352,   353,   354,
17930:      355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
17931:      365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
17932:      375,   376,   377,   378,   379,   380,   381,    -1,    -1,   384,
17933:      385,   386,   387,   388,   389,   390,   391,   392,    -1,    -1,
17934:      395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
17935:      405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
17936:       -1,    -1,   417,   418,    -1,   420,    -1,   422,   423,   424,
17937:      425,   426,    -1,   428,   429,   430,    -1,    -1,   433,   434,
17938:      435,   436,   437,    -1,   439,   440,   441,   442,   443,   444,
17939:      445,   446,    -1,    -1,   449,   450,   451,    -1,   453,   454,
17940:      455,   456,    -1,   458,   459,   460,   461,   462,   463,   464,
17941:      465,    -1,   467,    -1,   469,   470,   471,   472,   473,   474,
17942:      475,    -1,    -1,   478,    -1,    -1,   481,   482,   483,   484,
17943:      485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
17944:      495,   496,   497,   498,   499,   500,   501,     3,    -1,     5,
17945:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17946:       -1,    -1,    -1,    -1,    -1,    -1,    22,    23,    24,    25,
17947:       26,    27,    28,    29,    -1,    31,    32,    33,    -1,    -1,
17948:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,    44,    -1,
17949:       46,    47,    48,    -1,    50,    51,    52,    53,    54,    -1,
17950:       56,    57,    -1,    59,    60,    61,    62,    63,    64,    -1,
17951:       -1,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
17952:       76,    77,    78,    79,    -1,    -1,    -1,    83,    84,    85,
17953:       86,    87,    88,    -1,    90,    91,    92,    -1,    94,    95,
17954:       96,    97,    98,    99,    -1,    -1,   102,   103,   104,   105,
17955:      106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
17956:      116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
17957:       -1,    -1,   128,   129,   130,   131,    -1,    -1,   134,   135,
17958:      136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
17959:      146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
17960:      156,   157,   158,   159,    -1,   161,    -1,   163,   164,   165,
17961:      166,    -1,   168,    -1,   170,    -1,    -1,    -1,   174,   175,
17962:      176,    -1,   178,    -1,   180,    -1,   182,   183,   184,   185,
17963:       -1,   187,   188,   189,   190,   191,   192,   193,    -1,   195,
17964:      196,   197,   198,    -1,   200,   201,   202,   203,   204,   205,
17965:      206,    -1,   208,    -1,   210,   211,   212,   213,   214,   215,
17966:      216,   217,    -1,   219,    -1,   221,    -1,    -1,   224,    -1,
17967:      226,   227,   228,   229,   230,   231,    -1,    -1,   234,    -1,
17968:      236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
17969:      246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
17970:      256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
17971:      266,   267,   268,    -1,   270,   271,   272,   273,   274,    -1,
17972:      276,   277,    -1,   279,    -1,   281,   282,   283,   284,   285,
17973:      286,    -1,   288,   289,    -1,    -1,   292,   293,   294,    -1,
17974:       -1,   297,   298,   299,    -1,   301,    -1,   303,   304,   305,
17975:      306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
17976:       -1,    -1,    -1,   319,   320,   321,    -1,   323,   324,   325,
17977:      326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
17978:       -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
17979:      346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
17980:      356,   357,   358,   359,   360,    -1,   362,   363,    -1,   365,
17981:      366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
17982:      376,   377,   378,   379,   380,   381,    -1,    -1,   384,   385,
17983:      386,   387,   388,   389,   390,   391,   392,    -1,    -1,   395,
17984:      396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
17985:      406,   407,   408,   409,   410,   411,   412,   413,   414,    -1,
17986:       -1,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
17987:      426,    -1,   428,   429,   430,    -1,    -1,   433,   434,   435,
17988:      436,   437,    -1,   439,   440,   441,   442,   443,   444,   445,
17989:      446,    -1,    -1,   449,   450,   451,    -1,   453,   454,   455,
17990:      456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
17991:       -1,   467,    -1,   469,   470,   471,   472,   473,   474,   475,
17992:       -1,    -1,   478,    -1,    -1,   481,   482,   483,   484,   485,
17993:      486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
17994:      496,   497,   498,   499,   500,   501,     3,    -1,     5,    -1,
17995:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
17996:       -1,    -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,
17997:       27,    28,    29,    -1,    31,    32,    33,    -1,    -1,    -1,
17998:       -1,    -1,    -1,    -1,    -1,    -1,    43,    44,    -1,    46,
17999:       47,    48,    -1,    50,    51,    52,    53,    54,    -1,    56,
18000:       57,    -1,    59,    60,    61,    62,    63,    64,    -1,    -1,
18001:       67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
18002:       77,    78,    79,    -1,    -1,    -1,    83,    84,    85,    86,
18003:       87,    88,    -1,    90,    91,    92,    -1,    94,    95,    96,
18004:       97,    98,    99,    -1,    -1,   102,   103,   104,   105,   106,
18005:      107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
18006:       -1,   118,    -1,   120,   121,   122,   123,   124,   125,    -1,
18007:       -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
18008:      137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
18009:       -1,   148,   149,   150,   151,   152,   153,   154,   155,   156,
18010:      157,   158,   159,    -1,   161,    -1,   163,   164,   165,   166,
18011:       -1,   168,    -1,   170,    -1,    -1,    -1,   174,   175,   176,
18012:       -1,   178,    -1,   180,    -1,   182,   183,   184,   185,    -1,
18013:      187,   188,   189,   190,   191,   192,   193,    -1,   195,   196,
18014:      197,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
18015:       -1,   208,    -1,   210,   211,   212,   213,   214,   215,   216,
18016:      217,    -1,   219,    -1,   221,    -1,    -1,   224,    -1,   226,
18017:      227,   228,   229,   230,   231,    -1,    -1,   234,    -1,   236,
18018:       -1,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
18019:      247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
18020:      257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
18021:      267,   268,    -1,   270,   271,   272,   273,   274,    -1,   276,
18022:      277,    -1,   279,    -1,   281,   282,   283,   284,   285,   286,
18023:       -1,   288,   289,    -1,    -1,   292,   293,   294,    -1,    -1,
18024:      297,   298,   299,    -1,   301,    -1,   303,   304,   305,   306,
18025:      307,   308,   309,   310,   311,   312,   313,   314,    -1,    -1,
18026:       -1,    -1,   319,   320,   321,    -1,   323,   324,   325,   326,
18027:      327,   328,    -1,   330,   331,   332,   333,   334,   335,    -1,
18028:      337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
18029:       -1,   348,   349,   350,   351,   352,   353,   354,   355,   356,
18030:      357,   358,   359,   360,    -1,   362,   363,    -1,   365,   366,
18031:      367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
18032:      377,   378,   379,   380,   381,    -1,    -1,   384,   385,   386,
18033:      387,   388,   389,   390,   391,   392,    -1,    -1,   395,   396,
18034:      397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
18035:      407,   408,   409,   410,   411,   412,   413,   414,    -1,    -1,
18036:      417,   418,    -1,   420,    -1,   422,   423,   424,   425,   426,
18037:       -1,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
18038:      437,    -1,   439,   440,   441,   442,   443,   444,   445,   446,
18039:       -1,    -1,   449,   450,   451,    -1,   453,   454,   455,   456,
18040:       -1,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
18041:      467,    -1,   469,   470,   471,   472,   473,   474,   475,    -1,
18042:       -1,   478,    -1,    -1,   481,   482,   483,   484,   485,   486,
18043:      487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
18044:      497,   498,   499,   500,   501,     3,    -1,     5,    -1,    -1,
18045:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18046:       -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,    27,
18047:       28,    29,    -1,    31,    32,    33,    -1,    -1,    -1,    -1,
18048:       -1,    -1,    -1,    -1,    -1,    43,    44,    -1,    46,    47,
18049:       48,    -1,    50,    51,    52,    53,    54,    -1,    56,    57,
18050:       -1,    59,    60,    61,    62,    63,    64,    -1,    -1,    67,
18051:       68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
18052:       78,    79,    -1,    -1,    -1,    83,    84,    85,    86,    87,
18053:       88,    -1,    90,    91,    92,    -1,    94,    95,    96,    97,
18054:       98,    99,    -1,    -1,   102,   103,   104,   105,   106,   107,
18055:      108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
18056:      118,    -1,   120,   121,   122,   123,   124,   125,    -1,    -1,
18057:      128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
18058:      138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
18059:      148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
18060:      158,   159,    -1,   161,    -1,   163,   164,   165,   166,    -1,
18061:      168,    -1,   170,    -1,    -1,    -1,   174,   175,   176,    -1,
18062:      178,    -1,   180,    -1,   182,   183,   184,   185,    -1,   187,
18063:      188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
18064:      198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
18065:      208,    -1,   210,   211,   212,   213,   214,   215,   216,   217,
18066:       -1,   219,    -1,   221,    -1,    -1,   224,    -1,   226,   227,
18067:      228,   229,   230,   231,    -1,    -1,   234,    -1,   236,    -1,
18068:       -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
18069:      248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
18070:      258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
18071:      268,    -1,   270,   271,   272,   273,   274,    -1,   276,   277,
18072:       -1,   279,    -1,   281,   282,   283,   284,   285,   286,    -1,
18073:      288,   289,    -1,    -1,   292,   293,   294,    -1,    -1,   297,
18074:      298,   299,    -1,   301,    -1,   303,   304,   305,   306,   307,
18075:      308,   309,   310,   311,   312,   313,   314,    -1,    -1,    -1,
18076:       -1,   319,   320,   321,    -1,   323,   324,   325,   326,   327,
18077:      328,    -1,   330,   331,   332,   333,   334,   335,    -1,   337,
18078:      338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
18079:      348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
18080:      358,   359,   360,    -1,   362,   363,    -1,   365,   366,   367,
18081:      368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
18082:      378,   379,   380,   381,    -1,    -1,   384,   385,   386,   387,
18083:      388,   389,   390,   391,   392,    -1,    -1,   395,   396,   397,
18084:      398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
18085:      408,   409,   410,   411,   412,   413,   414,    -1,    -1,   417,
18086:      418,    -1,   420,    -1,   422,   423,   424,   425,   426,    -1,
18087:      428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
18088:       -1,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
18089:       -1,   449,   450,   451,    -1,   453,   454,   455,   456,    -1,
18090:      458,   459,   460,   461,   462,   463,   464,   465,    -1,   467,
18091:       -1,   469,   470,   471,   472,   473,   474,   475,    -1,    -1,
18092:      478,    -1,    -1,   481,   482,   483,   484,   485,   486,   487,
18093:      488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
18094:      498,   499,   500,   501,     3,    -1,    -1,    -1,    -1,    -1,
18095:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18096:       -1,    -1,    -1,    22,    23,    24,    25,    26,    27,    28,
18097:       29,    -1,    31,    32,    33,    -1,    -1,    -1,    37,    -1,
18098:       -1,    40,    -1,    42,    43,    44,    -1,    46,    47,    48,
18099:       49,    50,    51,    52,    -1,    54,    55,    56,    57,    -1,
18100:       59,    60,    61,    62,    63,    64,    -1,    -1,    67,    68,
18101:       69,    70,    71,    72,    73,    -1,    75,    76,    77,    78,
18102:       -1,    -1,    81,    -1,    83,    84,    85,    86,    87,    88,
18103:       89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
18104:       99,    -1,   101,   102,   103,   104,   105,   106,   107,   108,
18105:      109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
18106:       -1,   120,   121,   122,   123,   124,   125,    -1,    -1,   128,
18107:      129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
18108:       -1,   140,   141,   142,    -1,   144,   145,   146,    -1,   148,
18109:      149,   150,   151,    -1,   153,   154,   155,   156,   157,   158,
18110:       -1,    -1,   161,    -1,   163,   164,   165,   166,    -1,   168,
18111:       -1,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
18112:       -1,   180,    -1,    -1,    -1,   184,   185,    -1,   187,   188,
18113:      189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
18114:       -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
18115:      209,    -1,   211,   212,   213,   214,   215,   216,   217,    -1,
18116:      219,    -1,   221,   222,   223,   224,   225,   226,   227,   228,
18117:      229,   230,   231,    -1,    -1,   234,   235,   236,   237,    -1,
18118:      239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
18119:      249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
18120:      259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
18121:      269,   270,   271,   272,   273,    -1,    -1,   276,   277,   278,
18122:      279,    -1,    -1,   282,   283,   284,   285,   286,    -1,   288,
18123:      289,    -1,    -1,   292,   293,   294,    -1,    -1,   297,   298,
18124:       -1,   300,   301,   302,    -1,   304,   305,   306,   307,   308,
18125:      309,   310,   311,   312,   313,   314,    -1,    -1,    -1,    -1,
18126:      319,   320,    -1,   322,   323,   324,    -1,   326,   327,   328,
18127:       -1,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
18128:      339,   340,   341,   342,   343,   344,   345,   346,    -1,   348,
18129:      349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
18130:      359,   360,    -1,   362,   363,   364,   365,   366,   367,   368,
18131:      369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
18132:      379,   380,   381,    -1,   383,   384,   385,   386,   387,   388,
18133:      389,   390,   391,   392,    -1,   394,   395,   396,   397,   398,
18134:       -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
18135:      409,   410,   411,   412,   413,    -1,    -1,    -1,   417,   418,
18136:       -1,   420,   421,   422,   423,   424,   425,   426,    -1,   428,
18137:      429,   430,    -1,    -1,   433,   434,    -1,   436,    -1,    -1,
18138:      439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
18139:      449,   450,   451,    -1,   453,   454,   455,   456,    -1,   458,
18140:      459,   460,   461,   462,    -1,   464,   465,    -1,   467,   468,
18141:      469,   470,   471,   472,   473,   474,   475,    -1,    -1,   478,
18142:       -1,    -1,   481,   482,   483,   484,   485,   486,     3,    -1,
18143:        5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   498,
18144:      499,   500,   501,    -1,    -1,    -1,    -1,    22,    23,    24,
18145:       25,    26,    27,    28,    29,    -1,    31,    32,    33,    -1,
18146:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,    44,
18147:       -1,    46,    47,    48,    -1,    50,    51,    52,    53,    54,
18148:       -1,    56,    57,    -1,    59,    60,    61,    62,    63,    64,
18149:       -1,    -1,    67,    68,    69,    70,    71,    72,    73,    -1,
18150:       75,    76,    77,    78,    79,    -1,    -1,    -1,    83,    84,
18151:       85,    86,    87,    88,    -1,    90,    91,    92,    -1,    94,
18152:       95,    96,    97,    98,    99,    -1,    -1,   102,   103,   104,
18153:      105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
18154:      115,   116,    -1,   118,    -1,   120,   121,   122,   123,   124,
18155:      125,    -1,    -1,   128,   129,   130,   131,    -1,    -1,   134,
18156:      135,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
18157:      145,   146,    -1,   148,   149,   150,   151,   152,   153,   154,
18158:      155,   156,   157,   158,   159,    -1,   161,    -1,   163,   164,
18159:      165,   166,    -1,   168,    -1,   170,    -1,    -1,    -1,   174,
18160:      175,   176,    -1,   178,    -1,   180,    -1,   182,   183,   184,
18161:      185,    -1,   187,   188,   189,   190,   191,   192,   193,    -1,
18162:      195,   196,   197,   198,    -1,   200,   201,   202,   203,   204,
18163:      205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
18164:      215,   216,   217,    -1,   219,    -1,   221,    -1,    -1,   224,
18165:       -1,   226,   227,   228,   229,   230,   231,    -1,    -1,   234,
18166:       -1,   236,    -1,    -1,   239,   240,   241,   242,   243,   244,
18167:      245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
18168:      255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
18169:      265,   266,   267,   268,    -1,   270,   271,   272,   273,   274,
18170:       -1,   276,   277,    -1,   279,    -1,   281,   282,   283,   284,
18171:      285,   286,    -1,   288,   289,    -1,    -1,   292,   293,   294,
18172:       -1,    -1,   297,   298,   299,    -1,   301,    -1,   303,   304,
18173:      305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
18174:       -1,    -1,    -1,    -1,   319,   320,   321,    -1,   323,   324,
18175:      325,   326,   327,   328,    -1,   330,   331,   332,   333,   334,
18176:      335,    -1,   337,   338,   339,   340,   341,   342,   343,   344,
18177:      345,   346,    -1,   348,   349,   350,   351,   352,   353,   354,
18178:      355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
18179:      365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
18180:      375,   376,   377,   378,   379,   380,   381,    -1,    -1,   384,
18181:      385,   386,   387,   388,   389,   390,   391,   392,    -1,    -1,
18182:      395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
18183:      405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
18184:       -1,    -1,   417,   418,    -1,   420,    -1,   422,   423,   424,
18185:      425,   426,    -1,   428,   429,   430,    -1,    -1,   433,   434,
18186:      435,   436,   437,    -1,   439,   440,   441,   442,   443,   444,
18187:      445,   446,    -1,    -1,   449,   450,   451,    -1,   453,   454,
18188:      455,   456,    -1,   458,   459,   460,   461,   462,   463,   464,
18189:      465,    -1,   467,    -1,   469,   470,   471,   472,   473,   474,
18190:      475,    -1,    -1,   478,    -1,    -1,   481,   482,   483,   484,
18191:      485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
18192:      495,   496,   497,   498,   499,   500,   501,     3,    -1,    -1,
18193:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18194:       -1,    -1,    -1,    -1,    -1,    -1,    22,    23,    24,    25,
18195:       26,    27,    28,    29,    -1,    31,    32,    33,    -1,    -1,
18196:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,    44,    -1,
18197:       46,    47,    48,    -1,    50,    51,    52,    53,    54,    -1,
18198:       56,    57,    -1,    59,    60,    61,    62,    63,    64,    -1,
18199:       -1,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
18200:       76,    77,    78,    79,    -1,    -1,    -1,    83,    84,    85,
18201:       86,    87,    88,    -1,    90,    91,    92,    -1,    94,    95,
18202:       96,    97,    98,    99,    -1,    -1,   102,   103,   104,   105,
18203:      106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
18204:      116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
18205:       -1,    -1,   128,   129,   130,   131,    -1,    -1,   134,   135,
18206:      136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
18207:      146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
18208:      156,   157,   158,   159,    -1,   161,    -1,   163,   164,   165,
18209:      166,    -1,   168,    -1,   170,    -1,    -1,    -1,   174,   175,
18210:      176,    -1,   178,    -1,   180,    -1,   182,   183,   184,   185,
18211:       -1,   187,   188,   189,   190,   191,   192,   193,    -1,   195,
18212:      196,   197,   198,    -1,   200,   201,   202,   203,   204,   205,
18213:      206,    -1,   208,    -1,   210,   211,   212,   213,   214,   215,
18214:      216,   217,    -1,   219,    -1,   221,    -1,    -1,   224,    -1,
18215:      226,   227,   228,   229,   230,   231,    -1,    -1,   234,    -1,
18216:      236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
18217:      246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
18218:      256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
18219:      266,   267,   268,    -1,   270,   271,   272,   273,   274,    -1,
18220:      276,   277,    -1,   279,    -1,   281,   282,   283,   284,   285,
18221:      286,    -1,   288,   289,    -1,    -1,   292,   293,   294,    -1,
18222:       -1,   297,   298,   299,    -1,   301,    -1,   303,   304,   305,
18223:      306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
18224:       -1,    -1,    -1,   319,   320,   321,    -1,   323,   324,   325,
18225:      326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
18226:       -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
18227:      346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
18228:      356,   357,   358,   359,   360,    -1,   362,   363,    -1,   365,
18229:      366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
18230:      376,   377,   378,   379,   380,   381,    -1,    -1,   384,   385,
18231:      386,   387,   388,   389,   390,   391,   392,    -1,    -1,   395,
18232:      396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
18233:      406,   407,   408,   409,   410,   411,   412,   413,   414,    -1,
18234:       -1,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
18235:      426,    -1,   428,   429,   430,    -1,    -1,   433,   434,   435,
18236:      436,   437,    -1,   439,   440,   441,   442,   443,   444,   445,
18237:      446,    -1,    -1,   449,   450,   451,    -1,   453,   454,   455,
18238:      456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
18239:       -1,   467,    -1,   469,   470,   471,   472,   473,   474,   475,
18240:       -1,    -1,   478,    -1,    -1,   481,   482,   483,   484,   485,
18241:      486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
18242:      496,   497,   498,   499,   500,   501,     3,    -1,    -1,    -1,
18243:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18244:       -1,    -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,
18245:       27,    28,    29,    -1,    31,    32,    33,    -1,    -1,    -1,
18246:       -1,    -1,    -1,    -1,    -1,    -1,    43,    44,    -1,    46,
18247:       47,    48,    -1,    50,    51,    52,    53,    54,    -1,    56,
18248:       57,    -1,    59,    60,    61,    62,    63,    64,    -1,    -1,
18249:       67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
18250:       77,    78,    79,    -1,    -1,    -1,    83,    84,    85,    86,
18251:       87,    88,    -1,    90,    91,    92,    -1,    94,    95,    96,
18252:       97,    98,    99,    -1,    -1,   102,   103,   104,   105,   106,
18253:      107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
18254:       -1,   118,    -1,   120,   121,   122,   123,   124,   125,    -1,
18255:       -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
18256:      137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
18257:       -1,   148,   149,   150,   151,   152,   153,   154,   155,   156,
18258:      157,   158,   159,    -1,   161,    -1,   163,   164,   165,   166,
18259:       -1,   168,    -1,   170,    -1,    -1,    -1,   174,   175,   176,
18260:       -1,   178,    -1,   180,    -1,   182,   183,   184,   185,    -1,
18261:      187,   188,   189,   190,   191,   192,   193,    -1,   195,   196,
18262:      197,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
18263:       -1,   208,    -1,   210,   211,   212,   213,   214,   215,   216,
18264:      217,    -1,   219,    -1,   221,    -1,    -1,   224,    -1,   226,
18265:      227,   228,   229,   230,   231,    -1,    -1,   234,    -1,   236,
18266:       -1,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
18267:      247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
18268:      257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
18269:      267,   268,    -1,   270,   271,   272,   273,   274,    -1,   276,
18270:      277,    -1,   279,    -1,   281,   282,   283,   284,   285,   286,
18271:       -1,   288,   289,    -1,    -1,   292,   293,   294,    -1,    -1,
18272:      297,   298,   299,    -1,   301,    -1,   303,   304,   305,   306,
18273:      307,   308,   309,   310,   311,   312,   313,   314,    -1,    -1,
18274:       -1,    -1,   319,   320,   321,    -1,   323,   324,   325,   326,
18275:      327,   328,    -1,   330,   331,   332,   333,   334,   335,    -1,
18276:      337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
18277:       -1,   348,   349,   350,   351,   352,   353,   354,   355,   356,
18278:      357,   358,   359,   360,    -1,   362,   363,    -1,   365,   366,
18279:      367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
18280:      377,   378,   379,   380,   381,    -1,    -1,   384,   385,   386,
18281:      387,   388,   389,   390,   391,   392,    -1,    -1,   395,   396,
18282:      397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
18283:      407,   408,   409,   410,   411,   412,   413,   414,    -1,    -1,
18284:      417,   418,    -1,   420,    -1,   422,   423,   424,   425,   426,
18285:       -1,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
18286:      437,    -1,   439,   440,   441,   442,   443,   444,   445,   446,
18287:       -1,    -1,   449,   450,   451,    -1,   453,   454,   455,   456,
18288:       -1,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
18289:      467,    -1,   469,   470,   471,   472,   473,   474,   475,    -1,
18290:       -1,   478,    -1,    -1,   481,   482,   483,   484,   485,   486,
18291:      487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
18292:      497,   498,   499,   500,   501,     3,    -1,    -1,    -1,    -1,
18293:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18294:       -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,    27,
18295:       28,    29,    -1,    31,    32,    33,    -1,    -1,    -1,    -1,
18296:       -1,    -1,    -1,    -1,    -1,    43,    44,    -1,    46,    47,
18297:       48,    -1,    50,    51,    52,    53,    54,    -1,    56,    57,
18298:       -1,    59,    60,    61,    62,    63,    64,    -1,    -1,    67,
18299:       68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
18300:       78,    79,    -1,    -1,    -1,    83,    84,    85,    86,    87,
18301:       88,    -1,    90,    91,    92,    -1,    94,    95,    96,    97,
18302:       98,    99,    -1,    -1,   102,   103,   104,   105,   106,   107,
18303:      108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
18304:      118,    -1,   120,   121,   122,   123,   124,   125,    -1,    -1,
18305:      128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
18306:      138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
18307:      148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
18308:      158,   159,    -1,   161,    -1,   163,   164,   165,   166,    -1,
18309:      168,    -1,   170,    -1,    -1,    -1,   174,   175,   176,    -1,
18310:      178,    -1,   180,    -1,   182,   183,   184,   185,    -1,   187,
18311:      188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
18312:      198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
18313:      208,    -1,   210,   211,   212,   213,   214,   215,   216,   217,
18314:       -1,   219,    -1,   221,    -1,    -1,   224,    -1,   226,   227,
18315:      228,   229,   230,   231,    -1,    -1,   234,    -1,   236,    -1,
18316:       -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
18317:      248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
18318:      258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
18319:      268,    -1,   270,   271,   272,   273,   274,    -1,   276,   277,
18320:       -1,   279,    -1,   281,   282,   283,   284,   285,   286,    -1,
18321:      288,   289,    -1,    -1,   292,   293,   294,    -1,    -1,   297,
18322:      298,   299,    -1,   301,    -1,   303,   304,   305,   306,   307,
18323:      308,   309,   310,   311,   312,   313,   314,    -1,    -1,    -1,
18324:       -1,   319,   320,   321,    -1,   323,   324,   325,   326,   327,
18325:      328,    -1,   330,   331,   332,   333,   334,   335,    -1,   337,
18326:      338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
18327:      348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
18328:      358,   359,   360,    -1,   362,   363,    -1,   365,   366,   367,
18329:      368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
18330:      378,   379,   380,   381,    -1,    -1,   384,   385,   386,   387,
18331:      388,   389,   390,   391,   392,    -1,    -1,   395,   396,   397,
18332:      398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
18333:      408,   409,   410,   411,   412,   413,   414,    -1,    -1,   417,
18334:      418,    -1,   420,    -1,   422,   423,   424,   425,   426,    -1,
18335:      428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
18336:       -1,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
18337:       -1,   449,   450,   451,    -1,   453,   454,   455,   456,    -1,
18338:      458,   459,   460,   461,   462,   463,   464,   465,    -1,   467,
18339:       -1,   469,   470,   471,   472,   473,   474,   475,    -1,    -1,
18340:      478,    -1,    -1,   481,   482,   483,   484,   485,   486,   487,
18341:      488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
18342:      498,   499,   500,   501,     3,    -1,    -1,    -1,    -1,    -1,
18343:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18344:       -1,    -1,    -1,    22,    23,    24,    25,    26,    27,    28,
18345:       29,    -1,    31,    32,    33,    -1,    -1,    -1,    -1,    -1,
18346:       -1,    -1,    -1,    -1,    43,    44,    -1,    46,    47,    48,
18347:       -1,    50,    51,    52,    53,    54,    -1,    56,    57,    -1,
18348:       59,    60,    61,    62,    63,    64,    -1,    -1,    67,    68,
18349:       69,    70,    71,    72,    73,    -1,    75,    76,    77,    78,
18350:       79,    -1,    -1,    -1,    83,    84,    85,    86,    87,    88,
18351:       -1,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
18352:       99,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
18353:      109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
18354:       -1,   120,   121,   122,   123,   124,   125,    -1,    -1,   128,
18355:      129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
18356:       -1,   140,   141,   142,    -1,   144,   145,   146,    -1,   148,
18357:      149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
18358:      159,    -1,   161,    -1,   163,   164,   165,   166,    -1,   168,
18359:       -1,   170,    -1,    -1,    -1,   174,   175,   176,    -1,   178,
18360:       -1,   180,    -1,   182,   183,   184,   185,    -1,   187,   188,
18361:      189,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
18362:       -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
18363:       -1,   210,   211,   212,   213,   214,   215,   216,   217,    -1,
18364:      219,    -1,   221,    -1,    -1,   224,    -1,   226,   227,   228,
18365:      229,   230,   231,    -1,    -1,   234,    -1,   236,    -1,    -1,
18366:      239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
18367:      249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
18368:      259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
18369:       -1,   270,   271,   272,   273,   274,    -1,   276,   277,    -1,
18370:      279,    -1,   281,   282,   283,   284,   285,   286,    -1,   288,
18371:      289,    -1,    -1,   292,   293,   294,    -1,    -1,   297,   298,
18372:      299,    -1,   301,    -1,   303,   304,   305,   306,   307,   308,
18373:      309,   310,   311,   312,   313,   314,    -1,    -1,    -1,    -1,
18374:      319,   320,   321,    -1,   323,   324,   325,   326,   327,   328,
18375:       -1,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
18376:      339,   340,   341,   342,   343,   344,   345,   346,    -1,   348,
18377:      349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
18378:      359,   360,    -1,   362,   363,    -1,   365,   366,   367,   368,
18379:      369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
18380:      379,   380,   381,    -1,    -1,   384,   385,   386,   387,   388,
18381:      389,   390,   391,   392,    -1,    -1,   395,   396,   397,   398,
18382:       -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
18383:      409,   410,   411,   412,   413,   414,    -1,    -1,   417,   418,
18384:       -1,   420,    -1,   422,   423,   424,   425,   426,    -1,   428,
18385:      429,   430,    -1,    -1,   433,   434,   435,   436,   437,    -1,
18386:      439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
18387:      449,   450,   451,    -1,   453,   454,   455,   456,    -1,   458,
18388:      459,   460,   461,   462,   463,   464,   465,    -1,   467,    -1,
18389:      469,   470,   471,   472,   473,   474,   475,    -1,    -1,   478,
18390:       -1,    -1,   481,   482,   483,   484,   485,   486,   487,   488,
18391:      489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
18392:      499,   500,   501,     3,    -1,    -1,    -1,    -1,    -1,    -1,
18393:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18394:       -1,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
18395:       -1,    31,    32,    33,    -1,    -1,    -1,    -1,    -1,    -1,
18396:       -1,    -1,    -1,    43,    44,    -1,    46,    47,    48,    -1,
18397:       50,    51,    52,    53,    54,    -1,    56,    57,    -1,    59,
18398:       60,    61,    62,    63,    64,    -1,    -1,    67,    68,    69,
18399:       70,    71,    72,    73,    -1,    75,    76,    77,    78,    79,
18400:       -1,    -1,    -1,    83,    84,    85,    86,    87,    88,    -1,
18401:       90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
18402:       -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
18403:      110,   111,   112,   113,   114,   115,   116,    -1,   118,    -1,
18404:      120,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
18405:      130,   131,    -1,    -1,   134,   135,   136,   137,   138,    -1,
18406:      140,   141,   142,    -1,   144,   145,   146,    -1,   148,   149,
18407:      150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
18408:       -1,   161,    -1,   163,   164,   165,   166,    -1,   168,    -1,
18409:      170,    -1,    -1,    -1,   174,   175,   176,    -1,   178,    -1,
18410:      180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
18411:      190,   191,   192,   193,    -1,   195,   196,   197,   198,    -1,
18412:      200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
18413:      210,   211,   212,   213,   214,   215,   216,   217,    -1,   219,
18414:       -1,   221,    -1,    -1,   224,    -1,   226,   227,   228,   229,
18415:      230,   231,    -1,    -1,   234,    -1,   236,    -1,    -1,   239,
18416:      240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
18417:      250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
18418:      260,   261,   262,   263,   264,   265,   266,   267,   268,    -1,
18419:      270,   271,   272,   273,   274,    -1,   276,   277,    -1,   279,
18420:       -1,   281,   282,   283,   284,   285,   286,    -1,   288,   289,
18421:       -1,    -1,   292,   293,   294,    -1,    -1,   297,   298,   299,
18422:       -1,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
18423:      310,   311,   312,   313,   314,    -1,    -1,    -1,    -1,   319,
18424:      320,   321,    -1,   323,   324,   325,   326,   327,   328,    -1,
18425:      330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
18426:      340,   341,   342,   343,   344,   345,   346,    -1,   348,   349,
18427:      350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
18428:      360,    -1,   362,   363,    -1,   365,   366,   367,   368,   369,
18429:      370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
18430:      380,   381,    -1,    -1,   384,   385,   386,   387,   388,   389,
18431:      390,   391,   392,    -1,    -1,   395,   396,   397,   398,    -1,
18432:      400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
18433:      410,   411,   412,   413,   414,    -1,    -1,   417,   418,    -1,
18434:      420,    -1,   422,   423,   424,   425,   426,    -1,   428,   429,
18435:      430,    -1,    -1,   433,   434,   435,   436,   437,    -1,   439,
18436:      440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
18437:      450,   451,    -1,   453,   454,   455,   456,    -1,   458,   459,
18438:      460,   461,   462,   463,   464,   465,    -1,   467,    -1,   469,
18439:      470,   471,   472,   473,   474,   475,    -1,    -1,   478,    -1,
18440:       -1,   481,   482,   483,   484,   485,   486,   487,   488,   489,
18441:      490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
18442:      500,   501,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18443:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18444:       -1,    22,    23,    24,    25,    26,    27,    28,    29,    -1,
18445:       31,    32,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18446:       -1,    -1,    43,    44,    -1,    46,    47,    48,    -1,    50,
18447:       51,    52,    53,    54,    -1,    56,    57,    -1,    59,    60,
18448:       61,    62,    63,    64,    -1,    -1,    67,    68,    69,    70,
18449:       71,    72,    73,    -1,    75,    76,    77,    78,    79,    -1,
18450:       -1,    -1,    83,    84,    85,    86,    87,    88,    -1,    90,
18451:       91,    92,    -1,    94,    95,    96,    97,    98,    99,    -1,
18452:       -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
18453:      111,   112,   113,   114,   115,   116,    -1,   118,    -1,   120,
18454:      121,   122,   123,   124,   125,    -1,    -1,   128,   129,   130,
18455:      131,    -1,    -1,   134,   135,   136,   137,   138,    -1,   140,
18456:      141,   142,    -1,   144,   145,   146,    -1,   148,   149,   150,
18457:      151,   152,   153,   154,   155,   156,   157,   158,   159,    -1,
18458:      161,    -1,   163,   164,   165,   166,    -1,   168,    -1,   170,
18459:       -1,    -1,    -1,   174,   175,   176,    -1,   178,    -1,   180,
18460:       -1,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
18461:      191,   192,   193,    -1,   195,   196,   197,   198,    -1,   200,
18462:      201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
18463:      211,   212,   213,   214,   215,   216,   217,    -1,   219,    -1,
18464:      221,    -1,    -1,   224,    -1,   226,   227,   228,   229,   230,
18465:      231,    -1,    -1,   234,    -1,   236,    -1,    -1,   239,   240,
18466:      241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
18467:      251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
18468:      261,   262,   263,   264,   265,   266,   267,   268,    -1,   270,
18469:      271,   272,   273,   274,    -1,   276,   277,    -1,   279,    -1,
18470:      281,   282,   283,   284,   285,   286,    -1,   288,   289,    -1,
18471:       -1,   292,   293,   294,    -1,    -1,   297,   298,   299,    -1,
18472:      301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
18473:      311,   312,   313,   314,    -1,    -1,    -1,    -1,   319,   320,
18474:      321,    -1,   323,   324,   325,   326,   327,   328,    -1,   330,
18475:      331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
18476:      341,   342,   343,   344,   345,   346,    -1,   348,   349,   350,
18477:      351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
18478:       -1,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
18479:      371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
18480:      381,    -1,    -1,   384,   385,   386,   387,   388,   389,   390,
18481:      391,   392,    -1,    -1,   395,   396,   397,   398,    -1,   400,
18482:      401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
18483:      411,   412,   413,   414,    -1,    -1,   417,   418,    -1,   420,
18484:       -1,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
18485:       -1,    -1,   433,   434,   435,   436,   437,    -1,   439,   440,
18486:      441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
18487:      451,    -1,   453,   454,   455,   456,    -1,   458,   459,   460,
18488:      461,   462,   463,   464,   465,    -1,   467,    -1,   469,   470,
18489:      471,   472,   473,   474,   475,    -1,    -1,   478,    -1,    -1,
18490:      481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
18491:      491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
18492:      501,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18493:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18494:       22,    23,    24,    25,    26,    27,    28,    29,    -1,    31,
18495:       32,    33,    -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,
18496:       -1,    43,    44,    -1,    46,    47,    48,    -1,    50,    51,
18497:       52,    53,    54,    -1,    56,    57,    -1,    59,    60,    61,
18498:       62,    63,    64,    -1,    -1,    67,    68,    69,    70,    71,
18499:       72,    73,    -1,    75,    76,    77,    78,    79,    -1,    -1,
18500:       -1,    83,    84,    85,    86,    87,    88,    -1,    90,    91,
18501:       92,    -1,    94,    95,    96,    97,    98,    99,    -1,    -1,
18502:      102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
18503:      112,   113,   114,   115,   116,    -1,   118,    -1,   120,   121,
18504:      122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
18505:       -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
18506:      142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
18507:      152,   153,   154,   155,   156,   157,   158,   159,    -1,   161,
18508:       -1,   163,   164,   165,   166,    -1,   168,    -1,   170,    -1,
18509:       -1,    -1,   174,   175,   176,    -1,   178,    -1,   180,    -1,
18510:      182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
18511:      192,   193,    -1,   195,   196,   197,   198,    -1,   200,   201,
18512:      202,   203,   204,   205,   206,    -1,   208,    -1,   210,   211,
18513:      212,   213,   214,   215,   216,   217,    -1,   219,    -1,   221,
18514:       -1,    -1,   224,    -1,   226,   227,   228,   229,   230,   231,
18515:       -1,    -1,   234,    -1,   236,    -1,    -1,   239,   240,   241,
18516:      242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
18517:      252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
18518:      262,   263,   264,   265,   266,   267,   268,    -1,   270,   271,
18519:      272,   273,   274,    -1,   276,   277,    -1,   279,    -1,   281,
18520:      282,   283,   284,   285,   286,    -1,   288,   289,    -1,    -1,
18521:      292,   293,   294,    -1,    -1,   297,   298,   299,    -1,   301,
18522:       -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
18523:      312,   313,   314,    -1,    -1,    -1,    -1,   319,   320,   321,
18524:       -1,   323,   324,   325,   326,   327,   328,    -1,   330,   331,
18525:      332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
18526:      342,   343,   344,   345,   346,    -1,   348,   349,   350,   351,
18527:      352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
18528:      362,   363,    -1,   365,   366,   367,   368,   369,   370,   371,
18529:      372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
18530:       -1,    -1,   384,   385,   386,   387,   388,    -1,   390,   391,
18531:      392,    -1,    -1,   395,   396,   397,   398,    -1,   400,   401,
18532:      402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
18533:      412,   413,   414,    -1,    -1,   417,   418,    -1,   420,    -1,
18534:      422,   423,   424,   425,   426,    -1,   428,   429,   430,    -1,
18535:       -1,   433,   434,   435,   436,   437,    -1,   439,   440,   441,
18536:      442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
18537:       -1,   453,   454,   455,   456,    -1,   458,   459,   460,   461,
18538:      462,   463,   464,   465,    -1,   467,    -1,   469,   470,   471,
18539:      472,   473,   474,   475,    -1,    -1,   478,    -1,    -1,   481,
18540:      482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
18541:      492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
18542:        3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18543:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    22,
18544:       23,    24,    25,    26,    27,    28,    29,    -1,    31,    32,
18545:       33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18546:       43,    44,    -1,    46,    47,    48,    -1,    50,    51,    52,
18547:       53,    54,    -1,    56,    57,    -1,    59,    60,    61,    62,
18548:       63,    64,    -1,    -1,    67,    68,    69,    70,    71,    72,
18549:       73,    -1,    75,    76,    77,    78,    79,    -1,    -1,    -1,
18550:       83,    84,    85,    86,    87,    88,    -1,    90,    91,    92,
18551:       -1,    94,    95,    96,    97,    98,    99,    -1,    -1,   102,
18552:      103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
18553:      113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
18554:      123,   124,   125,    -1,    -1,   128,   129,   130,   131,    -1,
18555:       -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
18556:       -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
18557:      153,   154,   155,   156,   157,   158,   159,    -1,   161,    -1,
18558:      163,   164,   165,   166,    -1,   168,    -1,   170,    -1,    -1,
18559:       -1,   174,   175,   176,    -1,   178,    -1,   180,    -1,   182,
18560:      183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
18561:      193,    -1,   195,   196,   197,   198,    -1,   200,   201,   202,
18562:      203,   204,   205,   206,    -1,   208,    -1,   210,   211,   212,
18563:      213,   214,   215,   216,   217,    -1,   219,    -1,   221,    -1,
18564:       -1,   224,    -1,   226,   227,   228,   229,   230,   231,    -1,
18565:       -1,   234,    -1,   236,    -1,    -1,   239,   240,   241,   242,
18566:      243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
18567:      253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
18568:      263,   264,   265,   266,   267,   268,    -1,   270,   271,   272,
18569:      273,   274,    -1,   276,   277,    -1,   279,    -1,   281,   282,
18570:      283,   284,   285,   286,    -1,   288,   289,    -1,    -1,   292,
18571:      293,   294,    -1,    -1,   297,   298,   299,    -1,   301,    -1,
18572:      303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
18573:      313,   314,    -1,    -1,    -1,    -1,   319,   320,   321,    -1,
18574:      323,   324,   325,   326,   327,   328,    -1,   330,   331,   332,
18575:      333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
18576:      343,   344,   345,   346,    -1,   348,   349,   350,   351,   352,
18577:      353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
18578:      363,    -1,   365,   366,   367,   368,   369,   370,   371,   372,
18579:      373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
18580:       -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
18581:       -1,    -1,   395,   396,   397,   398,    -1,   400,   401,   402,
18582:      403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
18583:      413,   414,    -1,    -1,   417,   418,    -1,   420,    -1,   422,
18584:      423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
18585:      433,   434,   435,   436,   437,    -1,   439,   440,   441,   442,
18586:      443,   444,   445,   446,    -1,    -1,   449,   450,   451,    -1,
18587:      453,   454,   455,   456,    -1,   458,   459,   460,   461,   462,
18588:      463,   464,   465,    -1,   467,    -1,   469,   470,   471,   472,
18589:      473,   474,   475,    -1,    -1,   478,    -1,    -1,   481,   482,
18590:      483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
18591:      493,   494,   495,   496,   497,   498,   499,   500,   501,     3,
18592:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18593:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    22,    23,
18594:       24,    25,    26,    27,    28,    29,    -1,    31,    32,    33,
18595:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,
18596:       44,    -1,    46,    47,    48,    -1,    50,    51,    52,    53,
18597:       54,    -1,    56,    57,    -1,    59,    60,    61,    62,    63,
18598:       64,    -1,    -1,    67,    68,    69,    70,    71,    72,    73,
18599:       -1,    75,    76,    77,    78,    79,    -1,    -1,    -1,    83,
18600:       84,    85,    86,    87,    88,    -1,    90,    91,    92,    -1,
18601:       94,    95,    96,    97,    98,    99,    -1,    -1,   102,   103,
18602:      104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
18603:      114,   115,   116,    -1,   118,    -1,   120,   121,   122,   123,
18604:      124,   125,    -1,    -1,   128,   129,   130,   131,    -1,    -1,
18605:      134,   135,   136,   137,   138,    -1,   140,   141,   142,    -1,
18606:      144,   145,   146,    -1,   148,   149,   150,   151,   152,   153,
18607:      154,   155,   156,   157,   158,   159,    -1,   161,    -1,   163,
18608:      164,   165,   166,    -1,   168,    -1,   170,    -1,    -1,    -1,
18609:      174,   175,   176,    -1,   178,    -1,   180,    -1,   182,   183,
18610:      184,   185,    -1,   187,   188,   189,   190,   191,   192,   193,
18611:       -1,   195,   196,   197,   198,    -1,   200,   201,   202,   203,
18612:      204,   205,   206,    -1,   208,    -1,   210,   211,   212,   213,
18613:      214,   215,   216,   217,    -1,   219,    -1,   221,    -1,    -1,
18614:      224,    -1,   226,   227,   228,   229,   230,   231,    -1,    -1,
18615:      234,    -1,   236,    -1,    -1,   239,   240,   241,   242,   243,
18616:      244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
18617:      254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
18618:      264,   265,   266,   267,   268,    -1,   270,   271,   272,   273,
18619:      274,    -1,   276,   277,    -1,   279,    -1,   281,   282,   283,
18620:      284,   285,   286,    -1,   288,   289,    -1,    -1,   292,   293,
18621:      294,    -1,    -1,   297,   298,   299,    -1,   301,    -1,   303,
18622:      304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
18623:      314,    -1,    -1,    -1,    -1,   319,   320,   321,    -1,   323,
18624:      324,   325,   326,   327,   328,    -1,   330,   331,   332,   333,
18625:      334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
18626:      344,   345,   346,    -1,   348,   349,   350,   351,   352,   353,
18627:      354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
18628:       -1,   365,   366,   367,   368,   369,   370,   371,   372,   373,
18629:      374,   375,   376,   377,   378,   379,   380,   381,    -1,    -1,
18630:      384,   385,   386,   387,   388,   389,   390,   391,   392,    -1,
18631:       -1,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
18632:      404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
18633:      414,    -1,    -1,   417,   418,    -1,   420,    -1,   422,   423,
18634:      424,   425,   426,    -1,   428,   429,   430,    -1,    -1,   433,
18635:      434,   435,   436,   437,    -1,   439,   440,   441,   442,   443,
18636:      444,   445,   446,    -1,    -1,   449,   450,   451,    -1,   453,
18637:      454,   455,   456,    -1,   458,   459,   460,   461,   462,   463,
18638:      464,   465,    -1,   467,    -1,   469,   470,   471,   472,   473,
18639:      474,   475,    -1,    -1,   478,    -1,    -1,   481,   482,   483,
18640:      484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
18641:      494,   495,   496,   497,   498,   499,   500,   501,     3,    -1,
18642:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18643:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    22,    23,    24,
18644:       25,    26,    27,    28,    29,    -1,    31,    32,    33,    -1,
18645:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,    44,
18646:       -1,    46,    47,    48,    -1,    50,    51,    52,    53,    54,
18647:       -1,    56,    57,    -1,    59,    60,    61,    62,    63,    64,
18648:       -1,    -1,    67,    68,    69,    70,    71,    72,    73,    -1,
18649:       75,    76,    77,    78,    79,    -1,    -1,    -1,    83,    84,
18650:       85,    86,    87,    88,    -1,    90,    91,    92,    -1,    94,
18651:       95,    96,    97,    98,    99,    -1,    -1,   102,   103,   104,
18652:      105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
18653:      115,   116,    -1,   118,    -1,   120,   121,   122,   123,   124,
18654:      125,    -1,    -1,   128,   129,   130,   131,    -1,    -1,   134,
18655:      135,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
18656:      145,   146,    -1,   148,   149,   150,   151,   152,   153,   154,
18657:      155,   156,   157,   158,   159,    -1,   161,    -1,   163,   164,
18658:      165,   166,    -1,   168,    -1,   170,    -1,    -1,    -1,   174,
18659:      175,   176,    -1,   178,    -1,   180,    -1,   182,   183,   184,
18660:      185,    -1,   187,   188,   189,   190,   191,   192,   193,    -1,
18661:      195,   196,   197,   198,    -1,   200,   201,   202,   203,   204,
18662:      205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
18663:      215,   216,   217,    -1,   219,    -1,   221,    -1,    -1,   224,
18664:       -1,   226,   227,   228,   229,   230,   231,    -1,    -1,   234,
18665:       -1,   236,    -1,    -1,   239,   240,   241,   242,   243,   244,
18666:      245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
18667:      255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
18668:      265,   266,   267,   268,    -1,   270,   271,   272,   273,   274,
18669:       -1,   276,   277,    -1,   279,    -1,   281,   282,   283,   284,
18670:      285,   286,    -1,   288,   289,    -1,    -1,   292,   293,   294,
18671:       -1,    -1,   297,   298,   299,    -1,   301,    -1,   303,   304,
18672:      305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
18673:       -1,    -1,    -1,    -1,   319,   320,   321,    -1,   323,   324,
18674:      325,   326,   327,   328,    -1,   330,   331,   332,   333,   334,
18675:      335,    -1,   337,   338,   339,   340,   341,   342,   343,   344,
18676:      345,   346,    -1,   348,   349,   350,   351,   352,   353,   354,
18677:      355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
18678:      365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
18679:      375,   376,   377,   378,   379,   380,   381,    -1,    -1,   384,
18680:      385,   386,   387,   388,   389,   390,   391,   392,    -1,    -1,
18681:      395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
18682:      405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
18683:       -1,    -1,   417,   418,    -1,   420,    -1,   422,   423,   424,
18684:      425,   426,    -1,   428,   429,   430,    -1,    -1,   433,   434,
18685:      435,   436,   437,    -1,   439,   440,   441,   442,   443,   444,
18686:      445,   446,    -1,    -1,   449,   450,   451,    -1,   453,   454,
18687:      455,   456,    -1,   458,   459,   460,   461,   462,   463,   464,
18688:      465,    -1,   467,    -1,   469,   470,   471,   472,   473,   474,
18689:      475,    -1,    -1,   478,    -1,    -1,   481,   482,   483,   484,
18690:      485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
18691:      495,   496,   497,   498,   499,   500,   501,     3,    -1,    -1,
18692:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18693:       -1,    -1,    -1,    -1,    -1,    -1,    22,    23,    24,    25,
18694:       26,    27,    28,    29,    -1,    31,    32,    33,    -1,    -1,
18695:       -1,    37,    -1,    -1,    -1,    -1,    42,    43,    44,    -1,
18696:       46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
18697:       56,    57,    -1,    59,    60,    61,    62,    63,    64,    -1,
18698:       -1,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
18699:       76,    77,    78,    -1,    -1,    81,    -1,    83,    84,    85,
18700:       86,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
18701:       96,    97,    98,    99,    -1,   101,   102,   103,   104,   105,
18702:      106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
18703:      116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
18704:       -1,    -1,   128,   129,   130,   131,    -1,    -1,   134,   135,
18705:      136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
18706:      146,    -1,   148,   149,   150,   151,    -1,   153,   154,   155,
18707:      156,   157,   158,    -1,    -1,   161,    -1,   163,   164,   165,
18708:      166,    -1,   168,    -1,   170,   171,    -1,   173,   174,   175,
18709:       -1,   177,   178,    -1,   180,    -1,    -1,    -1,   184,   185,
18710:       -1,   187,   188,   189,   190,   191,   192,   193,   194,   195,
18711:      196,   197,   198,    -1,   200,   201,   202,   203,   204,   205,
18712:      206,    -1,   208,   209,    -1,   211,   212,   213,   214,   215,
18713:      216,   217,    -1,   219,    -1,   221,   222,   223,   224,   225,
18714:      226,   227,   228,   229,   230,   231,    -1,    -1,   234,   235,
18715:      236,   237,    -1,   239,   240,   241,   242,   243,   244,   245,
18716:      246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
18717:      256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
18718:      266,   267,   268,   269,   270,   271,   272,   273,    -1,    -1,
18719:      276,   277,   278,   279,    -1,    -1,   282,   283,   284,   285,
18720:      286,    -1,   288,   289,    -1,    -1,   292,   293,   294,    -1,
18721:       -1,   297,   298,    -1,   300,   301,   302,    -1,   304,   305,
18722:      306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
18723:       -1,    -1,    -1,   319,   320,    -1,   322,   323,   324,    -1,
18724:      326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
18725:       -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
18726:      346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
18727:      356,   357,   358,   359,   360,    -1,   362,   363,   364,   365,
18728:      366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
18729:      376,   377,   378,   379,   380,   381,    -1,   383,   384,   385,
18730:      386,   387,   388,   389,   390,   391,   392,    -1,   394,   395,
18731:      396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
18732:      406,   407,   408,   409,   410,   411,   412,   413,    -1,    -1,
18733:       -1,   417,   418,    -1,   420,   421,   422,   423,   424,   425,
18734:      426,    -1,   428,   429,   430,    -1,    -1,   433,   434,    -1,
18735:      436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
18736:      446,   447,    -1,   449,   450,   451,    -1,   453,   454,   455,
18737:      456,    -1,   458,   459,   460,   461,   462,    -1,   464,   465,
18738:       -1,   467,   468,   469,   470,   471,   472,   473,   474,   475,
18739:       -1,    -1,   478,    -1,    -1,   481,   482,   483,   484,   485,
18740:      486,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18741:       -1,    -1,   498,   499,   500,   501,    -1,    -1,    -1,    -1,
18742:       22,    23,    24,    25,    26,    27,    28,    29,    -1,    31,
18743:       32,    33,    -1,    -1,    -1,    37,    -1,    -1,    -1,    -1,
18744:       42,    43,    44,    -1,    46,    47,    48,    49,    50,    51,
18745:       52,    -1,    54,    55,    56,    57,    -1,    59,    60,    61,
18746:       62,    63,    64,    -1,    -1,    67,    68,    69,    70,    71,
18747:       72,    73,    -1,    75,    76,    77,    78,    -1,    -1,    81,
18748:       -1,    83,    84,    85,    86,    87,    88,    89,    90,    91,
18749:       92,    -1,    94,    95,    96,    97,    98,    99,    -1,   101,
18750:      102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
18751:      112,   113,   114,   115,   116,    -1,   118,    -1,   120,   121,
18752:      122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
18753:       -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
18754:      142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
18755:       -1,   153,   154,   155,   156,   157,   158,    -1,    -1,   161,
18756:       -1,   163,   164,   165,   166,    -1,   168,    -1,   170,   171,
18757:       -1,   173,   174,   175,    -1,   177,   178,    -1,   180,    -1,
18758:       -1,    -1,   184,   185,    -1,   187,   188,   189,   190,   191,
18759:      192,   193,   194,   195,   196,   197,   198,    -1,   200,   201,
18760:      202,   203,   204,   205,   206,    -1,   208,   209,    -1,   211,
18761:      212,   213,   214,   215,   216,   217,    -1,   219,    -1,   221,
18762:      222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
18763:       -1,    -1,   234,   235,   236,   237,    -1,   239,   240,   241,
18764:      242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
18765:      252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
18766:      262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
18767:      272,   273,    -1,    -1,   276,   277,   278,   279,    -1,    -1,
18768:      282,   283,   284,   285,   286,    -1,   288,   289,    -1,    -1,
18769:      292,   293,   294,    -1,    -1,   297,   298,    -1,   300,   301,
18770:      302,    -1,   304,   305,   306,   307,   308,   309,   310,   311,
18771:      312,   313,   314,    -1,    -1,    -1,    -1,   319,   320,    -1,
18772:      322,   323,   324,    -1,   326,   327,   328,    -1,   330,   331,
18773:      332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
18774:      342,   343,   344,   345,   346,    -1,   348,   349,   350,   351,
18775:      352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
18776:      362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
18777:      372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
18778:       -1,   383,   384,   385,   386,   387,   388,   389,   390,   391,
18779:      392,    -1,   394,   395,   396,   397,   398,    -1,   400,   401,
18780:      402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
18781:      412,   413,    -1,    -1,    -1,   417,   418,    -1,   420,   421,
18782:      422,   423,   424,   425,   426,    -1,   428,   429,   430,    -1,
18783:       -1,   433,   434,    -1,   436,    -1,    -1,   439,   440,   441,
18784:      442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
18785:       -1,   453,   454,   455,   456,    -1,   458,   459,   460,   461,
18786:      462,    -1,   464,   465,    -1,   467,   468,   469,   470,   471,
18787:      472,   473,   474,   475,    -1,    -1,   478,    -1,    -1,   481,
18788:      482,   483,   484,   485,   486,     3,    -1,    -1,    -1,    -1,
18789:       -1,    -1,    -1,    -1,    -1,    -1,   498,   499,   500,   501,
18790:       -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,    27,
18791:       28,    29,    -1,    31,    32,    33,    -1,    -1,    -1,    37,
18792:       -1,    -1,    -1,    -1,    42,    43,    44,    -1,    46,    47,
18793:       48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
18794:       -1,    59,    60,    61,    62,    63,    64,    -1,    -1,    67,
18795:       68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
18796:       78,    -1,    -1,    81,    -1,    83,    84,    85,    86,    87,
18797:       88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
18798:       98,    99,    -1,   101,   102,   103,   104,   105,   106,   107,
18799:      108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
18800:      118,    -1,   120,   121,   122,   123,   124,   125,    -1,    -1,
18801:      128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
18802:      138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
18803:      148,   149,   150,   151,    -1,   153,   154,   155,   156,   157,
18804:      158,    -1,    -1,   161,    -1,   163,   164,   165,   166,    -1,
18805:      168,    -1,   170,   171,    -1,   173,   174,   175,   176,   177,
18806:      178,    -1,   180,    -1,    -1,    -1,   184,   185,    -1,   187,
18807:      188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
18808:      198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
18809:      208,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
18810:       -1,   219,    -1,   221,   222,   223,   224,   225,   226,   227,
18811:      228,   229,   230,   231,    -1,    -1,   234,   235,   236,   237,
18812:       -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
18813:      248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
18814:      258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
18815:      268,   269,   270,   271,   272,   273,    -1,    -1,   276,   277,
18816:      278,   279,    -1,    -1,   282,   283,   284,   285,   286,    -1,
18817:      288,   289,    -1,    -1,   292,   293,   294,    -1,    -1,   297,
18818:      298,    -1,   300,   301,   302,    -1,   304,   305,   306,   307,
18819:      308,   309,   310,   311,   312,   313,   314,    -1,    -1,    -1,
18820:       -1,   319,   320,    -1,   322,   323,   324,    -1,   326,   327,
18821:      328,    -1,   330,   331,   332,   333,   334,   335,    -1,   337,
18822:      338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
18823:      348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
18824:      358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
18825:       -1,   369,   370,   371,   372,   373,   374,   375,   376,   377,
18826:      378,   379,   380,   381,    -1,   383,   384,   385,   386,   387,
18827:      388,   389,    -1,   391,   392,    -1,   394,   395,   396,   397,
18828:      398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
18829:      408,   409,   410,   411,   412,   413,    -1,    -1,    -1,   417,
18830:      418,    -1,   420,   421,   422,   423,   424,   425,   426,    -1,
18831:      428,   429,   430,    -1,    -1,   433,   434,    -1,   436,    -1,
18832:       -1,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
18833:       -1,   449,   450,   451,    -1,   453,   454,   455,   456,    -1,
18834:      458,   459,   460,   461,   462,    -1,   464,   465,    -1,   467,
18835:      468,   469,   470,   471,   472,   473,   474,   475,    -1,    -1,
18836:      478,    -1,    -1,   481,   482,   483,   484,   485,   486,     3,
18837:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18838:      498,   499,   500,   501,    -1,    -1,    -1,    -1,    22,    23,
18839:       24,    25,    26,    27,    28,    29,    -1,    31,    32,    33,
18840:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,
18841:       44,    -1,    46,    47,    48,    -1,    50,    51,    52,    53,
18842:       54,    -1,    56,    57,    -1,    59,    60,    61,    62,    63,
18843:       64,    -1,    -1,    67,    68,    69,    70,    71,    72,    73,
18844:       -1,    75,    76,    77,    78,    79,    -1,    -1,    -1,    83,
18845:       84,    85,    86,    87,    88,    -1,    90,    91,    92,    -1,
18846:       94,    95,    96,    97,    98,    99,    -1,    -1,   102,   103,
18847:      104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
18848:      114,   115,   116,    -1,   118,    -1,   120,   121,   122,   123,
18849:      124,   125,    -1,    -1,   128,   129,   130,   131,    -1,    -1,
18850:      134,   135,   136,   137,   138,    -1,   140,   141,   142,    -1,
18851:      144,   145,   146,    -1,   148,   149,   150,   151,   152,   153,
18852:      154,   155,   156,   157,   158,   159,    -1,   161,    -1,   163,
18853:      164,   165,   166,    -1,   168,    -1,   170,    -1,    -1,    -1,
18854:      174,   175,   176,    -1,   178,    -1,   180,    -1,   182,   183,
18855:       -1,   185,    -1,   187,   188,   189,   190,   191,   192,   193,
18856:       -1,   195,   196,   197,   198,    -1,   200,   201,   202,   203,
18857:      204,   205,   206,    -1,   208,    -1,   210,   211,   212,   213,
18858:      214,   215,   216,   217,    -1,   219,    -1,   221,    -1,    -1,
18859:      224,    -1,   226,   227,   228,   229,   230,   231,    -1,    -1,
18860:      234,    -1,   236,    -1,    -1,   239,   240,   241,   242,   243,
18861:      244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
18862:      254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
18863:      264,   265,   266,   267,   268,    -1,   270,   271,   272,   273,
18864:      274,    -1,   276,   277,    -1,   279,    -1,   281,   282,   283,
18865:      284,   285,   286,    -1,   288,   289,    -1,    -1,   292,   293,
18866:      294,    -1,    -1,   297,   298,   299,    -1,   301,    -1,   303,
18867:      304,   305,   306,   307,   308,   309,    -1,   311,   312,   313,
18868:      314,    -1,    -1,    -1,    -1,   319,   320,   321,    -1,   323,
18869:      324,   325,   326,   327,   328,    -1,   330,   331,   332,   333,
18870:      334,   335,    -1,   337,   338,   339,    -1,   341,   342,   343,
18871:      344,   345,   346,    -1,   348,   349,   350,   351,   352,   353,
18872:      354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
18873:       -1,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
18874:      374,   375,   376,   377,   378,   379,   380,   381,    -1,    -1,
18875:      384,   385,   386,   387,   388,   389,   390,   391,   392,    -1,
18876:       -1,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
18877:      404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
18878:      414,    -1,    -1,   417,   418,    -1,   420,    -1,   422,   423,
18879:      424,   425,   426,    -1,   428,   429,   430,    -1,    -1,   433,
18880:      434,   435,   436,   437,    -1,   439,   440,   441,   442,   443,
18881:      444,   445,   446,    -1,    -1,   449,   450,   451,    -1,   453,
18882:      454,   455,   456,    -1,   458,   459,   460,   461,   462,   463,
18883:      464,   465,    -1,   467,    -1,   469,   470,   471,   472,   473,
18884:      474,   475,    -1,    -1,   478,    -1,    -1,   481,   482,   483,
18885:      484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
18886:      494,   495,   496,   497,   498,   499,   500,   501,     3,    -1,
18887:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18888:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    22,    23,    24,
18889:       25,    26,    27,    28,    29,    -1,    31,    32,    33,    -1,
18890:       -1,    -1,    37,    -1,    -1,    -1,    -1,    42,    43,    44,
18891:       -1,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
18892:       55,    56,    57,    -1,    59,    60,    61,    62,    63,    64,
18893:       -1,    -1,    67,    68,    69,    70,    71,    72,    73,    -1,
18894:       75,    76,    77,    78,    -1,    -1,    81,    -1,    83,    84,
18895:       85,    86,    87,    88,    89,    90,    91,    92,    -1,    94,
18896:       95,    96,    97,    98,    99,    -1,   101,   102,   103,   104,
18897:      105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
18898:      115,   116,    -1,   118,    -1,   120,   121,   122,   123,   124,
18899:      125,    -1,    -1,   128,   129,   130,   131,    -1,    -1,   134,
18900:      135,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
18901:      145,   146,    -1,   148,   149,   150,   151,    -1,   153,   154,
18902:      155,   156,   157,   158,    -1,    -1,   161,    -1,   163,   164,
18903:      165,   166,    -1,   168,    -1,   170,   171,    -1,   173,   174,
18904:      175,    -1,   177,   178,    -1,   180,    -1,    -1,    -1,   184,
18905:      185,    -1,   187,   188,   189,   190,   191,   192,   193,   194,
18906:      195,   196,   197,   198,    -1,   200,   201,   202,   203,   204,
18907:      205,   206,    -1,   208,   209,    -1,   211,   212,   213,   214,
18908:      215,   216,   217,    -1,   219,    -1,   221,   222,   223,   224,
18909:      225,   226,   227,   228,   229,   230,   231,    -1,    -1,   234,
18910:      235,   236,   237,    -1,   239,   240,   241,   242,   243,   244,
18911:      245,   246,    -1,   248,   249,   250,   251,   252,   253,   254,
18912:      255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
18913:      265,   266,   267,   268,   269,   270,   271,   272,   273,    -1,
18914:       -1,   276,   277,   278,   279,    -1,    -1,   282,   283,   284,
18915:      285,   286,    -1,   288,   289,    -1,    -1,   292,   293,   294,
18916:       -1,    -1,   297,   298,    -1,   300,   301,   302,    -1,   304,
18917:      305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
18918:       -1,    -1,    -1,    -1,   319,   320,    -1,   322,   323,   324,
18919:       -1,   326,   327,   328,    -1,   330,   331,   332,   333,   334,
18920:      335,    -1,   337,   338,   339,   340,   341,   342,   343,   344,
18921:      345,   346,    -1,   348,   349,   350,   351,   352,   353,   354,
18922:      355,   356,   357,   358,   359,   360,    -1,   362,   363,   364,
18923:      365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
18924:      375,   376,   377,   378,   379,   380,   381,    -1,   383,   384,
18925:      385,   386,   387,   388,   389,    -1,   391,   392,    -1,   394,
18926:      395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
18927:      405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
18928:       -1,    -1,   417,   418,    -1,   420,   421,   422,   423,   424,
18929:      425,   426,    -1,   428,   429,   430,    -1,    -1,   433,   434,
18930:       -1,   436,    -1,    -1,   439,   440,   441,   442,   443,   444,
18931:      445,   446,    -1,    -1,   449,   450,   451,    -1,   453,   454,
18932:      455,   456,    -1,   458,   459,   460,   461,   462,    -1,   464,
18933:      465,    -1,   467,   468,   469,   470,   471,   472,   473,   474,
18934:      475,    -1,    22,   478,    -1,    -1,   481,   482,   483,   484,
18935:      485,   486,    32,    -1,    34,    35,    -1,    -1,    -1,    -1,
18936:       22,    -1,    -1,   498,   499,   500,   501,    -1,    -1,    -1,
18937:       32,    -1,    52,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18938:       -1,    61,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18939:       52,    -1,    -1,    -1,    -1,    75,    -1,    -1,    -1,    61,
18940:       -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,
18941:       -1,    -1,    -1,    75,    -1,    -1,    -1,    -1,    98,    -1,
18942:      100,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,
18943:       -1,   111,    -1,    -1,    -1,    -1,    98,    -1,   100,    -1,
18944:       -1,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   111,
18945:       -1,    -1,    -1,    -1,    -1,    -1,    -1,   137,    -1,    -1,
18946:       -1,    -1,    -1,   143,   126,   127,    -1,    -1,    -1,    -1,
18947:       -1,   151,    -1,    -1,    -1,   137,    -1,    -1,    -1,    -1,
18948:       -1,   143,    -1,    -1,    -1,    -1,    -1,    -1,   168,   151,
18949:       -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18950:       -1,    -1,    -1,    -1,    -1,    -1,   168,    -1,    -1,    -1,
18951:      172,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18952:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18953:       -1,    -1,    -1,    -1,   214,    -1,    -1,    -1,    -1,    -1,
18954:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18955:       -1,    -1,   214,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18956:      240,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18957:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   240,    -1,
18958:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18959:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18960:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18961:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18962:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18963:       -1,    -1,    -1,    -1,    -1,   315,   316,   317,    -1,    -1,
18964:       -1,    -1,    -1,   323,    -1,    -1,   326,    -1,    -1,    -1,
18965:       -1,    -1,    -1,   315,   316,   317,    -1,    -1,    -1,    -1,
18966:       -1,   323,    -1,    -1,   326,    -1,    -1,    -1,    -1,    -1,
18967:       -1,    -1,    -1,    -1,    -1,    -1,    -1,   357,    -1,    -1,
18968:       -1,    -1,    -1,    -1,    -1,    -1,   366,    -1,    -1,    -1,
18969:       -1,    -1,    -1,    -1,    -1,   357,    -1,    -1,    -1,    -1,
18970:       -1,    -1,   382,    -1,   366,    -1,    -1,    -1,    -1,   389,
18971:       -1,    -1,    -1,   393,    -1,    -1,    -1,    -1,    -1,    -1,
18972:      382,    -1,    -1,   403,    -1,    -1,    -1,   389,    -1,    -1,
18973:       -1,   393,    -1,    -1,    -1,   415,    -1,    -1,    -1,   419,
18974:       -1,   403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18975:       -1,    -1,    -1,   415,    -1,    -1,    -1,   419,    -1,   439,
18976:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18977:       -1,    -1,   452,    -1,    -1,    -1,    -1,   439,   458,    -1,
18978:       -1,    -1,    -1,   463,    -1,    -1,    -1,    -1,   468,    -1,
18979:      452,    -1,    -1,    -1,    -1,    -1,   458,    -1,    -1,    -1,
18980:      480,   463,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18981:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   480,    -1,
18982:       -1,    -1,    -1,    -1,   504,    -1,    -1,    -1,    -1,    -1,
18983:       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   518,    -1,
18984:       -1,    -1,   504,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
18985:       -1,    -1,    -1,    -1,    -1,    -1,   518
18986: };
18987: 
18988: /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
18989:    symbol of state STATE-NUM.  */
18990: static const yytype_uint16 yystos[] =
18991: {
18992:        0,    22,    32,    34,    35,    47,    52,    61,    75,    84,
18993:       86,    98,   100,   111,   126,   127,   128,   137,   143,   151,
18994:      153,   154,   168,   172,   198,   240,   315,   316,   317,   323,
18995:      326,   357,   366,   382,   389,   393,   403,   415,   419,   439,
18996:      452,   455,   458,   463,   480,   504,   518,   530,   531,   532,
18997:      533,   544,   553,   555,   560,   576,   579,   580,   582,   586,
18998:      587,   591,   598,   600,   603,   604,   652,   658,   667,   668,
18999:      686,   687,   688,   689,   691,   693,   694,   698,   751,   752,
19000:      925,   928,   931,   938,   939,   941,   944,   945,   946,   953,
19001:      957,   963,   964,   967,   972,   976,   977,   978,   981,   984,
19002:      985,   986,   990,   991,   993,   433,   483,   601,   203,   373,
19003:      384,   419,   470,   108,   192,   979,   601,     3,    22,    23,
19004:       24,    25,    26,    27,    28,    29,    31,    32,    33,    42,
19005:       43,    44,    46,    47,    48,    49,    50,    51,    52,    53,
19006:       54,    55,    56,    57,    59,    60,    61,    62,    63,    64,
19007:       67,    68,    69,    70,    71,    72,    73,    75,    76,    77,
19008:       78,    79,    81,    83,    84,    85,    86,    87,    88,    89,
19009:       90,    91,    92,    94,    95,    96,    97,    98,    99,   101,
19010:      102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
19011:      112,   113,   114,   115,   116,   118,   120,   121,   122,   123,
19012:      124,   125,   128,   129,   130,   131,   134,   135,   136,   137,
19013:      138,   140,   141,   142,   144,   145,   146,   148,   149,   150,
19014:      151,   152,   153,   154,   155,   156,   157,   158,   159,   161,
19015:      163,   164,   165,   166,   168,   170,   171,   173,   174,   175,
19016:      176,   177,   178,   180,   182,   183,   184,   185,   187,   188,
19017:      189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
19018:      200,   201,   202,   203,   204,   205,   206,   208,   209,   210,
19019:      211,   212,   213,   214,   215,   216,   217,   219,   221,   222,
19020:      223,   224,   225,   226,   227,   228,   229,   230,   231,   234,
19021:      235,   236,   237,   239,   240,   241,   242,   243,   244,   245,
19022:      246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
19023:      256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
19024:      266,   267,   268,   269,   270,   271,   272,   273,   274,   276,
19025:      277,   278,   279,   281,   282,   283,   284,   285,   286,   288,
19026:      289,   292,   293,   294,   297,   298,   299,   300,   301,   302,
19027:      303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
19028:      313,   314,   319,   320,   321,   322,   323,   324,   325,   326,
19029:      327,   328,   330,   331,   332,   333,   334,   335,   337,   338,
19030:      339,   340,   341,   342,   343,   344,   345,   346,   348,   349,
19031:      350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
19032:      360,   362,   363,   364,   365,   366,   367,   368,   369,   370,
19033:      371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
19034:      381,   384,   385,   386,   387,   388,   389,   390,   391,   392,
19035:      394,   395,   396,   397,   398,   400,   401,   402,   403,   404,
19036:      405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
19037:      417,   418,   420,   421,   422,   423,   424,   425,   426,   428,
19038:      429,   430,   433,   434,   435,   436,   437,   439,   440,   441,
19039:      442,   443,   444,   445,   446,   449,   450,   451,   453,   454,
19040:      455,   456,   458,   459,   460,   461,   462,   463,   464,   465,
19041:      467,   468,   469,   470,   471,   472,   473,   474,   475,   478,
19042:      481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
19043:      491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
19044:      501,   546,   831,   914,   918,   996,   997,   998,     3,   176,
19045:      247,   412,   546,   940,   996,   290,   601,    55,   172,   518,
19046:      681,   178,   241,   295,   314,   373,   423,   425,   442,   448,
19047:      451,   584,   650,   937,     5,    30,   326,   546,   547,   913,
19048:        3,    30,    34,    35,    36,    37,    38,    39,    40,    41,
19049:       42,    45,    49,    53,    54,    55,    56,    57,    58,    65,
19050:       66,    71,    72,    74,    79,    80,    81,    82,    83,    89,
19051:       93,   100,   101,   108,   112,   115,   117,   119,   126,   127,
19052:      132,   133,   139,   143,   147,   152,   159,   160,   162,   165,
19053:      167,   169,   171,   172,   173,   176,   177,   179,   181,   182,
19054:      183,   186,   194,   199,   207,   209,   210,   216,   217,   218,
19055:      219,   220,   222,   223,   225,   232,   233,   235,   237,   238,
19056:      247,   268,   269,   270,   274,   275,   278,   280,   281,   283,
19057:      287,   290,   291,   295,   296,   299,   300,   302,   303,   315,
19058:      316,   317,   318,   321,   322,   325,   329,   336,   342,   347,
19059:      361,   364,   368,   382,   383,   390,   393,   394,   397,   399,
19060:      412,   414,   415,   416,   419,   421,   427,   429,   430,   431,
19061:      432,   435,   437,   438,   441,   447,   448,   452,   457,   463,
19062:      464,   466,   468,   476,   477,   479,   480,   487,   488,   489,
19063:      490,   491,   492,   493,   494,   495,   496,   497,   552,   996,
19064:     1000,  1002,    24,    81,    97,   146,   156,   169,   174,   203,
19065:      246,   250,   320,   335,   370,   373,   384,   387,   405,   419,
19066:      425,   426,   436,   442,   470,   584,   653,   654,   657,   601,
19067:      913,   100,   137,   468,   518,   533,   544,   553,   555,   576,
19068:      579,   580,   586,   587,   591,   600,   604,   652,   658,   667,
19069:      668,   686,   925,   928,   931,   938,   939,   949,   953,   957,
19070:      963,   967,   972,   981,   984,   990,   991,   993,   108,    75,
19071:       66,    79,    81,   159,   232,   281,   291,   303,   321,   369,
19072:      414,   435,   437,   441,   463,   518,   545,   546,   547,   687,
19073:      752,   754,   756,   766,   773,   774,   831,   833,   834,   108,
19074:        5,   546,   548,   965,   546,   913,    30,   178,   241,   388,
19075:      429,   433,   465,   546,   982,   983,   988,   601,    30,   132,
19076:      707,   708,   178,   241,   373,   388,   429,   465,   958,   959,
19077:      988,   601,   546,   686,   698,   989,   546,   773,   419,   704,
19078:      545,   173,   518,   969,   518,   345,   699,   700,   913,   699,
19079:      687,   688,   984,     0,   521,   122,   213,   454,   147,   218,
19080:      296,   447,   710,   711,   756,   756,   687,   689,   691,   522,
19081:      468,   947,   214,    30,   429,   433,   686,   989,   192,   545,
19082:      913,   192,   545,   192,   773,   192,   545,   275,   548,   341,
19083:      602,   516,   520,   549,   550,   518,    82,   108,   174,   203,
19084:      246,   373,   384,   419,   442,   470,   943,   108,   686,   545,
19085:      423,   425,   423,   425,   355,   192,   545,   545,   380,   174,
19086:      246,   345,   384,   419,   470,   665,   203,    30,   913,   192,
19087:      552,   252,   436,   107,   419,   419,   470,   377,   380,   192,
19088:      546,   655,   920,   192,   910,   913,   192,   913,   518,   590,
19089:      295,   425,   949,     3,   463,   950,   952,   953,   955,   956,
19090:      996,  1000,   947,   546,   548,   940,   518,   518,   167,   518,
19091:      687,   774,   518,   518,   545,   518,   518,   172,   518,   518,
19092:      518,   518,   687,   752,   756,   766,   511,   549,    40,   546,
19093:      767,   768,   767,   382,   522,   690,    37,    42,   101,   173,
19094:      209,   225,   235,   269,   315,   322,   364,   383,   452,   770,
19095:      768,    40,   546,   767,   769,   504,   778,   548,   507,   518,
19096:      518,   926,   983,   983,   983,   501,   224,   983,   520,   290,
19097:        4,     6,     7,     8,     9,    10,    39,    54,    56,    57,
19098:       65,    71,    72,    83,   112,   115,   117,   136,   152,   160,
19099:      165,   182,   183,   216,   217,   219,   247,   268,   270,   275,
19100:      280,   283,   292,   342,   368,   397,   429,   430,   438,   464,
19101:      502,   509,   510,   511,   516,   518,   523,   524,   525,   526,
19102:      546,   548,   687,   741,   790,   793,   796,   797,   798,   800,
19103:      801,   802,   803,   805,   806,   822,   824,   825,   826,   827,
19104:      828,   829,   830,   831,   832,   834,   836,   851,   852,   863,
19105:      885,   892,   900,   901,   902,   914,   915,   916,   899,   901,
19106:      958,   958,   548,   958,   501,   958,   172,   431,   507,   602,
19107:      520,   549,   773,   973,     3,   171,   173,   468,   953,   968,
19108:      970,   171,   971,   822,   869,   870,   699,   522,   518,   922,
19109:      519,   519,   519,   532,   172,   295,   563,   157,   973,    30,
19110:      132,   705,   705,    59,   705,   162,   167,   238,   287,   716,
19111:      718,   719,   744,   746,   747,   748,   181,   290,   457,   290,
19112:      710,   711,   518,   545,   965,   420,   987,   501,   224,   152,
19113:       26,    32,   137,   294,   353,   357,   389,   460,   538,   541,
19114:      542,   353,   152,    40,    60,   106,   202,   251,   261,   273,
19115:      305,   353,   359,   384,   389,   403,   541,   592,   595,   152,
19116:      353,   389,   541,   152,   353,   389,   541,   152,    40,   980,
19117:      291,   485,   822,   893,   551,   552,   550,     3,    30,    37,
19118:       42,    49,    55,    81,    83,    89,   101,   132,   171,   173,
19119:      176,   177,   194,   209,   222,   223,   225,   235,   237,   247,
19120:      269,   278,   300,   302,   322,   364,   383,   394,   412,   421,
19121:      441,   466,   468,   519,   822,   872,   873,   917,   923,   996,
19122:     1001,   822,   419,   545,   546,   519,   518,   639,   373,   584,
19123:      650,   275,   929,    40,   192,   546,   583,   470,   192,   545,
19124:      192,   545,   995,   192,   545,   192,   545,    89,   934,   152,
19125:      484,    90,   129,   308,   424,   192,   546,   152,   520,   921,
19126:       63,   360,   522,   656,   152,   522,   656,   152,   290,   588,
19127:      589,   822,   923,   355,   519,   522,     4,   160,   290,   438,
19128:      509,   510,   548,   594,   597,   916,   948,   950,   951,   954,
19129:      949,   431,   518,   676,   680,   822,   870,   518,     3,    68,
19130:       69,   109,   110,   113,   114,   189,   190,   253,   254,   255,
19131:      256,   257,   258,   259,   260,   263,   264,   337,   338,   378,
19132:      379,   474,   475,   498,   499,   548,   808,   809,   810,   811,
19133:      812,   813,   814,   815,   816,   817,   818,   819,   820,   875,
19134:      876,   768,   769,   822,   545,   822,   877,   509,   510,   546,
19135:      823,   824,   852,   863,   879,   518,   822,   869,   880,   822,
19136:       58,   172,   233,   432,   822,   870,   883,   822,   519,   547,
19137:      518,   421,   724,   725,   725,   707,   708,   756,   220,   702,
19138:      225,    37,   225,   383,   770,   225,   300,   771,   756,   771,
19139:      225,   770,   518,   225,   771,   225,   148,   200,   758,   225,
19140:      725,   518,   547,   518,   725,   297,   822,   960,   962,   872,
19141:        3,    37,    42,    49,    54,    55,    56,    57,    71,    72,
19142:       81,    83,    89,   101,   112,   115,   165,   171,   173,   177,
19143:      194,   209,   216,   217,   219,   222,   223,   225,   235,   237,
19144:      247,   268,   269,   270,   278,   283,   300,   302,   322,   342,
19145:      364,   368,   383,   390,   394,   397,   412,   421,   429,   430,
19146:      441,   447,   464,   468,   784,   786,   787,   789,   791,   793,
19147:      795,   797,   798,   799,   801,   802,   805,   806,   874,   919,
19148:      996,   999,    40,   236,   546,   518,   516,   687,   467,   804,
19149:      822,   889,   804,   804,   518,   518,   792,   792,   325,   687,
19150:      518,   794,   526,    71,    72,   804,   822,   792,   518,   518,
19151:      482,   504,   518,   807,   518,   807,   822,   822,   822,    83,
19152:      148,   903,   904,   822,   870,   871,   687,   822,   869,     9,
19153:      552,   547,   853,   854,   855,   520,   549,   894,   549,   518,
19154:      548,   518,   518,   548,   916,     3,     8,    11,    15,    16,
19155:       17,    18,    19,    20,    21,    36,    40,    46,    53,    80,
19156:      177,   194,   199,   222,   223,   237,   275,   278,   292,   295,
19157:      394,   502,   505,   506,   507,   509,   510,   511,   512,   513,
19158:      514,   861,   862,   863,   865,   897,   481,   837,   302,   822,
19159:      522,   702,   518,   548,   702,     3,   117,   241,   548,   594,
19160:      806,   961,   104,   962,   962,   546,    40,   546,   519,   522,
19161:      947,   522,   519,   700,   910,   911,    40,   973,   193,   355,
19162:      220,   639,   389,   689,   689,    30,   712,   713,   822,    59,
19163:      689,   706,   164,   272,   732,   227,   273,   341,   392,   454,
19164:        4,     9,    30,   727,   822,   509,   510,   728,   729,   822,
19165:      824,   744,   745,   719,   718,   716,   717,   167,   747,   285,
19166:      749,    59,   695,   696,   697,   759,   823,   901,   901,   716,
19167:      744,   870,   922,   172,   469,   966,   236,   545,    74,    82,
19168:       93,   169,   192,   329,   448,   546,   621,   631,   646,    82,
19169:       93,   554,    93,   554,   518,   431,   518,   619,   245,   451,
19170:      619,    93,   522,   431,   545,     3,   789,   594,    59,   596,
19171:      594,   594,   106,   251,   261,    59,   431,   480,   504,   593,
19172:      266,   373,   593,   595,   773,    93,   431,   554,   373,   545,
19173:      431,   373,   979,   546,   676,   517,   528,   872,   872,   873,
19174:      522,   710,   711,    13,    14,   222,   222,   431,   431,   546,
19175:      638,   643,   480,   679,   545,   380,   345,   384,   419,   470,
19176:      665,   152,   100,   580,   604,   930,   931,   991,   144,   786,
19177:      275,   199,   585,   545,   275,   581,   592,   275,   518,   639,
19178:       40,   275,   639,   275,   518,   659,   660,   661,   662,   663,
19179:      664,   666,   192,   546,   633,   935,   552,   152,   172,   599,
19180:      655,   551,   520,   920,   910,   913,   913,   920,   519,   522,
19181:       13,   949,   955,     4,   916,     4,   916,   548,   552,   678,
19182:      685,    55,   102,   123,   141,   145,   168,   171,   187,   280,
19183:      288,   310,   339,   682,    40,   519,   822,   519,   172,   522,
19184:      519,   318,   878,   519,   823,   823,    11,    15,    16,    19,
19185:       20,    21,   199,   222,   292,   505,   506,   507,   509,   510,
19186:      511,   512,   513,   514,   863,   823,   519,   775,   776,   833,
19187:      167,   172,   881,   882,   522,   519,    40,   883,   870,   883,
19188:      883,   172,   519,    40,   767,   518,   911,     4,     9,   546,
19189:      720,   722,   723,   901,   899,   178,   241,   419,   423,   425,
19190:      451,   545,   703,   477,   779,   756,   756,   225,   756,   290,
19191:      457,   772,   756,   225,   901,   756,   756,   282,   282,   518,
19192:      756,   547,   780,   781,   518,   547,   780,   522,   519,   522,
19193:      520,   518,   789,   518,   518,   520,    39,   788,   518,   808,
19194:      809,   810,   811,   812,   813,   814,   815,   816,   817,   818,
19195:      819,   820,   821,   519,   522,   792,   555,   560,   667,   668,
19196:      686,   927,   972,   984,   870,   871,   518,   476,   886,   887,
19197:      822,   871,   916,   822,   856,   857,   858,   859,   804,   804,
19198:        8,    15,    16,    19,    20,    21,   505,   506,   507,   509,
19199:      510,   511,   512,   513,   514,   546,   861,   866,   519,   870,
19200:      429,   429,   916,   916,   518,   518,   546,   355,   908,   167,
19201:      517,   519,   522,   528,   522,   527,   511,   550,   870,   916,
19202:      822,   821,   821,   786,   822,   822,   822,   822,   822,   822,
19203:      822,   822,     5,   552,   924,   429,    45,   416,   898,   920,
19204:      822,   822,   518,   687,   827,   884,   892,   132,   160,   275,
19205:      280,   285,   438,   449,   822,   280,   518,   822,   431,    53,
19206:      177,   194,   199,   237,   394,   822,   822,   822,   822,   822,
19207:      822,   822,   822,   822,   822,    30,    38,   399,   860,   516,
19208:      520,   896,   181,   163,   838,   368,   518,   852,   902,   172,
19209:      753,   872,   753,   518,   548,   546,   545,   968,   545,   976,
19210:      822,   522,   519,   250,   275,   701,   457,   975,   545,   557,
19211:      518,   546,   562,   572,   573,   575,    41,   126,   714,   522,
19212:      457,   714,   266,   689,   368,   369,   509,   510,   729,   731,
19213:      824,   392,   227,   291,   313,   313,   522,   513,     4,   730,
19214:      916,   730,   368,   369,   731,   545,   909,   279,   396,   750,
19215:      518,   911,   912,   522,   181,   457,   199,   181,   220,   745,
19216:      717,   519,   546,   548,   546,   548,   353,   541,   518,   192,
19217:      631,   913,   227,   275,   227,   457,   518,   624,   785,   786,
19218:      913,   546,   192,   913,   192,   546,    26,   137,   389,   537,
19219:      540,   552,   615,   629,   913,   552,   623,   642,   913,   538,
19220:      913,   353,   389,   541,   592,   594,   920,   913,   594,   920,
19221:      913,   594,   353,   389,   541,   913,   913,   913,   913,   353,
19222:      389,   541,   913,   913,   548,   510,   822,   893,   710,   710,
19223:      710,   466,   873,   193,   358,   709,   822,   822,   280,   548,
19224:      942,   280,   942,   546,   334,   675,   519,   522,   288,   172,
19225:      431,   670,   929,   583,   470,   545,   545,   995,   545,   545,
19226:      545,   295,   650,   518,   687,   152,     3,   518,   518,   152,
19227:      152,   237,   546,   621,   631,   634,   637,   647,   649,   480,
19228:      482,   626,   151,   686,   152,   480,   936,   152,   519,   872,
19229:      522,   522,    40,   275,   290,   546,     3,   656,   551,   656,
19230:      290,   656,   588,   822,   676,   247,   511,   516,   518,   594,
19231:      677,   828,   829,   830,   954,   519,   522,    40,   674,   548,
19232:      674,   275,   280,   339,   674,    59,   674,   786,   519,   822,
19233:      822,   822,   881,   786,   823,   823,   823,   823,   823,   823,
19234:      132,   275,   285,   823,   823,   823,   823,   823,   823,   823,
19235:      823,   823,   823,   519,   522,    40,   777,   822,   822,   882,
19236:      881,   786,   519,   519,   519,   870,   786,   911,   519,   313,
19237:      513,   313,   369,   513,   518,   518,   702,   423,   425,   423,
19238:      425,   545,   704,   704,   704,   822,   181,   733,   772,   772,
19239:      756,   822,   518,   756,   167,   772,   518,   547,   763,   772,
19240:      786,   519,   522,   780,   519,   960,     3,   874,    39,   788,
19241:      546,   783,   783,     3,   516,   516,   916,   431,   431,   431,
19242:      431,   786,   454,   519,   517,   870,   822,   139,   887,   888,
19243:      519,   519,   519,   528,   522,   527,   520,   519,   519,   501,
19244:      501,   519,   519,   822,   911,   518,   822,   905,   546,   835,
19245:      890,   891,   822,   822,   853,   904,   519,   519,   519,   501,
19246:      823,   823,   145,   870,   172,   132,   160,   280,   285,   438,
19247:      449,   518,   145,   866,   822,   416,   898,   822,   884,   822,
19248:      431,   518,   687,   822,   893,   551,   518,   518,   155,   839,
19249:      754,   755,   779,   710,   779,   916,   821,   922,   922,   250,
19250:      518,   755,   477,   974,    40,    59,   558,   568,   575,   894,
19251:      522,   753,   507,   503,   715,   713,   292,   861,   864,   715,
19252:        4,   916,   731,   291,   454,   728,   522,   244,   911,   695,
19253:       59,   901,   518,   547,    59,   266,   966,   966,   431,   822,
19254:      275,   646,   518,   152,   518,   624,   203,   643,   644,   605,
19255:       40,   176,   614,   640,   605,    26,   137,   357,   359,   389,
19256:      534,   535,   536,   542,   543,   152,   656,   152,   656,   615,
19257:      629,   615,   519,   522,   548,   608,   507,   520,   519,   522,
19258:      431,   373,    93,   431,   554,   373,   431,   431,   431,   373,
19259:      980,   528,   517,   528,   709,   709,   709,   873,   282,   282,
19260:      519,   518,   669,     3,   406,   407,   548,   684,   638,   675,
19261:      585,   545,   581,   518,    40,   639,   662,   664,   929,   355,
19262:      419,   548,   577,   578,   583,   685,   643,   545,   545,   995,
19263:      545,   519,   522,   288,   619,   288,   290,   618,   913,   480,
19264:      994,   545,   619,    40,   545,   519,   660,   666,   663,   666,
19265:      419,   822,   152,   545,   599,   920,   672,   683,   954,   678,
19266:      548,   548,   280,   643,   511,   643,   548,   511,   643,   548,
19267:      519,   519,   882,   172,   132,   285,   518,   778,   775,   518,
19268:      519,   519,   519,   546,   720,   779,   704,   704,   704,   704,
19269:      545,   545,   545,    59,   186,   742,   772,   911,   518,   760,
19270:      761,   762,   825,   827,   911,   167,    80,   782,   781,   519,
19271:      519,   516,   786,   519,   522,   519,   916,   517,   916,   519,
19272:      809,   811,   812,   813,   812,   813,   813,   519,   427,   822,
19273:      143,   822,   856,   866,   807,   807,   519,   519,   822,   905,
19274:      906,   907,    40,   199,   522,   519,   908,   821,   822,    36,
19275:       36,   822,   519,   822,   172,   518,   874,   822,   519,   145,
19276:      823,   823,   145,   145,   822,   822,   517,   528,   518,   895,
19277:      711,   477,   822,   301,   843,   522,   733,   709,   733,   519,
19278:      927,   822,   361,   566,   546,   266,   321,   117,   304,   518,
19279:      556,   686,   519,   522,   562,   974,   822,   164,   231,   518,
19280:      715,   291,   545,   519,   912,   181,   687,   688,   901,   912,
19281:      913,   913,   519,   152,   644,   631,   644,   605,   633,   522,
19282:      519,   119,   207,   273,   275,   630,   518,    33,    59,   651,
19283:      640,    74,    80,    93,   117,   119,   207,   275,   280,   329,
19284:      347,   448,   457,   610,   611,   625,   176,   117,   191,   275,
19285:      619,   593,   107,   117,   176,   275,   405,   408,   595,   619,
19286:      389,   536,   442,   913,   546,   540,     3,    37,    42,    49,
19287:       55,    81,    83,    89,   101,   171,   173,   176,   177,   194,
19288:      209,   222,   223,   225,   235,   237,   247,   269,   274,   278,
19289:      292,   300,   302,   322,   364,   383,   390,   394,   412,   421,
19290:      441,   447,   468,   509,   510,   548,   594,   606,   645,   786,
19291:      864,   917,   996,  1002,   552,   642,   913,   913,   913,   913,
19292:      913,   913,   913,   913,   913,   913,   676,   893,   893,   519,
19293:      519,   519,   710,   107,   373,   520,   593,   684,   518,   518,
19294:      637,   686,   936,   650,   192,   545,   519,   522,   585,   519,
19295:      519,   581,   518,    40,   628,   626,   634,    86,   590,   107,
19296:      273,   639,   686,   662,   664,    40,    40,   687,   688,   633,
19297:      457,   933,   656,   519,   522,   643,   823,   172,   518,   874,
19298:      780,   519,   522,   519,   733,   545,   545,   545,   545,    30,
19299:      103,   182,   367,   518,   734,   735,   736,   737,   738,   739,
19300:      740,   822,   822,   479,   840,   519,   824,   867,   868,   199,
19301:      181,   757,   761,   519,   763,   764,   765,   920,   788,   916,
19302:      788,   546,   788,   517,   517,   822,   522,   519,   546,   822,
19303:      824,   891,   822,   822,   822,   874,   519,   822,    36,    36,
19304:      822,   822,   145,   519,   510,   893,   519,   872,   519,   822,
19305:      519,   518,   546,   844,   742,   519,   742,   548,   519,   900,
19306:      463,   418,   456,   567,   546,   561,   571,   290,   564,   507,
19307:      575,   566,   866,    59,   519,   519,   462,   463,   692,   605,
19308:      631,   519,   519,   480,   636,   120,   195,   205,   119,   459,
19309:      822,   117,    40,   518,   920,   913,   823,   120,   195,   119,
19310:      280,   227,   545,   636,    88,   651,   192,   280,   594,   822,
19311:      651,   280,   509,   510,   597,   546,   786,   656,   656,     3,
19312:      247,   412,   917,   921,   507,   431,   431,   517,   517,   709,
19313:      519,   519,   546,   676,   457,   671,   673,   685,   643,   519,
19314:      994,    40,   419,   275,   518,   548,   518,   936,   637,   151,
19315:      686,   149,   201,   618,   122,   137,   328,   994,   107,   936,
19316:      480,   992,   419,   290,   546,   932,   518,   683,   823,   874,
19317:      519,   519,     9,   354,   726,   742,   518,   391,   518,   519,
19318:      522,   546,   841,   842,   336,   743,   522,   519,   518,   547,
19319:       59,   519,   199,   519,   764,   517,   786,   905,   517,   192,
19320:      519,   822,   822,   822,   528,   517,   528,   519,   519,   546,
19321:      845,   840,   548,   840,   522,   462,   894,   519,   522,    91,
19322:      566,   822,   519,   912,   912,   347,   636,   518,   627,   605,
19323:      519,   191,   518,   822,   275,   611,   636,   639,   913,    40,
19324:      152,   782,   921,   513,   606,   913,   913,   519,   593,   124,
19325:      519,   519,   626,   686,   545,   152,   685,    40,   519,   913,
19326:      994,    30,    85,    94,   118,   191,   204,   405,   408,   622,
19327:      622,   369,   369,    40,    64,    74,   241,   687,   545,   518,
19328:      546,   565,   574,   833,   519,   519,   518,   840,   870,   518,
19329:      870,   736,    40,   522,   822,   457,   721,   824,   901,   911,
19330:      768,   518,   768,   822,   893,   893,   310,   846,   743,   743,
19331:      686,   304,   686,   561,   290,   518,   559,   545,   605,   552,
19332:      632,   635,   409,   472,   612,   613,   518,   607,   822,   519,
19333:      249,   648,   191,   457,   539,   513,   442,   676,   548,   936,
19334:      618,   992,   518,   545,   519,   686,   626,   590,   686,    74,
19335:      293,    74,   933,   822,    80,   569,   519,   522,   569,     9,
19336:      743,   519,   735,   519,   844,   842,   371,   519,   901,   517,
19337:      517,   517,    59,   710,   721,   721,   567,    93,   574,   133,
19338:      639,   507,   519,   522,   592,   519,   273,   620,   173,   309,
19339:      395,   290,   616,   617,   641,   607,   822,   442,    40,   518,
19340:      992,   618,   994,   992,   293,   293,   518,   519,   920,   570,
19341:      920,   936,   565,   570,   519,   721,   519,   723,   519,   869,
19342:      184,   340,   369,   847,   462,   913,   519,   276,   454,   648,
19343:      606,   635,   519,   613,   205,   122,   454,   290,   641,   290,
19344:      616,   686,   574,   569,   714,   779,   714,    53,   104,   444,
19345:      822,   848,   849,   848,   848,   519,   686,   779,   389,   617,
19346:       63,   273,   360,   389,   609,   609,   992,   519,   570,   715,
19347:      715,   849,   368,   166,   324,   166,   324,   148,   850,   850,
19348:      850,   573,   605,    25,   117,   280,   936,   714,    36,   104,
19349:      181,   273,   428,   779,   779,   715,   849,   368,   298
19350: };
19351: 
19352: #define yyerrok		(yyerrstatus = 0)
19353: #define yyclearin	(yychar = YYEMPTY)
19354: #define YYEMPTY		(-2)
19355: #define YYEOF		0
19356: 
19357: #define YYACCEPT	goto yyacceptlab
19358: #define YYABORT		goto yyabortlab
19359: #define YYERROR		goto yyerrorlab
19360: 
19361: 
19362: /* Like YYERROR except do call yyerror.  This remains here temporarily
19363:    to ease the transition to the new meaning of YYERROR, for GCC.
19364:    Once GCC version 2 has supplanted version 1, this can go.  */
19365: 
19366: #define YYFAIL		goto yyerrlab
19367: 
19368: #define YYRECOVERING()  (!!yyerrstatus)
19369: 
19370: #define YYBACKUP(Token, Value)					\
19371: do								\
19372:   if (yychar == YYEMPTY && yylen == 1)				\
19373:     {								\
19374:       yychar = (Token);						\
19375:       yylval = (Value);						\
19376:       yytoken = YYTRANSLATE (yychar);				\
19377:       YYPOPSTACK (1);						\
19378:       goto yybackup;						\
19379:     }								\
19380:   else								\
19381:     {								\
19382:       yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
19383:       YYERROR;							\
19384:     }								\
19385: while (YYID (0))
19386: 
19387: 
19388: #define YYTERROR	1
19389: #define YYERRCODE	256
19390: 
19391: 
19392: /* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
19393:    If N is 0, then set CURRENT to the empty location which ends
19394:    the previous symbol: RHS[0] (always defined).  */
19395: 
19396: #define YYRHSLOC(Rhs, K) ((Rhs)[K])
19397: #ifndef YYLLOC_DEFAULT
19398: # define YYLLOC_DEFAULT(Current, Rhs, N)				\
19399:     do									\
19400:       if (YYID (N))                                                    \
19401: 	{								\
19402: 	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
19403: 	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
19404: 	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
19405: 	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
19406: 	}								\
19407:       else								\
19408: 	{								\
19409: 	  (Current).first_line   = (Current).last_line   =		\
19410: 	    YYRHSLOC (Rhs, 0).last_line;				\
19411: 	  (Current).first_column = (Current).last_column =		\
19412: 	    YYRHSLOC (Rhs, 0).last_column;				\
19413: 	}								\
19414:     while (YYID (0))
19415: #endif
19416: 
19417: 
19418: /* YY_LOCATION_PRINT -- Print the location on the stream.
19419:    This macro was not mandated originally: define only if we know
19420:    we won't break user code: when these are the locations we know.  */
19421: 
19422: #ifndef YY_LOCATION_PRINT
19423: # if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
19424: #  define YY_LOCATION_PRINT(File, Loc)			\
19425:      fprintf (File, "%d.%d-%d.%d",			\
19426: 	      (Loc).first_line, (Loc).first_column,	\
19427: 	      (Loc).last_line,  (Loc).last_column)
19428: # else
19429: #  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
19430: # endif
19431: #endif
19432: 
19433: 
19434: /* YYLEX -- calling `yylex' with the right arguments.  */
19435: 
19436: #ifdef YYLEX_PARAM
19437: # define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
19438: #else
19439: # define YYLEX yylex (&yylval, &yylloc, yyscanner)
19440: #endif
19441: 
19442: /* Enable debugging if requested.  */
19443: #if YYDEBUG
19444: 
19445: # ifndef YYFPRINTF
19446: #  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
19447: #  define YYFPRINTF fprintf
19448: # endif
19449: 
19450: # define YYDPRINTF(Args)			\
19451: do {						\
19452:   if (yydebug)					\
19453:     YYFPRINTF Args;				\
19454: } while (YYID (0))
19455: 
19456: # define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
19457: do {									  \
19458:   if (yydebug)								  \
19459:     {									  \
19460:       YYFPRINTF (stderr, "%s ", Title);					  \
19461:       yy_symbol_print (stderr,						  \
19462: 		  Type, Value, Location, yyscanner); \
19463:       YYFPRINTF (stderr, "\n");						  \
19464:     }									  \
19465: } while (YYID (0))
19466: 
19467: 
19468: /*--------------------------------.
19469: | Print this symbol on YYOUTPUT.  |
19470: `--------------------------------*/
19471: 
19472: /*ARGSUSED*/
19473: #if (defined __STDC__ || defined __C99__FUNC__ \
19474:      || defined __cplusplus || defined _MSC_VER)
19475: static void
19476: yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
19477: #else
19478: static void
19479: yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
19480:     FILE *yyoutput;
19481:     int yytype;
19482:     YYSTYPE const * const yyvaluep;
19483:     YYLTYPE const * const yylocationp;
19484:     core_yyscan_t yyscanner;
19485: #endif
19486: {
19487:   if (!yyvaluep)
19488:     return;
19489:   YYUSE (yylocationp);
19490:   YYUSE (yyscanner);
19491: # ifdef YYPRINT
19492:   if (yytype < YYNTOKENS)
19493:     YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
19494: # else
19495:   YYUSE (yyoutput);
19496: # endif
19497:   switch (yytype)
19498:     {
19499:       default:
19500: 	break;
19501:     }
19502: }
19503: 
19504: 
19505: /*--------------------------------.
19506: | Print this symbol on YYOUTPUT.  |
19507: `--------------------------------*/
19508: 
19509: #if (defined __STDC__ || defined __C99__FUNC__ \
19510:      || defined __cplusplus || defined _MSC_VER)
19511: static void
19512: yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
19513: #else
19514: static void
19515: yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
19516:     FILE *yyoutput;
19517:     int yytype;
19518:     YYSTYPE const * const yyvaluep;
19519:     YYLTYPE const * const yylocationp;
19520:     core_yyscan_t yyscanner;
19521: #endif
19522: {
19523:   if (yytype < YYNTOKENS)
19524:     YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
19525:   else
19526:     YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);
19527: 
19528:   YY_LOCATION_PRINT (yyoutput, *yylocationp);
19529:   YYFPRINTF (yyoutput, ": ");
19530:   yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
19531:   YYFPRINTF (yyoutput, ")");
19532: }
19533: 
19534: /*------------------------------------------------------------------.
19535: | yy_stack_print -- Print the state stack from its BOTTOM up to its |
19536: | TOP (included).                                                   |
19537: `------------------------------------------------------------------*/
19538: 
19539: #if (defined __STDC__ || defined __C99__FUNC__ \
19540:      || defined __cplusplus || defined _MSC_VER)
19541: static void
19542: yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
19543: #else
19544: static void
19545: yy_stack_print (bottom, top)
19546:     yytype_int16 *bottom;
19547:     yytype_int16 *top;
19548: #endif
19549: {
19550:   YYFPRINTF (stderr, "Stack now");
19551:   for (; bottom <= top; ++bottom)
19552:     YYFPRINTF (stderr, " %d", *bottom);
19553:   YYFPRINTF (stderr, "\n");
19554: }
19555: 
19556: # define YY_STACK_PRINT(Bottom, Top)				\
19557: do {								\
19558:   if (yydebug)							\
19559:     yy_stack_print ((Bottom), (Top));				\
19560: } while (YYID (0))
19561: 
19562: 
19563: /*------------------------------------------------.
19564: | Report that the YYRULE is going to be reduced.  |
19565: `------------------------------------------------*/
19566: 
19567: #if (defined __STDC__ || defined __C99__FUNC__ \
19568:      || defined __cplusplus || defined _MSC_VER)
19569: static void
19570: yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
19571: #else
19572: static void
19573: yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
19574:     YYSTYPE *yyvsp;
19575:     YYLTYPE *yylsp;
19576:     int yyrule;
19577:     core_yyscan_t yyscanner;
19578: #endif
19579: {
19580:   int yynrhs = yyr2[yyrule];
19581:   int yyi;
19582:   unsigned long int yylno = yyrline[yyrule];
19583:   YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
19584: 	     yyrule - 1, yylno);
19585:   /* The symbols being reduced.  */
19586:   for (yyi = 0; yyi < yynrhs; yyi++)
19587:     {
19588:       fprintf (stderr, "   $%d = ", yyi + 1);
19589:       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
19590: 		       &(yyvsp[(yyi + 1) - (yynrhs)])
19591: 		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
19592:       fprintf (stderr, "\n");
19593:     }
19594: }
19595: 
19596: # define YY_REDUCE_PRINT(Rule)		\
19597: do {					\
19598:   if (yydebug)				\
19599:     yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
19600: } while (YYID (0))
19601: 
19602: /* Nonzero means print parse trace.  It is left uninitialized so that
19603:    multiple parsers can coexist.  */
19604: int yydebug;
19605: #else /* !YYDEBUG */
19606: # define YYDPRINTF(Args)
19607: # define YY_SYMBOL_PRINT(Title, Type, Value, Location)
19608: # define YY_STACK_PRINT(Bottom, Top)
19609: # define YY_REDUCE_PRINT(Rule)
19610: #endif /* !YYDEBUG */
19611: 
19612: 
19613: /* YYINITDEPTH -- initial size of the parser's stacks.  */
19614: #ifndef	YYINITDEPTH
19615: # define YYINITDEPTH 200
19616: #endif
19617: 
19618: /* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
19619:    if the built-in stack extension method is used).
19620: 
19621:    Do not make this value too large; the results are undefined if
19622:    YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
19623:    evaluated with infinite-precision integer arithmetic.  */
19624: 
19625: #ifndef YYMAXDEPTH
19626: # define YYMAXDEPTH 10000
19627: #endif
19628: 
19629: 
19630: 
19631: #if YYERROR_VERBOSE
19632: 
19633: # ifndef yystrlen
19634: #  if defined __GLIBC__ && defined _STRING_H
19635: #   define yystrlen strlen
19636: #  else
19637: /* Return the length of YYSTR.  */
19638: #if (defined __STDC__ || defined __C99__FUNC__ \
19639:      || defined __cplusplus || defined _MSC_VER)
19640: static YYSIZE_T
19641: yystrlen (const char *yystr)
19642: #else
19643: static YYSIZE_T
19644: yystrlen (yystr)
19645:     const char *yystr;
19646: #endif
19647: {
19648:   YYSIZE_T yylen;
19649:   for (yylen = 0; yystr[yylen]; yylen++)
19650:     continue;
19651:   return yylen;
19652: }
19653: #  endif
19654: # endif
19655: 
19656: # ifndef yystpcpy
19657: #  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
19658: #   define yystpcpy stpcpy
19659: #  else
19660: /* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
19661:    YYDEST.  */
19662: #if (defined __STDC__ || defined __C99__FUNC__ \
19663:      || defined __cplusplus || defined _MSC_VER)
19664: static char *
19665: yystpcpy (char *yydest, const char *yysrc)
19666: #else
19667: static char *
19668: yystpcpy (yydest, yysrc)
19669:     char *yydest;
19670:     const char *yysrc;
19671: #endif
19672: {
19673:   char *yyd = yydest;
19674:   const char *yys = yysrc;
19675: 
19676:   while ((*yyd++ = *yys++) != '\0')
19677:     continue;
19678: 
19679:   return yyd - 1;
19680: }
19681: #  endif
19682: # endif
19683: 
19684: # ifndef yytnamerr
19685: /* Copy to YYRES the contents of YYSTR after stripping away unnecessary
19686:    quotes and backslashes, so that it's suitable for yyerror.  The
19687:    heuristic is that double-quoting is unnecessary unless the string
19688:    contains an apostrophe, a comma, or backslash (other than
19689:    backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
19690:    null, do not copy; instead, return the length of what the result
19691:    would have been.  */
19692: static YYSIZE_T
19693: yytnamerr (char *yyres, const char *yystr)
19694: {
19695:   if (*yystr == '"')
19696:     {
19697:       YYSIZE_T yyn = 0;
19698:       char const *yyp = yystr;
19699: 
19700:       for (;;)
19701: 	switch (*++yyp)
19702: 	  {
19703: 	  case '\'':
19704: 	  case ',':
19705: 	    goto do_not_strip_quotes;
19706: 
19707: 	  case '\\':
19708: 	    if (*++yyp != '\\')
19709: 	      goto do_not_strip_quotes;
19710: 	    /* Fall through.  */
19711: 	  default:
19712: 	    if (yyres)
19713: 	      yyres[yyn] = *yyp;
19714: 	    yyn++;
19715: 	    break;
19716: 
19717: 	  case '"':
19718: 	    if (yyres)
19719: 	      yyres[yyn] = '\0';
19720: 	    return yyn;
19721: 	  }
19722:     do_not_strip_quotes: ;
19723:     }
19724: 
19725:   if (! yyres)
19726:     return yystrlen (yystr);
19727: 
19728:   return yystpcpy (yyres, yystr) - yyres;
19729: }
19730: # endif
19731: 
19732: /* Copy into YYRESULT an error message about the unexpected token
19733:    YYCHAR while in state YYSTATE.  Return the number of bytes copied,
19734:    including the terminating null byte.  If YYRESULT is null, do not
19735:    copy anything; just return the number of bytes that would be
19736:    copied.  As a special case, return 0 if an ordinary "syntax error"
19737:    message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
19738:    size calculation.  */
19739: static YYSIZE_T
19740: yysyntax_error (char *yyresult, int yystate, int yychar)
19741: {
19742:   int yyn = yypact[yystate];
19743: 
19744:   if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
19745:     return 0;
19746:   else
19747:     {
19748:       int yytype = YYTRANSLATE (yychar);
19749:       YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
19750:       YYSIZE_T yysize = yysize0;
19751:       YYSIZE_T yysize1;
19752:       int yysize_overflow = 0;
19753:       enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
19754:       char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
19755:       int yyx;
19756: 
19757: # if 0
19758:       /* This is so xgettext sees the translatable formats that are
19759: 	 constructed on the fly.  */
19760:       YY_("syntax error, unexpected %s");
19761:       YY_("syntax error, unexpected %s, expecting %s");
19762:       YY_("syntax error, unexpected %s, expecting %s or %s");
19763:       YY_("syntax error, unexpected %s, expecting %s or %s or %s");
19764:       YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
19765: # endif
19766:       char *yyfmt;
19767:       char const *yyf;
19768:       static char const yyunexpected[] = "syntax error, unexpected %s";
19769:       static char const yyexpecting[] = ", expecting %s";
19770:       static char const yyor[] = " or %s";
19771:       char yyformat[sizeof yyunexpected
19772: 		    + sizeof yyexpecting - 1
19773: 		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
19774: 		       * (sizeof yyor - 1))];
19775:       char const *yyprefix = yyexpecting;
19776: 
19777:       /* Start YYX at -YYN if negative to avoid negative indexes in
19778: 	 YYCHECK.  */
19779:       int yyxbegin = yyn < 0 ? -yyn : 0;
19780: 
19781:       /* Stay within bounds of both yycheck and yytname.  */
19782:       int yychecklim = YYLAST - yyn + 1;
19783:       int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
19784:       int yycount = 1;
19785: 
19786:       yyarg[0] = yytname[yytype];
19787:       yyfmt = yystpcpy (yyformat, yyunexpected);
19788: 
19789:       for (yyx = yyxbegin; yyx < yyxend; ++yyx)
19790: 	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
19791: 	  {
19792: 	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
19793: 	      {
19794: 		yycount = 1;
19795: 		yysize = yysize0;
19796: 		yyformat[sizeof yyunexpected - 1] = '\0';
19797: 		break;
19798: 	      }
19799: 	    yyarg[yycount++] = yytname[yyx];
19800: 	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
19801: 	    yysize_overflow |= (yysize1 < yysize);
19802: 	    yysize = yysize1;
19803: 	    yyfmt = yystpcpy (yyfmt, yyprefix);
19804: 	    yyprefix = yyor;
19805: 	  }
19806: 
19807:       yyf = YY_(yyformat);
19808:       yysize1 = yysize + yystrlen (yyf);
19809:       yysize_overflow |= (yysize1 < yysize);
19810:       yysize = yysize1;
19811: 
19812:       if (yysize_overflow)
19813: 	return YYSIZE_MAXIMUM;
19814: 
19815:       if (yyresult)
19816: 	{
19817: 	  /* Avoid sprintf, as that infringes on the user's name space.
19818: 	     Don't have undefined behavior even if the translation
19819: 	     produced a string with the wrong number of "%s"s.  */
19820: 	  char *yyp = yyresult;
19821: 	  int yyi = 0;
19822: 	  while ((*yyp = *yyf) != '\0')
19823: 	    {
19824: 	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
19825: 		{
19826: 		  yyp += yytnamerr (yyp, yyarg[yyi++]);
19827: 		  yyf += 2;
19828: 		}
19829: 	      else
19830: 		{
19831: 		  yyp++;
19832: 		  yyf++;
19833: 		}
19834: 	    }
19835: 	}
19836:       return yysize;
19837:     }
19838: }
19839: #endif /* YYERROR_VERBOSE */
19840: 
19841: 
19842: /*-----------------------------------------------.
19843: | Release the memory associated to this symbol.  |
19844: `-----------------------------------------------*/
19845: 
19846: /*ARGSUSED*/
19847: #if (defined __STDC__ || defined __C99__FUNC__ \
19848:      || defined __cplusplus || defined _MSC_VER)
19849: static void
19850: yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
19851: #else
19852: static void
19853: yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
19854:     const char *yymsg;
19855:     int yytype;
19856:     YYSTYPE *yyvaluep;
19857:     YYLTYPE *yylocationp;
19858:     core_yyscan_t yyscanner;
19859: #endif
19860: {
19861:   YYUSE (yyvaluep);
19862:   YYUSE (yylocationp);
19863:   YYUSE (yyscanner);
19864: 
19865:   if (!yymsg)
19866:     yymsg = "Deleting";
19867:   YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);
19868: 
19869:   switch (yytype)
19870:     {
19871: 
19872:       default:
19873: 	break;
19874:     }
19875: }
19876: 
19877: 
19878: /* Prevent warnings from -Wmissing-prototypes.  */
19879: 
19880: #ifdef YYPARSE_PARAM
19881: #if defined __STDC__ || defined __cplusplus
19882: int yyparse (void *YYPARSE_PARAM);
19883: #else
19884: int yyparse ();
19885: #endif
19886: #else /* ! YYPARSE_PARAM */
19887: #if defined __STDC__ || defined __cplusplus
19888: int yyparse (core_yyscan_t yyscanner);
19889: #else
19890: int yyparse ();
19891: #endif
19892: #endif /* ! YYPARSE_PARAM */
19893: 
19894: 
19895: 
19896: 
19897: 
19898: 
19899: /*----------.
19900: | yyparse.  |
19901: `----------*/
19902: 
19903: #ifdef YYPARSE_PARAM
19904: #if (defined __STDC__ || defined __C99__FUNC__ \
19905:      || defined __cplusplus || defined _MSC_VER)
19906: int
19907: yyparse (void *YYPARSE_PARAM)
19908: #else
19909: int
19910: yyparse (YYPARSE_PARAM)
19911:     void *YYPARSE_PARAM;
19912: #endif
19913: #else /* ! YYPARSE_PARAM */
19914: #if (defined __STDC__ || defined __C99__FUNC__ \
19915:      || defined __cplusplus || defined _MSC_VER)
19916: int
19917: yyparse (core_yyscan_t yyscanner)
19918: #else
19919: int
19920: yyparse (yyscanner)
19921:     core_yyscan_t yyscanner;
19922: #endif
19923: #endif
19924: {
19925:   /* The look-ahead symbol.  */
19926: int yychar;
19927: 
19928: /* The semantic value of the look-ahead symbol.  */
19929: YYSTYPE yylval;
19930: 
19931: /* Number of syntax errors so far.  */
19932: int yynerrs;
19933: /* Location data for the look-ahead symbol.  */
19934: YYLTYPE yylloc;
19935: 
19936:   int yystate;
19937:   int yyn;
19938:   int yyresult;
19939:   /* Number of tokens to shift before error messages enabled.  */
19940:   int yyerrstatus;
19941:   /* Look-ahead token as an internal (translated) token number.  */
19942:   int yytoken = 0;
19943: #if YYERROR_VERBOSE
19944:   /* Buffer for error messages, and its allocated size.  */
19945:   char yymsgbuf[128];
19946:   char *yymsg = yymsgbuf;
19947:   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
19948: #endif
19949: 
19950:   /* Three stacks and their tools:
19951:      `yyss': related to states,
19952:      `yyvs': related to semantic values,
19953:      `yyls': related to locations.
19954: 
19955:      Refer to the stacks thru separate pointers, to allow yyoverflow
19956:      to reallocate them elsewhere.  */
19957: 
19958:   /* The state stack.  */
19959:   yytype_int16 yyssa[YYINITDEPTH];
19960:   yytype_int16 *yyss = yyssa;
19961:   yytype_int16 *yyssp;
19962: 
19963:   /* The semantic value stack.  */
19964:   YYSTYPE yyvsa[YYINITDEPTH];
19965:   YYSTYPE *yyvs = yyvsa;
19966:   YYSTYPE *yyvsp;
19967: 
19968:   /* The location stack.  */
19969:   YYLTYPE yylsa[YYINITDEPTH];
19970:   YYLTYPE *yyls = yylsa;
19971:   YYLTYPE *yylsp;
19972:   /* The locations where the error started and ended.  */
19973:   YYLTYPE yyerror_range[2];
19974: 
19975: #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))
19976: 
19977:   YYSIZE_T yystacksize = YYINITDEPTH;
19978: 
19979:   /* The variables used to return semantic value and location from the
19980:      action routines.  */
19981:   YYSTYPE yyval;
19982:   YYLTYPE yyloc;
19983: 
19984:   /* The number of symbols on the RHS of the reduced rule.
19985:      Keep to zero when no symbol should be popped.  */
19986:   int yylen = 0;
19987: 
19988:   YYDPRINTF ((stderr, "Starting parse\n"));
19989: 
19990:   yystate = 0;
19991:   yyerrstatus = 0;
19992:   yynerrs = 0; (void)yynerrs;
19993:   yychar = YYEMPTY;		/* Cause a token to be read.  */
19994: 
19995:   /* Initialize stack pointers.
19996:      Waste one element of value and location stack
19997:      so that they stay on the same level as the state stack.
19998:      The wasted elements are never initialized.  */
19999: 
20000:   yyssp = yyss;
20001:   yyvsp = yyvs;
20002:   yylsp = yyls;
20003: #if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
20004:   /* Initialize the default location before parsing starts.  */
20005:   yylloc.first_line   = yylloc.last_line   = 1;
20006:   yylloc.first_column = yylloc.last_column = 0;
20007: #endif
20008: 
20009:   goto yysetstate;
20010: 
20011: /*------------------------------------------------------------.
20012: | yynewstate -- Push a new state, which is found in yystate.  |
20013: `------------------------------------------------------------*/
20014:  yynewstate:
20015:   /* In all cases, when you get here, the value and location stacks
20016:      have just been pushed.  So pushing a state here evens the stacks.  */
20017:   yyssp++;
20018: 
20019:  yysetstate:
20020:   *yyssp = yystate;
20021: 
20022:   if (yyss + yystacksize - 1 <= yyssp)
20023:     {
20024:       /* Get the current used size of the three stacks, in elements.  */
20025:       YYSIZE_T yysize = yyssp - yyss + 1;
20026: 
20027: #ifdef yyoverflow
20028:       {
20029: 	/* Give user a chance to reallocate the stack.  Use copies of
20030: 	   these so that the &'s don't force the real ones into
20031: 	   memory.  */
20032: 	YYSTYPE *yyvs1 = yyvs;
20033: 	yytype_int16 *yyss1 = yyss;
20034: 	YYLTYPE *yyls1 = yyls;
20035: 
20036: 	/* Each stack pointer address is followed by the size of the
20037: 	   data in use in that stack, in bytes.  This used to be a
20038: 	   conditional around just the two extra args, but that might
20039: 	   be undefined if yyoverflow is a macro.  */
20040: 	yyoverflow (YY_("memory exhausted"),
20041: 		    &yyss1, yysize * sizeof (*yyssp),
20042: 		    &yyvs1, yysize * sizeof (*yyvsp),
20043: 		    &yyls1, yysize * sizeof (*yylsp),
20044: 		    &yystacksize);
20045: 	yyls = yyls1;
20046: 	yyss = yyss1;
20047: 	yyvs = yyvs1;
20048:       }
20049: #else /* no yyoverflow */
20050: # ifndef YYSTACK_RELOCATE
20051:       goto yyexhaustedlab;
20052: # else
20053:       /* Extend the stack our own way.  */
20054:       if (YYMAXDEPTH <= yystacksize)
20055: 	goto yyexhaustedlab;
20056:       yystacksize *= 2;
20057:       if (YYMAXDEPTH < yystacksize)
20058: 	yystacksize = YYMAXDEPTH;
20059: 
20060:       {
20061: 	yytype_int16 *yyss1 = yyss;
20062: 	union yyalloc *yyptr =
20063: 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
20064: 	if (! yyptr)
20065: 	  goto yyexhaustedlab;
20066: 	YYSTACK_RELOCATE (yyss);
20067: 	YYSTACK_RELOCATE (yyvs);
20068: 	YYSTACK_RELOCATE (yyls);
20069: #  undef YYSTACK_RELOCATE
20070: 	if (yyss1 != yyssa)
20071: 	  YYSTACK_FREE (yyss1);
20072:       }
20073: # endif
20074: #endif /* no yyoverflow */
20075: 
20076:       yyssp = yyss + yysize - 1;
20077:       yyvsp = yyvs + yysize - 1;
20078:       yylsp = yyls + yysize - 1;
20079: 
20080:       YYDPRINTF ((stderr, "Stack size increased to %lu\n",
20081: 		  (unsigned long int) yystacksize));
20082: 
20083:       if (yyss + yystacksize - 1 <= yyssp)
20084: 	YYABORT;
20085:     }
20086: 
20087:   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
20088: 
20089:   goto yybackup;
20090: 
20091: /*-----------.
20092: | yybackup.  |
20093: `-----------*/
20094: yybackup:
20095: 
20096:   /* Do appropriate processing given the current state.  Read a
20097:      look-ahead token if we need one and don't already have one.  */
20098: 
20099:   /* First try to decide what to do without reference to look-ahead token.  */
20100:   yyn = yypact[yystate];
20101:   if (yyn == YYPACT_NINF)
20102:     goto yydefault;
20103: 
20104:   /* Not known => get a look-ahead token if don't already have one.  */
20105: 
20106:   /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
20107:   if (yychar == YYEMPTY)
20108:     {
20109:       YYDPRINTF ((stderr, "Reading a token: "));
20110:       yychar = YYLEX;
20111:     }
20112: 
20113:   if (yychar <= YYEOF)
20114:     {
20115:       yychar = yytoken = YYEOF;
20116:       YYDPRINTF ((stderr, "Now at end of input.\n"));
20117:     }
20118:   else
20119:     {
20120:       yytoken = YYTRANSLATE (yychar);
20121:       YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
20122:     }
20123: 
20124:   /* If the proper action on seeing token YYTOKEN is to reduce or to
20125:      detect an error, take that action.  */
20126:   yyn += yytoken;
20127:   if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
20128:     goto yydefault;
20129:   yyn = yytable[yyn];
20130:   if (yyn <= 0)
20131:     {
20132:       if (yyn == 0 || yyn == YYTABLE_NINF)
20133: 	goto yyerrlab;
20134:       yyn = -yyn;
20135:       goto yyreduce;
20136:     }
20137: 
20138:   if (yyn == YYFINAL)
20139:     YYACCEPT;
20140: 
20141:   /* Count tokens shifted since error; after three, turn off error
20142:      status.  */
20143:   if (yyerrstatus)
20144:     yyerrstatus--;
20145: 
20146:   /* Shift the look-ahead token.  */
20147:   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
20148: 
20149:   /* Discard the shifted token unless it is eof.  */
20150:   if (yychar != YYEOF)
20151:     yychar = YYEMPTY;
20152: 
20153:   yystate = yyn;
20154:   *++yyvsp = yylval;
20155:   *++yylsp = yylloc;
20156:   goto yynewstate;
20157: 
20158: 
20159: /*-----------------------------------------------------------.
20160: | yydefault -- do the default action for the current state.  |
20161: `-----------------------------------------------------------*/
20162: yydefault:
20163:   yyn = yydefact[yystate];
20164:   if (yyn == 0)
20165:     goto yyerrlab;
20166:   goto yyreduce;
20167: 
20168: 
20169: /*-----------------------------.
20170: | yyreduce -- Do a reduction.  |
20171: `-----------------------------*/
20172: yyreduce:
20173:   /* yyn is the number of a rule to reduce with.  */
20174:   yylen = yyr2[yyn];
20175: 
20176:   /* If YYLEN is nonzero, implement the default value of the action:
20177:      `$$ = $1'.
20178: 
20179:      Otherwise, the following line sets YYVAL to garbage.
20180:      This behavior is undocumented and Bison
20181:      users should not rely upon it.  Assigning to YYVAL
20182:      unconditionally makes the parser a bit smaller, and it avoids a
20183:      GCC warning that YYVAL may be used uninitialized.  */
20184:   yyval = yyvsp[1-yylen];
20185: 
20186:   /* Default location.  */
20187:   YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
20188:   YY_REDUCE_PRINT (yyn);
20189:   switch (yyn)
20190:     {
20191:         case 2:
20192: #line 509 "third_party/libpg_query/grammar/grammar.y"
20193:     {
20194: 				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
20195: 			;}
20196:     break;
20197: 
20198:   case 3:
20199: #line 525 "third_party/libpg_query/grammar/grammar.y"
20200:     {
20201: 					if ((yyvsp[(1) - (3)].list) != NIL)
20202: 					{
20203: 						/* update length of previous stmt */
20204: 						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
20205: 					}
20206: 					if ((yyvsp[(3) - (3)].node) != NULL)
20207: 						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
20208: 					else
20209: 						(yyval.list) = (yyvsp[(1) - (3)].list);
20210: 				;}
20211:     break;
20212: 
20213:   case 4:
20214: #line 537 "third_party/libpg_query/grammar/grammar.y"
20215:     {
20216: 					if ((yyvsp[(1) - (1)].node) != NULL)
20217: 						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
20218: 					else
20219: 						(yyval.list) = NIL;
20220: 				;}
20221:     break;
20222: 
20223:   case 46:
20224: #line 587 "third_party/libpg_query/grammar/grammar.y"
20225:     { (yyval.node) = NULL; ;}
20226:     break;
20227: 
20228:   case 47:
20229: #line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
20230:     {
20231: 					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
20232: 					n->relation = (yyvsp[(3) - (4)].range);
20233: 					n->cmds = (yyvsp[(4) - (4)].list);
20234: 					n->relkind = PG_OBJECT_TABLE;
20235: 					n->missing_ok = false;
20236: 					(yyval.node) = (PGNode *)n;
20237: 				;}
20238:     break;
20239: 
20240:   case 48:
20241: #line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
20242:     {
20243: 					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
20244: 					n->relation = (yyvsp[(5) - (6)].range);
20245: 					n->cmds = (yyvsp[(6) - (6)].list);
20246: 					n->relkind = PG_OBJECT_TABLE;
20247: 					n->missing_ok = true;
20248: 					(yyval.node) = (PGNode *)n;
20249: 				;}
20250:     break;
20251: 
20252:   case 49:
20253: #line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
20254:     {
20255: 					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
20256: 					n->relation = (yyvsp[(3) - (4)].range);
20257: 					n->cmds = (yyvsp[(4) - (4)].list);
20258: 					n->relkind = PG_OBJECT_INDEX;
20259: 					n->missing_ok = false;
20260: 					(yyval.node) = (PGNode *)n;
20261: 				;}
20262:     break;
20263: 
20264:   case 50:
20265: #line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
20266:     {
20267: 					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
20268: 					n->relation = (yyvsp[(5) - (6)].range);
20269: 					n->cmds = (yyvsp[(6) - (6)].list);
20270: 					n->relkind = PG_OBJECT_INDEX;
20271: 					n->missing_ok = true;
20272: 					(yyval.node) = (PGNode *)n;
20273: 				;}
20274:     break;
20275: 
20276:   case 51:
20277: #line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
20278:     {
20279: 					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
20280: 					n->relation = (yyvsp[(3) - (4)].range);
20281: 					n->cmds = (yyvsp[(4) - (4)].list);
20282: 					n->relkind = PG_OBJECT_SEQUENCE;
20283: 					n->missing_ok = false;
20284: 					(yyval.node) = (PGNode *)n;
20285: 				;}
20286:     break;
20287: 
20288:   case 52:
20289: #line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
20290:     {
20291: 					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
20292: 					n->relation = (yyvsp[(5) - (6)].range);
20293: 					n->cmds = (yyvsp[(6) - (6)].list);
20294: 					n->relkind = PG_OBJECT_SEQUENCE;
20295: 					n->missing_ok = true;
20296: 					(yyval.node) = (PGNode *)n;
20297: 				;}
20298:     break;
20299: 
20300:   case 53:
20301: #line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
20302:     {
20303: 					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
20304: 					n->relation = (yyvsp[(3) - (4)].range);
20305: 					n->cmds = (yyvsp[(4) - (4)].list);
20306: 					n->relkind = PG_OBJECT_VIEW;
20307: 					n->missing_ok = false;
20308: 					(yyval.node) = (PGNode *)n;
20309: 				;}
20310:     break;
20311: 
20312:   case 54:
20313: #line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
20314:     {
20315: 					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
20316: 					n->relation = (yyvsp[(5) - (6)].range);
20317: 					n->cmds = (yyvsp[(6) - (6)].list);
20318: 					n->relkind = PG_OBJECT_VIEW;
20319: 					n->missing_ok = true;
20320: 					(yyval.node) = (PGNode *)n;
20321: 				;}
20322:     break;
20323: 
20324:   case 55:
20325: #line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
20326:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
20327:     break;
20328: 
20329:   case 56:
20330: #line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
20331:     { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
20332:     break;
20333: 
20334:   case 57:
20335: #line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
20336:     { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
20337:     break;
20338: 
20339:   case 58:
20340: #line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
20341:     { (yyval.node) = NULL; ;}
20342:     break;
20343: 
20344:   case 59:
20345: #line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
20346:     {
20347: 					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
20348: 				;}
20349:     break;
20350: 
20351:   case 60:
20352: #line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
20353:     {
20354: 					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
20355: 				;}
20356:     break;
20357: 
20358:   case 61:
20359: #line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
20360:     {
20361: 					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
20362: 						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
20363: 						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
20364: 						ereport(ERROR,
20365: 								(errcode(PG_ERRCODE_SYNTAX_ERROR),
20366: 								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
20367: 								 parser_errposition((yylsp[(2) - (2)]))));
20368: 					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
20369: 				;}
20370:     break;
20371: 
20372:   case 62:
20373: #line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
20374:     {
20375: 					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
20376: 				;}
20377:     break;
20378: 
20379:   case 63:
20380: #line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
20381:     {
20382: 					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
20383: 				;}
20384:     break;
20385: 
20386:   case 64:
20387: #line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
20388:     {
20389: 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
20390: 				;}
20391:     break;
20392: 
20393:   case 65:
20394: #line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
20395:     {
20396: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20397: 					n->subtype = PG_AT_AddColumn;
20398: 					n->def = (yyvsp[(2) - (2)].node);
20399: 					n->missing_ok = false;
20400: 					(yyval.node) = (PGNode *)n;
20401: 				;}
20402:     break;
20403: 
20404:   case 66:
20405: #line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
20406:     {
20407: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20408: 					n->subtype = PG_AT_AddColumn;
20409: 					n->def = (yyvsp[(5) - (5)].node);
20410: 					n->missing_ok = true;
20411: 					(yyval.node) = (PGNode *)n;
20412: 				;}
20413:     break;
20414: 
20415:   case 67:
20416: #line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
20417:     {
20418: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20419: 					n->subtype = PG_AT_AddColumn;
20420: 					n->def = (yyvsp[(3) - (3)].node);
20421: 					n->missing_ok = false;
20422: 					(yyval.node) = (PGNode *)n;
20423: 				;}
20424:     break;
20425: 
20426:   case 68:
20427: #line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
20428:     {
20429: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20430: 					n->subtype = PG_AT_AddColumn;
20431: 					n->def = (yyvsp[(6) - (6)].node);
20432: 					n->missing_ok = true;
20433: 					(yyval.node) = (PGNode *)n;
20434: 				;}
20435:     break;
20436: 
20437:   case 69:
20438: #line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
20439:     {
20440: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20441: 					n->subtype = PG_AT_ColumnDefault;
20442: 					n->name = (yyvsp[(3) - (4)].str);
20443: 					n->def = (yyvsp[(4) - (4)].node);
20444: 					(yyval.node) = (PGNode *)n;
20445: 				;}
20446:     break;
20447: 
20448:   case 70:
20449: #line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
20450:     {
20451: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20452: 					n->subtype = PG_AT_DropNotNull;
20453: 					n->name = (yyvsp[(3) - (6)].str);
20454: 					(yyval.node) = (PGNode *)n;
20455: 				;}
20456:     break;
20457: 
20458:   case 71:
20459: #line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
20460:     {
20461: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20462: 					n->subtype = PG_AT_SetNotNull;
20463: 					n->name = (yyvsp[(3) - (6)].str);
20464: 					(yyval.node) = (PGNode *)n;
20465: 				;}
20466:     break;
20467: 
20468:   case 72:
20469: #line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
20470:     {
20471: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20472: 					n->subtype = PG_AT_SetStatistics;
20473: 					n->name = (yyvsp[(3) - (6)].str);
20474: 					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
20475: 					(yyval.node) = (PGNode *)n;
20476: 				;}
20477:     break;
20478: 
20479:   case 73:
20480: #line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
20481:     {
20482: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20483: 					n->subtype = PG_AT_SetOptions;
20484: 					n->name = (yyvsp[(3) - (5)].str);
20485: 					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
20486: 					(yyval.node) = (PGNode *)n;
20487: 				;}
20488:     break;
20489: 
20490:   case 74:
20491: #line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
20492:     {
20493: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20494: 					n->subtype = PG_AT_ResetOptions;
20495: 					n->name = (yyvsp[(3) - (5)].str);
20496: 					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
20497: 					(yyval.node) = (PGNode *)n;
20498: 				;}
20499:     break;
20500: 
20501:   case 75:
20502: #line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
20503:     {
20504: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20505: 					n->subtype = PG_AT_SetStorage;
20506: 					n->name = (yyvsp[(3) - (6)].str);
20507: 					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
20508: 					(yyval.node) = (PGNode *)n;
20509: 				;}
20510:     break;
20511: 
20512:   case 76:
20513: #line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
20514:     {
20515: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20516: 					PGConstraint *c = makeNode(PGConstraint);
20517: 
20518: 					c->contype = PG_CONSTR_IDENTITY;
20519: 					c->generated_when = (yyvsp[(6) - (9)].ival);
20520: 					c->options = (yyvsp[(9) - (9)].list);
20521: 					c->location = (yylsp[(5) - (9)]);
20522: 
20523: 					n->subtype = PG_AT_AddIdentity;
20524: 					n->name = (yyvsp[(3) - (9)].str);
20525: 					n->def = (PGNode *) c;
20526: 
20527: 					(yyval.node) = (PGNode *)n;
20528: 				;}
20529:     break;
20530: 
20531:   case 77:
20532: #line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
20533:     {
20534: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20535: 					n->subtype = PG_AT_SetIdentity;
20536: 					n->name = (yyvsp[(3) - (4)].str);
20537: 					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
20538: 					(yyval.node) = (PGNode *)n;
20539: 				;}
20540:     break;
20541: 
20542:   case 78:
20543: #line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
20544:     {
20545: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20546: 					n->subtype = AT_DropIdentity;
20547: 					n->name = (yyvsp[(3) - (5)].str);
20548: 					n->missing_ok = false;
20549: 					(yyval.node) = (PGNode *)n;
20550: 				;}
20551:     break;
20552: 
20553:   case 79:
20554: #line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
20555:     {
20556: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20557: 					n->subtype = AT_DropIdentity;
20558: 					n->name = (yyvsp[(3) - (7)].str);
20559: 					n->missing_ok = true;
20560: 					(yyval.node) = (PGNode *)n;
20561: 				;}
20562:     break;
20563: 
20564:   case 80:
20565: #line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
20566:     {
20567: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20568: 					n->subtype = PG_AT_DropColumn;
20569: 					n->name = (yyvsp[(5) - (6)].str);
20570: 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
20571: 					n->missing_ok = true;
20572: 					(yyval.node) = (PGNode *)n;
20573: 				;}
20574:     break;
20575: 
20576:   case 81:
20577: #line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
20578:     {
20579: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20580: 					n->subtype = PG_AT_DropColumn;
20581: 					n->name = (yyvsp[(3) - (4)].str);
20582: 					n->behavior = (yyvsp[(4) - (4)].dbehavior);
20583: 					n->missing_ok = false;
20584: 					(yyval.node) = (PGNode *)n;
20585: 				;}
20586:     break;
20587: 
20588:   case 82:
20589: #line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
20590:     {
20591: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20592: 					PGColumnDef *def = makeNode(PGColumnDef);
20593: 					n->subtype = PG_AT_AlterColumnType;
20594: 					n->name = (yyvsp[(3) - (8)].str);
20595: 					n->def = (PGNode *) def;
20596: 					/* We only use these fields of the PGColumnDef node */
20597: 					def->typeName = (yyvsp[(6) - (8)].typnam);
20598: 					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
20599: 					def->raw_default = (yyvsp[(8) - (8)].node);
20600: 					def->location = (yylsp[(3) - (8)]);
20601: 					(yyval.node) = (PGNode *)n;
20602: 				;}
20603:     break;
20604: 
20605:   case 83:
20606: #line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
20607:     {
20608: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20609: 					n->subtype = PG_AT_AlterColumnGenericOptions;
20610: 					n->name = (yyvsp[(3) - (4)].str);
20611: 					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
20612: 					(yyval.node) = (PGNode *)n;
20613: 				;}
20614:     break;
20615: 
20616:   case 84:
20617: #line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
20618:     {
20619: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20620: 					n->subtype = PG_AT_AddConstraint;
20621: 					n->def = (yyvsp[(2) - (2)].node);
20622: 					(yyval.node) = (PGNode *)n;
20623: 				;}
20624:     break;
20625: 
20626:   case 85:
20627: #line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
20628:     {
20629: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20630: 					PGConstraint *c = makeNode(PGConstraint);
20631: 					n->subtype = PG_AT_AlterConstraint;
20632: 					n->def = (PGNode *) c;
20633: 					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
20634: 					c->conname = (yyvsp[(3) - (4)].str);
20635: 					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
20636: 									&c->deferrable,
20637: 									&c->initdeferred,
20638: 									NULL, NULL, yyscanner);
20639: 					(yyval.node) = (PGNode *)n;
20640: 				;}
20641:     break;
20642: 
20643:   case 86:
20644: #line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
20645:     {
20646: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20647: 					n->subtype = PG_AT_ValidateConstraint;
20648: 					n->name = (yyvsp[(3) - (3)].str);
20649: 					(yyval.node) = (PGNode *)n;
20650: 				;}
20651:     break;
20652: 
20653:   case 87:
20654: #line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
20655:     {
20656: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20657: 					n->subtype = PG_AT_DropConstraint;
20658: 					n->name = (yyvsp[(5) - (6)].str);
20659: 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
20660: 					n->missing_ok = true;
20661: 					(yyval.node) = (PGNode *)n;
20662: 				;}
20663:     break;
20664: 
20665:   case 88:
20666: #line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
20667:     {
20668: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20669: 					n->subtype = PG_AT_DropConstraint;
20670: 					n->name = (yyvsp[(3) - (4)].str);
20671: 					n->behavior = (yyvsp[(4) - (4)].dbehavior);
20672: 					n->missing_ok = false;
20673: 					(yyval.node) = (PGNode *)n;
20674: 				;}
20675:     break;
20676: 
20677:   case 89:
20678: #line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
20679:     {
20680: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20681: 					n->subtype = PG_AT_SetLogged;
20682: 					(yyval.node) = (PGNode *)n;
20683: 				;}
20684:     break;
20685: 
20686:   case 90:
20687: #line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
20688:     {
20689: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20690: 					n->subtype = PG_AT_SetUnLogged;
20691: 					(yyval.node) = (PGNode *)n;
20692: 				;}
20693:     break;
20694: 
20695:   case 91:
20696: #line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
20697:     {
20698: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20699: 					n->subtype = PG_AT_SetRelOptions;
20700: 					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
20701: 					(yyval.node) = (PGNode *)n;
20702: 				;}
20703:     break;
20704: 
20705:   case 92:
20706: #line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
20707:     {
20708: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20709: 					n->subtype = PG_AT_ResetRelOptions;
20710: 					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
20711: 					(yyval.node) = (PGNode *)n;
20712: 				;}
20713:     break;
20714: 
20715:   case 93:
20716: #line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
20717:     {
20718: 					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
20719: 					n->subtype = PG_AT_GenericOptions;
20720: 					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
20721: 					(yyval.node) = (PGNode *) n;
20722: 				;}
20723:     break;
20724: 
20725:   case 94:
20726: #line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
20727:     { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
20728:     break;
20729: 
20730:   case 95:
20731: #line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
20732:     { (yyval.node) = NULL; ;}
20733:     break;
20734: 
20735:   case 96:
20736: #line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
20737:     {
20738: 					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
20739: 				;}
20740:     break;
20741: 
20742:   case 97:
20743: #line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
20744:     {
20745: 					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
20746: 					(yyval.defelt)->defaction = PG_DEFELEM_SET;
20747: 				;}
20748:     break;
20749: 
20750:   case 98:
20751: #line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
20752:     {
20753: 					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
20754: 					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
20755: 				;}
20756:     break;
20757: 
20758:   case 99:
20759: #line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
20760:     {
20761: 					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
20762: 				;}
20763:     break;
20764: 
20765:   case 100:
20766: #line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
20767:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
20768:     break;
20769: 
20770:   case 101:
20771: #line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
20772:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
20773:     break;
20774: 
20775:   case 102:
20776: #line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
20777:     { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
20778:     break;
20779: 
20780:   case 103:
20781: #line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
20782:     { (yyval.ival) = 1; ;}
20783:     break;
20784: 
20785:   case 104:
20786: #line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
20787:     { (yyval.ival) = 0; ;}
20788:     break;
20789: 
20790:   case 105:
20791: #line 458 "third_party/libpg_query/grammar/statements/alter_table.y"
20792:     { (yyval.ival) = 0; ;}
20793:     break;
20794: 
20795:   case 106:
20796: #line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
20797:     {
20798: 						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
20799: 						n->name = (yyvsp[(2) - (2)].str);
20800: 						(yyval.node) = (PGNode *) n;
20801: 					;}
20802:     break;
20803: 
20804:   case 107:
20805: #line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
20806:     {
20807: 						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
20808: 						n->name = (yyvsp[(3) - (3)].str);
20809: 						(yyval.node) = (PGNode *) n;
20810: 					;}
20811:     break;
20812: 
20813:   case 108:
20814: #line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
20815:     {
20816: 						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
20817: 						n->name = NULL;
20818: 						(yyval.node) = (PGNode *) n;
20819: 					;}
20820:     break;
20821: 
20822:   case 109:
20823: #line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
20824:     {
20825: 						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
20826: 						n->name = NULL;
20827: 						(yyval.node) = (PGNode *) n;
20828: 					;}
20829:     break;
20830: 
20831:   case 110:
20832: #line 10 "third_party/libpg_query/grammar/statements/common.y"
20833:     {
20834: 					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
20835: 				;}
20836:     break;
20837: 
20838:   case 111:
20839: #line 14 "third_party/libpg_query/grammar/statements/common.y"
20840:     {
20841: 					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
20842: 					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
20843: 					switch (list_length((yyvsp[(2) - (2)].list)))
20844: 					{
20845: 						case 1:
20846: 							(yyval.range)->catalogname = NULL;
20847: 							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
20848: 							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
20849: 							break;
20850: 						case 2:
20851: 							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
20852: 							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
20853: 							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
20854: 							break;
20855: 						case 3:
20856: 						default:
20857: 							ereport(ERROR,
20858: 									(errcode(PG_ERRCODE_SYNTAX_ERROR),
20859: 									 errmsg("improper qualified name (too many dotted names): %s",
20860: 											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
20861: 									 parser_errposition((yylsp[(1) - (2)]))));
20862: 							break;
20863: 					}
20864: 				;}
20865:     break;
20866: 
20867:   case 112:
20868: #line 44 "third_party/libpg_query/grammar/statements/common.y"
20869:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
20870:     break;
20871: 
20872:   case 113:
20873: #line 45 "third_party/libpg_query/grammar/statements/common.y"
20874:     { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
20875:     break;
20876: 
20877:   case 114:
20878: #line 46 "third_party/libpg_query/grammar/statements/common.y"
20879:     { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
20880:     break;
20881: 
20882:   case 115:
20883: #line 50 "third_party/libpg_query/grammar/statements/common.y"
20884:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
20885:     break;
20886: 
20887:   case 116:
20888: #line 51 "third_party/libpg_query/grammar/statements/common.y"
20889:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
20890:     break;
20891: 
20892:   case 117:
20893: #line 55 "third_party/libpg_query/grammar/statements/common.y"
20894:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
20895:     break;
20896: 
20897:   case 118:
20898: #line 59 "third_party/libpg_query/grammar/statements/common.y"
20899:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
20900:     break;
20901: 
20902:   case 119:
20903: #line 60 "third_party/libpg_query/grammar/statements/common.y"
20904:     { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
20905:     break;
20906: 
20907:   case 120:
20908: #line 65 "third_party/libpg_query/grammar/statements/common.y"
20909:     {
20910: 					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
20911: 				;}
20912:     break;
20913: 
20914:   case 121:
20915: #line 70 "third_party/libpg_query/grammar/statements/common.y"
20916:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
20917:     break;
20918: 
20919:   case 122:
20920: #line 75 "third_party/libpg_query/grammar/statements/common.y"
20921:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
20922:     break;
20923: 
20924:   case 123:
20925: #line 76 "third_party/libpg_query/grammar/statements/common.y"
20926:     { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
20927:     break;
20928: 
20929:   case 124:
20930: #line 77 "third_party/libpg_query/grammar/statements/common.y"
20931:     { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
20932:     break;
20933: 
20934:   case 125:
20935: #line 78 "third_party/libpg_query/grammar/statements/common.y"
20936:     { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
20937:     break;
20938: 
20939:   case 126:
20940: #line 7 "third_party/libpg_query/grammar/statements/rename.y"
20941:     {
20942: 					PGRenameStmt *n = makeNode(PGRenameStmt);
20943: 					n->renameType = PG_OBJECT_SCHEMA;
20944: 					n->subname = (yyvsp[(3) - (6)].str);
20945: 					n->newname = (yyvsp[(6) - (6)].str);
20946: 					n->missing_ok = false;
20947: 					(yyval.node) = (PGNode *)n;
20948: 				;}
20949:     break;
20950: 
20951:   case 127:
20952: #line 16 "third_party/libpg_query/grammar/statements/rename.y"
20953:     {
20954: 					PGRenameStmt *n = makeNode(PGRenameStmt);
20955: 					n->renameType = PG_OBJECT_TABLE;
20956: 					n->relation = (yyvsp[(3) - (6)].range);
20957: 					n->subname = NULL;
20958: 					n->newname = (yyvsp[(6) - (6)].str);
20959: 					n->missing_ok = false;
20960: 					(yyval.node) = (PGNode *)n;
20961: 				;}
20962:     break;
20963: 
20964:   case 128:
20965: #line 26 "third_party/libpg_query/grammar/statements/rename.y"
20966:     {
20967: 					PGRenameStmt *n = makeNode(PGRenameStmt);
20968: 					n->renameType = PG_OBJECT_TABLE;
20969: 					n->relation = (yyvsp[(5) - (8)].range);
20970: 					n->subname = NULL;
20971: 					n->newname = (yyvsp[(8) - (8)].str);
20972: 					n->missing_ok = true;
20973: 					(yyval.node) = (PGNode *)n;
20974: 				;}
20975:     break;
20976: 
20977:   case 129:
20978: #line 36 "third_party/libpg_query/grammar/statements/rename.y"
20979:     {
20980: 					PGRenameStmt *n = makeNode(PGRenameStmt);
20981: 					n->renameType = PG_OBJECT_SEQUENCE;
20982: 					n->relation = (yyvsp[(3) - (6)].range);
20983: 					n->subname = NULL;
20984: 					n->newname = (yyvsp[(6) - (6)].str);
20985: 					n->missing_ok = false;
20986: 					(yyval.node) = (PGNode *)n;
20987: 				;}
20988:     break;
20989: 
20990:   case 130:
20991: #line 46 "third_party/libpg_query/grammar/statements/rename.y"
20992:     {
20993: 					PGRenameStmt *n = makeNode(PGRenameStmt);
20994: 					n->renameType = PG_OBJECT_SEQUENCE;
20995: 					n->relation = (yyvsp[(5) - (8)].range);
20996: 					n->subname = NULL;
20997: 					n->newname = (yyvsp[(8) - (8)].str);
20998: 					n->missing_ok = true;
20999: 					(yyval.node) = (PGNode *)n;
21000: 				;}
21001:     break;
21002: 
21003:   case 131:
21004: #line 56 "third_party/libpg_query/grammar/statements/rename.y"
21005:     {
21006: 					PGRenameStmt *n = makeNode(PGRenameStmt);
21007: 					n->renameType = PG_OBJECT_VIEW;
21008: 					n->relation = (yyvsp[(3) - (6)].range);
21009: 					n->subname = NULL;
21010: 					n->newname = (yyvsp[(6) - (6)].str);
21011: 					n->missing_ok = false;
21012: 					(yyval.node) = (PGNode *)n;
21013: 				;}
21014:     break;
21015: 
21016:   case 132:
21017: #line 66 "third_party/libpg_query/grammar/statements/rename.y"
21018:     {
21019: 					PGRenameStmt *n = makeNode(PGRenameStmt);
21020: 					n->renameType = PG_OBJECT_VIEW;
21021: 					n->relation = (yyvsp[(5) - (8)].range);
21022: 					n->subname = NULL;
21023: 					n->newname = (yyvsp[(8) - (8)].str);
21024: 					n->missing_ok = true;
21025: 					(yyval.node) = (PGNode *)n;
21026: 				;}
21027:     break;
21028: 
21029:   case 133:
21030: #line 76 "third_party/libpg_query/grammar/statements/rename.y"
21031:     {
21032: 					PGRenameStmt *n = makeNode(PGRenameStmt);
21033: 					n->renameType = PG_OBJECT_INDEX;
21034: 					n->relation = (yyvsp[(3) - (6)].range);
21035: 					n->subname = NULL;
21036: 					n->newname = (yyvsp[(6) - (6)].str);
21037: 					n->missing_ok = false;
21038: 					(yyval.node) = (PGNode *)n;
21039: 				;}
21040:     break;
21041: 
21042:   case 134:
21043: #line 86 "third_party/libpg_query/grammar/statements/rename.y"
21044:     {
21045: 					PGRenameStmt *n = makeNode(PGRenameStmt);
21046: 					n->renameType = PG_OBJECT_INDEX;
21047: 					n->relation = (yyvsp[(5) - (8)].range);
21048: 					n->subname = NULL;
21049: 					n->newname = (yyvsp[(8) - (8)].str);
21050: 					n->missing_ok = true;
21051: 					(yyval.node) = (PGNode *)n;
21052: 				;}
21053:     break;
21054: 
21055:   case 135:
21056: #line 96 "third_party/libpg_query/grammar/statements/rename.y"
21057:     {
21058: 					PGRenameStmt *n = makeNode(PGRenameStmt);
21059: 					n->renameType = PG_OBJECT_COLUMN;
21060: 					n->relationType = PG_OBJECT_TABLE;
21061: 					n->relation = (yyvsp[(3) - (8)].range);
21062: 					n->subname = (yyvsp[(6) - (8)].str);
21063: 					n->newname = (yyvsp[(8) - (8)].str);
21064: 					n->missing_ok = false;
21065: 					(yyval.node) = (PGNode *)n;
21066: 				;}
21067:     break;
21068: 
21069:   case 136:
21070: #line 107 "third_party/libpg_query/grammar/statements/rename.y"
21071:     {
21072: 					PGRenameStmt *n = makeNode(PGRenameStmt);
21073: 					n->renameType = PG_OBJECT_COLUMN;
21074: 					n->relationType = PG_OBJECT_TABLE;
21075: 					n->relation = (yyvsp[(5) - (10)].range);
21076: 					n->subname = (yyvsp[(8) - (10)].str);
21077: 					n->newname = (yyvsp[(10) - (10)].str);
21078: 					n->missing_ok = true;
21079: 					(yyval.node) = (PGNode *)n;
21080: 				;}
21081:     break;
21082: 
21083:   case 137:
21084: #line 118 "third_party/libpg_query/grammar/statements/rename.y"
21085:     {
21086: 					PGRenameStmt *n = makeNode(PGRenameStmt);
21087: 					n->renameType = PG_OBJECT_TABCONSTRAINT;
21088: 					n->relation = (yyvsp[(3) - (8)].range);
21089: 					n->subname = (yyvsp[(6) - (8)].str);
21090: 					n->newname = (yyvsp[(8) - (8)].str);
21091: 					n->missing_ok = false;
21092: 					(yyval.node) = (PGNode *)n;
21093: 				;}
21094:     break;
21095: 
21096:   case 138:
21097: #line 128 "third_party/libpg_query/grammar/statements/rename.y"
21098:     {
21099: 					PGRenameStmt *n = makeNode(PGRenameStmt);
21100: 					n->renameType = PG_OBJECT_TABCONSTRAINT;
21101: 					n->relation = (yyvsp[(5) - (10)].range);
21102: 					n->subname = (yyvsp[(8) - (10)].str);
21103: 					n->newname = (yyvsp[(10) - (10)].str);
21104: 					n->missing_ok = true;
21105: 					(yyval.node) = (PGNode *)n;
21106: 				;}
21107:     break;
21108: 
21109:   case 139:
21110: #line 140 "third_party/libpg_query/grammar/statements/rename.y"
21111:     { (yyval.ival) = COLUMN; ;}
21112:     break;
21113: 
21114:   case 140:
21115: #line 141 "third_party/libpg_query/grammar/statements/rename.y"
21116:     { (yyval.ival) = 0; ;}
21117:     break;
21118: 
21119:   case 141:
21120: #line 11 "third_party/libpg_query/grammar/statements/insert.y"
21121:     {
21122: 					(yyvsp[(7) - (9)].istmt)->relation = (yyvsp[(5) - (9)].range);
21123: 					(yyvsp[(7) - (9)].istmt)->onConflictAlias = (yyvsp[(3) - (9)].onconflictshorthand);
21124: 					(yyvsp[(7) - (9)].istmt)->onConflictClause = (yyvsp[(8) - (9)].onconflict);
21125: 					(yyvsp[(7) - (9)].istmt)->returningList = (yyvsp[(9) - (9)].list);
21126: 					(yyvsp[(7) - (9)].istmt)->withClause = (yyvsp[(1) - (9)].with);
21127: 					(yyvsp[(7) - (9)].istmt)->insert_column_order = (yyvsp[(6) - (9)].bynameorposition);
21128: 					(yyval.node) = (PGNode *) (yyvsp[(7) - (9)].istmt);
21129: 				;}
21130:     break;
21131: 
21132:   case 142:
21133: #line 24 "third_party/libpg_query/grammar/statements/insert.y"
21134:     {
21135: 					(yyval.istmt) = makeNode(PGInsertStmt);
21136: 					(yyval.istmt)->cols = NIL;
21137: 					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
21138: 				;}
21139:     break;
21140: 
21141:   case 143:
21142: #line 30 "third_party/libpg_query/grammar/statements/insert.y"
21143:     {
21144: 					(yyval.istmt) = makeNode(PGInsertStmt);
21145: 					(yyval.istmt)->cols = NIL;
21146: 					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
21147: 					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
21148: 				;}
21149:     break;
21150: 
21151:   case 144:
21152: #line 37 "third_party/libpg_query/grammar/statements/insert.y"
21153:     {
21154: 					(yyval.istmt) = makeNode(PGInsertStmt);
21155: 					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
21156: 					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
21157: 				;}
21158:     break;
21159: 
21160:   case 145:
21161: #line 43 "third_party/libpg_query/grammar/statements/insert.y"
21162:     {
21163: 					(yyval.istmt) = makeNode(PGInsertStmt);
21164: 					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
21165: 					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
21166: 					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
21167: 				;}
21168:     break;
21169: 
21170:   case 146:
21171: #line 50 "third_party/libpg_query/grammar/statements/insert.y"
21172:     {
21173: 					(yyval.istmt) = makeNode(PGInsertStmt);
21174: 					(yyval.istmt)->cols = NIL;
21175: 					(yyval.istmt)->selectStmt = NULL;
21176: 				;}
21177:     break;
21178: 
21179:   case 147:
21180: #line 60 "third_party/libpg_query/grammar/statements/insert.y"
21181:     {
21182: 					(yyval.range) = (yyvsp[(1) - (1)].range);
21183: 				;}
21184:     break;
21185: 
21186:   case 148:
21187: #line 64 "third_party/libpg_query/grammar/statements/insert.y"
21188:     {
21189: 					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
21190: 					(yyval.range) = (yyvsp[(1) - (3)].range);
21191: 				;}
21192:     break;
21193: 
21194:   case 149:
21195: #line 71 "third_party/libpg_query/grammar/statements/insert.y"
21196:     { (yyval.bynameorposition) = PG_INSERT_BY_NAME; ;}
21197:     break;
21198: 
21199:   case 150:
21200: #line 72 "third_party/libpg_query/grammar/statements/insert.y"
21201:     { (yyval.bynameorposition) = PG_INSERT_BY_POSITION; ;}
21202:     break;
21203: 
21204:   case 151:
21205: #line 73 "third_party/libpg_query/grammar/statements/insert.y"
21206:     { (yyval.bynameorposition) = PG_INSERT_BY_POSITION; ;}
21207:     break;
21208: 
21209:   case 152:
21210: #line 78 "third_party/libpg_query/grammar/statements/insert.y"
21211:     {
21212: 					(yyval.infer) = makeNode(PGInferClause);
21213: 					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
21214: 					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
21215: 					(yyval.infer)->conname = NULL;
21216: 					(yyval.infer)->location = (yylsp[(1) - (4)]);
21217: 				;}
21218:     break;
21219: 
21220:   case 153:
21221: #line 87 "third_party/libpg_query/grammar/statements/insert.y"
21222:     {
21223: 					(yyval.infer) = makeNode(PGInferClause);
21224: 					(yyval.infer)->indexElems = NIL;
21225: 					(yyval.infer)->whereClause = NULL;
21226: 					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
21227: 					(yyval.infer)->location = (yylsp[(1) - (3)]);
21228: 				;}
21229:     break;
21230: 
21231:   case 154:
21232: #line 95 "third_party/libpg_query/grammar/statements/insert.y"
21233:     {
21234: 					(yyval.infer) = NULL;
21235: 				;}
21236:     break;
21237: 
21238:   case 155:
21239: #line 102 "third_party/libpg_query/grammar/statements/insert.y"
21240:     { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
21241:     break;
21242: 
21243:   case 156:
21244: #line 103 "third_party/libpg_query/grammar/statements/insert.y"
21245:     { (yyval.with) = NULL; ;}
21246:     break;
21247: 
21248:   case 157:
21249: #line 109 "third_party/libpg_query/grammar/statements/insert.y"
21250:     {
21251: 					(yyval.target) = makeNode(PGResTarget);
21252: 					(yyval.target)->name = (yyvsp[(1) - (2)].str);
21253: 					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
21254: 					(yyval.target)->val = NULL;
21255: 					(yyval.target)->location = (yylsp[(1) - (2)]);
21256: 				;}
21257:     break;
21258: 
21259:   case 158:
21260: #line 121 "third_party/libpg_query/grammar/statements/insert.y"
21261:     {
21262: 					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
21263: 					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
21264: 				;}
21265:     break;
21266: 
21267:   case 159:
21268: #line 126 "third_party/libpg_query/grammar/statements/insert.y"
21269:     {
21270: 					int ncolumns = list_length((yyvsp[(2) - (5)].list));
21271: 					int i = 1;
21272: 					PGListCell *col_cell;
21273: 
21274: 					/* Create a PGMultiAssignRef source for each target */
21275: 					foreach(col_cell, (yyvsp[(2) - (5)].list))
21276: 					{
21277: 						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
21278: 						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);
21279: 
21280: 						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
21281: 						r->colno = i;
21282: 						r->ncolumns = ncolumns;
21283: 						res_col->val = (PGNode *) r;
21284: 						i++;
21285: 					}
21286: 
21287: 					(yyval.list) = (yyvsp[(2) - (5)].list);
21288: 				;}
21289:     break;
21290: 
21291:   case 160:
21292: #line 151 "third_party/libpg_query/grammar/statements/insert.y"
21293:     {
21294: 					(yyval.onconflictshorthand) = PG_ONCONFLICT_ALIAS_REPLACE;
21295: 				;}
21296:     break;
21297: 
21298:   case 161:
21299: #line 156 "third_party/libpg_query/grammar/statements/insert.y"
21300:     {
21301: 					(yyval.onconflictshorthand) = PG_ONCONFLICT_ALIAS_IGNORE;
21302: 				;}
21303:     break;
21304: 
21305:   case 162:
21306: #line 160 "third_party/libpg_query/grammar/statements/insert.y"
21307:     {
21308: 					(yyval.onconflictshorthand) = PG_ONCONFLICT_ALIAS_NONE;
21309: 				;}
21310:     break;
21311: 
21312:   case 163:
21313: #line 167 "third_party/libpg_query/grammar/statements/insert.y"
21314:     {
21315: 					(yyval.onconflict) = makeNode(PGOnConflictClause);
21316: 					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
21317: 					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
21318: 					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
21319: 					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
21320: 					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
21321: 				;}
21322:     break;
21323: 
21324:   case 164:
21325: #line 177 "third_party/libpg_query/grammar/statements/insert.y"
21326:     {
21327: 					(yyval.onconflict) = makeNode(PGOnConflictClause);
21328: 					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
21329: 					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
21330: 					(yyval.onconflict)->targetList = NIL;
21331: 					(yyval.onconflict)->whereClause = NULL;
21332: 					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
21333: 				;}
21334:     break;
21335: 
21336:   case 165:
21337: #line 186 "third_party/libpg_query/grammar/statements/insert.y"
21338:     {
21339: 					(yyval.onconflict) = NULL;
21340: 				;}
21341:     break;
21342: 
21343:   case 166:
21344: #line 193 "third_party/libpg_query/grammar/statements/insert.y"
21345:     {
21346: 					(yyval.ielem) = makeNode(PGIndexElem);
21347: 					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
21348: 					(yyval.ielem)->expr = NULL;
21349: 					(yyval.ielem)->indexcolname = NULL;
21350: 					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
21351: 					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
21352: 					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
21353: 					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
21354: 				;}
21355:     break;
21356: 
21357:   case 167:
21358: #line 204 "third_party/libpg_query/grammar/statements/insert.y"
21359:     {
21360: 					(yyval.ielem) = makeNode(PGIndexElem);
21361: 					(yyval.ielem)->name = NULL;
21362: 					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
21363: 					(yyval.ielem)->indexcolname = NULL;
21364: 					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
21365: 					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
21366: 					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
21367: 					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
21368: 				;}
21369:     break;
21370: 
21371:   case 168:
21372: #line 215 "third_party/libpg_query/grammar/statements/insert.y"
21373:     {
21374: 					(yyval.ielem) = makeNode(PGIndexElem);
21375: 					(yyval.ielem)->name = NULL;
21376: 					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
21377: 					(yyval.ielem)->indexcolname = NULL;
21378: 					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
21379: 					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
21380: 					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
21381: 					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
21382: 				;}
21383:     break;
21384: 
21385:   case 169:
21386: #line 229 "third_party/libpg_query/grammar/statements/insert.y"
21387:     { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
21388:     break;
21389: 
21390:   case 170:
21391: #line 230 "third_party/libpg_query/grammar/statements/insert.y"
21392:     { (yyval.list) = NIL; ;}
21393:     break;
21394: 
21395:   case 171:
21396: #line 236 "third_party/libpg_query/grammar/statements/insert.y"
21397:     { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
21398:     break;
21399: 
21400:   case 172:
21401: #line 237 "third_party/libpg_query/grammar/statements/insert.y"
21402:     { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
21403:     break;
21404: 
21405:   case 173:
21406: #line 242 "third_party/libpg_query/grammar/statements/insert.y"
21407:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
21408:     break;
21409: 
21410:   case 174:
21411: #line 243 "third_party/libpg_query/grammar/statements/insert.y"
21412:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
21413:     break;
21414: 
21415:   case 175:
21416: #line 249 "third_party/libpg_query/grammar/statements/insert.y"
21417:     { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
21418:     break;
21419: 
21420:   case 176:
21421: #line 250 "third_party/libpg_query/grammar/statements/insert.y"
21422:     { (yyval.list) = NIL; ;}
21423:     break;
21424: 
21425:   case 177:
21426: #line 254 "third_party/libpg_query/grammar/statements/insert.y"
21427:     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
21428:     break;
21429: 
21430:   case 178:
21431: #line 255 "third_party/libpg_query/grammar/statements/insert.y"
21432:     { (yyval.list) = NIL; ;}
21433:     break;
21434: 
21435:   case 179:
21436: #line 261 "third_party/libpg_query/grammar/statements/insert.y"
21437:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
21438:     break;
21439: 
21440:   case 180:
21441: #line 263 "third_party/libpg_query/grammar/statements/insert.y"
21442:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
21443:     break;
21444: 
21445:   case 181:
21446: #line 268 "third_party/libpg_query/grammar/statements/insert.y"
21447:     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
21448:     break;
21449: 
21450:   case 182:
21451: #line 269 "third_party/libpg_query/grammar/statements/insert.y"
21452:     { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
21453:     break;
21454: 
21455:   case 183:
21456: #line 273 "third_party/libpg_query/grammar/statements/insert.y"
21457:     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
21458:     break;
21459: 
21460:   case 184:
21461: #line 274 "third_party/libpg_query/grammar/statements/insert.y"
21462:     { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
21463:     break;
21464: 
21465:   case 185:
21466: #line 277 "third_party/libpg_query/grammar/statements/insert.y"
21467:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
21468:     break;
21469: 
21470:   case 186:
21471: #line 278 "third_party/libpg_query/grammar/statements/insert.y"
21472:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
21473:     break;
21474: 
21475:   case 187:
21476: #line 284 "third_party/libpg_query/grammar/statements/insert.y"
21477:     {
21478: 					(yyval.target) = makeNode(PGResTarget);
21479: 					(yyval.target)->name = (yyvsp[(1) - (2)].str);
21480: 					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
21481: 					(yyval.target)->val = NULL;	/* upper production sets this */
21482: 					(yyval.target)->location = (yylsp[(1) - (2)]);
21483: 				;}
21484:     break;
21485: 
21486:   case 188:
21487: #line 8 "third_party/libpg_query/grammar/statements/create_type.y"
21488:     {
21489: 					PGCreateTypeStmt *n = makeNode(PGCreateTypeStmt);
21490: 					n->typeName = (yyvsp[(3) - (6)].range);
21491: 					n->kind = PG_NEWTYPE_ENUM;
21492: 					n->query = (yyvsp[(6) - (6)].node);
21493: 					n->vals = NULL;
21494: 					(yyval.node) = (PGNode *)n;
21495: 				;}
21496:     break;
21497: 
21498:   case 189:
21499: #line 17 "third_party/libpg_query/grammar/statements/create_type.y"
21500:     {
21501: 					PGCreateTypeStmt *n = makeNode(PGCreateTypeStmt);
21502: 					n->typeName = (yyvsp[(3) - (8)].range);
21503: 					n->kind = PG_NEWTYPE_ENUM;
21504: 					n->vals = (yyvsp[(7) - (8)].list);
21505: 					n->query = NULL;
21506: 					(yyval.node) = (PGNode *)n;
21507: 				;}
21508:     break;
21509: 
21510:   case 190:
21511: #line 26 "third_party/libpg_query/grammar/statements/create_type.y"
21512:     {
21513: 					PGCreateTypeStmt *n = makeNode(PGCreateTypeStmt);
21514: 					n->typeName = (yyvsp[(3) - (5)].range);
21515: 					n->query = NULL;
21516: 					auto name = std::string(reinterpret_cast<PGValue *>((yyvsp[(5) - (5)].typnam)->names->tail->data.ptr_value)->val.str);
21517: 					if (name == "enum") {
21518: 						n->kind = PG_NEWTYPE_ENUM;
21519: 						n->vals = (yyvsp[(5) - (5)].typnam)->typmods;
21520: 					} else {
21521: 						n->kind = PG_NEWTYPE_ALIAS;
21522: 						n->ofType = (yyvsp[(5) - (5)].typnam);
21523: 					}
21524: 					(yyval.node) = (PGNode *)n;
21525: 				;}
21526:     break;
21527: 
21528:   case 191:
21529: #line 46 "third_party/libpg_query/grammar/statements/create_type.y"
21530:     { (yyval.list) = (yyvsp[(1) - (1)].list);;}
21531:     break;
21532: 
21533:   case 192:
21534: #line 47 "third_party/libpg_query/grammar/statements/create_type.y"
21535:     {(yyval.list) = NIL;;}
21536:     break;
21537: 
21538:   case 193:
21539: #line 51 "third_party/libpg_query/grammar/statements/create_type.y"
21540:     {
21541: 					(yyval.list) = list_make1(makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])));
21542: 				;}
21543:     break;
21544: 
21545:   case 194:
21546: #line 55 "third_party/libpg_query/grammar/statements/create_type.y"
21547:     {
21548: 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeStringConst((yyvsp[(3) - (3)].str), (yylsp[(3) - (3)])));
21549: 				;}
21550:     break;
21551: 
21552:   case 195:
21553: #line 8 "third_party/libpg_query/grammar/statements/pragma.y"
21554:     {
21555: 					PGPragmaStmt *n = makeNode(PGPragmaStmt);
21556: 					n->kind = PG_PRAGMA_TYPE_NOTHING;
21557: 					n->name = (yyvsp[(2) - (2)].str);
21558: 					(yyval.node) = (PGNode *)n;
21559: 				;}
21560:     break;
21561: 
21562:   case 196:
21563: #line 15 "third_party/libpg_query/grammar/statements/pragma.y"
21564:     {
21565: 					PGPragmaStmt *n = makeNode(PGPragmaStmt);
21566: 					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
21567: 					n->name = (yyvsp[(2) - (4)].str);
21568: 					n->args = (yyvsp[(4) - (4)].list);
21569: 					(yyval.node) = (PGNode *)n;
21570: 				;}
21571:     break;
21572: 
21573:   case 197:
21574: #line 23 "third_party/libpg_query/grammar/statements/pragma.y"
21575:     {
21576: 					PGPragmaStmt *n = makeNode(PGPragmaStmt);
21577: 					n->kind = PG_PRAGMA_TYPE_CALL;
21578: 					n->name = (yyvsp[(2) - (5)].str);
21579: 					n->args = (yyvsp[(4) - (5)].list);
21580: 					(yyval.node) = (PGNode *)n;
21581: 				;}
21582:     break;
21583: 
21584:   case 198:
21585: #line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
21586:     {
21587: 					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
21588: 					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
21589: 					n->sequence = (yyvsp[(4) - (5)].range);
21590: 					n->options = (yyvsp[(5) - (5)].list);
21591: 					n->ownerId = InvalidOid;
21592: 					n->onconflict = PG_ERROR_ON_CONFLICT;
21593: 					(yyval.node) = (PGNode *)n;
21594: 				;}
21595:     break;
21596: 
21597:   case 199:
21598: #line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
21599:     {
21600: 					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
21601: 					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
21602: 					n->sequence = (yyvsp[(7) - (8)].range);
21603: 					n->options = (yyvsp[(8) - (8)].list);
21604: 					n->ownerId = InvalidOid;
21605: 					n->onconflict = PG_IGNORE_ON_CONFLICT;
21606: 					(yyval.node) = (PGNode *)n;
21607: 				;}
21608:     break;
21609: 
21610:   case 200:
21611: #line 30 "third_party/libpg_query/grammar/statements/create_sequence.y"
21612:     {
21613: 					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
21614: 					(yyvsp[(6) - (7)].range)->relpersistence = (yyvsp[(4) - (7)].ival);
21615: 					n->sequence = (yyvsp[(6) - (7)].range);
21616: 					n->options = (yyvsp[(7) - (7)].list);
21617: 					n->ownerId = InvalidOid;
21618: 					n->onconflict = PG_REPLACE_ON_CONFLICT;
21619: 					(yyval.node) = (PGNode *)n;
21620: 				;}
21621:     break;
21622: 
21623:   case 201:
21624: #line 42 "third_party/libpg_query/grammar/statements/create_sequence.y"
21625:     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
21626:     break;
21627: 
21628:   case 202:
21629: #line 43 "third_party/libpg_query/grammar/statements/create_sequence.y"
21630:     { (yyval.list) = NIL; ;}
21631:     break;
21632: 
21633:   case 203:
21634: #line 8 "third_party/libpg_query/grammar/statements/create_secret.y"
21635:     {
21636: 					PGCreateSecretStmt *n = makeNode(PGCreateSecretStmt);
21637: 					n->persist_type = (yyvsp[(2) - (8)].str);
21638: 					n->secret_name = (yyvsp[(4) - (8)].str);
21639: 					n->secret_storage = (yyvsp[(5) - (8)].str);
21640: 					n->options = (yyvsp[(7) - (8)].list);
21641: 					n->onconflict = PG_ERROR_ON_CONFLICT;
21642: 					(yyval.node) = (PGNode *)n;
21643: 				;}
21644:     break;
21645: 
21646:   case 204:
21647: #line 18 "third_party/libpg_query/grammar/statements/create_secret.y"
21648:     {
21649: 					PGCreateSecretStmt *n = makeNode(PGCreateSecretStmt);
21650: 					n->persist_type = (yyvsp[(2) - (11)].str);
21651: 					n->secret_name = (yyvsp[(7) - (11)].str);
21652: 					n->secret_storage = (yyvsp[(8) - (11)].str);
21653: 					n->options = (yyvsp[(10) - (11)].list);
21654: 					n->onconflict = PG_IGNORE_ON_CONFLICT;
21655: 					(yyval.node) = (PGNode *)n;
21656: 				;}
21657:     break;
21658: 
21659:   case 205:
21660: #line 28 "third_party/libpg_query/grammar/statements/create_secret.y"
21661:     {
21662: 					PGCreateSecretStmt *n = makeNode(PGCreateSecretStmt);
21663: 					n->persist_type = (yyvsp[(4) - (10)].str);
21664: 					n->secret_name = (yyvsp[(6) - (10)].str);
21665: 					n->secret_storage = (yyvsp[(7) - (10)].str);
21666: 					n->options = (yyvsp[(9) - (10)].list);
21667: 					n->onconflict = PG_REPLACE_ON_CONFLICT;
21668: 					(yyval.node) = (PGNode *)n;
21669: 				;}
21670:     break;
21671: 
21672:   case 206:
21673: #line 40 "third_party/libpg_query/grammar/statements/create_secret.y"
21674:     { (yyval.str) = NULL; ;}
21675:     break;
21676: 
21677:   case 207:
21678: #line 41 "third_party/libpg_query/grammar/statements/create_secret.y"
21679:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
21680:     break;
21681: 
21682:   case 208:
21683: #line 45 "third_party/libpg_query/grammar/statements/create_secret.y"
21684:     { (yyval.str) = pstrdup("default"); ;}
21685:     break;
21686: 
21687:   case 209:
21688: #line 46 "third_party/libpg_query/grammar/statements/create_secret.y"
21689:     { (yyval.str) = pstrdup("temporary"); ;}
21690:     break;
21691: 
21692:   case 210:
21693: #line 47 "third_party/libpg_query/grammar/statements/create_secret.y"
21694:     { (yyval.str) = pstrdup("persistent"); ;}
21695:     break;
21696: 
21697:   case 211:
21698: #line 51 "third_party/libpg_query/grammar/statements/create_secret.y"
21699:     { (yyval.str) = pstrdup(""); ;}
21700:     break;
21701: 
21702:   case 212:
21703: #line 52 "third_party/libpg_query/grammar/statements/create_secret.y"
21704:     { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
21705:     break;
21706: 
21707:   case 213:
21708: #line 8 "third_party/libpg_query/grammar/statements/update_extensions.y"
21709:     {
21710: 					PGUpdateExtensionsStmt *n = makeNode(PGUpdateExtensionsStmt);
21711: 					n->extensions = (yyvsp[(4) - (4)].list);
21712: 
21713: 					if ((yyvsp[(1) - (4)].with)) {
21714:                           ereport(ERROR,
21715:                                   (errcode(PG_ERRCODE_SYNTAX_ERROR),
21716:                                    errmsg("Providing a with clause with an UPDATE EXTENSIONS statement is not allowed"),
21717:                                    parser_errposition((yylsp[(1) - (4)]))));
21718:                           break;
21719:                     }
21720: 
21721: 					(yyval.node) = (PGNode *)n;
21722: 				;}
21723:     break;
21724: 
21725:   case 214:
21726: #line 8 "third_party/libpg_query/grammar/statements/execute.y"
21727:     {
21728: 					PGExecuteStmt *n = makeNode(PGExecuteStmt);
21729: 					n->name = (yyvsp[(2) - (3)].str);
21730: 					n->params = (yyvsp[(3) - (3)].list);
21731: 					(yyval.node) = (PGNode *) n;
21732: 				;}
21733:     break;
21734: 
21735:   case 215:
21736: #line 16 "third_party/libpg_query/grammar/statements/execute.y"
21737:     {
21738: 					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
21739: 					PGExecuteStmt *n = makeNode(PGExecuteStmt);
21740: 					n->name = (yyvsp[(7) - (9)].str);
21741: 					n->params = (yyvsp[(8) - (9)].list);
21742: 					ctas->query = (PGNode *) n;
21743: 					ctas->into = (yyvsp[(4) - (9)].into);
21744: 					ctas->relkind = PG_OBJECT_TABLE;
21745: 					ctas->is_select_into = false;
21746: 					ctas->onconflict = PG_ERROR_ON_CONFLICT;
21747: 					/* cram additional flags into the PGIntoClause */
21748: 					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
21749: 					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
21750: 					(yyval.node) = (PGNode *) ctas;
21751: 				;}
21752:     break;
21753: 
21754:   case 216:
21755: #line 33 "third_party/libpg_query/grammar/statements/execute.y"
21756:     {
21757: 					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
21758: 					PGExecuteStmt *n = makeNode(PGExecuteStmt);
21759: 					n->name = (yyvsp[(10) - (12)].str);
21760: 					n->params = (yyvsp[(11) - (12)].list);
21761: 					ctas->query = (PGNode *) n;
21762: 					ctas->into = (yyvsp[(7) - (12)].into);
21763: 					ctas->relkind = PG_OBJECT_TABLE;
21764: 					ctas->is_select_into = false;
21765: 					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
21766: 					/* cram additional flags into the PGIntoClause */
21767: 					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
21768: 					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
21769: 					(yyval.node) = (PGNode *) ctas;
21770: 				;}
21771:     break;
21772: 
21773:   case 217:
21774: #line 52 "third_party/libpg_query/grammar/statements/execute.y"
21775:     {
21776: 					(yyval.node) = (yyvsp[(1) - (1)].node);
21777: 				;}
21778:     break;
21779: 
21780:   case 218:
21781: #line 56 "third_party/libpg_query/grammar/statements/execute.y"
21782:     {
21783: 					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
21784: 					na->name = (yyvsp[(1) - (3)].str);
21785: 					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
21786: 					na->argnumber = -1;		/* until determined */
21787: 					na->location = (yylsp[(1) - (3)]);
21788: 					(yyval.node) = (PGNode *) na;
21789: 				;}
21790:     break;
21791: 
21792:   case 219:
21793: #line 66 "third_party/libpg_query/grammar/statements/execute.y"
21794:     {
21795: 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
21796: 				;}
21797:     break;
21798: 
21799:   case 220:
21800: #line 70 "third_party/libpg_query/grammar/statements/execute.y"
21801:     {
21802: 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
21803: 				;}
21804:     break;
21805: 
21806:   case 221:
21807: #line 75 "third_party/libpg_query/grammar/statements/execute.y"
21808:     { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
21809:     break;
21810: 
21811:   case 222:
21812: #line 76 "third_party/libpg_query/grammar/statements/execute.y"
21813:     { (yyval.list) = NIL; ;}
21814:     break;
21815: 
21816:   case 223:
21817: #line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21818:     {
21819: 					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
21820: 					n->sequence = (yyvsp[(3) - (4)].range);
21821: 					n->options = (yyvsp[(4) - (4)].list);
21822: 					n->missing_ok = false;
21823: 					(yyval.node) = (PGNode *)n;
21824: 				;}
21825:     break;
21826: 
21827:   case 224:
21828: #line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21829:     {
21830: 					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
21831: 					n->sequence = (yyvsp[(5) - (6)].range);
21832: 					n->options = (yyvsp[(6) - (6)].list);
21833: 					n->missing_ok = true;
21834: 					(yyval.node) = (PGNode *)n;
21835: 				;}
21836:     break;
21837: 
21838:   case 225:
21839: #line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21840:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
21841:     break;
21842: 
21843:   case 226:
21844: #line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21845:     { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
21846:     break;
21847: 
21848:   case 227:
21849: #line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21850:     {;}
21851:     break;
21852: 
21853:   case 228:
21854: #line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21855:     {;}
21856:     break;
21857: 
21858:   case 229:
21859: #line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21860:     {;}
21861:     break;
21862: 
21863:   case 230:
21864: #line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21865:     { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
21866:     break;
21867: 
21868:   case 231:
21869: #line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21870:     { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
21871:     break;
21872: 
21873:   case 232:
21874: #line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21875:     {
21876: 					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
21877: 					doNegateFloat((yyval.value));
21878: 				;}
21879:     break;
21880: 
21881:   case 233:
21882: #line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21883:     { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
21884:     break;
21885: 
21886:   case 234:
21887: #line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21888:     {
21889: 					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
21890: 				;}
21891:     break;
21892: 
21893:   case 235:
21894: #line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21895:     {
21896: 					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
21897: 				;}
21898:     break;
21899: 
21900:   case 236:
21901: #line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21902:     {
21903: 					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
21904: 				;}
21905:     break;
21906: 
21907:   case 237:
21908: #line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21909:     {
21910: 					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
21911: 				;}
21912:     break;
21913: 
21914:   case 238:
21915: #line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21916:     {
21917: 					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
21918: 				;}
21919:     break;
21920: 
21921:   case 239:
21922: #line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21923:     {
21924: 					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
21925: 				;}
21926:     break;
21927: 
21928:   case 240:
21929: #line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21930:     {
21931: 					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
21932: 				;}
21933:     break;
21934: 
21935:   case 241:
21936: #line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21937:     {
21938: 					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
21939: 				;}
21940:     break;
21941: 
21942:   case 242:
21943: #line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21944:     {
21945: 					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
21946: 				;}
21947:     break;
21948: 
21949:   case 243:
21950: #line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21951:     {
21952: 					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
21953: 				;}
21954:     break;
21955: 
21956:   case 244:
21957: #line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21958:     {
21959: 					/* not documented, only used by pg_dump */
21960: 					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
21961: 				;}
21962:     break;
21963: 
21964:   case 245:
21965: #line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21966:     {
21967: 					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
21968: 				;}
21969:     break;
21970: 
21971:   case 246:
21972: #line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21973:     {
21974: 					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
21975: 				;}
21976:     break;
21977: 
21978:   case 247:
21979: #line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21980:     {
21981: 					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
21982: 				;}
21983:     break;
21984: 
21985:   case 248:
21986: #line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21987:     {;}
21988:     break;
21989: 
21990:   case 249:
21991: #line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21992:     {;}
21993:     break;
21994: 
21995:   case 250:
21996: #line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
21997:     { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
21998:     break;
21999: 
22000:   case 251:
22001: #line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
22002:     { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
22003:     break;
22004: 
22005:   case 252:
22006: #line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
22007:     { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
22008:     break;
22009: 
22010:   case 253:
22011: #line 8 "third_party/libpg_query/grammar/statements/drop_secret.y"
22012:     {
22013: 					PGDropSecretStmt *n = makeNode(PGDropSecretStmt);
22014: 					n->persist_type = (yyvsp[(2) - (5)].str);
22015: 					n->secret_name = (yyvsp[(4) - (5)].str);
22016: 					n->secret_storage = (yyvsp[(5) - (5)].str);
22017: 					n->missing_ok  = false;
22018: 					(yyval.node) = (PGNode *)n;
22019: 				;}
22020:     break;
22021: 
22022:   case 254:
22023: #line 17 "third_party/libpg_query/grammar/statements/drop_secret.y"
22024:     {
22025:                     PGDropSecretStmt *n = makeNode(PGDropSecretStmt);
22026:                     n->persist_type = (yyvsp[(2) - (7)].str);
22027:                     n->secret_name = (yyvsp[(6) - (7)].str);
22028:                     n->secret_storage = (yyvsp[(7) - (7)].str);
22029:                     n->missing_ok  = true;
22030:                     (yyval.node) = (PGNode *)n;
22031:                 ;}
22032:     break;
22033: 
22034:   case 255:
22035: #line 28 "third_party/libpg_query/grammar/statements/drop_secret.y"
22036:     { (yyval.str) = pstrdup(""); ;}
22037:     break;
22038: 
22039:   case 256:
22040: #line 29 "third_party/libpg_query/grammar/statements/drop_secret.y"
22041:     { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
22042:     break;
22043: 
22044:   case 257:
22045: #line 3 "third_party/libpg_query/grammar/statements/transaction.y"
22046:     {
22047: 					PGTransactionStmt *n = makeNode(PGTransactionStmt);
22048: 					n->kind = PG_TRANS_STMT_ROLLBACK;
22049: 					n->options = NIL;
22050: 					n->transaction_type = PG_TRANS_TYPE_DEFAULT;
22051: 					(yyval.node) = (PGNode *)n;
22052: 				;}
22053:     break;
22054: 
22055:   case 258:
22056: #line 11 "third_party/libpg_query/grammar/statements/transaction.y"
22057:     {
22058: 					PGTransactionStmt *n = makeNode(PGTransactionStmt);
22059: 					n->kind = PG_TRANS_STMT_BEGIN;
22060: 					n->transaction_type = (yyvsp[(3) - (3)].transactiontype);
22061: 					(yyval.node) = (PGNode *)n;
22062: 				;}
22063:     break;
22064: 
22065:   case 259:
22066: #line 18 "third_party/libpg_query/grammar/statements/transaction.y"
22067:     {
22068: 					PGTransactionStmt *n = makeNode(PGTransactionStmt);
22069: 					n->kind = PG_TRANS_STMT_START;
22070: 					n->transaction_type = (yyvsp[(3) - (3)].transactiontype);
22071: 					(yyval.node) = (PGNode *)n;
22072: 				;}
22073:     break;
22074: 
22075:   case 260:
22076: #line 25 "third_party/libpg_query/grammar/statements/transaction.y"
22077:     {
22078: 					PGTransactionStmt *n = makeNode(PGTransactionStmt);
22079: 					n->kind = PG_TRANS_STMT_COMMIT;
22080: 					n->options = NIL;
22081: 					n->transaction_type = PG_TRANS_TYPE_DEFAULT;
22082: 					(yyval.node) = (PGNode *)n;
22083: 				;}
22084:     break;
22085: 
22086:   case 261:
22087: #line 33 "third_party/libpg_query/grammar/statements/transaction.y"
22088:     {
22089: 					PGTransactionStmt *n = makeNode(PGTransactionStmt);
22090: 					n->kind = PG_TRANS_STMT_COMMIT;
22091: 					n->options = NIL;
22092: 					n->transaction_type = PG_TRANS_TYPE_DEFAULT;
22093: 					(yyval.node) = (PGNode *)n;
22094: 				;}
22095:     break;
22096: 
22097:   case 262:
22098: #line 41 "third_party/libpg_query/grammar/statements/transaction.y"
22099:     {
22100: 					PGTransactionStmt *n = makeNode(PGTransactionStmt);
22101: 					n->kind = PG_TRANS_STMT_ROLLBACK;
22102: 					n->options = NIL;
22103: 					n->transaction_type = PG_TRANS_TYPE_DEFAULT;
22104: 					(yyval.node) = (PGNode *)n;
22105: 				;}
22106:     break;
22107: 
22108:   case 263:
22109: #line 51 "third_party/libpg_query/grammar/statements/transaction.y"
22110:     {;}
22111:     break;
22112: 
22113:   case 264:
22114: #line 52 "third_party/libpg_query/grammar/statements/transaction.y"
22115:     {;}
22116:     break;
22117: 
22118:   case 265:
22119: #line 53 "third_party/libpg_query/grammar/statements/transaction.y"
22120:     {;}
22121:     break;
22122: 
22123:   case 266:
22124: #line 57 "third_party/libpg_query/grammar/statements/transaction.y"
22125:     { (yyval.transactiontype) = PG_TRANS_TYPE_READ_ONLY; ;}
22126:     break;
22127: 
22128:   case 267:
22129: #line 58 "third_party/libpg_query/grammar/statements/transaction.y"
22130:     { (yyval.transactiontype) = PG_TRANS_TYPE_READ_WRITE; ;}
22131:     break;
22132: 
22133:   case 268:
22134: #line 59 "third_party/libpg_query/grammar/statements/transaction.y"
22135:     { (yyval.transactiontype) = PG_TRANS_TYPE_DEFAULT; ;}
22136:     break;
22137: 
22138:   case 269:
22139: #line 3 "third_party/libpg_query/grammar/statements/use.y"
22140:     {
22141: 					PGUseStmt *n = makeNode(PGUseStmt);
22142: 					n->name = (yyvsp[(2) - (2)].range);
22143: 					(yyval.node) = (PGNode *) n;
22144: 				;}
22145:     break;
22146: 
22147:   case 270:
22148: #line 9 "third_party/libpg_query/grammar/statements/create.y"
22149:     {
22150: 					PGCreateStmt *n = makeNode(PGCreateStmt);
22151: 					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
22152: 					n->relation = (yyvsp[(4) - (9)].range);
22153: 					n->tableElts = (yyvsp[(6) - (9)].list);
22154: 					n->ofTypename = NULL;
22155: 					n->constraints = NIL;
22156: 					n->options = (yyvsp[(8) - (9)].list);
22157: 					n->oncommit = (yyvsp[(9) - (9)].oncommit);
22158: 					n->onconflict = PG_ERROR_ON_CONFLICT;
22159: 					(yyval.node) = (PGNode *)n;
22160: 				;}
22161:     break;
22162: 
22163:   case 271:
22164: #line 24 "third_party/libpg_query/grammar/statements/create.y"
22165:     {
22166: 					PGCreateStmt *n = makeNode(PGCreateStmt);
22167: 					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
22168: 					n->relation = (yyvsp[(7) - (12)].range);
22169: 					n->tableElts = (yyvsp[(9) - (12)].list);
22170: 					n->ofTypename = NULL;
22171: 					n->constraints = NIL;
22172: 					n->options = (yyvsp[(11) - (12)].list);
22173: 					n->oncommit = (yyvsp[(12) - (12)].oncommit);
22174: 					n->onconflict = PG_IGNORE_ON_CONFLICT;
22175: 					(yyval.node) = (PGNode *)n;
22176: 				;}
22177:     break;
22178: 
22179:   case 272:
22180: #line 39 "third_party/libpg_query/grammar/statements/create.y"
22181:     {
22182: 					PGCreateStmt *n = makeNode(PGCreateStmt);
22183: 					(yyvsp[(6) - (11)].range)->relpersistence = (yyvsp[(4) - (11)].ival);
22184: 					n->relation = (yyvsp[(6) - (11)].range);
22185: 					n->tableElts = (yyvsp[(8) - (11)].list);
22186: 					n->ofTypename = NULL;
22187: 					n->constraints = NIL;
22188: 					n->options = (yyvsp[(10) - (11)].list);
22189: 					n->oncommit = (yyvsp[(11) - (11)].oncommit);
22190: 					n->onconflict = PG_REPLACE_ON_CONFLICT;
22191: 					(yyval.node) = (PGNode *)n;
22192: 				;}
22193:     break;
22194: 
22195:   case 273:
22196: #line 56 "third_party/libpg_query/grammar/statements/create.y"
22197:     { (yyval.ival) = 0; ;}
22198:     break;
22199: 
22200:   case 274:
22201: #line 58 "third_party/libpg_query/grammar/statements/create.y"
22202:     {
22203: 					/*
22204: 					 * We must complain about conflicting options.
22205: 					 * We could, but choose not to, complain about redundant
22206: 					 * options (ie, where $2's bit is already set in $1).
22207: 					 */
22208: 					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);
22209: 
22210: 					/* special message for this case */
22211: 					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
22212: 						ereport(ERROR,
22213: 								(errcode(PG_ERRCODE_SYNTAX_ERROR),
22214: 								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
22215: 								 parser_errposition((yylsp[(2) - (2)]))));
22216: 					/* generic message for other conflicts */
22217: 					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
22218: 						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
22219: 						ereport(ERROR,
22220: 								(errcode(PG_ERRCODE_SYNTAX_ERROR),
22221: 								 errmsg("conflicting constraint properties"),
22222: 								 parser_errposition((yylsp[(2) - (2)]))));
22223: 					(yyval.ival) = newspec;
22224: 				;}
22225:     break;
22226: 
22227:   case 275:
22228: #line 84 "third_party/libpg_query/grammar/statements/create.y"
22229:     { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
22230:     break;
22231: 
22232:   case 276:
22233: #line 85 "third_party/libpg_query/grammar/statements/create.y"
22234:     { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
22235:     break;
22236: 
22237:   case 277:
22238: #line 86 "third_party/libpg_query/grammar/statements/create.y"
22239:     { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
22240:     break;
22241: 
22242:   case 278:
22243: #line 87 "third_party/libpg_query/grammar/statements/create.y"
22244:     { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
22245:     break;
22246: 
22247:   case 279:
22248: #line 88 "third_party/libpg_query/grammar/statements/create.y"
22249:     { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
22250:     break;
22251: 
22252:   case 280:
22253: #line 89 "third_party/libpg_query/grammar/statements/create.y"
22254:     { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
22255:     break;
22256: 
22257:   case 281:
22258: #line 93 "third_party/libpg_query/grammar/statements/create.y"
22259:     { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
22260:     break;
22261: 
22262:   case 282:
22263: #line 94 "third_party/libpg_query/grammar/statements/create.y"
22264:     { (yyval.list) = NIL; ;}
22265:     break;
22266: 
22267:   case 283:
22268: #line 99 "third_party/libpg_query/grammar/statements/create.y"
22269:     { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
22270:     break;
22271: 
22272:   case 284:
22273: #line 104 "third_party/libpg_query/grammar/statements/create.y"
22274:     { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
22275:     break;
22276: 
22277:   case 285:
22278: #line 105 "third_party/libpg_query/grammar/statements/create.y"
22279:     { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
22280:     break;
22281: 
22282:   case 286:
22283: #line 106 "third_party/libpg_query/grammar/statements/create.y"
22284:     { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
22285:     break;
22286: 
22287:   case 287:
22288: #line 107 "third_party/libpg_query/grammar/statements/create.y"
22289:     { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
22290:     break;
22291: 
22292:   case 288:
22293: #line 108 "third_party/libpg_query/grammar/statements/create.y"
22294:     { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
22295:     break;
22296: 
22297:   case 289:
22298: #line 114 "third_party/libpg_query/grammar/statements/create.y"
22299:     {
22300: 					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
22301: 					n->conname = (yyvsp[(2) - (3)].str);
22302: 					n->location = (yylsp[(1) - (3)]);
22303: 					(yyval.node) = (PGNode *) n;
22304: 				;}
22305:     break;
22306: 
22307:   case 290:
22308: #line 120 "third_party/libpg_query/grammar/statements/create.y"
22309:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
22310:     break;
22311: 
22312:   case 291:
22313: #line 121 "third_party/libpg_query/grammar/statements/create.y"
22314:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
22315:     break;
22316: 
22317:   case 292:
22318: #line 123 "third_party/libpg_query/grammar/statements/create.y"
22319:     {
22320: 					/*
22321: 					 * Note: the PGCollateClause is momentarily included in
22322: 					 * the list built by ColQualList, but we split it out
22323: 					 * again in SplitColQualList.
22324: 					 */
22325: 					PGCollateClause *n = makeNode(PGCollateClause);
22326: 					n->arg = NULL;
22327: 					n->collname = (yyvsp[(2) - (2)].list);
22328: 					n->location = (yylsp[(1) - (2)]);
22329: 					(yyval.node) = (PGNode *) n;
22330: 				;}
22331:     break;
22332: 
22333:   case 293:
22334: #line 140 "third_party/libpg_query/grammar/statements/create.y"
22335:     {
22336: 					PGConstraint *n = makeNode(PGConstraint);
22337: 					n->contype = PG_CONSTR_NOTNULL;
22338: 					n->location = (yylsp[(1) - (2)]);
22339: 					(yyval.node) = (PGNode *)n;
22340: 				;}
22341:     break;
22342: 
22343:   case 294:
22344: #line 147 "third_party/libpg_query/grammar/statements/create.y"
22345:     {
22346: 					PGConstraint *n = makeNode(PGConstraint);
22347: 					n->contype = PG_CONSTR_NULL;
22348: 					n->location = (yylsp[(1) - (1)]);
22349: 					(yyval.node) = (PGNode *)n;
22350: 				;}
22351:     break;
22352: 
22353:   case 295:
22354: #line 154 "third_party/libpg_query/grammar/statements/create.y"
22355:     {
22356: 					PGConstraint *n = makeNode(PGConstraint);
22357: 					n->contype = PG_CONSTR_UNIQUE;
22358: 					n->location = (yylsp[(1) - (2)]);
22359: 					n->keys = NULL;
22360: 					n->options = (yyvsp[(2) - (2)].list);
22361: 					n->indexname = NULL;
22362: 					(yyval.node) = (PGNode *)n;
22363: 				;}
22364:     break;
22365: 
22366:   case 296:
22367: #line 164 "third_party/libpg_query/grammar/statements/create.y"
22368:     {
22369: 					PGConstraint *n = makeNode(PGConstraint);
22370: 					n->contype = PG_CONSTR_PRIMARY;
22371: 					n->location = (yylsp[(1) - (3)]);
22372: 					n->keys = NULL;
22373: 					n->options = (yyvsp[(3) - (3)].list);
22374: 					n->indexname = NULL;
22375: 					(yyval.node) = (PGNode *)n;
22376: 				;}
22377:     break;
22378: 
22379:   case 297:
22380: #line 174 "third_party/libpg_query/grammar/statements/create.y"
22381:     {
22382: 					PGConstraint *n = makeNode(PGConstraint);
22383: 					n->contype = PG_CONSTR_CHECK;
22384: 					n->location = (yylsp[(1) - (5)]);
22385: 					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
22386: 					n->raw_expr = (yyvsp[(3) - (5)].node);
22387: 					n->cooked_expr = NULL;
22388: 					n->skip_validation = false;
22389: 					n->initially_valid = true;
22390: 					(yyval.node) = (PGNode *)n;
22391: 				;}
22392:     break;
22393: 
22394:   case 298:
22395: #line 186 "third_party/libpg_query/grammar/statements/create.y"
22396:     {
22397: 					PGConstraint *n = makeNode(PGConstraint);
22398: 					n->contype = PG_CONSTR_COMPRESSION;
22399: 					n->location = (yylsp[(1) - (3)]);
22400: 					n->compression_name = (yyvsp[(3) - (3)].str);
22401: 					(yyval.node) = (PGNode *)n;
22402: 				;}
22403:     break;
22404: 
22405:   case 299:
22406: #line 194 "third_party/libpg_query/grammar/statements/create.y"
22407:     {
22408: 					PGConstraint *n = makeNode(PGConstraint);
22409: 					n->contype = PG_CONSTR_DEFAULT;
22410: 					n->location = (yylsp[(1) - (2)]);
22411: 					n->raw_expr = (yyvsp[(2) - (2)].node);
22412: 					n->cooked_expr = NULL;
22413: 					(yyval.node) = (PGNode *)n;
22414: 				;}
22415:     break;
22416: 
22417:   case 300:
22418: #line 203 "third_party/libpg_query/grammar/statements/create.y"
22419:     {
22420: 					PGConstraint *n = makeNode(PGConstraint);
22421: 					n->contype = PG_CONSTR_FOREIGN;
22422: 					n->location = (yylsp[(1) - (5)]);
22423: 					n->pktable			= (yyvsp[(2) - (5)].range);
22424: 					n->fk_attrs			= NIL;
22425: 					n->pk_attrs			= (yyvsp[(3) - (5)].list);
22426: 					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
22427: 					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
22428: 					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
22429: 					n->skip_validation  = false;
22430: 					n->initially_valid  = true;
22431: 					(yyval.node) = (PGNode *)n;
22432: 				;}
22433:     break;
22434: 
22435:   case 301:
22436: #line 220 "third_party/libpg_query/grammar/statements/create.y"
22437:     { (yyval.constr) = PG_CONSTR_GENERATED_VIRTUAL; ;}
22438:     break;
22439: 
22440:   case 302:
22441: #line 221 "third_party/libpg_query/grammar/statements/create.y"
22442:     { (yyval.constr) = PG_CONSTR_GENERATED_STORED; ;}
22443:     break;
22444: 
22445:   case 303:
22446: #line 225 "third_party/libpg_query/grammar/statements/create.y"
22447:     { (yyval.constr) = (yyvsp[(1) - (1)].constr); ;}
22448:     break;
22449: 
22450:   case 304:
22451: #line 226 "third_party/libpg_query/grammar/statements/create.y"
22452:     { (yyval.constr) = PG_CONSTR_GENERATED_VIRTUAL; ;}
22453:     break;
22454: 
22455:   case 305:
22456: #line 231 "third_party/libpg_query/grammar/statements/create.y"
22457:     {
22458: 					PGConstraint *n = makeNode(PGConstraint);
22459: 					n->contype = PG_CONSTR_IDENTITY;
22460: 					n->generated_when = (yyvsp[(2) - (5)].ival);
22461: 					n->options = (yyvsp[(5) - (5)].list);
22462: 					n->location = (yylsp[(1) - (5)]);
22463: 					(yyval.node) = (PGNode *)n;
22464: 				;}
22465:     break;
22466: 
22467:   case 306:
22468: #line 240 "third_party/libpg_query/grammar/statements/create.y"
22469:     {
22470: 					PGConstraint *n = makeNode(PGConstraint);
22471: 					n->contype = (yyvsp[(7) - (7)].constr);
22472: 					n->generated_when = (yyvsp[(2) - (7)].ival);
22473: 					n->raw_expr = (yyvsp[(5) - (7)].node);
22474: 					n->cooked_expr = NULL;
22475: 					n->location = (yylsp[(1) - (7)]);
22476: 
22477: 					/*
22478: 					 * Can't do this in the grammar because of shift/reduce
22479: 					 * conflicts.  (IDENTITY allows both ALWAYS and BY
22480: 					 * DEFAULT, but generated columns only allow ALWAYS.)  We
22481: 					 * can also give a more useful error message and location.
22482: 					 */
22483: 					if ((yyvsp[(2) - (7)].ival) != PG_ATTRIBUTE_IDENTITY_ALWAYS)
22484: 						ereport(ERROR,
22485: 								(errcode(PG_ERRCODE_SYNTAX_ERROR),
22486: 								 errmsg("for a generated column, GENERATED ALWAYS must be specified"),
22487: 								 parser_errposition((yylsp[(2) - (7)]))));
22488: 
22489: 					(yyval.node) = (PGNode *)n;
22490: 				;}
22491:     break;
22492: 
22493:   case 307:
22494: #line 263 "third_party/libpg_query/grammar/statements/create.y"
22495:     {
22496: 					PGConstraint *n = makeNode(PGConstraint);
22497: 					n->contype = (yyvsp[(5) - (5)].constr);
22498: 					n->generated_when = PG_ATTRIBUTE_IDENTITY_ALWAYS;
22499: 					n->raw_expr = (yyvsp[(3) - (5)].node);
22500: 					n->cooked_expr = NULL;
22501: 					n->location = (yylsp[(1) - (5)]);
22502: 					(yyval.node) = (PGNode *)n;
22503: 				;}
22504:     break;
22505: 
22506:   case 308:
22507: #line 277 "third_party/libpg_query/grammar/statements/create.y"
22508:     {
22509: 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
22510: 				;}
22511:     break;
22512: 
22513:   case 309:
22514: #line 283 "third_party/libpg_query/grammar/statements/create.y"
22515:     { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
22516:     break;
22517: 
22518:   case 310:
22519: #line 289 "third_party/libpg_query/grammar/statements/create.y"
22520:     { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
22521:     break;
22522: 
22523:   case 311:
22524: #line 291 "third_party/libpg_query/grammar/statements/create.y"
22525:     { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
22526:     break;
22527: 
22528:   case 312:
22529: #line 293 "third_party/libpg_query/grammar/statements/create.y"
22530:     { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
22531:     break;
22532: 
22533:   case 313:
22534: #line 295 "third_party/libpg_query/grammar/statements/create.y"
22535:     { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
22536:     break;
22537: 
22538:   case 314:
22539: #line 297 "third_party/libpg_query/grammar/statements/create.y"
22540:     { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
22541:     break;
22542: 
22543:   case 315:
22544: #line 300 "third_party/libpg_query/grammar/statements/create.y"
22545:     { (yyval.oncommit) = ONCOMMIT_DROP; ;}
22546:     break;
22547: 
22548:   case 316:
22549: #line 301 "third_party/libpg_query/grammar/statements/create.y"
22550:     { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
22551:     break;
22552: 
22553:   case 317:
22554: #line 302 "third_party/libpg_query/grammar/statements/create.y"
22555:     { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
22556:     break;
22557: 
22558:   case 318:
22559: #line 303 "third_party/libpg_query/grammar/statements/create.y"
22560:     { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
22561:     break;
22562: 
22563:   case 319:
22564: #line 308 "third_party/libpg_query/grammar/statements/create.y"
22565:     { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
22566:     break;
22567: 
22568:   case 320:
22569: #line 312 "third_party/libpg_query/grammar/statements/create.y"
22570:     {  (yyval.boolean) = true; ;}
22571:     break;
22572: 
22573:   case 321:
22574: #line 313 "third_party/libpg_query/grammar/statements/create.y"
22575:     {  (yyval.boolean) = false; ;}
22576:     break;
22577: 
22578:   case 322:
22579: #line 319 "third_party/libpg_query/grammar/statements/create.y"
22580:     {
22581: 					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
22582: 					n->conname = (yyvsp[(2) - (3)].str);
22583: 					n->location = (yylsp[(1) - (3)]);
22584: 					(yyval.node) = (PGNode *) n;
22585: 				;}
22586:     break;
22587: 
22588:   case 323:
22589: #line 325 "third_party/libpg_query/grammar/statements/create.y"
22590:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
22591:     break;
22592: 
22593:   case 324:
22594: #line 330 "third_party/libpg_query/grammar/statements/create.y"
22595:     { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
22596:     break;
22597: 
22598:   case 325:
22599: #line 331 "third_party/libpg_query/grammar/statements/create.y"
22600:     { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
22601:     break;
22602: 
22603:   case 326:
22604: #line 332 "third_party/libpg_query/grammar/statements/create.y"
22605:     { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
22606:     break;
22607: 
22608:   case 327:
22609: #line 333 "third_party/libpg_query/grammar/statements/create.y"
22610:     { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
22611:     break;
22612: 
22613:   case 328:
22614: #line 334 "third_party/libpg_query/grammar/statements/create.y"
22615:     { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
22616:     break;
22617: 
22618:   case 329:
22619: #line 335 "third_party/libpg_query/grammar/statements/create.y"
22620:     { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
22621:     break;
22622: 
22623:   case 330:
22624: #line 336 "third_party/libpg_query/grammar/statements/create.y"
22625:     { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
22626:     break;
22627: 
22628:   case 331:
22629: #line 337 "third_party/libpg_query/grammar/statements/create.y"
22630:     { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
22631:     break;
22632: 
22633:   case 332:
22634: #line 343 "third_party/libpg_query/grammar/statements/create.y"
22635:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
22636:     break;
22637: 
22638:   case 333:
22639: #line 344 "third_party/libpg_query/grammar/statements/create.y"
22640:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
22641:     break;
22642: 
22643:   case 334:
22644: #line 348 "third_party/libpg_query/grammar/statements/create.y"
22645:     { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
22646:     break;
22647: 
22648:   case 335:
22649: #line 354 "third_party/libpg_query/grammar/statements/create.y"
22650:     {
22651: 					PGConstraint *n = makeNode(PGConstraint);
22652: 					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
22653: 					n->location = (yylsp[(1) - (1)]);
22654: 					(yyval.node) = (PGNode *)n;
22655: 				;}
22656:     break;
22657: 
22658:   case 336:
22659: #line 361 "third_party/libpg_query/grammar/statements/create.y"
22660:     {
22661: 					PGConstraint *n = makeNode(PGConstraint);
22662: 					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
22663: 					n->location = (yylsp[(1) - (2)]);
22664: 					(yyval.node) = (PGNode *)n;
22665: 				;}
22666:     break;
22667: 
22668:   case 337:
22669: #line 368 "third_party/libpg_query/grammar/statements/create.y"
22670:     {
22671: 					PGConstraint *n = makeNode(PGConstraint);
22672: 					n->contype = PG_CONSTR_ATTR_DEFERRED;
22673: 					n->location = (yylsp[(1) - (2)]);
22674: 					(yyval.node) = (PGNode *)n;
22675: 				;}
22676:     break;
22677: 
22678:   case 338:
22679: #line 375 "third_party/libpg_query/grammar/statements/create.y"
22680:     {
22681: 					PGConstraint *n = makeNode(PGConstraint);
22682: 					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
22683: 					n->location = (yylsp[(1) - (2)]);
22684: 					(yyval.node) = (PGNode *)n;
22685: 				;}
22686:     break;
22687: 
22688:   case 339:
22689: #line 386 "third_party/libpg_query/grammar/statements/create.y"
22690:     { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
22691:     break;
22692: 
22693:   case 340:
22694: #line 387 "third_party/libpg_query/grammar/statements/create.y"
22695:     { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
22696:     break;
22697: 
22698:   case 341:
22699: #line 388 "third_party/libpg_query/grammar/statements/create.y"
22700:     { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
22701:     break;
22702: 
22703:   case 342:
22704: #line 389 "third_party/libpg_query/grammar/statements/create.y"
22705:     { (yyval.list) = NIL; ;}
22706:     break;
22707: 
22708:   case 343:
22709: #line 393 "third_party/libpg_query/grammar/statements/create.y"
22710:     { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
22711:     break;
22712: 
22713:   case 344:
22714: #line 398 "third_party/libpg_query/grammar/statements/create.y"
22715:     { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
22716:     break;
22717: 
22718:   case 345:
22719: #line 399 "third_party/libpg_query/grammar/statements/create.y"
22720:     { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
22721:     break;
22722: 
22723:   case 346:
22724: #line 400 "third_party/libpg_query/grammar/statements/create.y"
22725:     { (yyval.ival) = 0; ;}
22726:     break;
22727: 
22728:   case 347:
22729: #line 405 "third_party/libpg_query/grammar/statements/create.y"
22730:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
22731:     break;
22732: 
22733:   case 348:
22734: #line 410 "third_party/libpg_query/grammar/statements/create.y"
22735:     { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
22736:     break;
22737: 
22738:   case 349:
22739: #line 411 "third_party/libpg_query/grammar/statements/create.y"
22740:     { (yyval.ival) = CAS_DEFERRABLE; ;}
22741:     break;
22742: 
22743:   case 350:
22744: #line 412 "third_party/libpg_query/grammar/statements/create.y"
22745:     { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
22746:     break;
22747: 
22748:   case 351:
22749: #line 413 "third_party/libpg_query/grammar/statements/create.y"
22750:     { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
22751:     break;
22752: 
22753:   case 352:
22754: #line 414 "third_party/libpg_query/grammar/statements/create.y"
22755:     { (yyval.ival) = CAS_NOT_VALID; ;}
22756:     break;
22757: 
22758:   case 353:
22759: #line 415 "third_party/libpg_query/grammar/statements/create.y"
22760:     { (yyval.ival) = CAS_NO_INHERIT; ;}
22761:     break;
22762: 
22763:   case 354:
22764: #line 421 "third_party/libpg_query/grammar/statements/create.y"
22765:     {
22766: 					PGColumnDef *n = makeNode(PGColumnDef);
22767: 					n->category = COL_STANDARD;
22768: 					n->colname = (yyvsp[(1) - (3)].str);
22769: 					n->typeName = (yyvsp[(2) - (3)].typnam);
22770: 					n->inhcount = 0;
22771: 					n->is_local = true;
22772: 					n->is_not_null = false;
22773: 					n->is_from_type = false;
22774: 					n->storage = 0;
22775: 					n->raw_default = NULL;
22776: 					n->cooked_default = NULL;
22777: 					n->collOid = InvalidOid;
22778: 					SplitColQualList((yyvsp[(3) - (3)].list), &n->constraints, &n->collClause,
22779: 									 yyscanner);
22780: 					n->location = (yylsp[(1) - (3)]);
22781: 					(yyval.node) = (PGNode *)n;
22782: 			;}
22783:     break;
22784: 
22785:   case 355:
22786: #line 441 "third_party/libpg_query/grammar/statements/create.y"
22787:     {
22788: 					PGColumnDef *n = makeNode(PGColumnDef);
22789: 					n->category = COL_GENERATED;
22790: 					n->colname = (yyvsp[(1) - (4)].str);
22791: 					n->typeName = (yyvsp[(2) - (4)].typnam);
22792: 					n->inhcount = 0;
22793: 					n->is_local = true;
22794: 					n->is_not_null = false;
22795: 					n->is_from_type = false;
22796: 					n->storage = 0;
22797: 					n->raw_default = NULL;
22798: 					n->cooked_default = NULL;
22799: 					n->collOid = InvalidOid;
22800: 					// merge the constraints with the generated column constraint
22801: 					auto constraints = (yyvsp[(4) - (4)].list);
22802: 					if (constraints) {
22803: 					    constraints = lappend(constraints, (yyvsp[(3) - (4)].node));
22804: 					} else {
22805: 					    constraints = list_make1((yyvsp[(3) - (4)].node));
22806: 					}
22807: 					SplitColQualList(constraints, &n->constraints, &n->collClause,
22808: 									 yyscanner);
22809: 					n->location = (yylsp[(1) - (4)]);
22810: 					(yyval.node) = (PGNode *)n;
22811: 			;}
22812:     break;
22813: 
22814:   case 356:
22815: #line 469 "third_party/libpg_query/grammar/statements/create.y"
22816:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
22817:     break;
22818: 
22819:   case 357:
22820: #line 470 "third_party/libpg_query/grammar/statements/create.y"
22821:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
22822:     break;
22823: 
22824:   case 358:
22825: #line 474 "third_party/libpg_query/grammar/statements/create.y"
22826:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
22827:     break;
22828: 
22829:   case 359:
22830: #line 478 "third_party/libpg_query/grammar/statements/create.y"
22831:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
22832:     break;
22833: 
22834:   case 360:
22835: #line 479 "third_party/libpg_query/grammar/statements/create.y"
22836:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
22837:     break;
22838: 
22839:   case 361:
22840: #line 480 "third_party/libpg_query/grammar/statements/create.y"
22841:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
22842:     break;
22843: 
22844:   case 362:
22845: #line 485 "third_party/libpg_query/grammar/statements/create.y"
22846:     {
22847: 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
22848: 				;}
22849:     break;
22850: 
22851:   case 363:
22852: #line 489 "third_party/libpg_query/grammar/statements/create.y"
22853:     {
22854: 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
22855: 				;}
22856:     break;
22857: 
22858:   case 364:
22859: #line 496 "third_party/libpg_query/grammar/statements/create.y"
22860:     { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
22861:     break;
22862: 
22863:   case 365:
22864: #line 497 "third_party/libpg_query/grammar/statements/create.y"
22865:     { (yyval.list) = NIL; ;}
22866:     break;
22867: 
22868:   case 366:
22869: #line 502 "third_party/libpg_query/grammar/statements/create.y"
22870:     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
22871:     break;
22872: 
22873:   case 367:
22874: #line 503 "third_party/libpg_query/grammar/statements/create.y"
22875:     { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
22876:     break;
22877: 
22878:   case 368:
22879: #line 504 "third_party/libpg_query/grammar/statements/create.y"
22880:     { (yyval.list) = NIL; ;}
22881:     break;
22882: 
22883:   case 369:
22884: #line 509 "third_party/libpg_query/grammar/statements/create.y"
22885:     {
22886: 					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
22887: 				;}
22888:     break;
22889: 
22890:   case 370:
22891: #line 516 "third_party/libpg_query/grammar/statements/create.y"
22892:     { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
22893:     break;
22894: 
22895:   case 371:
22896: #line 517 "third_party/libpg_query/grammar/statements/create.y"
22897:     { (yyval.list) = NIL; ;}
22898:     break;
22899: 
22900:   case 372:
22901: #line 522 "third_party/libpg_query/grammar/statements/create.y"
22902:     { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
22903:     break;
22904: 
22905:   case 373:
22906: #line 523 "third_party/libpg_query/grammar/statements/create.y"
22907:     { (yyval.list) = NIL; ;}
22908:     break;
22909: 
22910:   case 374:
22911: #line 527 "third_party/libpg_query/grammar/statements/create.y"
22912:     { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
22913:     break;
22914: 
22915:   case 375:
22916: #line 533 "third_party/libpg_query/grammar/statements/create.y"
22917:     {
22918: 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
22919: 				;}
22920:     break;
22921: 
22922:   case 376:
22923: #line 537 "third_party/libpg_query/grammar/statements/create.y"
22924:     {
22925: 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
22926: 				;}
22927:     break;
22928: 
22929:   case 377:
22930: #line 541 "third_party/libpg_query/grammar/statements/create.y"
22931:     {
22932: 					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
22933: 											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
22934: 				;}
22935:     break;
22936: 
22937:   case 378:
22938: #line 546 "third_party/libpg_query/grammar/statements/create.y"
22939:     {
22940: 					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
22941: 				;}
22942:     break;
22943: 
22944:   case 379:
22945: #line 553 "third_party/libpg_query/grammar/statements/create.y"
22946:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
22947:     break;
22948: 
22949:   case 380:
22950: #line 554 "third_party/libpg_query/grammar/statements/create.y"
22951:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
22952:     break;
22953: 
22954:   case 381:
22955: #line 558 "third_party/libpg_query/grammar/statements/create.y"
22956:     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
22957:     break;
22958: 
22959:   case 382:
22960: #line 559 "third_party/libpg_query/grammar/statements/create.y"
22961:     { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
22962:     break;
22963: 
22964:   case 383:
22965: #line 563 "third_party/libpg_query/grammar/statements/create.y"
22966:     { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
22967:     break;
22968: 
22969:   case 384:
22970: #line 565 "third_party/libpg_query/grammar/statements/create.y"
22971:     {
22972: 					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
22973: 					(yyval.typnam)->pct_type = true;
22974: 					(yyval.typnam)->location = (yylsp[(1) - (4)]);
22975: 				;}
22976:     break;
22977: 
22978:   case 385:
22979: #line 571 "third_party/libpg_query/grammar/statements/create.y"
22980:     {
22981: 					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
22982: 					(yyval.typnam)->pct_type = true;
22983: 					(yyval.typnam)->setof = true;
22984: 					(yyval.typnam)->location = (yylsp[(2) - (5)]);
22985: 				;}
22986:     break;
22987: 
22988:   case 386:
22989: #line 582 "third_party/libpg_query/grammar/statements/create.y"
22990:     {
22991: 					PGConstraint *n = makeNode(PGConstraint);
22992: 					n->contype = PG_CONSTR_CHECK;
22993: 					n->location = (yylsp[(1) - (5)]);
22994: 					n->raw_expr = (yyvsp[(3) - (5)].node);
22995: 					n->cooked_expr = NULL;
22996: 					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
22997: 								   NULL, NULL, &n->skip_validation,
22998: 								   &n->is_no_inherit, yyscanner);
22999: 					n->initially_valid = !n->skip_validation;
23000: 					(yyval.node) = (PGNode *)n;
23001: 				;}
23002:     break;
23003: 
23004:   case 387:
23005: #line 596 "third_party/libpg_query/grammar/statements/create.y"
23006:     {
23007: 					PGConstraint *n = makeNode(PGConstraint);
23008: 					n->contype = PG_CONSTR_UNIQUE;
23009: 					n->location = (yylsp[(1) - (6)]);
23010: 					n->keys = (yyvsp[(3) - (6)].list);
23011: 					n->options = (yyvsp[(5) - (6)].list);
23012: 					n->indexname = NULL;
23013: 					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
23014: 								   &n->deferrable, &n->initdeferred, NULL,
23015: 								   NULL, yyscanner);
23016: 					(yyval.node) = (PGNode *)n;
23017: 				;}
23018:     break;
23019: 
23020:   case 388:
23021: #line 609 "third_party/libpg_query/grammar/statements/create.y"
23022:     {
23023: 					PGConstraint *n = makeNode(PGConstraint);
23024: 					n->contype = PG_CONSTR_UNIQUE;
23025: 					n->location = (yylsp[(1) - (3)]);
23026: 					n->keys = NIL;
23027: 					n->options = NIL;
23028: 					n->indexname = (yyvsp[(2) - (3)].str);
23029: 					n->indexspace = NULL;
23030: 					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
23031: 								   &n->deferrable, &n->initdeferred, NULL,
23032: 								   NULL, yyscanner);
23033: 					(yyval.node) = (PGNode *)n;
23034: 				;}
23035:     break;
23036: 
23037:   case 389:
23038: #line 624 "third_party/libpg_query/grammar/statements/create.y"
23039:     {
23040: 					PGConstraint *n = makeNode(PGConstraint);
23041: 					n->contype = PG_CONSTR_PRIMARY;
23042: 					n->location = (yylsp[(1) - (7)]);
23043: 					n->keys = (yyvsp[(4) - (7)].list);
23044: 					n->options = (yyvsp[(6) - (7)].list);
23045: 					n->indexname = NULL;
23046: 					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
23047: 								   &n->deferrable, &n->initdeferred, NULL,
23048: 								   NULL, yyscanner);
23049: 					(yyval.node) = (PGNode *)n;
23050: 				;}
23051:     break;
23052: 
23053:   case 390:
23054: #line 637 "third_party/libpg_query/grammar/statements/create.y"
23055:     {
23056: 					PGConstraint *n = makeNode(PGConstraint);
23057: 					n->contype = PG_CONSTR_PRIMARY;
23058: 					n->location = (yylsp[(1) - (4)]);
23059: 					n->keys = NIL;
23060: 					n->options = NIL;
23061: 					n->indexname = (yyvsp[(3) - (4)].str);
23062: 					n->indexspace = NULL;
23063: 					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
23064: 								   &n->deferrable, &n->initdeferred, NULL,
23065: 								   NULL, yyscanner);
23066: 					(yyval.node) = (PGNode *)n;
23067: 				;}
23068:     break;
23069: 
23070:   case 391:
23071: #line 652 "third_party/libpg_query/grammar/statements/create.y"
23072:     {
23073: 					PGConstraint *n = makeNode(PGConstraint);
23074: 					n->contype = PG_CONSTR_FOREIGN;
23075: 					n->location = (yylsp[(1) - (11)]);
23076: 					n->pktable			= (yyvsp[(7) - (11)].range);
23077: 					n->fk_attrs			= (yyvsp[(4) - (11)].list);
23078: 					n->pk_attrs			= (yyvsp[(8) - (11)].list);
23079: 					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
23080: 					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
23081: 					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
23082: 					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
23083: 								   &n->deferrable, &n->initdeferred,
23084: 								   &n->skip_validation, NULL,
23085: 								   yyscanner);
23086: 					n->initially_valid = !n->skip_validation;
23087: 					(yyval.node) = (PGNode *)n;
23088: 				;}
23089:     break;
23090: 
23091:   case 392:
23092: #line 674 "third_party/libpg_query/grammar/statements/create.y"
23093:     {
23094: 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
23095: 				;}
23096:     break;
23097: 
23098:   case 393:
23099: #line 678 "third_party/libpg_query/grammar/statements/create.y"
23100:     {
23101: 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
23102: 				;}
23103:     break;
23104: 
23105:   case 394:
23106: #line 685 "third_party/libpg_query/grammar/statements/create.y"
23107:     {
23108: 				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
23109: 			;}
23110:     break;
23111: 
23112:   case 395:
23113: #line 689 "third_party/libpg_query/grammar/statements/create.y"
23114:     {
23115: 				ereport(ERROR,
23116: 						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
23117: 						 errmsg("MATCH PARTIAL not yet implemented"),
23118: 						 parser_errposition((yylsp[(1) - (2)]))));
23119: 				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
23120: 			;}
23121:     break;
23122: 
23123:   case 396:
23124: #line 697 "third_party/libpg_query/grammar/statements/create.y"
23125:     {
23126: 				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
23127: 			;}
23128:     break;
23129: 
23130:   case 397:
23131: #line 701 "third_party/libpg_query/grammar/statements/create.y"
23132:     {
23133: 				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
23134: 			;}
23135:     break;
23136: 
23137:   case 398:
23138: #line 709 "third_party/libpg_query/grammar/statements/create.y"
23139:     {
23140: 					PGTableLikeClause *n = makeNode(PGTableLikeClause);
23141: 					n->relation = (yyvsp[(2) - (3)].range);
23142: 					n->options = (yyvsp[(3) - (3)].ival);
23143: 					(yyval.node) = (PGNode *)n;
23144: 				;}
23145:     break;
23146: 
23147:   case 399:
23148: #line 718 "third_party/libpg_query/grammar/statements/create.y"
23149:     { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
23150:     break;
23151: 
23152:   case 400:
23153: #line 719 "third_party/libpg_query/grammar/statements/create.y"
23154:     { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
23155:     break;
23156: 
23157:   case 401:
23158: #line 720 "third_party/libpg_query/grammar/statements/create.y"
23159:     { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
23160:     break;
23161: 
23162:   case 402:
23163: #line 721 "third_party/libpg_query/grammar/statements/create.y"
23164:     { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
23165:     break;
23166: 
23167:   case 403:
23168: #line 723 "third_party/libpg_query/grammar/statements/create.y"
23169:     {
23170: 					ereport(PGWARNING,
23171: 							(errmsg("GLOBAL is deprecated in temporary table creation"),
23172: 							 parser_errposition((yylsp[(1) - (2)]))));
23173: 					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
23174: 				;}
23175:     break;
23176: 
23177:   case 404:
23178: #line 730 "third_party/libpg_query/grammar/statements/create.y"
23179:     {
23180: 					ereport(PGWARNING,
23181: 							(errmsg("GLOBAL is deprecated in temporary table creation"),
23182: 							 parser_errposition((yylsp[(1) - (2)]))));
23183: 					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
23184: 				;}
23185:     break;
23186: 
23187:   case 405:
23188: #line 736 "third_party/libpg_query/grammar/statements/create.y"
23189:     { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
23190:     break;
23191: 
23192:   case 406:
23193: #line 737 "third_party/libpg_query/grammar/statements/create.y"
23194:     { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
23195:     break;
23196: 
23197:   case 407:
23198: #line 742 "third_party/libpg_query/grammar/statements/create.y"
23199:     { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
23200:     break;
23201: 
23202:   case 408:
23203: #line 743 "third_party/libpg_query/grammar/statements/create.y"
23204:     { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
23205:     break;
23206: 
23207:   case 409:
23208: #line 10 "third_party/libpg_query/grammar/statements/drop.y"
23209:     {
23210: 					PGDropStmt *n = makeNode(PGDropStmt);
23211: 					n->removeType = (yyvsp[(2) - (6)].objtype);
23212: 					n->missing_ok = true;
23213: 					n->objects = (yyvsp[(5) - (6)].list);
23214: 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
23215: 					n->concurrent = false;
23216: 					(yyval.node) = (PGNode *)n;
23217: 				;}
23218:     break;
23219: 
23220:   case 410:
23221: #line 20 "third_party/libpg_query/grammar/statements/drop.y"
23222:     {
23223: 					PGDropStmt *n = makeNode(PGDropStmt);
23224: 					n->removeType = (yyvsp[(2) - (4)].objtype);
23225: 					n->missing_ok = false;
23226: 					n->objects = (yyvsp[(3) - (4)].list);
23227: 					n->behavior = (yyvsp[(4) - (4)].dbehavior);
23228: 					n->concurrent = false;
23229: 					(yyval.node) = (PGNode *)n;
23230: 				;}
23231:     break;
23232: 
23233:   case 411:
23234: #line 30 "third_party/libpg_query/grammar/statements/drop.y"
23235:     {
23236: 					PGDropStmt *n = makeNode(PGDropStmt);
23237: 					n->removeType = (yyvsp[(2) - (6)].objtype);
23238: 					n->missing_ok = true;
23239: 					n->objects = (yyvsp[(5) - (6)].list);
23240: 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
23241: 					n->concurrent = false;
23242: 					(yyval.node) = (PGNode *)n;
23243: 				;}
23244:     break;
23245: 
23246:   case 412:
23247: #line 40 "third_party/libpg_query/grammar/statements/drop.y"
23248:     {
23249: 					PGDropStmt *n = makeNode(PGDropStmt);
23250: 					n->removeType = (yyvsp[(2) - (4)].objtype);
23251: 					n->missing_ok = false;
23252: 					n->objects = (yyvsp[(3) - (4)].list);
23253: 					n->behavior = (yyvsp[(4) - (4)].dbehavior);
23254: 					n->concurrent = false;
23255: 					(yyval.node) = (PGNode *)n;
23256: 				;}
23257:     break;
23258: 
23259:   case 413:
23260: #line 50 "third_party/libpg_query/grammar/statements/drop.y"
23261:     {
23262: 					PGDropStmt *n = makeNode(PGDropStmt);
23263: 					n->removeType = (yyvsp[(2) - (6)].objtype);
23264: 					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
23265: 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
23266: 					n->missing_ok = false;
23267: 					n->concurrent = false;
23268: 					(yyval.node) = (PGNode *) n;
23269: 				;}
23270:     break;
23271: 
23272:   case 414:
23273: #line 60 "third_party/libpg_query/grammar/statements/drop.y"
23274:     {
23275: 					PGDropStmt *n = makeNode(PGDropStmt);
23276: 					n->removeType = (yyvsp[(2) - (8)].objtype);
23277: 					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
23278: 					n->behavior = (yyvsp[(8) - (8)].dbehavior);
23279: 					n->missing_ok = true;
23280: 					n->concurrent = false;
23281: 					(yyval.node) = (PGNode *) n;
23282: 				;}
23283:     break;
23284: 
23285:   case 415:
23286: #line 73 "third_party/libpg_query/grammar/statements/drop.y"
23287:     { (yyval.objtype) = PG_OBJECT_TABLE; ;}
23288:     break;
23289: 
23290:   case 416:
23291: #line 74 "third_party/libpg_query/grammar/statements/drop.y"
23292:     { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
23293:     break;
23294: 
23295:   case 417:
23296: #line 75 "third_party/libpg_query/grammar/statements/drop.y"
23297:     { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
23298:     break;
23299: 
23300:   case 418:
23301: #line 76 "third_party/libpg_query/grammar/statements/drop.y"
23302:     { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
23303:     break;
23304: 
23305:   case 419:
23306: #line 77 "third_party/libpg_query/grammar/statements/drop.y"
23307:     { (yyval.objtype) = PG_OBJECT_TABLE_MACRO; ;}
23308:     break;
23309: 
23310:   case 420:
23311: #line 78 "third_party/libpg_query/grammar/statements/drop.y"
23312:     { (yyval.objtype) = PG_OBJECT_VIEW; ;}
23313:     break;
23314: 
23315:   case 421:
23316: #line 79 "third_party/libpg_query/grammar/statements/drop.y"
23317:     { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
23318:     break;
23319: 
23320:   case 422:
23321: #line 80 "third_party/libpg_query/grammar/statements/drop.y"
23322:     { (yyval.objtype) = PG_OBJECT_INDEX; ;}
23323:     break;
23324: 
23325:   case 423:
23326: #line 81 "third_party/libpg_query/grammar/statements/drop.y"
23327:     { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
23328:     break;
23329: 
23330:   case 424:
23331: #line 82 "third_party/libpg_query/grammar/statements/drop.y"
23332:     { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
23333:     break;
23334: 
23335:   case 425:
23336: #line 83 "third_party/libpg_query/grammar/statements/drop.y"
23337:     { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
23338:     break;
23339: 
23340:   case 426:
23341: #line 84 "third_party/libpg_query/grammar/statements/drop.y"
23342:     { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
23343:     break;
23344: 
23345:   case 427:
23346: #line 85 "third_party/libpg_query/grammar/statements/drop.y"
23347:     { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
23348:     break;
23349: 
23350:   case 428:
23351: #line 86 "third_party/libpg_query/grammar/statements/drop.y"
23352:     { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
23353:     break;
23354: 
23355:   case 429:
23356: #line 87 "third_party/libpg_query/grammar/statements/drop.y"
23357:     { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
23358:     break;
23359: 
23360:   case 430:
23361: #line 88 "third_party/libpg_query/grammar/statements/drop.y"
23362:     { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
23363:     break;
23364: 
23365:   case 431:
23366: #line 89 "third_party/libpg_query/grammar/statements/drop.y"
23367:     { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
23368:     break;
23369: 
23370:   case 432:
23371: #line 90 "third_party/libpg_query/grammar/statements/drop.y"
23372:     { (yyval.objtype) = PG_OBJECT_TYPE; ;}
23373:     break;
23374: 
23375:   case 433:
23376: #line 95 "third_party/libpg_query/grammar/statements/drop.y"
23377:     { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
23378:     break;
23379: 
23380:   case 434:
23381: #line 96 "third_party/libpg_query/grammar/statements/drop.y"
23382:     { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
23383:     break;
23384: 
23385:   case 435:
23386: #line 97 "third_party/libpg_query/grammar/statements/drop.y"
23387:     { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
23388:     break;
23389: 
23390:   case 436:
23391: #line 98 "third_party/libpg_query/grammar/statements/drop.y"
23392:     { (yyval.objtype) = PG_OBJECT_FDW; ;}
23393:     break;
23394: 
23395:   case 437:
23396: #line 99 "third_party/libpg_query/grammar/statements/drop.y"
23397:     { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
23398:     break;
23399: 
23400:   case 438:
23401: #line 100 "third_party/libpg_query/grammar/statements/drop.y"
23402:     { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
23403:     break;
23404: 
23405:   case 439:
23406: #line 105 "third_party/libpg_query/grammar/statements/drop.y"
23407:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
23408:     break;
23409: 
23410:   case 440:
23411: #line 106 "third_party/libpg_query/grammar/statements/drop.y"
23412:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
23413:     break;
23414: 
23415:   case 441:
23416: #line 111 "third_party/libpg_query/grammar/statements/drop.y"
23417:     { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
23418:     break;
23419: 
23420:   case 442:
23421: #line 112 "third_party/libpg_query/grammar/statements/drop.y"
23422:     { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
23423:     break;
23424: 
23425:   case 443:
23426: #line 113 "third_party/libpg_query/grammar/statements/drop.y"
23427:     { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
23428:     break;
23429: 
23430:   case 444:
23431: #line 118 "third_party/libpg_query/grammar/statements/drop.y"
23432:     { (yyval.objtype) = PG_OBJECT_POLICY; ;}
23433:     break;
23434: 
23435:   case 445:
23436: #line 119 "third_party/libpg_query/grammar/statements/drop.y"
23437:     { (yyval.objtype) = PG_OBJECT_RULE; ;}
23438:     break;
23439: 
23440:   case 446:
23441: #line 120 "third_party/libpg_query/grammar/statements/drop.y"
23442:     { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
23443:     break;
23444: 
23445:   case 447:
23446: #line 9 "third_party/libpg_query/grammar/statements/create_function.y"
23447:     {
23448: 				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
23449: 				(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
23450: 				n->name = (yyvsp[(4) - (5)].range);
23451: 				n->functions = (yyvsp[(5) - (5)].list);
23452: 				n->onconflict = PG_ERROR_ON_CONFLICT;
23453: 				(yyval.node) = (PGNode *)n;
23454: 			;}
23455:     break;
23456: 
23457:   case 448:
23458: #line 19 "third_party/libpg_query/grammar/statements/create_function.y"
23459:     {
23460: 				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
23461: 				(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
23462: 				n->name = (yyvsp[(7) - (8)].range);
23463: 				n->functions = (yyvsp[(8) - (8)].list);
23464: 				n->onconflict = PG_IGNORE_ON_CONFLICT;
23465: 				(yyval.node) = (PGNode *)n;
23466: 
23467: 			;}
23468:     break;
23469: 
23470:   case 449:
23471: #line 30 "third_party/libpg_query/grammar/statements/create_function.y"
23472:     {
23473: 				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
23474: 				(yyvsp[(6) - (7)].range)->relpersistence = (yyvsp[(4) - (7)].ival);
23475: 				n->name = (yyvsp[(6) - (7)].range);
23476: 				n->functions = (yyvsp[(7) - (7)].list);
23477: 				n->onconflict = PG_REPLACE_ON_CONFLICT;
23478: 				(yyval.node) = (PGNode *)n;
23479: 			;}
23480:     break;
23481: 
23482:   case 450:
23483: #line 40 "third_party/libpg_query/grammar/statements/create_function.y"
23484:     {
23485: 				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
23486: 				(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
23487: 				n->name = (yyvsp[(4) - (5)].range);
23488: 				n->functions = (yyvsp[(5) - (5)].list);
23489: 				n->onconflict = PG_ERROR_ON_CONFLICT;
23490: 				(yyval.node) = (PGNode *)n;
23491:              ;}
23492:     break;
23493: 
23494:   case 451:
23495: #line 50 "third_party/libpg_query/grammar/statements/create_function.y"
23496:     {
23497: 				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
23498: 				(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
23499: 				n->name = (yyvsp[(7) - (8)].range);
23500: 				n->functions = (yyvsp[(8) - (8)].list);
23501: 				n->onconflict = PG_IGNORE_ON_CONFLICT;
23502: 				(yyval.node) = (PGNode *)n;
23503: 			 ;}
23504:     break;
23505: 
23506:   case 452:
23507: #line 60 "third_party/libpg_query/grammar/statements/create_function.y"
23508:     {
23509: 				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
23510: 				(yyvsp[(6) - (7)].range)->relpersistence = (yyvsp[(4) - (7)].ival);
23511: 				n->name = (yyvsp[(6) - (7)].range);
23512: 				n->functions = (yyvsp[(7) - (7)].list);
23513: 				n->onconflict = PG_REPLACE_ON_CONFLICT;
23514: 				(yyval.node) = (PGNode *)n;
23515: 			 ;}
23516:     break;
23517: 
23518:   case 453:
23519: #line 72 "third_party/libpg_query/grammar/statements/create_function.y"
23520:     {
23521: 				PGFunctionDefinition *n = makeNode(PGFunctionDefinition);
23522: 				n->params = (yyvsp[(1) - (4)].list);
23523: 				n->query = (yyvsp[(4) - (4)].node);
23524: 				(yyval.node) = (PGNode *)n;
23525: 			;}
23526:     break;
23527: 
23528:   case 454:
23529: #line 82 "third_party/libpg_query/grammar/statements/create_function.y"
23530:     {
23531: 				PGFunctionDefinition *n = makeNode(PGFunctionDefinition);
23532: 				n->params = (yyvsp[(1) - (4)].list);
23533: 				n->query = (yyvsp[(4) - (4)].node);
23534: 				(yyval.node) = (PGNode *)n;
23535: 			;}
23536:     break;
23537: 
23538:   case 455:
23539: #line 92 "third_party/libpg_query/grammar/statements/create_function.y"
23540:     {
23541: 				(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
23542: 			;}
23543:     break;
23544: 
23545:   case 456:
23546: #line 96 "third_party/libpg_query/grammar/statements/create_function.y"
23547:     {
23548: 				(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
23549: 			;}
23550:     break;
23551: 
23552:   case 457:
23553: #line 103 "third_party/libpg_query/grammar/statements/create_function.y"
23554:     {
23555: 				(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
23556: 			;}
23557:     break;
23558: 
23559:   case 459:
23560: #line 111 "third_party/libpg_query/grammar/statements/create_function.y"
23561:     {
23562: 				PGFunctionDefinition *n = makeNode(PGFunctionDefinition);
23563: 				n->params = (yyvsp[(1) - (3)].list);
23564: 				n->function = (yyvsp[(3) - (3)].node);
23565: 				(yyval.node) = (PGNode *)n;
23566: 			;}
23567:     break;
23568: 
23569:   case 460:
23570: #line 120 "third_party/libpg_query/grammar/statements/create_function.y"
23571:     {
23572: 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
23573: 				;}
23574:     break;
23575: 
23576:   case 461:
23577: #line 124 "third_party/libpg_query/grammar/statements/create_function.y"
23578:     {
23579: 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
23580: 				;}
23581:     break;
23582: 
23583:   case 464:
23584: #line 136 "third_party/libpg_query/grammar/statements/create_function.y"
23585:     {
23586: 				(yyval.list) = NIL;
23587: 			;}
23588:     break;
23589: 
23590:   case 465:
23591: #line 140 "third_party/libpg_query/grammar/statements/create_function.y"
23592:     {
23593: 				(yyval.list) = (yyvsp[(2) - (3)].list);
23594: 			;}
23595:     break;
23596: 
23597:   case 466:
23598: #line 12 "third_party/libpg_query/grammar/statements/update.y"
23599:     {
23600: 					PGUpdateStmt *n = makeNode(PGUpdateStmt);
23601: 					n->relation = (yyvsp[(3) - (8)].range);
23602: 					n->targetList = (yyvsp[(5) - (8)].list);
23603: 					n->fromClause = (yyvsp[(6) - (8)].list);
23604: 					n->whereClause = (yyvsp[(7) - (8)].node);
23605: 					n->returningList = (yyvsp[(8) - (8)].list);
23606: 					n->withClause = (yyvsp[(1) - (8)].with);
23607: 					(yyval.node) = (PGNode *)n;
23608: 				;}
23609:     break;
23610: 
23611:   case 467:
23612: #line 3 "third_party/libpg_query/grammar/statements/copy.y"
23613:     {
23614: 					PGCopyStmt *n = makeNode(PGCopyStmt);
23615: 					n->relation = (yyvsp[(3) - (11)].range);
23616: 					n->query = NULL;
23617: 					n->attlist = (yyvsp[(4) - (11)].list);
23618: 					n->is_from = (yyvsp[(6) - (11)].boolean);
23619: 					n->is_program = (yyvsp[(7) - (11)].boolean);
23620: 					n->filename = (yyvsp[(8) - (11)].str);
23621: 
23622: 					if (n->is_program && n->filename == NULL)
23623: 						ereport(ERROR,
23624: 								(errcode(PG_ERRCODE_SYNTAX_ERROR),
23625: 								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
23626: 								 parser_errposition((yylsp[(8) - (11)]))));
23627: 
23628: 					n->options = NIL;
23629: 					/* Concatenate user-supplied flags */
23630: 					if ((yyvsp[(2) - (11)].defelt))
23631: 						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
23632: 					if ((yyvsp[(5) - (11)].defelt))
23633: 						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
23634: 					if ((yyvsp[(9) - (11)].defelt))
23635: 						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
23636: 					if ((yyvsp[(11) - (11)].list))
23637: 						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
23638: 					(yyval.node) = (PGNode *)n;
23639: 				;}
23640:     break;
23641: 
23642:   case 468:
23643: #line 31 "third_party/libpg_query/grammar/statements/copy.y"
23644:     {
23645: 					PGCopyStmt *n = makeNode(PGCopyStmt);
23646: 					n->relation = NULL;
23647: 					n->query = (yyvsp[(3) - (9)].node);
23648: 					n->attlist = NIL;
23649: 					n->is_from = false;
23650: 					n->is_program = (yyvsp[(6) - (9)].boolean);
23651: 					n->filename = (yyvsp[(7) - (9)].str);
23652: 					n->options = (yyvsp[(9) - (9)].list);
23653: 
23654: 					if (n->is_program && n->filename == NULL)
23655: 						ereport(ERROR,
23656: 								(errcode(PG_ERRCODE_SYNTAX_ERROR),
23657: 								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
23658: 								 parser_errposition((yylsp[(5) - (9)]))));
23659: 
23660: 					(yyval.node) = (PGNode *)n;
23661: 				;}
23662:     break;
23663: 
23664:   case 469:
23665: #line 50 "third_party/libpg_query/grammar/statements/copy.y"
23666:     {
23667: 				PGCopyDatabaseStmt *n = makeNode(PGCopyDatabaseStmt);
23668: 				n->from_database = (yyvsp[(4) - (7)].str);
23669: 				n->to_database = (yyvsp[(6) - (7)].str);
23670: 				n->copy_database_flag = (yyvsp[(7) - (7)].conststr);
23671: 				(yyval.node) = (PGNode *)n;
23672: 			;}
23673:     break;
23674: 
23675:   case 470:
23676: #line 61 "third_party/libpg_query/grammar/statements/copy.y"
23677:     { (yyval.conststr) = NULL; ;}
23678:     break;
23679: 
23680:   case 471:
23681: #line 62 "third_party/libpg_query/grammar/statements/copy.y"
23682:     { (yyval.conststr) = "schema"; ;}
23683:     break;
23684: 
23685:   case 472:
23686: #line 63 "third_party/libpg_query/grammar/statements/copy.y"
23687:     { (yyval.conststr) = "data"; ;}
23688:     break;
23689: 
23690:   case 473:
23691: #line 67 "third_party/libpg_query/grammar/statements/copy.y"
23692:     { (yyval.boolean) = true; ;}
23693:     break;
23694: 
23695:   case 474:
23696: #line 68 "third_party/libpg_query/grammar/statements/copy.y"
23697:     { (yyval.boolean) = false; ;}
23698:     break;
23699: 
23700:   case 475:
23701: #line 74 "third_party/libpg_query/grammar/statements/copy.y"
23702:     {
23703: 					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
23704: 				;}
23705:     break;
23706: 
23707:   case 476:
23708: #line 77 "third_party/libpg_query/grammar/statements/copy.y"
23709:     { (yyval.defelt) = NULL; ;}
23710:     break;
23711: 
23712:   case 477:
23713: #line 83 "third_party/libpg_query/grammar/statements/copy.y"
23714:     {
23715: 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
23716: 				;}
23717:     break;
23718: 
23719:   case 478:
23720: #line 87 "third_party/libpg_query/grammar/statements/copy.y"
23721:     {
23722: 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
23723: 				;}
23724:     break;
23725: 
23726:   case 479:
23727: #line 94 "third_party/libpg_query/grammar/statements/copy.y"
23728:     {;}
23729:     break;
23730: 
23731:   case 480:
23732: #line 95 "third_party/libpg_query/grammar/statements/copy.y"
23733:     {;}
23734:     break;
23735: 
23736:   case 481:
23737: #line 99 "third_party/libpg_query/grammar/statements/copy.y"
23738:     {;}
23739:     break;
23740: 
23741:   case 482:
23742: #line 100 "third_party/libpg_query/grammar/statements/copy.y"
23743:     {;}
23744:     break;
23745: 
23746:   case 483:
23747: #line 105 "third_party/libpg_query/grammar/statements/copy.y"
23748:     { (yyval.boolean) = true; ;}
23749:     break;
23750: 
23751:   case 484:
23752: #line 106 "third_party/libpg_query/grammar/statements/copy.y"
23753:     { (yyval.boolean) = false; ;}
23754:     break;
23755: 
23756:   case 485:
23757: #line 110 "third_party/libpg_query/grammar/statements/copy.y"
23758:     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
23759:     break;
23760: 
23761:   case 486:
23762: #line 111 "third_party/libpg_query/grammar/statements/copy.y"
23763:     { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
23764:     break;
23765: 
23766:   case 487:
23767: #line 116 "third_party/libpg_query/grammar/statements/copy.y"
23768:     { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
23769:     break;
23770: 
23771:   case 488:
23772: #line 117 "third_party/libpg_query/grammar/statements/copy.y"
23773:     { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
23774:     break;
23775: 
23776:   case 489:
23777: #line 118 "third_party/libpg_query/grammar/statements/copy.y"
23778:     { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].node); ;}
23779:     break;
23780: 
23781:   case 490:
23782: #line 119 "third_party/libpg_query/grammar/statements/copy.y"
23783:     { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
23784:     break;
23785: 
23786:   case 491:
23787: #line 120 "third_party/libpg_query/grammar/statements/copy.y"
23788:     { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
23789:     break;
23790: 
23791:   case 492:
23792: #line 121 "third_party/libpg_query/grammar/statements/copy.y"
23793:     { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].node); ;}
23794:     break;
23795: 
23796:   case 493:
23797: #line 122 "third_party/libpg_query/grammar/statements/copy.y"
23798:     { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].node); ;}
23799:     break;
23800: 
23801:   case 494:
23802: #line 123 "third_party/libpg_query/grammar/statements/copy.y"
23803:     { (yyval.node) = NULL; ;}
23804:     break;
23805: 
23806:   case 495:
23807: #line 129 "third_party/libpg_query/grammar/statements/copy.y"
23808:     {
23809: 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
23810: 				;}
23811:     break;
23812: 
23813:   case 496:
23814: #line 137 "third_party/libpg_query/grammar/statements/copy.y"
23815:     {
23816: 					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
23817: 				;}
23818:     break;
23819: 
23820:   case 497:
23821: #line 140 "third_party/libpg_query/grammar/statements/copy.y"
23822:     { (yyval.defelt) = NULL; ;}
23823:     break;
23824: 
23825:   case 498:
23826: #line 145 "third_party/libpg_query/grammar/statements/copy.y"
23827:     { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
23828:     break;
23829: 
23830:   case 499:
23831: #line 146 "third_party/libpg_query/grammar/statements/copy.y"
23832:     { (yyval.list) = NIL; ;}
23833:     break;
23834: 
23835:   case 500:
23836: #line 152 "third_party/libpg_query/grammar/statements/copy.y"
23837:     {
23838: 					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
23839: 				;}
23840:     break;
23841: 
23842:   case 501:
23843: #line 155 "third_party/libpg_query/grammar/statements/copy.y"
23844:     { (yyval.defelt) = NULL; ;}
23845:     break;
23846: 
23847:   case 502:
23848: #line 161 "third_party/libpg_query/grammar/statements/copy.y"
23849:     {
23850: 					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
23851: 				;}
23852:     break;
23853: 
23854:   case 503:
23855: #line 165 "third_party/libpg_query/grammar/statements/copy.y"
23856:     {
23857: 					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
23858: 				;}
23859:     break;
23860: 
23861:   case 504:
23862: #line 169 "third_party/libpg_query/grammar/statements/copy.y"
23863:     {
23864: 					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
23865: 				;}
23866:     break;
23867: 
23868:   case 505:
23869: #line 173 "third_party/libpg_query/grammar/statements/copy.y"
23870:     {
23871: 					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
23872: 				;}
23873:     break;
23874: 
23875:   case 506:
23876: #line 177 "third_party/libpg_query/grammar/statements/copy.y"
23877:     {
23878: 					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
23879: 				;}
23880:     break;
23881: 
23882:   case 507:
23883: #line 181 "third_party/libpg_query/grammar/statements/copy.y"
23884:     {
23885: 					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
23886: 				;}
23887:     break;
23888: 
23889:   case 508:
23890: #line 185 "third_party/libpg_query/grammar/statements/copy.y"
23891:     {
23892: 					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
23893: 				;}
23894:     break;
23895: 
23896:   case 509:
23897: #line 189 "third_party/libpg_query/grammar/statements/copy.y"
23898:     {
23899: 					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
23900: 				;}
23901:     break;
23902: 
23903:   case 510:
23904: #line 193 "third_party/libpg_query/grammar/statements/copy.y"
23905:     {
23906: 					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
23907: 				;}
23908:     break;
23909: 
23910:   case 511:
23911: #line 197 "third_party/libpg_query/grammar/statements/copy.y"
23912:     {
23913: 					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
23914: 				;}
23915:     break;
23916: 
23917:   case 512:
23918: #line 201 "third_party/libpg_query/grammar/statements/copy.y"
23919:     {
23920: 					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
23921: 				;}
23922:     break;
23923: 
23924:   case 513:
23925: #line 205 "third_party/libpg_query/grammar/statements/copy.y"
23926:     {
23927: 					(yyval.defelt) = makeDefElem("partition_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
23928: 				;}
23929:     break;
23930: 
23931:   case 514:
23932: #line 209 "third_party/libpg_query/grammar/statements/copy.y"
23933:     {
23934: 					(yyval.defelt) = makeDefElem("partition_by", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
23935: 				;}
23936:     break;
23937: 
23938:   case 515:
23939: #line 213 "third_party/libpg_query/grammar/statements/copy.y"
23940:     {
23941: 					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
23942: 				;}
23943:     break;
23944: 
23945:   case 516:
23946: #line 217 "third_party/libpg_query/grammar/statements/copy.y"
23947:     {
23948: 					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
23949: 				;}
23950:     break;
23951: 
23952:   case 517:
23953: #line 221 "third_party/libpg_query/grammar/statements/copy.y"
23954:     {
23955: 					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
23956: 				;}
23957:     break;
23958: 
23959:   case 518:
23960: #line 228 "third_party/libpg_query/grammar/statements/copy.y"
23961:     { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
23962:     break;
23963: 
23964:   case 519:
23965: #line 233 "third_party/libpg_query/grammar/statements/copy.y"
23966:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
23967:     break;
23968: 
23969:   case 520:
23970: #line 234 "third_party/libpg_query/grammar/statements/copy.y"
23971:     { (yyval.str) = NULL; ;}
23972:     break;
23973: 
23974:   case 521:
23975: #line 235 "third_party/libpg_query/grammar/statements/copy.y"
23976:     { (yyval.str) = NULL; ;}
23977:     break;
23978: 
23979:   case 522:
23980: #line 236 "third_party/libpg_query/grammar/statements/copy.y"
23981:     { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
23982:     break;
23983: 
23984:   case 523:
23985: #line 237 "third_party/libpg_query/grammar/statements/copy.y"
23986:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
23987:     break;
23988: 
23989:   case 524:
23990: #line 244 "third_party/libpg_query/grammar/statements/copy.y"
23991:     {
23992: 					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
23993: 				;}
23994:     break;
23995: 
23996:   case 525:
23997: #line 248 "third_party/libpg_query/grammar/statements/copy.y"
23998:     {
23999: 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
24000: 				;}
24001:     break;
24002: 
24003:   case 528:
24004: #line 52 "third_party/libpg_query/grammar/statements/select.y"
24005:     { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
24006:     break;
24007: 
24008:   case 529:
24009: #line 53 "third_party/libpg_query/grammar/statements/select.y"
24010:     { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
24011:     break;
24012: 
24013:   case 530:
24014: #line 55 "third_party/libpg_query/grammar/statements/select.y"
24015:     {
24016: 		    	(yyval.node) = (yyvsp[(2) - (3)].node);
24017: 			;}
24018:     break;
24019: 
24020:   case 531:
24021: #line 72 "third_party/libpg_query/grammar/statements/select.y"
24022:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
24023:     break;
24024: 
24025:   case 532:
24026: #line 74 "third_party/libpg_query/grammar/statements/select.y"
24027:     {
24028: 					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
24029: 										NULL, NULL, NULL,
24030: 										yyscanner);
24031: 					(yyval.node) = (yyvsp[(1) - (2)].node);
24032: 				;}
24033:     break;
24034: 
24035:   case 533:
24036: #line 81 "third_party/libpg_query/grammar/statements/select.y"
24037:     {
24038: 					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
24039: 										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
24040: 										NULL,
24041: 										yyscanner);
24042: 					(yyval.node) = (yyvsp[(1) - (4)].node);
24043: 				;}
24044:     break;
24045: 
24046:   case 534:
24047: #line 89 "third_party/libpg_query/grammar/statements/select.y"
24048:     {
24049: 					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
24050: 										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
24051: 										NULL,
24052: 										yyscanner);
24053: 					(yyval.node) = (yyvsp[(1) - (4)].node);
24054: 				;}
24055:     break;
24056: 
24057:   case 535:
24058: #line 97 "third_party/libpg_query/grammar/statements/select.y"
24059:     {
24060: 					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
24061: 										NULL, NULL,
24062: 										(yyvsp[(1) - (2)].with),
24063: 										yyscanner);
24064: 					(yyval.node) = (yyvsp[(2) - (2)].node);
24065: 				;}
24066:     break;
24067: 
24068:   case 536:
24069: #line 105 "third_party/libpg_query/grammar/statements/select.y"
24070:     {
24071: 					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
24072: 										NULL, NULL,
24073: 										(yyvsp[(1) - (3)].with),
24074: 										yyscanner);
24075: 					(yyval.node) = (yyvsp[(2) - (3)].node);
24076: 				;}
24077:     break;
24078: 
24079:   case 537:
24080: #line 113 "third_party/libpg_query/grammar/statements/select.y"
24081:     {
24082: 					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
24083: 										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
24084: 										(yyvsp[(1) - (5)].with),
24085: 										yyscanner);
24086: 					(yyval.node) = (yyvsp[(2) - (5)].node);
24087: 				;}
24088:     break;
24089: 
24090:   case 538:
24091: #line 121 "third_party/libpg_query/grammar/statements/select.y"
24092:     {
24093: 					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
24094: 										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
24095: 										(yyvsp[(1) - (5)].with),
24096: 										yyscanner);
24097: 					(yyval.node) = (yyvsp[(2) - (5)].node);
24098: 				;}
24099:     break;
24100: 
24101:   case 539:
24102: #line 131 "third_party/libpg_query/grammar/statements/select.y"
24103:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
24104:     break;
24105: 
24106:   case 540:
24107: #line 132 "third_party/libpg_query/grammar/statements/select.y"
24108:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
24109:     break;
24110: 
24111:   case 541:
24112: #line 160 "third_party/libpg_query/grammar/statements/select.y"
24113:     {
24114: 				(yyval.list) = (yyvsp[(3) - (3)].list);
24115: 			;}
24116:     break;
24117: 
24118:   case 542:
24119: #line 164 "third_party/libpg_query/grammar/statements/select.y"
24120:     {
24121: 				PGAStar *star = makeNode(PGAStar);
24122: 				(yyval.list) = list_make1(star);
24123: 			;}
24124:     break;
24125: 
24126:   case 543:
24127: #line 175 "third_party/libpg_query/grammar/statements/select.y"
24128:     {
24129: 					PGSelectStmt *n = makeNode(PGSelectStmt);
24130: 					n->targetList = (yyvsp[(3) - (11)].list);
24131: 					n->intoClause = (yyvsp[(4) - (11)].into);
24132: 					n->fromClause = (yyvsp[(5) - (11)].list);
24133: 					n->whereClause = (yyvsp[(6) - (11)].node);
24134: 					n->groupClause = (yyvsp[(7) - (11)].list);
24135: 					n->havingClause = (yyvsp[(8) - (11)].node);
24136: 					n->windowClause = (yyvsp[(9) - (11)].list);
24137: 					n->qualifyClause = (yyvsp[(10) - (11)].node);
24138: 					n->sampleOptions = (yyvsp[(11) - (11)].node);
24139: 					(yyval.node) = (PGNode *)n;
24140: 				;}
24141:     break;
24142: 
24143:   case 544:
24144: #line 191 "third_party/libpg_query/grammar/statements/select.y"
24145:     {
24146: 					PGSelectStmt *n = makeNode(PGSelectStmt);
24147: 					n->distinctClause = (yyvsp[(2) - (11)].list);
24148: 					n->targetList = (yyvsp[(3) - (11)].list);
24149: 					n->intoClause = (yyvsp[(4) - (11)].into);
24150: 					n->fromClause = (yyvsp[(5) - (11)].list);
24151: 					n->whereClause = (yyvsp[(6) - (11)].node);
24152: 					n->groupClause = (yyvsp[(7) - (11)].list);
24153: 					n->havingClause = (yyvsp[(8) - (11)].node);
24154: 					n->windowClause = (yyvsp[(9) - (11)].list);
24155: 					n->qualifyClause = (yyvsp[(10) - (11)].node);
24156: 					n->sampleOptions = (yyvsp[(11) - (11)].node);
24157: 					(yyval.node) = (PGNode *)n;
24158: 				;}
24159:     break;
24160: 
24161:   case 545:
24162: #line 208 "third_party/libpg_query/grammar/statements/select.y"
24163:     {
24164: 					PGSelectStmt *n = makeNode(PGSelectStmt);
24165: 					n->targetList = (yyvsp[(3) - (10)].list);
24166: 					n->fromClause = (yyvsp[(2) - (10)].list);
24167: 					n->intoClause = (yyvsp[(4) - (10)].into);
24168: 					n->whereClause = (yyvsp[(5) - (10)].node);
24169: 					n->groupClause = (yyvsp[(6) - (10)].list);
24170: 					n->havingClause = (yyvsp[(7) - (10)].node);
24171: 					n->windowClause = (yyvsp[(8) - (10)].list);
24172: 					n->qualifyClause = (yyvsp[(9) - (10)].node);
24173: 					n->sampleOptions = (yyvsp[(10) - (10)].node);
24174: 					n->from_first = true;
24175: 					(yyval.node) = (PGNode *)n;
24176: 				;}
24177:     break;
24178: 
24179:   case 546:
24180: #line 226 "third_party/libpg_query/grammar/statements/select.y"
24181:     {
24182: 					PGSelectStmt *n = makeNode(PGSelectStmt);
24183: 					n->targetList = (yyvsp[(5) - (12)].list);
24184: 					n->distinctClause = (yyvsp[(4) - (12)].list);
24185: 					n->fromClause = (yyvsp[(2) - (12)].list);
24186: 					n->intoClause = (yyvsp[(6) - (12)].into);
24187: 					n->whereClause = (yyvsp[(7) - (12)].node);
24188: 					n->groupClause = (yyvsp[(8) - (12)].list);
24189: 					n->havingClause = (yyvsp[(9) - (12)].node);
24190: 					n->windowClause = (yyvsp[(10) - (12)].list);
24191: 					n->qualifyClause = (yyvsp[(11) - (12)].node);
24192: 					n->sampleOptions = (yyvsp[(12) - (12)].node);
24193: 					n->from_first = true;
24194: 					(yyval.node) = (PGNode *)n;
24195: 				;}
24196:     break;
24197: 
24198:   case 547:
24199: #line 241 "third_party/libpg_query/grammar/statements/select.y"
24200:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
24201:     break;
24202: 
24203:   case 548:
24204: #line 243 "third_party/libpg_query/grammar/statements/select.y"
24205:     {
24206: 					/* same as SELECT * FROM relation_expr */
24207: 					PGColumnRef *cr = makeNode(PGColumnRef);
24208: 					PGResTarget *rt = makeNode(PGResTarget);
24209: 					PGSelectStmt *n = makeNode(PGSelectStmt);
24210: 
24211: 					cr->fields = list_make1(makeNode(PGAStar));
24212: 					cr->location = -1;
24213: 
24214: 					rt->name = NULL;
24215: 					rt->indirection = NIL;
24216: 					rt->val = (PGNode *)cr;
24217: 					rt->location = -1;
24218: 
24219: 					n->targetList = list_make1(rt);
24220: 					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
24221: 					(yyval.node) = (PGNode *)n;
24222: 				;}
24223:     break;
24224: 
24225:   case 549:
24226: #line 262 "third_party/libpg_query/grammar/statements/select.y"
24227:     {
24228: 					(yyval.node) = makeSetOp(PG_SETOP_UNION_BY_NAME, (yyvsp[(3) - (5)].boolean), (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node));
24229: 				;}
24230:     break;
24231: 
24232:   case 550:
24233: #line 266 "third_party/libpg_query/grammar/statements/select.y"
24234:     {
24235: 					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
24236: 				;}
24237:     break;
24238: 
24239:   case 551:
24240: #line 270 "third_party/libpg_query/grammar/statements/select.y"
24241:     {
24242: 					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
24243: 				;}
24244:     break;
24245: 
24246:   case 552:
24247: #line 274 "third_party/libpg_query/grammar/statements/select.y"
24248:     {
24249: 					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
24250: 				;}
24251:     break;
24252: 
24253:   case 553:
24254: #line 278 "third_party/libpg_query/grammar/statements/select.y"
24255:     {
24256: 					PGSelectStmt *res = makeNode(PGSelectStmt);
24257: 					PGPivotStmt *n = makeNode(PGPivotStmt);
24258: 					n->source = (yyvsp[(2) - (4)].node);
24259: 					n->aggrs = (yyvsp[(4) - (4)].list);
24260: 					n->location = (yylsp[(1) - (4)]);
24261: 					res->pivot = n;
24262: 					(yyval.node) = (PGNode *)res;
24263: 				;}
24264:     break;
24265: 
24266:   case 554:
24267: #line 288 "third_party/libpg_query/grammar/statements/select.y"
24268:     {
24269: 					PGSelectStmt *res = makeNode(PGSelectStmt);
24270: 					PGPivotStmt *n = makeNode(PGPivotStmt);
24271: 					n->source = (yyvsp[(2) - (7)].node);
24272: 					n->aggrs = (yyvsp[(4) - (7)].list);
24273: 					n->groups = (yyvsp[(7) - (7)].list);
24274: 					n->location = (yylsp[(1) - (7)]);
24275: 					res->pivot = n;
24276: 					(yyval.node) = (PGNode *)res;
24277: 				;}
24278:     break;
24279: 
24280:   case 555:
24281: #line 299 "third_party/libpg_query/grammar/statements/select.y"
24282:     {
24283: 					PGSelectStmt *res = makeNode(PGSelectStmt);
24284: 					PGPivotStmt *n = makeNode(PGPivotStmt);
24285: 					n->source = (yyvsp[(2) - (5)].node);
24286: 					n->groups = (yyvsp[(5) - (5)].list);
24287: 					n->location = (yylsp[(1) - (5)]);
24288: 					res->pivot = n;
24289: 					(yyval.node) = (PGNode *)res;
24290: 				;}
24291:     break;
24292: 
24293:   case 556:
24294: #line 309 "third_party/libpg_query/grammar/statements/select.y"
24295:     {
24296: 					PGSelectStmt *res = makeNode(PGSelectStmt);
24297: 					PGPivotStmt *n = makeNode(PGPivotStmt);
24298: 					n->source = (yyvsp[(2) - (4)].node);
24299: 					n->columns = (yyvsp[(4) - (4)].list);
24300: 					res->pivot = n;
24301: 					(yyval.node) = (PGNode *)res;
24302: 				;}
24303:     break;
24304: 
24305:   case 557:
24306: #line 318 "third_party/libpg_query/grammar/statements/select.y"
24307:     {
24308: 					PGSelectStmt *res = makeNode(PGSelectStmt);
24309: 					PGPivotStmt *n = makeNode(PGPivotStmt);
24310: 					n->source = (yyvsp[(2) - (7)].node);
24311: 					n->columns = (yyvsp[(4) - (7)].list);
24312: 					n->groups = (yyvsp[(7) - (7)].list);
24313: 					n->location = (yylsp[(1) - (7)]);
24314: 					res->pivot = n;
24315: 					(yyval.node) = (PGNode *)res;
24316: 				;}
24317:     break;
24318: 
24319:   case 558:
24320: #line 329 "third_party/libpg_query/grammar/statements/select.y"
24321:     {
24322: 					PGSelectStmt *res = makeNode(PGSelectStmt);
24323: 					PGPivotStmt *n = makeNode(PGPivotStmt);
24324: 					n->source = (yyvsp[(2) - (6)].node);
24325: 					n->columns = (yyvsp[(4) - (6)].list);
24326: 					n->aggrs = (yyvsp[(6) - (6)].list);
24327: 					n->location = (yylsp[(1) - (6)]);
24328: 					res->pivot = n;
24329: 					(yyval.node) = (PGNode *)res;
24330: 				;}
24331:     break;
24332: 
24333:   case 559:
24334: #line 340 "third_party/libpg_query/grammar/statements/select.y"
24335:     {
24336: 					PGSelectStmt *res = makeNode(PGSelectStmt);
24337: 					PGPivotStmt *n = makeNode(PGPivotStmt);
24338: 					n->source = (yyvsp[(2) - (9)].node);
24339: 					n->columns = (yyvsp[(4) - (9)].list);
24340: 					n->aggrs = (yyvsp[(6) - (9)].list);
24341: 					n->groups = (yyvsp[(9) - (9)].list);
24342: 					n->location = (yylsp[(1) - (9)]);
24343: 					res->pivot = n;
24344: 					(yyval.node) = (PGNode *)res;
24345: 				;}
24346:     break;
24347: 
24348:   case 560:
24349: #line 352 "third_party/libpg_query/grammar/statements/select.y"
24350:     {
24351: 					PGSelectStmt *res = makeNode(PGSelectStmt);
24352: 					PGPivotStmt *n = makeNode(PGPivotStmt);
24353: 					n->source = (yyvsp[(2) - (9)].node);
24354: 					n->unpivots = (yyvsp[(9) - (9)].list);
24355: 					n->location = (yylsp[(1) - (9)]);
24356: 					PGPivot *piv = makeNode(PGPivot);
24357: 					piv->unpivot_columns = list_make1(makeString((yyvsp[(7) - (9)].str)));
24358: 					piv->pivot_value = (yyvsp[(4) - (9)].list);
24359: 					n->columns = list_make1(piv);
24360: 
24361: 					res->pivot = n;
24362: 					(yyval.node) = (PGNode *)res;
24363: 				;}
24364:     break;
24365: 
24366:   case 561:
24367: #line 367 "third_party/libpg_query/grammar/statements/select.y"
24368:     {
24369: 					PGSelectStmt *res = makeNode(PGSelectStmt);
24370: 					PGPivotStmt *n = makeNode(PGPivotStmt);
24371: 					n->source = (yyvsp[(2) - (4)].node);
24372: 					n->unpivots = list_make1(makeString("value"));
24373: 					n->location = (yylsp[(1) - (4)]);
24374: 					PGPivot *piv = makeNode(PGPivot);
24375: 					piv->unpivot_columns = list_make1(makeString("name"));
24376: 					piv->pivot_value = (yyvsp[(4) - (4)].list);
24377: 					n->columns = list_make1(piv);
24378: 
24379: 					res->pivot = n;
24380: 					(yyval.node) = (PGNode *)res;
24381: 				;}
24382:     break;
24383: 
24384:   case 568:
24385: #line 397 "third_party/libpg_query/grammar/statements/select.y"
24386:     {
24387: 				PGPivot *n = makeNode(PGPivot);
24388: 				n->pivot_columns = list_make1((yyvsp[(1) - (1)].node));
24389: 				(yyval.node) = (PGNode *) n;
24390: 			;}
24391:     break;
24392: 
24393:   case 569:
24394: #line 403 "third_party/libpg_query/grammar/statements/select.y"
24395:     {
24396: 				PGPivot *n = makeNode(PGPivot);
24397: 				n->pivot_columns = list_make1((yyvsp[(1) - (5)].node));
24398: 				n->subquery = (yyvsp[(4) - (5)].node);
24399: 				(yyval.node) = (PGNode *) n;
24400: 			;}
24401:     break;
24402: 
24403:   case 570:
24404: #line 409 "third_party/libpg_query/grammar/statements/select.y"
24405:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
24406:     break;
24407: 
24408:   case 571:
24409: #line 413 "third_party/libpg_query/grammar/statements/select.y"
24410:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
24411:     break;
24412: 
24413:   case 572:
24414: #line 414 "third_party/libpg_query/grammar/statements/select.y"
24415:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
24416:     break;
24417: 
24418:   case 573:
24419: #line 418 "third_party/libpg_query/grammar/statements/select.y"
24420:     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
24421:     break;
24422: 
24423:   case 574:
24424: #line 419 "third_party/libpg_query/grammar/statements/select.y"
24425:     { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
24426:     break;
24427: 
24428:   case 575:
24429: #line 434 "third_party/libpg_query/grammar/statements/select.y"
24430:     {
24431: 				(yyval.with) = makeNode(PGWithClause);
24432: 				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
24433: 				(yyval.with)->recursive = false;
24434: 				(yyval.with)->location = (yylsp[(1) - (2)]);
24435: 			;}
24436:     break;
24437: 
24438:   case 576:
24439: #line 441 "third_party/libpg_query/grammar/statements/select.y"
24440:     {
24441: 				(yyval.with) = makeNode(PGWithClause);
24442: 				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
24443: 				(yyval.with)->recursive = false;
24444: 				(yyval.with)->location = (yylsp[(1) - (2)]);
24445: 			;}
24446:     break;
24447: 
24448:   case 577:
24449: #line 448 "third_party/libpg_query/grammar/statements/select.y"
24450:     {
24451: 				(yyval.with) = makeNode(PGWithClause);
24452: 				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
24453: 				(yyval.with)->recursive = true;
24454: 				(yyval.with)->location = (yylsp[(1) - (3)]);
24455: 			;}
24456:     break;
24457: 
24458:   case 578:
24459: #line 457 "third_party/libpg_query/grammar/statements/select.y"
24460:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
24461:     break;
24462: 
24463:   case 579:
24464: #line 458 "third_party/libpg_query/grammar/statements/select.y"
24465:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
24466:     break;
24467: 
24468:   case 580:
24469: #line 462 "third_party/libpg_query/grammar/statements/select.y"
24470:     {
24471: 				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
24472: 				n->ctename = (yyvsp[(1) - (7)].str);
24473: 				n->aliascolnames = (yyvsp[(2) - (7)].list);
24474: 				n->ctematerialized = (yyvsp[(4) - (7)].ctematerialize);
24475: 				n->ctequery = (yyvsp[(6) - (7)].node);
24476: 				n->location = (yylsp[(1) - (7)]);
24477: 				(yyval.node) = (PGNode *) n;
24478: 			;}
24479:     break;
24480: 
24481:   case 581:
24482: #line 474 "third_party/libpg_query/grammar/statements/select.y"
24483:     { (yyval.ctematerialize) = PGCTEMaterializeAlways; ;}
24484:     break;
24485: 
24486:   case 582:
24487: #line 475 "third_party/libpg_query/grammar/statements/select.y"
24488:     { (yyval.ctematerialize) = PGCTEMaterializeNever; ;}
24489:     break;
24490: 
24491:   case 583:
24492: #line 476 "third_party/libpg_query/grammar/statements/select.y"
24493:     { (yyval.ctematerialize) = PGCTEMaterializeDefault; ;}
24494:     break;
24495: 
24496:   case 584:
24497: #line 481 "third_party/libpg_query/grammar/statements/select.y"
24498:     {
24499: 					(yyval.into) = makeNode(PGIntoClause);
24500: 					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
24501: 					(yyval.into)->colNames = NIL;
24502: 					(yyval.into)->options = NIL;
24503: 					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
24504: 					(yyval.into)->viewQuery = NULL;
24505: 					(yyval.into)->skipData = false;
24506: 				;}
24507:     break;
24508: 
24509:   case 585:
24510: #line 491 "third_party/libpg_query/grammar/statements/select.y"
24511:     { (yyval.into) = NULL; ;}
24512:     break;
24513: 
24514:   case 586:
24515: #line 500 "third_party/libpg_query/grammar/statements/select.y"
24516:     {
24517: 					(yyval.range) = (yyvsp[(3) - (3)].range);
24518: 					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
24519: 				;}
24520:     break;
24521: 
24522:   case 587:
24523: #line 505 "third_party/libpg_query/grammar/statements/select.y"
24524:     {
24525: 					(yyval.range) = (yyvsp[(3) - (3)].range);
24526: 					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
24527: 				;}
24528:     break;
24529: 
24530:   case 588:
24531: #line 510 "third_party/libpg_query/grammar/statements/select.y"
24532:     {
24533: 					(yyval.range) = (yyvsp[(4) - (4)].range);
24534: 					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
24535: 				;}
24536:     break;
24537: 
24538:   case 589:
24539: #line 515 "third_party/libpg_query/grammar/statements/select.y"
24540:     {
24541: 					(yyval.range) = (yyvsp[(4) - (4)].range);
24542: 					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
24543: 				;}
24544:     break;
24545: 
24546:   case 590:
24547: #line 520 "third_party/libpg_query/grammar/statements/select.y"
24548:     {
24549: 					ereport(PGWARNING,
24550: 							(errmsg("GLOBAL is deprecated in temporary table creation"),
24551: 							 parser_errposition((yylsp[(1) - (4)]))));
24552: 					(yyval.range) = (yyvsp[(4) - (4)].range);
24553: 					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
24554: 				;}
24555:     break;
24556: 
24557:   case 591:
24558: #line 528 "third_party/libpg_query/grammar/statements/select.y"
24559:     {
24560: 					ereport(PGWARNING,
24561: 							(errmsg("GLOBAL is deprecated in temporary table creation"),
24562: 							 parser_errposition((yylsp[(1) - (4)]))));
24563: 					(yyval.range) = (yyvsp[(4) - (4)].range);
24564: 					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
24565: 				;}
24566:     break;
24567: 
24568:   case 592:
24569: #line 536 "third_party/libpg_query/grammar/statements/select.y"
24570:     {
24571: 					(yyval.range) = (yyvsp[(3) - (3)].range);
24572: 					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
24573: 				;}
24574:     break;
24575: 
24576:   case 593:
24577: #line 541 "third_party/libpg_query/grammar/statements/select.y"
24578:     {
24579: 					(yyval.range) = (yyvsp[(2) - (2)].range);
24580: 					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
24581: 				;}
24582:     break;
24583: 
24584:   case 594:
24585: #line 546 "third_party/libpg_query/grammar/statements/select.y"
24586:     {
24587: 					(yyval.range) = (yyvsp[(1) - (1)].range);
24588: 					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
24589: 				;}
24590:     break;
24591: 
24592:   case 595:
24593: #line 552 "third_party/libpg_query/grammar/statements/select.y"
24594:     {;}
24595:     break;
24596: 
24597:   case 596:
24598: #line 553 "third_party/libpg_query/grammar/statements/select.y"
24599:     {;}
24600:     break;
24601: 
24602:   case 597:
24603: #line 557 "third_party/libpg_query/grammar/statements/select.y"
24604:     { (yyval.boolean) = true; ;}
24605:     break;
24606: 
24607:   case 598:
24608: #line 558 "third_party/libpg_query/grammar/statements/select.y"
24609:     { (yyval.boolean) = false; ;}
24610:     break;
24611: 
24612:   case 599:
24613: #line 559 "third_party/libpg_query/grammar/statements/select.y"
24614:     { (yyval.boolean) = false; ;}
24615:     break;
24616: 
24617:   case 600:
24618: #line 563 "third_party/libpg_query/grammar/statements/select.y"
24619:     { ;}
24620:     break;
24621: 
24622:   case 601:
24623: #line 570 "third_party/libpg_query/grammar/statements/select.y"
24624:     { (yyval.list) = list_make1(NIL); ;}
24625:     break;
24626: 
24627:   case 602:
24628: #line 571 "third_party/libpg_query/grammar/statements/select.y"
24629:     { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
24630:     break;
24631: 
24632:   case 603:
24633: #line 575 "third_party/libpg_query/grammar/statements/select.y"
24634:     { (yyval.list) = NIL;;}
24635:     break;
24636: 
24637:   case 604:
24638: #line 576 "third_party/libpg_query/grammar/statements/select.y"
24639:     { (yyval.list) = NIL; ;}
24640:     break;
24641: 
24642:   case 605:
24643: #line 580 "third_party/libpg_query/grammar/statements/select.y"
24644:     { (yyval.ignorenulls) = PG_IGNORE_NULLS;;}
24645:     break;
24646: 
24647:   case 606:
24648: #line 581 "third_party/libpg_query/grammar/statements/select.y"
24649:     { (yyval.ignorenulls) = PG_RESPECT_NULLS;;}
24650:     break;
24651: 
24652:   case 607:
24653: #line 582 "third_party/libpg_query/grammar/statements/select.y"
24654:     { (yyval.ignorenulls) = PG_DEFAULT_NULLS; ;}
24655:     break;
24656: 
24657:   case 608:
24658: #line 586 "third_party/libpg_query/grammar/statements/select.y"
24659:     { (yyval.list) = (yyvsp[(1) - (1)].list);;}
24660:     break;
24661: 
24662:   case 609:
24663: #line 587 "third_party/libpg_query/grammar/statements/select.y"
24664:     { (yyval.list) = NIL; ;}
24665:     break;
24666: 
24667:   case 610:
24668: #line 591 "third_party/libpg_query/grammar/statements/select.y"
24669:     { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
24670:     break;
24671: 
24672:   case 611:
24673: #line 593 "third_party/libpg_query/grammar/statements/select.y"
24674:     {
24675: 					PGSortBy *sort = makeNode(PGSortBy);
24676: 					PGAStar *star = makeNode(PGAStar);
24677: 					star->columns = true;
24678: 					star->location = (yylsp[(3) - (5)]);
24679: 					sort->node = (PGNode *) star;
24680: 					sort->sortby_dir = (yyvsp[(4) - (5)].sortorder);
24681: 					sort->sortby_nulls = (yyvsp[(5) - (5)].nullorder);
24682: 					sort->useOp = NIL;
24683: 					sort->location = -1;		/* no operator */
24684: 					(yyval.list) = list_make1(sort);
24685: 				;}
24686:     break;
24687: 
24688:   case 612:
24689: #line 608 "third_party/libpg_query/grammar/statements/select.y"
24690:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
24691:     break;
24692: 
24693:   case 613:
24694: #line 609 "third_party/libpg_query/grammar/statements/select.y"
24695:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
24696:     break;
24697: 
24698:   case 614:
24699: #line 613 "third_party/libpg_query/grammar/statements/select.y"
24700:     {
24701: 					(yyval.sortby) = makeNode(PGSortBy);
24702: 					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
24703: 					(yyval.sortby)->sortby_dir = SORTBY_USING;
24704: 					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
24705: 					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
24706: 					(yyval.sortby)->location = (yylsp[(3) - (4)]);
24707: 				;}
24708:     break;
24709: 
24710:   case 615:
24711: #line 622 "third_party/libpg_query/grammar/statements/select.y"
24712:     {
24713: 					(yyval.sortby) = makeNode(PGSortBy);
24714: 					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
24715: 					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
24716: 					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
24717: 					(yyval.sortby)->useOp = NIL;
24718: 					(yyval.sortby)->location = -1;		/* no operator */
24719: 				;}
24720:     break;
24721: 
24722:   case 616:
24723: #line 632 "third_party/libpg_query/grammar/statements/select.y"
24724:     { (yyval.sortorder) = PG_SORTBY_ASC; ;}
24725:     break;
24726: 
24727:   case 617:
24728: #line 633 "third_party/libpg_query/grammar/statements/select.y"
24729:     { (yyval.sortorder) = PG_SORTBY_DESC; ;}
24730:     break;
24731: 
24732:   case 618:
24733: #line 634 "third_party/libpg_query/grammar/statements/select.y"
24734:     { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
24735:     break;
24736: 
24737:   case 619:
24738: #line 637 "third_party/libpg_query/grammar/statements/select.y"
24739:     { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
24740:     break;
24741: 
24742:   case 620:
24743: #line 638 "third_party/libpg_query/grammar/statements/select.y"
24744:     { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
24745:     break;
24746: 
24747:   case 621:
24748: #line 639 "third_party/libpg_query/grammar/statements/select.y"
24749:     { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
24750:     break;
24751: 
24752:   case 622:
24753: #line 643 "third_party/libpg_query/grammar/statements/select.y"
24754:     { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
24755:     break;
24756: 
24757:   case 623:
24758: #line 644 "third_party/libpg_query/grammar/statements/select.y"
24759:     { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
24760:     break;
24761: 
24762:   case 624:
24763: #line 645 "third_party/libpg_query/grammar/statements/select.y"
24764:     { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
24765:     break;
24766: 
24767:   case 625:
24768: #line 646 "third_party/libpg_query/grammar/statements/select.y"
24769:     { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
24770:     break;
24771: 
24772:   case 626:
24773: #line 650 "third_party/libpg_query/grammar/statements/select.y"
24774:     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
24775:     break;
24776: 
24777:   case 627:
24778: #line 651 "third_party/libpg_query/grammar/statements/select.y"
24779:     { (yyval.list) = list_make2(NULL,NULL); ;}
24780:     break;
24781: 
24782:   case 628:
24783: #line 656 "third_party/libpg_query/grammar/statements/select.y"
24784:     { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
24785:     break;
24786: 
24787:   case 629:
24788: #line 658 "third_party/libpg_query/grammar/statements/select.y"
24789:     {
24790: 					/* Disabled because it was too confusing, bjm 2002-02-18 */
24791: 					ereport(ERROR,
24792: 							(errcode(PG_ERRCODE_SYNTAX_ERROR),
24793: 							 errmsg("LIMIT #,# syntax is not supported"),
24794: 							 errhint("Use separate LIMIT and OFFSET clauses."),
24795: 							 parser_errposition((yylsp[(1) - (4)]))));
24796: 				;}
24797:     break;
24798: 
24799:   case 630:
24800: #line 674 "third_party/libpg_query/grammar/statements/select.y"
24801:     { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
24802:     break;
24803: 
24804:   case 631:
24805: #line 676 "third_party/libpg_query/grammar/statements/select.y"
24806:     { (yyval.node) = makeIntConst(1, -1); ;}
24807:     break;
24808: 
24809:   case 632:
24810: #line 681 "third_party/libpg_query/grammar/statements/select.y"
24811:     { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
24812:     break;
24813: 
24814:   case 633:
24815: #line 684 "third_party/libpg_query/grammar/statements/select.y"
24816:     { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
24817:     break;
24818: 
24819:   case 634:
24820: #line 692 "third_party/libpg_query/grammar/statements/select.y"
24821:     {
24822: 			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
24823: 		;}
24824:     break;
24825: 
24826:   case 635:
24827: #line 696 "third_party/libpg_query/grammar/statements/select.y"
24828:     {
24829: 			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
24830: 		;}
24831:     break;
24832: 
24833:   case 636:
24834: #line 700 "third_party/libpg_query/grammar/statements/select.y"
24835:     {
24836: 			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
24837: 		;}
24838:     break;
24839: 
24840:   case 637:
24841: #line 704 "third_party/libpg_query/grammar/statements/select.y"
24842:     {
24843: 			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
24844: 		;}
24845:     break;
24846: 
24847:   case 638:
24848: #line 708 "third_party/libpg_query/grammar/statements/select.y"
24849:     {
24850: 			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
24851: 		;}
24852:     break;
24853: 
24854:   case 639:
24855: #line 712 "third_party/libpg_query/grammar/statements/select.y"
24856:     {
24857: 			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
24858: 		;}
24859:     break;
24860: 
24861:   case 640:
24862: #line 719 "third_party/libpg_query/grammar/statements/select.y"
24863:     {
24864: 					(yyval.node) = (yyvsp[(3) - (3)].node);
24865: 				;}
24866:     break;
24867: 
24868:   case 641:
24869: #line 723 "third_party/libpg_query/grammar/statements/select.y"
24870:     { (yyval.node) = NULL; ;}
24871:     break;
24872: 
24873:   case 642:
24874: #line 730 "third_party/libpg_query/grammar/statements/select.y"
24875:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
24876:     break;
24877: 
24878:   case 643:
24879: #line 731 "third_party/libpg_query/grammar/statements/select.y"
24880:     { (yyval.str) = NULL; ;}
24881:     break;
24882: 
24883:   case 644:
24884: #line 736 "third_party/libpg_query/grammar/statements/select.y"
24885:     {
24886: 					int seed = (yyvsp[(5) - (5)].ival);
24887: 					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), &seed, (yylsp[(1) - (5)]));
24888: 				;}
24889:     break;
24890: 
24891:   case 645:
24892: #line 741 "third_party/libpg_query/grammar/statements/select.y"
24893:     {
24894: 			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, NULL, (yylsp[(1) - (1)]));
24895: 		;}
24896:     break;
24897: 
24898:   case 646:
24899: #line 745 "third_party/libpg_query/grammar/statements/select.y"
24900:     {
24901: 			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), NULL, (yylsp[(1) - (4)]));
24902: 		;}
24903:     break;
24904: 
24905:   case 647:
24906: #line 749 "third_party/libpg_query/grammar/statements/select.y"
24907:     {
24908: 			int seed = (yyvsp[(5) - (6)].ival);
24909: 			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), &seed, (yylsp[(1) - (6)]));
24910: 		;}
24911:     break;
24912: 
24913:   case 648:
24914: #line 757 "third_party/libpg_query/grammar/statements/select.y"
24915:     {
24916: 					(yyval.node) = (yyvsp[(2) - (2)].node);
24917: 				;}
24918:     break;
24919: 
24920:   case 649:
24921: #line 763 "third_party/libpg_query/grammar/statements/select.y"
24922:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
24923:     break;
24924: 
24925:   case 650:
24926: #line 764 "third_party/libpg_query/grammar/statements/select.y"
24927:     { (yyval.node) = NULL; ;}
24928:     break;
24929: 
24930:   case 651:
24931: #line 769 "third_party/libpg_query/grammar/statements/select.y"
24932:     { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
24933:     break;
24934: 
24935:   case 652:
24936: #line 770 "third_party/libpg_query/grammar/statements/select.y"
24937:     { (yyval.ival) = -1; ;}
24938:     break;
24939: 
24940:   case 653:
24941: #line 774 "third_party/libpg_query/grammar/statements/select.y"
24942:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
24943:     break;
24944: 
24945:   case 654:
24946: #line 776 "third_party/libpg_query/grammar/statements/select.y"
24947:     {
24948: 					/* LIMIT ALL is represented as a NULL constant */
24949: 					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
24950: 				;}
24951:     break;
24952: 
24953:   case 655:
24954: #line 781 "third_party/libpg_query/grammar/statements/select.y"
24955:     { (yyval.node) = makeLimitPercent((yyvsp[(1) - (2)].node)); ;}
24956:     break;
24957: 
24958:   case 656:
24959: #line 783 "third_party/libpg_query/grammar/statements/select.y"
24960:     { (yyval.node) = makeLimitPercent(makeFloatConst((yyvsp[(1) - (2)].str),(yylsp[(1) - (2)]))); ;}
24961:     break;
24962: 
24963:   case 657:
24964: #line 785 "third_party/libpg_query/grammar/statements/select.y"
24965:     { (yyval.node) = makeLimitPercent(makeIntConst((yyvsp[(1) - (2)].ival),(yylsp[(1) - (2)]))); ;}
24966:     break;
24967: 
24968:   case 658:
24969: #line 789 "third_party/libpg_query/grammar/statements/select.y"
24970:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
24971:     break;
24972: 
24973:   case 659:
24974: #line 809 "third_party/libpg_query/grammar/statements/select.y"
24975:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
24976:     break;
24977: 
24978:   case 660:
24979: #line 811 "third_party/libpg_query/grammar/statements/select.y"
24980:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
24981:     break;
24982: 
24983:   case 661:
24984: #line 813 "third_party/libpg_query/grammar/statements/select.y"
24985:     { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
24986:     break;
24987: 
24988:   case 662:
24989: #line 817 "third_party/libpg_query/grammar/statements/select.y"
24990:     { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
24991:     break;
24992: 
24993:   case 663:
24994: #line 818 "third_party/libpg_query/grammar/statements/select.y"
24995:     { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
24996:     break;
24997: 
24998:   case 664:
24999: #line 822 "third_party/libpg_query/grammar/statements/select.y"
25000:     { (yyval.ival) = 0; ;}
25001:     break;
25002: 
25003:   case 665:
25004: #line 823 "third_party/libpg_query/grammar/statements/select.y"
25005:     { (yyval.ival) = 0; ;}
25006:     break;
25007: 
25008:   case 666:
25009: #line 826 "third_party/libpg_query/grammar/statements/select.y"
25010:     { (yyval.ival) = 0; ;}
25011:     break;
25012: 
25013:   case 667:
25014: #line 827 "third_party/libpg_query/grammar/statements/select.y"
25015:     { (yyval.ival) = 0; ;}
25016:     break;
25017: 
25018:   case 668:
25019: #line 852 "third_party/libpg_query/grammar/statements/select.y"
25020:     { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
25021:     break;
25022: 
25023:   case 669:
25024: #line 854 "third_party/libpg_query/grammar/statements/select.y"
25025:     {
25026: 					PGNode *node = (PGNode *) makeGroupingSet(GROUPING_SET_ALL, NIL, (yylsp[(3) - (3)]));
25027: 					(yyval.list) = list_make1(node);
25028: 				;}
25029:     break;
25030: 
25031:   case 670:
25032: #line 858 "third_party/libpg_query/grammar/statements/select.y"
25033:     { (yyval.list) = NIL; ;}
25034:     break;
25035: 
25036:   case 671:
25037: #line 862 "third_party/libpg_query/grammar/statements/select.y"
25038:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
25039:     break;
25040: 
25041:   case 672:
25042: #line 863 "third_party/libpg_query/grammar/statements/select.y"
25043:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
25044:     break;
25045: 
25046:   case 673:
25047: #line 867 "third_party/libpg_query/grammar/statements/select.y"
25048:     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
25049:     break;
25050: 
25051:   case 674:
25052: #line 868 "third_party/libpg_query/grammar/statements/select.y"
25053:     { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
25054:     break;
25055: 
25056:   case 675:
25057: #line 872 "third_party/libpg_query/grammar/statements/select.y"
25058:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
25059:     break;
25060: 
25061:   case 676:
25062: #line 873 "third_party/libpg_query/grammar/statements/select.y"
25063:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
25064:     break;
25065: 
25066:   case 677:
25067: #line 874 "third_party/libpg_query/grammar/statements/select.y"
25068:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
25069:     break;
25070: 
25071:   case 678:
25072: #line 875 "third_party/libpg_query/grammar/statements/select.y"
25073:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
25074:     break;
25075: 
25076:   case 679:
25077: #line 876 "third_party/libpg_query/grammar/statements/select.y"
25078:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
25079:     break;
25080: 
25081:   case 680:
25082: #line 881 "third_party/libpg_query/grammar/statements/select.y"
25083:     {
25084: 					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
25085: 				;}
25086:     break;
25087: 
25088:   case 681:
25089: #line 894 "third_party/libpg_query/grammar/statements/select.y"
25090:     {
25091: 					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_ROLLUP, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
25092: 				;}
25093:     break;
25094: 
25095:   case 682:
25096: #line 901 "third_party/libpg_query/grammar/statements/select.y"
25097:     {
25098: 					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_CUBE, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
25099: 				;}
25100:     break;
25101: 
25102:   case 683:
25103: #line 908 "third_party/libpg_query/grammar/statements/select.y"
25104:     {
25105: 					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_SETS, (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
25106: 				;}
25107:     break;
25108: 
25109:   case 684:
25110: #line 914 "third_party/libpg_query/grammar/statements/select.y"
25111:     { (yyval.node) = NULL; ;}
25112:     break;
25113: 
25114:   case 685:
25115: #line 915 "third_party/libpg_query/grammar/statements/select.y"
25116:     { (yyval.node) = NULL; ;}
25117:     break;
25118: 
25119:   case 686:
25120: #line 919 "third_party/libpg_query/grammar/statements/select.y"
25121:     { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
25122:     break;
25123: 
25124:   case 687:
25125: #line 920 "third_party/libpg_query/grammar/statements/select.y"
25126:     { (yyval.node) = NULL; ;}
25127:     break;
25128: 
25129:   case 688:
25130: #line 924 "third_party/libpg_query/grammar/statements/select.y"
25131:     { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
25132:     break;
25133: 
25134:   case 689:
25135: #line 925 "third_party/libpg_query/grammar/statements/select.y"
25136:     { (yyval.node) = NULL; ;}
25137:     break;
25138: 
25139:   case 690:
25140: #line 929 "third_party/libpg_query/grammar/statements/select.y"
25141:     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
25142:     break;
25143: 
25144:   case 691:
25145: #line 930 "third_party/libpg_query/grammar/statements/select.y"
25146:     { (yyval.list) = NIL; ;}
25147:     break;
25148: 
25149:   case 692:
25150: #line 934 "third_party/libpg_query/grammar/statements/select.y"
25151:     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
25152:     break;
25153: 
25154:   case 693:
25155: #line 935 "third_party/libpg_query/grammar/statements/select.y"
25156:     { (yyval.list) = NIL; ;}
25157:     break;
25158: 
25159:   case 694:
25160: #line 939 "third_party/libpg_query/grammar/statements/select.y"
25161:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
25162:     break;
25163: 
25164:   case 695:
25165: #line 940 "third_party/libpg_query/grammar/statements/select.y"
25166:     { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
25167:     break;
25168: 
25169:   case 696:
25170: #line 945 "third_party/libpg_query/grammar/statements/select.y"
25171:     {
25172: 					PGLockingClause *n = makeNode(PGLockingClause);
25173: 					n->lockedRels = (yyvsp[(2) - (3)].list);
25174: 					n->strength = (yyvsp[(1) - (3)].lockstrength);
25175: 					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
25176: 					(yyval.node) = (PGNode *) n;
25177: 				;}
25178:     break;
25179: 
25180:   case 697:
25181: #line 955 "third_party/libpg_query/grammar/statements/select.y"
25182:     { (yyval.lockstrength) = LCS_FORUPDATE; ;}
25183:     break;
25184: 
25185:   case 698:
25186: #line 956 "third_party/libpg_query/grammar/statements/select.y"
25187:     { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
25188:     break;
25189: 
25190:   case 699:
25191: #line 957 "third_party/libpg_query/grammar/statements/select.y"
25192:     { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
25193:     break;
25194: 
25195:   case 700:
25196: #line 958 "third_party/libpg_query/grammar/statements/select.y"
25197:     { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
25198:     break;
25199: 
25200:   case 701:
25201: #line 962 "third_party/libpg_query/grammar/statements/select.y"
25202:     { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
25203:     break;
25204: 
25205:   case 702:
25206: #line 963 "third_party/libpg_query/grammar/statements/select.y"
25207:     { (yyval.list) = NIL; ;}
25208:     break;
25209: 
25210:   case 703:
25211: #line 968 "third_party/libpg_query/grammar/statements/select.y"
25212:     { (yyval.lockwaitpolicy) = LockWaitError; ;}
25213:     break;
25214: 
25215:   case 704:
25216: #line 969 "third_party/libpg_query/grammar/statements/select.y"
25217:     { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
25218:     break;
25219: 
25220:   case 705:
25221: #line 970 "third_party/libpg_query/grammar/statements/select.y"
25222:     { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
25223:     break;
25224: 
25225:   case 706:
25226: #line 980 "third_party/libpg_query/grammar/statements/select.y"
25227:     {
25228: 					PGSelectStmt *n = makeNode(PGSelectStmt);
25229: 					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
25230: 					(yyval.node) = (PGNode *) n;
25231: 				;}
25232:     break;
25233: 
25234:   case 707:
25235: #line 986 "third_party/libpg_query/grammar/statements/select.y"
25236:     {
25237: 					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
25238: 					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
25239: 					(yyval.node) = (PGNode *) n;
25240: 				;}
25241:     break;
25242: 
25243:   case 708:
25244: #line 994 "third_party/libpg_query/grammar/statements/select.y"
25245:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
25246:     break;
25247: 
25248:   case 709:
25249: #line 995 "third_party/libpg_query/grammar/statements/select.y"
25250:     { (yyval.node) = (yyvsp[(1) - (2)].node); ;}
25251:     break;
25252: 
25253:   case 710:
25254: #line 1008 "third_party/libpg_query/grammar/statements/select.y"
25255:     { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
25256:     break;
25257: 
25258:   case 711:
25259: #line 1009 "third_party/libpg_query/grammar/statements/select.y"
25260:     { (yyval.list) = NIL; ;}
25261:     break;
25262: 
25263:   case 712:
25264: #line 1013 "third_party/libpg_query/grammar/statements/select.y"
25265:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
25266:     break;
25267: 
25268:   case 713:
25269: #line 1014 "third_party/libpg_query/grammar/statements/select.y"
25270:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
25271:     break;
25272: 
25273:   case 714:
25274: #line 1018 "third_party/libpg_query/grammar/statements/select.y"
25275:     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
25276:     break;
25277: 
25278:   case 715:
25279: #line 1019 "third_party/libpg_query/grammar/statements/select.y"
25280:     { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
25281:     break;
25282: 
25283:   case 716:
25284: #line 1026 "third_party/libpg_query/grammar/statements/select.y"
25285:     {
25286: 					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
25287: 					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
25288: 					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
25289: 				;}
25290:     break;
25291: 
25292:   case 717:
25293: #line 1032 "third_party/libpg_query/grammar/statements/select.y"
25294:     {
25295: 					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
25296: 					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
25297: 					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
25298: 					n->sample = (yyvsp[(3) - (3)].node);
25299: 					(yyval.node) = (PGNode *) n;
25300: 				;}
25301:     break;
25302: 
25303:   case 718:
25304: #line 1040 "third_party/libpg_query/grammar/statements/select.y"
25305:     {
25306: 				PGRangeSubselect *n = makeNode(PGRangeSubselect);
25307: 				n->lateral = false;
25308: 				n->subquery = (yyvsp[(1) - (3)].node);
25309: 				n->alias = (yyvsp[(2) - (3)].alias);
25310: 				n->sample = (yyvsp[(3) - (3)].node);
25311: 				(yyval.node) = (PGNode *) n;
25312: 			;}
25313:     break;
25314: 
25315:   case 719:
25316: #line 1049 "third_party/libpg_query/grammar/statements/select.y"
25317:     {
25318: 					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
25319: 					n->lateral = true;
25320: 					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
25321: 					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
25322: 					(yyval.node) = (PGNode *) n;
25323: 				;}
25324:     break;
25325: 
25326:   case 720:
25327: #line 1057 "third_party/libpg_query/grammar/statements/select.y"
25328:     {
25329: 					PGRangeSubselect *n = makeNode(PGRangeSubselect);
25330: 					n->lateral = false;
25331: 					n->subquery = (yyvsp[(1) - (3)].node);
25332: 					n->alias = (yyvsp[(2) - (3)].alias);
25333: 					n->sample = (yyvsp[(3) - (3)].node);
25334: 					(yyval.node) = (PGNode *) n;
25335: 				;}
25336:     break;
25337: 
25338:   case 721:
25339: #line 1066 "third_party/libpg_query/grammar/statements/select.y"
25340:     {
25341: 					PGRangeSubselect *n = makeNode(PGRangeSubselect);
25342: 					n->lateral = true;
25343: 					n->subquery = (yyvsp[(2) - (3)].node);
25344: 					n->alias = (yyvsp[(3) - (3)].alias);
25345: 					n->sample = NULL;
25346: 					(yyval.node) = (PGNode *) n;
25347: 				;}
25348:     break;
25349: 
25350:   case 722:
25351: #line 1075 "third_party/libpg_query/grammar/statements/select.y"
25352:     {
25353: 					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
25354: 				;}
25355:     break;
25356: 
25357:   case 723:
25358: #line 1079 "third_party/libpg_query/grammar/statements/select.y"
25359:     {
25360: 					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
25361: 					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
25362: 				;}
25363:     break;
25364: 
25365:   case 724:
25366: #line 1084 "third_party/libpg_query/grammar/statements/select.y"
25367:     {
25368: 					PGPivotExpr *n = makeNode(PGPivotExpr);
25369: 					n->source = (yyvsp[(1) - (9)].node);
25370: 					n->aggrs = (yyvsp[(4) - (9)].list);
25371: 					n->pivots = (yyvsp[(6) - (9)].list);
25372: 					n->groups = (yyvsp[(7) - (9)].list);
25373: 					n->alias = (yyvsp[(9) - (9)].alias);
25374: 					n->location = (yylsp[(2) - (9)]);
25375: 					(yyval.node) = (PGNode *) n;
25376: 				;}
25377:     break;
25378: 
25379:   case 725:
25380: #line 1095 "third_party/libpg_query/grammar/statements/select.y"
25381:     {
25382: 					PGPivotExpr *n = makeNode(PGPivotExpr);
25383: 					n->source = (yyvsp[(1) - (9)].node);
25384: 					n->include_nulls = (yyvsp[(3) - (9)].boolean);
25385: 					n->unpivots = (yyvsp[(5) - (9)].list);
25386: 					n->pivots = (yyvsp[(7) - (9)].list);
25387: 					n->alias = (yyvsp[(9) - (9)].alias);
25388: 					n->location = (yylsp[(2) - (9)]);
25389: 					(yyval.node) = (PGNode *) n;
25390: 				;}
25391:     break;
25392: 
25393:   case 726:
25394: #line 1108 "third_party/libpg_query/grammar/statements/select.y"
25395:     { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
25396:     break;
25397: 
25398:   case 727:
25399: #line 1109 "third_party/libpg_query/grammar/statements/select.y"
25400:     { (yyval.list) = NULL; ;}
25401:     break;
25402: 
25403:   case 728:
25404: #line 1112 "third_party/libpg_query/grammar/statements/select.y"
25405:     { (yyval.boolean) = true; ;}
25406:     break;
25407: 
25408:   case 729:
25409: #line 1113 "third_party/libpg_query/grammar/statements/select.y"
25410:     { (yyval.boolean) = false; ;}
25411:     break;
25412: 
25413:   case 730:
25414: #line 1114 "third_party/libpg_query/grammar/statements/select.y"
25415:     { (yyval.boolean) = false; ;}
25416:     break;
25417: 
25418:   case 731:
25419: #line 1118 "third_party/libpg_query/grammar/statements/select.y"
25420:     {
25421: 			PGPivot *n = makeNode(PGPivot);
25422: 			n->pivot_columns = list_make1((yyvsp[(1) - (5)].node));
25423: 			n->pivot_value = (yyvsp[(4) - (5)].list);
25424: 			(yyval.node) = (PGNode *) n;
25425: 		;}
25426:     break;
25427: 
25428:   case 732:
25429: #line 1126 "third_party/libpg_query/grammar/statements/select.y"
25430:     {
25431: 			PGPivot *n = makeNode(PGPivot);
25432: 			n->pivot_columns = list_make1((yyvsp[(1) - (3)].node));
25433: 			n->pivot_enum = (yyvsp[(3) - (3)].str);
25434: 			(yyval.node) = (PGNode *) n;
25435: 		;}
25436:     break;
25437: 
25438:   case 734:
25439: #line 1135 "third_party/libpg_query/grammar/statements/select.y"
25440:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
25441:     break;
25442: 
25443:   case 735:
25444: #line 1136 "third_party/libpg_query/grammar/statements/select.y"
25445:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
25446:     break;
25447: 
25448:   case 736:
25449: #line 1137 "third_party/libpg_query/grammar/statements/select.y"
25450:     { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
25451:     break;
25452: 
25453:   case 737:
25454: #line 1141 "third_party/libpg_query/grammar/statements/select.y"
25455:     {
25456: 			PGPivot *n = makeNode(PGPivot);
25457: 			n->pivot_columns = (yyvsp[(1) - (5)].list);
25458: 			n->pivot_value = (yyvsp[(4) - (5)].list);
25459: 			(yyval.node) = (PGNode *) n;
25460: 		;}
25461:     break;
25462: 
25463:   case 738:
25464: #line 1149 "third_party/libpg_query/grammar/statements/select.y"
25465:     {
25466: 			PGPivot *n = makeNode(PGPivot);
25467: 			n->pivot_columns = (yyvsp[(1) - (3)].list);
25468: 			n->pivot_enum = (yyvsp[(3) - (3)].str);
25469: 			(yyval.node) = (PGNode *) n;
25470: 		;}
25471:     break;
25472: 
25473:   case 739:
25474: #line 1158 "third_party/libpg_query/grammar/statements/select.y"
25475:     {
25476: 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
25477: 				;}
25478:     break;
25479: 
25480:   case 740:
25481: #line 1162 "third_party/libpg_query/grammar/statements/select.y"
25482:     {
25483: 					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
25484: 				;}
25485:     break;
25486: 
25487:   case 741:
25488: #line 1168 "third_party/libpg_query/grammar/statements/select.y"
25489:     { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
25490:     break;
25491: 
25492:   case 742:
25493: #line 1169 "third_party/libpg_query/grammar/statements/select.y"
25494:     { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
25495:     break;
25496: 
25497:   case 743:
25498: #line 1174 "third_party/libpg_query/grammar/statements/select.y"
25499:     {
25500: 			PGPivot *n = makeNode(PGPivot);
25501: 			n->unpivot_columns = (yyvsp[(1) - (5)].list);
25502: 			n->pivot_value = (yyvsp[(4) - (5)].list);
25503: 			(yyval.node) = (PGNode *) n;
25504: 		;}
25505:     break;
25506: 
25507:   case 744:
25508: #line 1183 "third_party/libpg_query/grammar/statements/select.y"
25509:     {
25510: 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
25511: 				;}
25512:     break;
25513: 
25514:   case 745:
25515: #line 1187 "third_party/libpg_query/grammar/statements/select.y"
25516:     {
25517: 					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
25518: 				;}
25519:     break;
25520: 
25521:   case 746:
25522: #line 1212 "third_party/libpg_query/grammar/statements/select.y"
25523:     {
25524: 					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
25525: 				;}
25526:     break;
25527: 
25528:   case 747:
25529: #line 1216 "third_party/libpg_query/grammar/statements/select.y"
25530:     {
25531: 					/* CROSS JOIN is same as unqualified inner join */
25532: 					PGJoinExpr *n = makeNode(PGJoinExpr);
25533: 					n->jointype = PG_JOIN_INNER;
25534: 					n->joinreftype = PG_JOIN_REGULAR;
25535: 					n->larg = (yyvsp[(1) - (4)].node);
25536: 					n->rarg = (yyvsp[(4) - (4)].node);
25537: 					n->usingClause = NIL;
25538: 					n->quals = NULL;
25539: 					n->location = (yylsp[(2) - (4)]);
25540: 					(yyval.jexpr) = n;
25541: 				;}
25542:     break;
25543: 
25544:   case 748:
25545: #line 1229 "third_party/libpg_query/grammar/statements/select.y"
25546:     {
25547: 					PGJoinExpr *n = makeNode(PGJoinExpr);
25548: 					n->jointype = (yyvsp[(2) - (5)].jtype);
25549: 					n->joinreftype = PG_JOIN_REGULAR;
25550: 					n->larg = (yyvsp[(1) - (5)].node);
25551: 					n->rarg = (yyvsp[(4) - (5)].node);
25552: 					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
25553: 						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
25554: 					else
25555: 						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
25556: 					n->location = (yylsp[(2) - (5)]);
25557: 					(yyval.jexpr) = n;
25558: 				;}
25559:     break;
25560: 
25561:   case 749:
25562: #line 1243 "third_party/libpg_query/grammar/statements/select.y"
25563:     {
25564: 					/* letting join_type reduce to empty doesn't work */
25565: 					PGJoinExpr *n = makeNode(PGJoinExpr);
25566: 					n->jointype = PG_JOIN_INNER;
25567: 					n->joinreftype = PG_JOIN_REGULAR;
25568: 					n->larg = (yyvsp[(1) - (4)].node);
25569: 					n->rarg = (yyvsp[(3) - (4)].node);
25570: 					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
25571: 						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
25572: 					else
25573: 						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
25574: 					n->location = (yylsp[(2) - (4)]);
25575: 					(yyval.jexpr) = n;
25576: 				;}
25577:     break;
25578: 
25579:   case 750:
25580: #line 1258 "third_party/libpg_query/grammar/statements/select.y"
25581:     {
25582: 					PGJoinExpr *n = makeNode(PGJoinExpr);
25583: 					n->jointype = (yyvsp[(3) - (5)].jtype);
25584: 					n->joinreftype = PG_JOIN_NATURAL;
25585: 					n->larg = (yyvsp[(1) - (5)].node);
25586: 					n->rarg = (yyvsp[(5) - (5)].node);
25587: 					n->usingClause = NIL; /* figure out which columns later... */
25588: 					n->quals = NULL; /* fill later */
25589: 					n->location = (yylsp[(2) - (5)]);
25590: 					(yyval.jexpr) = n;
25591: 				;}
25592:     break;
25593: 
25594:   case 751:
25595: #line 1270 "third_party/libpg_query/grammar/statements/select.y"
25596:     {
25597: 					/* letting join_type reduce to empty doesn't work */
25598: 					PGJoinExpr *n = makeNode(PGJoinExpr);
25599: 					n->jointype = PG_JOIN_INNER;
25600: 					n->joinreftype = PG_JOIN_NATURAL;
25601: 					n->larg = (yyvsp[(1) - (4)].node);
25602: 					n->rarg = (yyvsp[(4) - (4)].node);
25603: 					n->usingClause = NIL; /* figure out which columns later... */
25604: 					n->quals = NULL; /* fill later */
25605: 					n->location = (yylsp[(2) - (4)]);
25606: 					(yyval.jexpr) = n;
25607: 				;}
25608:     break;
25609: 
25610:   case 752:
25611: #line 1283 "third_party/libpg_query/grammar/statements/select.y"
25612:     {
25613: 					PGJoinExpr *n = makeNode(PGJoinExpr);
25614: 					n->jointype = (yyvsp[(3) - (6)].jtype);
25615: 					n->joinreftype = PG_JOIN_ASOF;
25616: 					n->larg = (yyvsp[(1) - (6)].node);
25617: 					n->rarg = (yyvsp[(5) - (6)].node);
25618: 					if ((yyvsp[(6) - (6)].node) != NULL && IsA((yyvsp[(6) - (6)].node), PGList))
25619: 						n->usingClause = (PGList *) (yyvsp[(6) - (6)].node); /* USING clause */
25620: 					else
25621: 						n->quals = (yyvsp[(6) - (6)].node); /* ON clause */
25622: 					n->location = (yylsp[(2) - (6)]);
25623: 					(yyval.jexpr) = n;
25624: 				;}
25625:     break;
25626: 
25627:   case 753:
25628: #line 1297 "third_party/libpg_query/grammar/statements/select.y"
25629:     {
25630: 					PGJoinExpr *n = makeNode(PGJoinExpr);
25631: 					n->jointype = PG_JOIN_INNER;
25632: 					n->joinreftype = PG_JOIN_ASOF;
25633: 					n->larg = (yyvsp[(1) - (5)].node);
25634: 					n->rarg = (yyvsp[(4) - (5)].node);
25635: 					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
25636: 						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
25637: 					else
25638: 						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
25639: 					n->location = (yylsp[(2) - (5)]);
25640: 					(yyval.jexpr) = n;
25641: 				;}
25642:     break;
25643: 
25644:   case 754:
25645: #line 1311 "third_party/libpg_query/grammar/statements/select.y"
25646:     {
25647: 					/* POSITIONAL JOIN is a coordinated scan */
25648: 					PGJoinExpr *n = makeNode(PGJoinExpr);
25649: 					n->jointype = PG_JOIN_POSITION;
25650: 					n->joinreftype = PG_JOIN_REGULAR;
25651: 					n->larg = (yyvsp[(1) - (4)].node);
25652: 					n->rarg = (yyvsp[(4) - (4)].node);
25653: 					n->usingClause = NIL;
25654: 					n->quals = NULL;
25655: 					n->location = (yylsp[(2) - (4)]);
25656: 					(yyval.jexpr) = n;
25657: 				;}
25658:     break;
25659: 
25660:   case 755:
25661: #line 1324 "third_party/libpg_query/grammar/statements/select.y"
25662:     {
25663:                     /* ANTI JOIN is a filter */
25664:                     PGJoinExpr *n = makeNode(PGJoinExpr);
25665:                     n->jointype = PG_JOIN_ANTI;
25666:                     n->joinreftype = PG_JOIN_REGULAR;
25667:                     n->larg = (yyvsp[(1) - (5)].node);
25668:                     n->rarg = (yyvsp[(4) - (5)].node);
25669:                     if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
25670:                         n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
25671:                     else
25672:                         n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
25673:                     n->location = (yylsp[(2) - (5)]);
25674:                     (yyval.jexpr) = n;
25675:                 ;}
25676:     break;
25677: 
25678:   case 756:
25679: #line 1339 "third_party/libpg_query/grammar/statements/select.y"
25680:     {
25681:                    /* SEMI JOIN is also a filter */
25682:                    PGJoinExpr *n = makeNode(PGJoinExpr);
25683:                    n->jointype = PG_JOIN_SEMI;
25684:                    n->joinreftype = PG_JOIN_REGULAR;
25685:                    n->larg = (yyvsp[(1) - (5)].node);
25686:                    n->rarg = (yyvsp[(4) - (5)].node);
25687:                    if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
25688:                        n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
25689:                    else
25690:                        n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
25691:                    n->location = (yylsp[(2) - (5)]);
25692:                    n->location = (yylsp[(2) - (5)]);
25693:                    (yyval.jexpr) = n;
25694:                ;}
25695:     break;
25696: 
25697:   case 757:
25698: #line 1358 "third_party/libpg_query/grammar/statements/select.y"
25699:     {
25700: 					(yyval.alias) = makeNode(PGAlias);
25701: 					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
25702: 					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
25703: 				;}
25704:     break;
25705: 
25706:   case 758:
25707: #line 1364 "third_party/libpg_query/grammar/statements/select.y"
25708:     {
25709: 					(yyval.alias) = makeNode(PGAlias);
25710: 					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
25711: 				;}
25712:     break;
25713: 
25714:   case 759:
25715: #line 1369 "third_party/libpg_query/grammar/statements/select.y"
25716:     {
25717: 					(yyval.alias) = makeNode(PGAlias);
25718: 					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
25719: 					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
25720: 				;}
25721:     break;
25722: 
25723:   case 760:
25724: #line 1375 "third_party/libpg_query/grammar/statements/select.y"
25725:     {
25726: 					(yyval.alias) = makeNode(PGAlias);
25727: 					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
25728: 				;}
25729:     break;
25730: 
25731:   case 761:
25732: #line 1381 "third_party/libpg_query/grammar/statements/select.y"
25733:     { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
25734:     break;
25735: 
25736:   case 762:
25737: #line 1382 "third_party/libpg_query/grammar/statements/select.y"
25738:     { (yyval.alias) = NULL; ;}
25739:     break;
25740: 
25741:   case 763:
25742: #line 1391 "third_party/libpg_query/grammar/statements/select.y"
25743:     {
25744: 					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
25745: 				;}
25746:     break;
25747: 
25748:   case 764:
25749: #line 1395 "third_party/libpg_query/grammar/statements/select.y"
25750:     {
25751: 					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
25752: 				;}
25753:     break;
25754: 
25755:   case 765:
25756: #line 1399 "third_party/libpg_query/grammar/statements/select.y"
25757:     {
25758: 					PGAlias *a = makeNode(PGAlias);
25759: 					a->aliasname = (yyvsp[(2) - (5)].str);
25760: 					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
25761: 				;}
25762:     break;
25763: 
25764:   case 766:
25765: #line 1405 "third_party/libpg_query/grammar/statements/select.y"
25766:     {
25767: 					PGAlias *a = makeNode(PGAlias);
25768: 					a->aliasname = (yyvsp[(1) - (4)].str);
25769: 					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
25770: 				;}
25771:     break;
25772: 
25773:   case 767:
25774: #line 1411 "third_party/libpg_query/grammar/statements/select.y"
25775:     {
25776: 					(yyval.list) = list_make2(NULL, NIL);
25777: 				;}
25778:     break;
25779: 
25780:   case 768:
25781: #line 1416 "third_party/libpg_query/grammar/statements/select.y"
25782:     { (yyval.jtype) = PG_JOIN_FULL; ;}
25783:     break;
25784: 
25785:   case 769:
25786: #line 1417 "third_party/libpg_query/grammar/statements/select.y"
25787:     { (yyval.jtype) = PG_JOIN_LEFT; ;}
25788:     break;
25789: 
25790:   case 770:
25791: #line 1418 "third_party/libpg_query/grammar/statements/select.y"
25792:     { (yyval.jtype) = PG_JOIN_RIGHT; ;}
25793:     break;
25794: 
25795:   case 771:
25796: #line 1419 "third_party/libpg_query/grammar/statements/select.y"
25797:     { (yyval.jtype) = PG_JOIN_SEMI; ;}
25798:     break;
25799: 
25800:   case 772:
25801: #line 1420 "third_party/libpg_query/grammar/statements/select.y"
25802:     { (yyval.jtype) = PG_JOIN_ANTI; ;}
25803:     break;
25804: 
25805:   case 773:
25806: #line 1421 "third_party/libpg_query/grammar/statements/select.y"
25807:     { (yyval.jtype) = PG_JOIN_INNER; ;}
25808:     break;
25809: 
25810:   case 774:
25811: #line 1425 "third_party/libpg_query/grammar/statements/select.y"
25812:     { (yyval.node) = NULL; ;}
25813:     break;
25814: 
25815:   case 775:
25816: #line 1426 "third_party/libpg_query/grammar/statements/select.y"
25817:     { (yyval.node) = NULL; ;}
25818:     break;
25819: 
25820:   case 776:
25821: #line 1438 "third_party/libpg_query/grammar/statements/select.y"
25822:     { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
25823:     break;
25824: 
25825:   case 777:
25826: #line 1439 "third_party/libpg_query/grammar/statements/select.y"
25827:     { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
25828:     break;
25829: 
25830:   case 778:
25831: #line 1445 "third_party/libpg_query/grammar/statements/select.y"
25832:     {
25833: 					/* inheritance query, implicitly */
25834: 					(yyval.range) = (yyvsp[(1) - (1)].range);
25835: 					(yyval.range)->inh = true;
25836: 					(yyval.range)->alias = NULL;
25837: 				;}
25838:     break;
25839: 
25840:   case 779:
25841: #line 1452 "third_party/libpg_query/grammar/statements/select.y"
25842:     {
25843: 					/* inheritance query, explicitly */
25844: 					(yyval.range) = (yyvsp[(1) - (2)].range);
25845: 					(yyval.range)->inh = true;
25846: 					(yyval.range)->alias = NULL;
25847: 				;}
25848:     break;
25849: 
25850:   case 780:
25851: #line 1459 "third_party/libpg_query/grammar/statements/select.y"
25852:     {
25853: 					/* no inheritance */
25854: 					(yyval.range) = (yyvsp[(2) - (2)].range);
25855: 					(yyval.range)->inh = false;
25856: 					(yyval.range)->alias = NULL;
25857: 				;}
25858:     break;
25859: 
25860:   case 781:
25861: #line 1466 "third_party/libpg_query/grammar/statements/select.y"
25862:     {
25863: 					/* no inheritance, SQL99-style syntax */
25864: 					(yyval.range) = (yyvsp[(3) - (4)].range);
25865: 					(yyval.range)->inh = false;
25866: 					(yyval.range)->alias = NULL;
25867: 				;}
25868:     break;
25869: 
25870:   case 782:
25871: #line 1498 "third_party/libpg_query/grammar/statements/select.y"
25872:     {
25873: 					PGRangeFunction *n = makeNode(PGRangeFunction);
25874: 					n->lateral = false;
25875: 					n->ordinality = (yyvsp[(2) - (2)].boolean);
25876: 					n->is_rowsfrom = false;
25877: 					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
25878: 					n->sample = NULL;
25879: 					/* alias and coldeflist are set by table_ref production */
25880: 					(yyval.node) = (PGNode *) n;
25881: 				;}
25882:     break;
25883: 
25884:   case 783:
25885: #line 1509 "third_party/libpg_query/grammar/statements/select.y"
25886:     {
25887: 					PGRangeFunction *n = makeNode(PGRangeFunction);
25888: 					n->lateral = false;
25889: 					n->ordinality = (yyvsp[(6) - (6)].boolean);
25890: 					n->is_rowsfrom = true;
25891: 					n->functions = (yyvsp[(4) - (6)].list);
25892: 					n->sample = NULL;
25893: 					/* alias and coldeflist are set by table_ref production */
25894: 					(yyval.node) = (PGNode *) n;
25895: 				;}
25896:     break;
25897: 
25898:   case 784:
25899: #line 1522 "third_party/libpg_query/grammar/statements/select.y"
25900:     { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
25901:     break;
25902: 
25903:   case 785:
25904: #line 1526 "third_party/libpg_query/grammar/statements/select.y"
25905:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
25906:     break;
25907: 
25908:   case 786:
25909: #line 1527 "third_party/libpg_query/grammar/statements/select.y"
25910:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
25911:     break;
25912: 
25913:   case 787:
25914: #line 1530 "third_party/libpg_query/grammar/statements/select.y"
25915:     { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
25916:     break;
25917: 
25918:   case 788:
25919: #line 1531 "third_party/libpg_query/grammar/statements/select.y"
25920:     { (yyval.list) = NIL; ;}
25921:     break;
25922: 
25923:   case 789:
25924: #line 1534 "third_party/libpg_query/grammar/statements/select.y"
25925:     { (yyval.boolean) = true; ;}
25926:     break;
25927: 
25928:   case 790:
25929: #line 1535 "third_party/libpg_query/grammar/statements/select.y"
25930:     { (yyval.boolean) = false; ;}
25931:     break;
25932: 
25933:   case 791:
25934: #line 1540 "third_party/libpg_query/grammar/statements/select.y"
25935:     { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
25936:     break;
25937: 
25938:   case 792:
25939: #line 1541 "third_party/libpg_query/grammar/statements/select.y"
25940:     { (yyval.node) = NULL; ;}
25941:     break;
25942: 
25943:   case 793:
25944: #line 1547 "third_party/libpg_query/grammar/statements/select.y"
25945:     {
25946: 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
25947: 				;}
25948:     break;
25949: 
25950:   case 794:
25951: #line 1551 "third_party/libpg_query/grammar/statements/select.y"
25952:     {
25953: 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
25954: 				;}
25955:     break;
25956: 
25957:   case 795:
25958: #line 1557 "third_party/libpg_query/grammar/statements/select.y"
25959:     {
25960: 					PGColumnDef *n = makeNode(PGColumnDef);
25961: 					n->colname = (yyvsp[(1) - (3)].str);
25962: 					n->typeName = (yyvsp[(2) - (3)].typnam);
25963: 					n->inhcount = 0;
25964: 					n->is_local = true;
25965: 					n->is_not_null = false;
25966: 					n->is_from_type = false;
25967: 					n->storage = 0;
25968: 					n->raw_default = NULL;
25969: 					n->cooked_default = NULL;
25970: 					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
25971: 					n->collOid = InvalidOid;
25972: 					n->constraints = NIL;
25973: 					n->location = (yylsp[(1) - (3)]);
25974: 					(yyval.node) = (PGNode *)n;
25975: 				;}
25976:     break;
25977: 
25978:   case 796:
25979: #line 1578 "third_party/libpg_query/grammar/statements/select.y"
25980:     {
25981: 					PGCollateClause *n = makeNode(PGCollateClause);
25982: 					n->arg = NULL;
25983: 					n->collname = (yyvsp[(2) - (2)].list);
25984: 					n->location = (yylsp[(1) - (2)]);
25985: 					(yyval.node) = (PGNode *) n;
25986: 				;}
25987:     break;
25988: 
25989:   case 797:
25990: #line 1585 "third_party/libpg_query/grammar/statements/select.y"
25991:     { (yyval.node) = NULL; ;}
25992:     break;
25993: 
25994:   case 798:
25995: #line 1598 "third_party/libpg_query/grammar/statements/select.y"
25996:     {
25997:              (yyval.list) = list_make1(list_make2(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].typnam)));
25998:             ;}
25999:     break;
26000: 
26001:   case 799:
26002: #line 1601 "third_party/libpg_query/grammar/statements/select.y"
26003:     {
26004:              (yyval.list) = lappend((yyvsp[(1) - (4)].list), list_make2(makeString((yyvsp[(3) - (4)].str)), (yyvsp[(4) - (4)].typnam)));
26005:             ;}
26006:     break;
26007: 
26008:   case 802:
26009: #line 1608 "third_party/libpg_query/grammar/statements/select.y"
26010:     { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
26011:     break;
26012: 
26013:   case 803:
26014: #line 1609 "third_party/libpg_query/grammar/statements/select.y"
26015:     { (yyval.typnam) = NULL; ;}
26016:     break;
26017: 
26018:   case 804:
26019: #line 1612 "third_party/libpg_query/grammar/statements/select.y"
26020:     {
26021: 					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
26022: 					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
26023: 				;}
26024:     break;
26025: 
26026:   case 805:
26027: #line 1617 "third_party/libpg_query/grammar/statements/select.y"
26028:     {
26029: 					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
26030: 					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
26031: 					(yyval.typnam)->setof = true;
26032: 				;}
26033:     break;
26034: 
26035:   case 806:
26036: #line 1624 "third_party/libpg_query/grammar/statements/select.y"
26037:     {
26038: 					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
26039: 					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
26040: 				;}
26041:     break;
26042: 
26043:   case 807:
26044: #line 1629 "third_party/libpg_query/grammar/statements/select.y"
26045:     {
26046: 					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
26047: 					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
26048: 					(yyval.typnam)->setof = true;
26049: 				;}
26050:     break;
26051: 
26052:   case 808:
26053: #line 1635 "third_party/libpg_query/grammar/statements/select.y"
26054:     {
26055: 					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
26056: 					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
26057: 				;}
26058:     break;
26059: 
26060:   case 809:
26061: #line 1640 "third_party/libpg_query/grammar/statements/select.y"
26062:     {
26063: 					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
26064: 					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
26065: 					(yyval.typnam)->setof = true;
26066: 				;}
26067:     break;
26068: 
26069:   case 810:
26070: #line 1646 "third_party/libpg_query/grammar/statements/select.y"
26071:     {
26072: 					(yyval.typnam) = makeTypeNameFromNameList((yyvsp[(1) - (1)].list));
26073: 				;}
26074:     break;
26075: 
26076:   case 811:
26077: #line 1650 "third_party/libpg_query/grammar/statements/select.y"
26078:     {
26079: 				   (yyval.typnam) = SystemTypeName("struct");
26080: 				   (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
26081: 				   (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
26082: 				   (yyval.typnam)->location = (yylsp[(1) - (5)]);
26083:                ;}
26084:     break;
26085: 
26086:   case 812:
26087: #line 1657 "third_party/libpg_query/grammar/statements/select.y"
26088:     {
26089: 				   (yyval.typnam) = SystemTypeName("map");
26090: 				   (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
26091: 				   (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
26092: 				   (yyval.typnam)->location = (yylsp[(1) - (5)]);
26093: 				;}
26094:     break;
26095: 
26096:   case 813:
26097: #line 1664 "third_party/libpg_query/grammar/statements/select.y"
26098:     {
26099: 				   (yyval.typnam) = SystemTypeName("union");
26100: 				   (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
26101: 				   (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
26102: 				   (yyval.typnam)->location = (yylsp[(1) - (5)]);
26103: 				;}
26104:     break;
26105: 
26106:   case 814:
26107: #line 1673 "third_party/libpg_query/grammar/statements/select.y"
26108:     { (yyval.list) = list_make2(makeString((yyvsp[(1) - (3)].str)), makeString((yyvsp[(3) - (3)].str))); ;}
26109:     break;
26110: 
26111:   case 815:
26112: #line 1674 "third_party/libpg_query/grammar/statements/select.y"
26113:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
26114:     break;
26115: 
26116:   case 816:
26117: #line 1679 "third_party/libpg_query/grammar/statements/select.y"
26118:     {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
26119:     break;
26120: 
26121:   case 817:
26122: #line 1681 "third_party/libpg_query/grammar/statements/select.y"
26123:     {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
26124:     break;
26125: 
26126:   case 818:
26127: #line 1683 "third_party/libpg_query/grammar/statements/select.y"
26128:     {  (yyval.list) = NIL; ;}
26129:     break;
26130: 
26131:   case 819:
26132: #line 1687 "third_party/libpg_query/grammar/statements/select.y"
26133:     { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
26134:     break;
26135: 
26136:   case 820:
26137: #line 1688 "third_party/libpg_query/grammar/statements/select.y"
26138:     { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
26139:     break;
26140: 
26141:   case 821:
26142: #line 1689 "third_party/libpg_query/grammar/statements/select.y"
26143:     { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
26144:     break;
26145: 
26146:   case 822:
26147: #line 1690 "third_party/libpg_query/grammar/statements/select.y"
26148:     { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
26149:     break;
26150: 
26151:   case 823:
26152: #line 1691 "third_party/libpg_query/grammar/statements/select.y"
26153:     { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
26154:     break;
26155: 
26156:   case 824:
26157: #line 1693 "third_party/libpg_query/grammar/statements/select.y"
26158:     {
26159: 					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
26160: 					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
26161: 				;}
26162:     break;
26163: 
26164:   case 825:
26165: #line 1698 "third_party/libpg_query/grammar/statements/select.y"
26166:     {
26167: 					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
26168: 					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
26169: 											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
26170: 				;}
26171:     break;
26172: 
26173:   case 826:
26174: #line 1717 "third_party/libpg_query/grammar/statements/select.y"
26175:     { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
26176:     break;
26177: 
26178:   case 827:
26179: #line 1718 "third_party/libpg_query/grammar/statements/select.y"
26180:     { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
26181:     break;
26182: 
26183:   case 828:
26184: #line 1719 "third_party/libpg_query/grammar/statements/select.y"
26185:     { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
26186:     break;
26187: 
26188:   case 829:
26189: #line 1720 "third_party/libpg_query/grammar/statements/select.y"
26190:     { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
26191:     break;
26192: 
26193:   case 830:
26194: #line 1732 "third_party/libpg_query/grammar/statements/select.y"
26195:     {
26196: 					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
26197: 					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
26198: 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
26199: 				;}
26200:     break;
26201: 
26202:   case 831:
26203: #line 1745 "third_party/libpg_query/grammar/statements/select.y"
26204:     { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
26205:     break;
26206: 
26207:   case 832:
26208: #line 1746 "third_party/libpg_query/grammar/statements/select.y"
26209:     { (yyval.list) = NIL; ;}
26210:     break;
26211: 
26212:   case 833:
26213: #line 1753 "third_party/libpg_query/grammar/statements/select.y"
26214:     {
26215: 					(yyval.typnam) = SystemTypeName("int4");
26216: 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
26217: 				;}
26218:     break;
26219: 
26220:   case 834:
26221: #line 1758 "third_party/libpg_query/grammar/statements/select.y"
26222:     {
26223: 					(yyval.typnam) = SystemTypeName("int4");
26224: 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
26225: 				;}
26226:     break;
26227: 
26228:   case 835:
26229: #line 1763 "third_party/libpg_query/grammar/statements/select.y"
26230:     {
26231: 					(yyval.typnam) = SystemTypeName("int2");
26232: 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
26233: 				;}
26234:     break;
26235: 
26236:   case 836:
26237: #line 1768 "third_party/libpg_query/grammar/statements/select.y"
26238:     {
26239: 					(yyval.typnam) = SystemTypeName("int8");
26240: 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
26241: 				;}
26242:     break;
26243: 
26244:   case 837:
26245: #line 1773 "third_party/libpg_query/grammar/statements/select.y"
26246:     {
26247: 					(yyval.typnam) = SystemTypeName("float4");
26248: 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
26249: 				;}
26250:     break;
26251: 
26252:   case 838:
26253: #line 1778 "third_party/libpg_query/grammar/statements/select.y"
26254:     {
26255: 					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
26256: 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
26257: 				;}
26258:     break;
26259: 
26260:   case 839:
26261: #line 1783 "third_party/libpg_query/grammar/statements/select.y"
26262:     {
26263: 					(yyval.typnam) = SystemTypeName("float8");
26264: 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
26265: 				;}
26266:     break;
26267: 
26268:   case 840:
26269: #line 1788 "third_party/libpg_query/grammar/statements/select.y"
26270:     {
26271: 					(yyval.typnam) = SystemTypeName("numeric");
26272: 					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
26273: 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
26274: 				;}
26275:     break;
26276: 
26277:   case 841:
26278: #line 1794 "third_party/libpg_query/grammar/statements/select.y"
26279:     {
26280: 					(yyval.typnam) = SystemTypeName("numeric");
26281: 					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
26282: 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
26283: 				;}
26284:     break;
26285: 
26286:   case 842:
26287: #line 1800 "third_party/libpg_query/grammar/statements/select.y"
26288:     {
26289: 					(yyval.typnam) = SystemTypeName("numeric");
26290: 					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
26291: 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
26292: 				;}
26293:     break;
26294: 
26295:   case 843:
26296: #line 1806 "third_party/libpg_query/grammar/statements/select.y"
26297:     {
26298: 					(yyval.typnam) = SystemTypeName("bool");
26299: 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
26300: 				;}
26301:     break;
26302: 
26303:   case 844:
26304: #line 1813 "third_party/libpg_query/grammar/statements/select.y"
26305:     {
26306: 					/*
26307: 					 * Check FLOAT() precision limits assuming IEEE floating
26308: 					 * types - thomas 1997-09-18
26309: 					 */
26310: 					if ((yyvsp[(2) - (3)].ival) < 1)
26311: 						ereport(ERROR,
26312: 								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
26313: 								 errmsg("precision for type float must be at least 1 bit"),
26314: 								 parser_errposition((yylsp[(2) - (3)]))));
26315: 					else if ((yyvsp[(2) - (3)].ival) <= 24)
26316: 						(yyval.typnam) = SystemTypeName("float4");
26317: 					else if ((yyvsp[(2) - (3)].ival) <= 53)
26318: 						(yyval.typnam) = SystemTypeName("float8");
26319: 					else
26320: 						ereport(ERROR,
26321: 								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
26322: 								 errmsg("precision for type float must be less than 54 bits"),
26323: 								 parser_errposition((yylsp[(2) - (3)]))));
26324: 				;}
26325:     break;
26326: 
26327:   case 845:
26328: #line 1834 "third_party/libpg_query/grammar/statements/select.y"
26329:     {
26330: 					(yyval.typnam) = SystemTypeName("float4");
26331: 				;}
26332:     break;
26333: 
26334:   case 846:
26335: #line 1844 "third_party/libpg_query/grammar/statements/select.y"
26336:     {
26337: 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
26338: 				;}
26339:     break;
26340: 
26341:   case 847:
26342: #line 1848 "third_party/libpg_query/grammar/statements/select.y"
26343:     {
26344: 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
26345: 				;}
26346:     break;
26347: 
26348:   case 848:
26349: #line 1856 "third_party/libpg_query/grammar/statements/select.y"
26350:     {
26351: 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
26352: 				;}
26353:     break;
26354: 
26355:   case 849:
26356: #line 1860 "third_party/libpg_query/grammar/statements/select.y"
26357:     {
26358: 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
26359: 					(yyval.typnam)->typmods = NIL;
26360: 				;}
26361:     break;
26362: 
26363:   case 850:
26364: #line 1868 "third_party/libpg_query/grammar/statements/select.y"
26365:     {
26366: 					const char *typname;
26367: 
26368: 					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
26369: 					(yyval.typnam) = SystemTypeName(typname);
26370: 					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
26371: 					(yyval.typnam)->location = (yylsp[(1) - (5)]);
26372: 				;}
26373:     break;
26374: 
26375:   case 851:
26376: #line 1880 "third_party/libpg_query/grammar/statements/select.y"
26377:     {
26378: 					/* bit defaults to bit(1), varbit to no limit */
26379: 					if ((yyvsp[(2) - (2)].boolean))
26380: 					{
26381: 						(yyval.typnam) = SystemTypeName("varbit");
26382: 					}
26383: 					else
26384: 					{
26385: 						(yyval.typnam) = SystemTypeName("bit");
26386: 						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
26387: 					}
26388: 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
26389: 				;}
26390:     break;
26391: 
26392:   case 852:
26393: #line 1901 "third_party/libpg_query/grammar/statements/select.y"
26394:     {
26395: 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
26396: 				;}
26397:     break;
26398: 
26399:   case 853:
26400: #line 1905 "third_party/libpg_query/grammar/statements/select.y"
26401:     {
26402: 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
26403: 				;}
26404:     break;
26405: 
26406:   case 854:
26407: #line 1911 "third_party/libpg_query/grammar/statements/select.y"
26408:     {
26409: 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
26410: 				;}
26411:     break;
26412: 
26413:   case 855:
26414: #line 1915 "third_party/libpg_query/grammar/statements/select.y"
26415:     {
26416: 					/* Length was not specified so allow to be unrestricted.
26417: 					 * This handles problems with fixed-length (bpchar) strings
26418: 					 * which in column definitions must default to a length
26419: 					 * of one, but should not be constrained if the length
26420: 					 * was not specified.
26421: 					 */
26422: 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
26423: 					(yyval.typnam)->typmods = NIL;
26424: 				;}
26425:     break;
26426: 
26427:   case 856:
26428: #line 1928 "third_party/libpg_query/grammar/statements/select.y"
26429:     {
26430: 					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
26431: 					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
26432: 					(yyval.typnam)->location = (yylsp[(1) - (4)]);
26433: 				;}
26434:     break;
26435: 
26436:   case 857:
26437: #line 1936 "third_party/libpg_query/grammar/statements/select.y"
26438:     {
26439: 					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
26440: 					/* char defaults to char(1), varchar to no limit */
26441: 					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
26442: 						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
26443: 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
26444: 				;}
26445:     break;
26446: 
26447:   case 858:
26448: #line 1946 "third_party/libpg_query/grammar/statements/select.y"
26449:     { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
26450:     break;
26451: 
26452:   case 859:
26453: #line 1948 "third_party/libpg_query/grammar/statements/select.y"
26454:     { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
26455:     break;
26456: 
26457:   case 860:
26458: #line 1950 "third_party/libpg_query/grammar/statements/select.y"
26459:     { (yyval.conststr) = "varchar"; ;}
26460:     break;
26461: 
26462:   case 861:
26463: #line 1952 "third_party/libpg_query/grammar/statements/select.y"
26464:     { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
26465:     break;
26466: 
26467:   case 862:
26468: #line 1954 "third_party/libpg_query/grammar/statements/select.y"
26469:     { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
26470:     break;
26471: 
26472:   case 863:
26473: #line 1956 "third_party/libpg_query/grammar/statements/select.y"
26474:     { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
26475:     break;
26476: 
26477:   case 864:
26478: #line 1960 "third_party/libpg_query/grammar/statements/select.y"
26479:     { (yyval.boolean) = true; ;}
26480:     break;
26481: 
26482:   case 865:
26483: #line 1961 "third_party/libpg_query/grammar/statements/select.y"
26484:     { (yyval.boolean) = false; ;}
26485:     break;
26486: 
26487:   case 866:
26488: #line 1969 "third_party/libpg_query/grammar/statements/select.y"
26489:     {
26490: 					if ((yyvsp[(5) - (5)].boolean))
26491: 						(yyval.typnam) = SystemTypeName("timestamptz");
26492: 					else
26493: 						(yyval.typnam) = SystemTypeName("timestamp");
26494: 					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
26495: 					(yyval.typnam)->location = (yylsp[(1) - (5)]);
26496: 				;}
26497:     break;
26498: 
26499:   case 867:
26500: #line 1978 "third_party/libpg_query/grammar/statements/select.y"
26501:     {
26502: 					if ((yyvsp[(2) - (2)].boolean))
26503: 						(yyval.typnam) = SystemTypeName("timestamptz");
26504: 					else
26505: 						(yyval.typnam) = SystemTypeName("timestamp");
26506: 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
26507: 				;}
26508:     break;
26509: 
26510:   case 868:
26511: #line 1986 "third_party/libpg_query/grammar/statements/select.y"
26512:     {
26513: 					if ((yyvsp[(5) - (5)].boolean))
26514: 						(yyval.typnam) = SystemTypeName("timetz");
26515: 					else
26516: 						(yyval.typnam) = SystemTypeName("time");
26517: 					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
26518: 					(yyval.typnam)->location = (yylsp[(1) - (5)]);
26519: 				;}
26520:     break;
26521: 
26522:   case 869:
26523: #line 1995 "third_party/libpg_query/grammar/statements/select.y"
26524:     {
26525: 					if ((yyvsp[(2) - (2)].boolean))
26526: 						(yyval.typnam) = SystemTypeName("timetz");
26527: 					else
26528: 						(yyval.typnam) = SystemTypeName("time");
26529: 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
26530: 				;}
26531:     break;
26532: 
26533:   case 870:
26534: #line 2006 "third_party/libpg_query/grammar/statements/select.y"
26535:     {
26536: 					(yyval.typnam) = SystemTypeName("interval");
26537: 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
26538: 				;}
26539:     break;
26540: 
26541:   case 871:
26542: #line 2013 "third_party/libpg_query/grammar/statements/select.y"
26543:     { (yyval.boolean) = true; ;}
26544:     break;
26545: 
26546:   case 872:
26547: #line 2014 "third_party/libpg_query/grammar/statements/select.y"
26548:     { (yyval.boolean) = false; ;}
26549:     break;
26550: 
26551:   case 873:
26552: #line 2015 "third_party/libpg_query/grammar/statements/select.y"
26553:     { (yyval.boolean) = false; ;}
26554:     break;
26555: 
26556:   case 900:
26557: #line 2059 "third_party/libpg_query/grammar/statements/select.y"
26558:     { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
26559:     break;
26560: 
26561:   case 901:
26562: #line 2061 "third_party/libpg_query/grammar/statements/select.y"
26563:     { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
26564:     break;
26565: 
26566:   case 902:
26567: #line 2063 "third_party/libpg_query/grammar/statements/select.y"
26568:     { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
26569:     break;
26570: 
26571:   case 903:
26572: #line 2065 "third_party/libpg_query/grammar/statements/select.y"
26573:     { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
26574:     break;
26575: 
26576:   case 904:
26577: #line 2067 "third_party/libpg_query/grammar/statements/select.y"
26578:     { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
26579:     break;
26580: 
26581:   case 905:
26582: #line 2069 "third_party/libpg_query/grammar/statements/select.y"
26583:     { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
26584:     break;
26585: 
26586:   case 906:
26587: #line 2071 "third_party/libpg_query/grammar/statements/select.y"
26588:     { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
26589:     break;
26590: 
26591:   case 907:
26592: #line 2073 "third_party/libpg_query/grammar/statements/select.y"
26593:     { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
26594:     break;
26595: 
26596:   case 908:
26597: #line 2075 "third_party/libpg_query/grammar/statements/select.y"
26598:     { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(WEEK), (yylsp[(1) - (1)]))); ;}
26599:     break;
26600: 
26601:   case 909:
26602: #line 2077 "third_party/libpg_query/grammar/statements/select.y"
26603:     { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(QUARTER), (yylsp[(1) - (1)]))); ;}
26604:     break;
26605: 
26606:   case 910:
26607: #line 2079 "third_party/libpg_query/grammar/statements/select.y"
26608:     { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DECADE), (yylsp[(1) - (1)]))); ;}
26609:     break;
26610: 
26611:   case 911:
26612: #line 2081 "third_party/libpg_query/grammar/statements/select.y"
26613:     { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(CENTURY), (yylsp[(1) - (1)]))); ;}
26614:     break;
26615: 
26616:   case 912:
26617: #line 2083 "third_party/libpg_query/grammar/statements/select.y"
26618:     { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLENNIUM), (yylsp[(1) - (1)]))); ;}
26619:     break;
26620: 
26621:   case 913:
26622: #line 2085 "third_party/libpg_query/grammar/statements/select.y"
26623:     {
26624: 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
26625: 												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
26626: 				;}
26627:     break;
26628: 
26629:   case 914:
26630: #line 2090 "third_party/libpg_query/grammar/statements/select.y"
26631:     {
26632: 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
26633: 												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
26634: 				;}
26635:     break;
26636: 
26637:   case 915:
26638: #line 2095 "third_party/libpg_query/grammar/statements/select.y"
26639:     {
26640: 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
26641: 												 INTERVAL_MASK(HOUR) |
26642: 												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
26643: 				;}
26644:     break;
26645: 
26646:   case 916:
26647: #line 2101 "third_party/libpg_query/grammar/statements/select.y"
26648:     {
26649: 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
26650: 												 INTERVAL_MASK(HOUR) |
26651: 												 INTERVAL_MASK(MINUTE) |
26652: 												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
26653: 				;}
26654:     break;
26655: 
26656:   case 917:
26657: #line 2108 "third_party/libpg_query/grammar/statements/select.y"
26658:     {
26659: 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
26660: 												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
26661: 				;}
26662:     break;
26663: 
26664:   case 918:
26665: #line 2113 "third_party/libpg_query/grammar/statements/select.y"
26666:     {
26667: 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
26668: 												 INTERVAL_MASK(MINUTE) |
26669: 												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
26670: 				;}
26671:     break;
26672: 
26673:   case 919:
26674: #line 2119 "third_party/libpg_query/grammar/statements/select.y"
26675:     {
26676: 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
26677: 												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
26678: 				;}
26679:     break;
26680: 
26681:   case 920:
26682: #line 2124 "third_party/libpg_query/grammar/statements/select.y"
26683:     { (yyval.list) = NIL; ;}
26684:     break;
26685: 
26686:   case 921:
26687: #line 2155 "third_party/libpg_query/grammar/statements/select.y"
26688:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
26689:     break;
26690: 
26691:   case 922:
26692: #line 2158 "third_party/libpg_query/grammar/statements/select.y"
26693:     { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
26694:     break;
26695: 
26696:   case 923:
26697: #line 2160 "third_party/libpg_query/grammar/statements/select.y"
26698:     {
26699: 					PGCollateClause *n = makeNode(PGCollateClause);
26700: 					n->arg = (yyvsp[(1) - (3)].node);
26701: 					n->collname = (yyvsp[(3) - (3)].list);
26702: 					n->location = (yylsp[(2) - (3)]);
26703: 					(yyval.node) = (PGNode *) n;
26704: 				;}
26705:     break;
26706: 
26707:   case 924:
26708: #line 2168 "third_party/libpg_query/grammar/statements/select.y"
26709:     {
26710: 					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
26711: 											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
26712: 											   (yylsp[(2) - (5)]));
26713: 				;}
26714:     break;
26715: 
26716:   case 925:
26717: #line 2183 "third_party/libpg_query/grammar/statements/select.y"
26718:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
26719:     break;
26720: 
26721:   case 926:
26722: #line 2185 "third_party/libpg_query/grammar/statements/select.y"
26723:     { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
26724:     break;
26725: 
26726:   case 927:
26727: #line 2187 "third_party/libpg_query/grammar/statements/select.y"
26728:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
26729:     break;
26730: 
26731:   case 928:
26732: #line 2189 "third_party/libpg_query/grammar/statements/select.y"
26733:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
26734:     break;
26735: 
26736:   case 929:
26737: #line 2191 "third_party/libpg_query/grammar/statements/select.y"
26738:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
26739:     break;
26740: 
26741:   case 930:
26742: #line 2193 "third_party/libpg_query/grammar/statements/select.y"
26743:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
26744:     break;
26745: 
26746:   case 931:
26747: #line 2195 "third_party/libpg_query/grammar/statements/select.y"
26748:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "//", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
26749:     break;
26750: 
26751:   case 932:
26752: #line 2197 "third_party/libpg_query/grammar/statements/select.y"
26753:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
26754:     break;
26755: 
26756:   case 933:
26757: #line 2199 "third_party/libpg_query/grammar/statements/select.y"
26758:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
26759:     break;
26760: 
26761:   case 934:
26762: #line 2201 "third_party/libpg_query/grammar/statements/select.y"
26763:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "**", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
26764:     break;
26765: 
26766:   case 935:
26767: #line 2203 "third_party/libpg_query/grammar/statements/select.y"
26768:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
26769:     break;
26770: 
26771:   case 936:
26772: #line 2205 "third_party/libpg_query/grammar/statements/select.y"
26773:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
26774:     break;
26775: 
26776:   case 937:
26777: #line 2207 "third_party/libpg_query/grammar/statements/select.y"
26778:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
26779:     break;
26780: 
26781:   case 938:
26782: #line 2209 "third_party/libpg_query/grammar/statements/select.y"
26783:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
26784:     break;
26785: 
26786:   case 939:
26787: #line 2211 "third_party/libpg_query/grammar/statements/select.y"
26788:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
26789:     break;
26790: 
26791:   case 940:
26792: #line 2213 "third_party/libpg_query/grammar/statements/select.y"
26793:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
26794:     break;
26795: 
26796:   case 941:
26797: #line 2216 "third_party/libpg_query/grammar/statements/select.y"
26798:     { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
26799:     break;
26800: 
26801:   case 942:
26802: #line 2218 "third_party/libpg_query/grammar/statements/select.y"
26803:     { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
26804:     break;
26805: 
26806:   case 943:
26807: #line 2220 "third_party/libpg_query/grammar/statements/select.y"
26808:     { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
26809:     break;
26810: 
26811:   case 944:
26812: #line 2223 "third_party/libpg_query/grammar/statements/select.y"
26813:     { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
26814:     break;
26815: 
26816:   case 945:
26817: #line 2225 "third_party/libpg_query/grammar/statements/select.y"
26818:     { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
26819:     break;
26820: 
26821:   case 946:
26822: #line 2227 "third_party/libpg_query/grammar/statements/select.y"
26823:     { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
26824:     break;
26825: 
26826:   case 947:
26827: #line 2229 "third_party/libpg_query/grammar/statements/select.y"
26828:     { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
26829:     break;
26830: 
26831:   case 948:
26832: #line 2231 "third_party/libpg_query/grammar/statements/select.y"
26833:     {
26834: 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
26835: 												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
26836: 				;}
26837:     break;
26838: 
26839:   case 949:
26840: #line 2236 "third_party/libpg_query/grammar/statements/select.y"
26841:     {
26842: 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
26843: 												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
26844: 				;}
26845:     break;
26846: 
26847:   case 950:
26848: #line 2241 "third_party/libpg_query/grammar/statements/select.y"
26849:     {
26850: 					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
26851: 											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
26852: 											   (yylsp[(2) - (5)]));
26853: 					(yyval.node) = (PGNode *) n;
26854: 				;}
26855:     break;
26856: 
26857:   case 951:
26858: #line 2248 "third_party/libpg_query/grammar/statements/select.y"
26859:     {
26860: 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
26861: 												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
26862: 				;}
26863:     break;
26864: 
26865:   case 952:
26866: #line 2253 "third_party/libpg_query/grammar/statements/select.y"
26867:     {
26868: 					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
26869: 											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
26870: 											   (yylsp[(2) - (6)]));
26871: 					(yyval.node) = (PGNode *) n;
26872: 				;}
26873:     break;
26874: 
26875:   case 953:
26876: #line 2260 "third_party/libpg_query/grammar/statements/select.y"
26877:     {
26878: 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
26879: 												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
26880: 				;}
26881:     break;
26882: 
26883:   case 954:
26884: #line 2265 "third_party/libpg_query/grammar/statements/select.y"
26885:     {
26886: 					PGFuncCall *n = makeFuncCall(SystemFuncName("ilike_escape"),
26887: 											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
26888: 											   (yylsp[(2) - (5)]));
26889: 					(yyval.node) = (PGNode *) n;
26890: 				;}
26891:     break;
26892: 
26893:   case 955:
26894: #line 2272 "third_party/libpg_query/grammar/statements/select.y"
26895:     {
26896: 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
26897: 												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
26898: 				;}
26899:     break;
26900: 
26901:   case 956:
26902: #line 2277 "third_party/libpg_query/grammar/statements/select.y"
26903:     {
26904: 					PGFuncCall *n = makeFuncCall(SystemFuncName("not_ilike_escape"),
26905: 											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
26906: 											   (yylsp[(2) - (6)]));
26907: 					(yyval.node) = (PGNode *) n;
26908: 				;}
26909:     break;
26910: 
26911:   case 957:
26912: #line 2285 "third_party/libpg_query/grammar/statements/select.y"
26913:     {
26914: 					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
26915: 											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
26916: 											   (yylsp[(2) - (4)]));
26917: 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
26918: 												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
26919: 				;}
26920:     break;
26921: 
26922:   case 958:
26923: #line 2293 "third_party/libpg_query/grammar/statements/select.y"
26924:     {
26925: 					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
26926: 											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
26927: 											   (yylsp[(2) - (6)]));
26928: 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
26929: 												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
26930: 				;}
26931:     break;
26932: 
26933:   case 959:
26934: #line 2301 "third_party/libpg_query/grammar/statements/select.y"
26935:     {
26936: 					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
26937: 											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
26938: 											   (yylsp[(2) - (5)]));
26939: 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
26940: 												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
26941: 				;}
26942:     break;
26943: 
26944:   case 960:
26945: #line 2309 "third_party/libpg_query/grammar/statements/select.y"
26946:     {
26947: 					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
26948: 											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
26949: 											   (yylsp[(2) - (7)]));
26950: 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
26951: 												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
26952: 				;}
26953:     break;
26954: 
26955:   case 961:
26956: #line 2327 "third_party/libpg_query/grammar/statements/select.y"
26957:     {
26958: 					PGNullTest *n = makeNode(PGNullTest);
26959: 					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
26960: 					n->nulltesttype = PG_IS_NULL;
26961: 					n->location = (yylsp[(2) - (3)]);
26962: 					(yyval.node) = (PGNode *)n;
26963: 				;}
26964:     break;
26965: 
26966:   case 962:
26967: #line 2335 "third_party/libpg_query/grammar/statements/select.y"
26968:     {
26969: 					PGNullTest *n = makeNode(PGNullTest);
26970: 					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
26971: 					n->nulltesttype = PG_IS_NULL;
26972: 					n->location = (yylsp[(2) - (2)]);
26973: 					(yyval.node) = (PGNode *)n;
26974: 				;}
26975:     break;
26976: 
26977:   case 963:
26978: #line 2343 "third_party/libpg_query/grammar/statements/select.y"
26979:     {
26980: 					PGNullTest *n = makeNode(PGNullTest);
26981: 					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
26982: 					n->nulltesttype = IS_NOT_NULL;
26983: 					n->location = (yylsp[(2) - (4)]);
26984: 					(yyval.node) = (PGNode *)n;
26985: 				;}
26986:     break;
26987: 
26988:   case 964:
26989: #line 2351 "third_party/libpg_query/grammar/statements/select.y"
26990:     {
26991: 					PGNullTest *n = makeNode(PGNullTest);
26992: 					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
26993: 					n->nulltesttype = IS_NOT_NULL;
26994: 					n->location = (yylsp[(2) - (3)]);
26995: 					(yyval.node) = (PGNode *)n;
26996: 				;}
26997:     break;
26998: 
26999:   case 965:
27000: #line 2359 "third_party/libpg_query/grammar/statements/select.y"
27001:     {
27002: 					PGNullTest *n = makeNode(PGNullTest);
27003: 					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
27004: 					n->nulltesttype = IS_NOT_NULL;
27005: 					n->location = (yylsp[(2) - (2)]);
27006: 					(yyval.node) = (PGNode *)n;
27007: 				;}
27008:     break;
27009: 
27010:   case 966:
27011: #line 2367 "third_party/libpg_query/grammar/statements/select.y"
27012:     {
27013: 				PGLambdaFunction *n = makeNode(PGLambdaFunction);
27014: 				n->lhs = (yyvsp[(1) - (3)].node);
27015: 				n->rhs = (yyvsp[(3) - (3)].node);
27016: 				n->location = (yylsp[(2) - (3)]);
27017: 				(yyval.node) = (PGNode *) n;
27018: 			;}
27019:     break;
27020: 
27021:   case 967:
27022: #line 2375 "third_party/libpg_query/grammar/statements/select.y"
27023:     {
27024: 							(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "->>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
27025: 			;}
27026:     break;
27027: 
27028:   case 968:
27029: #line 2379 "third_party/libpg_query/grammar/statements/select.y"
27030:     {
27031: 					if (list_length((yyvsp[(1) - (3)].list)) != 2)
27032: 						ereport(ERROR,
27033: 								(errcode(PG_ERRCODE_SYNTAX_ERROR),
27034: 								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
27035: 								 parser_errposition((yylsp[(1) - (3)]))));
27036: 					if (list_length((yyvsp[(3) - (3)].list)) != 2)
27037: 						ereport(ERROR,
27038: 								(errcode(PG_ERRCODE_SYNTAX_ERROR),
27039: 								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
27040: 								 parser_errposition((yylsp[(3) - (3)]))));
27041: 					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
27042: 											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
27043: 											   (yylsp[(2) - (3)]));
27044: 				;}
27045:     break;
27046: 
27047:   case 969:
27048: #line 2395 "third_party/libpg_query/grammar/statements/select.y"
27049:     {
27050: 					PGBooleanTest *b = makeNode(PGBooleanTest);
27051: 					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
27052: 					b->booltesttype = PG_IS_TRUE;
27053: 					b->location = (yylsp[(2) - (3)]);
27054: 					(yyval.node) = (PGNode *)b;
27055: 				;}
27056:     break;
27057: 
27058:   case 970:
27059: #line 2403 "third_party/libpg_query/grammar/statements/select.y"
27060:     {
27061: 					PGBooleanTest *b = makeNode(PGBooleanTest);
27062: 					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
27063: 					b->booltesttype = IS_NOT_TRUE;
27064: 					b->location = (yylsp[(2) - (4)]);
27065: 					(yyval.node) = (PGNode *)b;
27066: 				;}
27067:     break;
27068: 
27069:   case 971:
27070: #line 2411 "third_party/libpg_query/grammar/statements/select.y"
27071:     {
27072: 					PGBooleanTest *b = makeNode(PGBooleanTest);
27073: 					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
27074: 					b->booltesttype = IS_FALSE;
27075: 					b->location = (yylsp[(2) - (3)]);
27076: 					(yyval.node) = (PGNode *)b;
27077: 				;}
27078:     break;
27079: 
27080:   case 972:
27081: #line 2419 "third_party/libpg_query/grammar/statements/select.y"
27082:     {
27083: 					PGBooleanTest *b = makeNode(PGBooleanTest);
27084: 					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
27085: 					b->booltesttype = IS_NOT_FALSE;
27086: 					b->location = (yylsp[(2) - (4)]);
27087: 					(yyval.node) = (PGNode *)b;
27088: 				;}
27089:     break;
27090: 
27091:   case 973:
27092: #line 2427 "third_party/libpg_query/grammar/statements/select.y"
27093:     {
27094: 					PGBooleanTest *b = makeNode(PGBooleanTest);
27095: 					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
27096: 					b->booltesttype = IS_UNKNOWN;
27097: 					b->location = (yylsp[(2) - (3)]);
27098: 					(yyval.node) = (PGNode *)b;
27099: 				;}
27100:     break;
27101: 
27102:   case 974:
27103: #line 2435 "third_party/libpg_query/grammar/statements/select.y"
27104:     {
27105: 					PGBooleanTest *b = makeNode(PGBooleanTest);
27106: 					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
27107: 					b->booltesttype = IS_NOT_UNKNOWN;
27108: 					b->location = (yylsp[(2) - (4)]);
27109: 					(yyval.node) = (PGNode *)b;
27110: 				;}
27111:     break;
27112: 
27113:   case 975:
27114: #line 2443 "third_party/libpg_query/grammar/statements/select.y"
27115:     {
27116: 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
27117: 				;}
27118:     break;
27119: 
27120:   case 976:
27121: #line 2447 "third_party/libpg_query/grammar/statements/select.y"
27122:     {
27123: 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
27124: 				;}
27125:     break;
27126: 
27127:   case 977:
27128: #line 2451 "third_party/libpg_query/grammar/statements/select.y"
27129:     {
27130: 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
27131: 				;}
27132:     break;
27133: 
27134:   case 978:
27135: #line 2455 "third_party/libpg_query/grammar/statements/select.y"
27136:     {
27137: 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
27138: 				;}
27139:     break;
27140: 
27141:   case 979:
27142: #line 2459 "third_party/libpg_query/grammar/statements/select.y"
27143:     {
27144: 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
27145: 												   "BETWEEN",
27146: 												   (yyvsp[(1) - (6)].node),
27147: 												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
27148: 												   (yylsp[(2) - (6)]));
27149: 				;}
27150:     break;
27151: 
27152:   case 980:
27153: #line 2467 "third_party/libpg_query/grammar/statements/select.y"
27154:     {
27155: 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
27156: 												   "NOT BETWEEN",
27157: 												   (yyvsp[(1) - (7)].node),
27158: 												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
27159: 												   (yylsp[(2) - (7)]));
27160: 				;}
27161:     break;
27162: 
27163:   case 981:
27164: #line 2475 "third_party/libpg_query/grammar/statements/select.y"
27165:     {
27166: 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
27167: 												   "BETWEEN SYMMETRIC",
27168: 												   (yyvsp[(1) - (6)].node),
27169: 												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
27170: 												   (yylsp[(2) - (6)]));
27171: 				;}
27172:     break;
27173: 
27174:   case 982:
27175: #line 2483 "third_party/libpg_query/grammar/statements/select.y"
27176:     {
27177: 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
27178: 												   "NOT BETWEEN SYMMETRIC",
27179: 												   (yyvsp[(1) - (7)].node),
27180: 												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
27181: 												   (yylsp[(2) - (7)]));
27182: 				;}
27183:     break;
27184: 
27185:   case 983:
27186: #line 2491 "third_party/libpg_query/grammar/statements/select.y"
27187:     {
27188: 					/* in_expr returns a PGSubLink or a list of a_exprs */
27189: 					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
27190: 					{
27191: 						/* generate foo = ANY (subquery) */
27192: 						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
27193: 						n->subLinkType = PG_ANY_SUBLINK;
27194: 						n->subLinkId = 0;
27195: 						n->testexpr = (yyvsp[(1) - (3)].node);
27196: 						n->operName = NIL;		/* show it's IN not = ANY */
27197: 						n->location = (yylsp[(2) - (3)]);
27198: 						(yyval.node) = (PGNode *)n;
27199: 					}
27200: 					else
27201: 					{
27202: 						/* generate scalar IN expression */
27203: 						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
27204: 					}
27205: 				;}
27206:     break;
27207: 
27208:   case 984:
27209: #line 2511 "third_party/libpg_query/grammar/statements/select.y"
27210:     {
27211: 					/* in_expr returns a PGSubLink or a list of a_exprs */
27212: 					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
27213: 					{
27214: 						/* generate NOT (foo = ANY (subquery)) */
27215: 						/* Make an = ANY node */
27216: 						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
27217: 						n->subLinkType = PG_ANY_SUBLINK;
27218: 						n->subLinkId = 0;
27219: 						n->testexpr = (yyvsp[(1) - (4)].node);
27220: 						n->operName = NIL;		/* show it's IN not = ANY */
27221: 						n->location = (yylsp[(2) - (4)]);
27222: 						/* Stick a NOT on top; must have same parse location */
27223: 						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
27224: 					}
27225: 					else
27226: 					{
27227: 						/* generate scalar NOT IN expression */
27228: 						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
27229: 					}
27230: 				;}
27231:     break;
27232: 
27233:   case 985:
27234: #line 2533 "third_party/libpg_query/grammar/statements/select.y"
27235:     {
27236: 					PGSubLink *n = makeNode(PGSubLink);
27237: 					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
27238: 					n->subLinkId = 0;
27239: 					n->testexpr = (yyvsp[(1) - (4)].node);
27240: 					n->operName = (yyvsp[(2) - (4)].list);
27241: 					n->subselect = (yyvsp[(4) - (4)].node);
27242: 					n->location = (yylsp[(2) - (4)]);
27243: 					(yyval.node) = (PGNode *)n;
27244: 				;}
27245:     break;
27246: 
27247:   case 986:
27248: #line 2544 "third_party/libpg_query/grammar/statements/select.y"
27249:     {
27250: 					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
27251: 						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
27252: 					else
27253: 						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
27254: 				;}
27255:     break;
27256: 
27257:   case 987:
27258: #line 2551 "third_party/libpg_query/grammar/statements/select.y"
27259:     {
27260: 					/*
27261: 					 * The SQL spec only allows DEFAULT in "contextually typed
27262: 					 * expressions", but for us, it's easier to allow it in
27263: 					 * any a_expr and then throw error during parse analysis
27264: 					 * if it's in an inappropriate context.  This way also
27265: 					 * lets us say something smarter than "syntax error".
27266: 					 */
27267: 					PGSetToDefault *n = makeNode(PGSetToDefault);
27268: 					/* parse analysis will fill in the rest */
27269: 					n->location = (yylsp[(1) - (1)]);
27270: 					(yyval.node) = (PGNode *)n;
27271: 				;}
27272:     break;
27273: 
27274:   case 988:
27275: #line 2565 "third_party/libpg_query/grammar/statements/select.y"
27276:     {
27277: 					PGAStar *star = makeNode(PGAStar);
27278: 					star->expr = (yyvsp[(4) - (5)].node);
27279: 					star->columns = true;
27280: 					star->unpacked = true;
27281: 					star->location = (yylsp[(1) - (5)]);
27282: 					(yyval.node) = (PGNode *) star;
27283: 				;}
27284:     break;
27285: 
27286:   case 989:
27287: #line 2574 "third_party/libpg_query/grammar/statements/select.y"
27288:     {
27289: 					PGAStar *star = makeNode(PGAStar);
27290: 					star->expr = (yyvsp[(3) - (4)].node);
27291: 					star->columns = true;
27292: 					star->location = (yylsp[(1) - (4)]);
27293: 					(yyval.node) = (PGNode *) star;
27294: 				;}
27295:     break;
27296: 
27297:   case 990:
27298: #line 2582 "third_party/libpg_query/grammar/statements/select.y"
27299:     {
27300: 					PGAStar *star = makeNode(PGAStar);
27301: 					star->except_list = (yyvsp[(2) - (3)].list);
27302: 					star->replace_list = (yyvsp[(3) - (3)].list);
27303: 					star->location = (yylsp[(1) - (3)]);
27304: 					(yyval.node) = (PGNode *) star;
27305: 				;}
27306:     break;
27307: 
27308:   case 991:
27309: #line 2590 "third_party/libpg_query/grammar/statements/select.y"
27310:     {
27311: 					PGAStar *star = makeNode(PGAStar);
27312: 					star->relation = (yyvsp[(1) - (5)].str);
27313: 					star->except_list = (yyvsp[(4) - (5)].list);
27314: 					star->replace_list = (yyvsp[(5) - (5)].list);
27315: 					star->location = (yylsp[(1) - (5)]);
27316: 					(yyval.node) = (PGNode *) star;
27317: 				;}
27318:     break;
27319: 
27320:   case 992:
27321: #line 2610 "third_party/libpg_query/grammar/statements/select.y"
27322:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
27323:     break;
27324: 
27325:   case 993:
27326: #line 2612 "third_party/libpg_query/grammar/statements/select.y"
27327:     { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
27328:     break;
27329: 
27330:   case 994:
27331: #line 2614 "third_party/libpg_query/grammar/statements/select.y"
27332:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
27333:     break;
27334: 
27335:   case 995:
27336: #line 2616 "third_party/libpg_query/grammar/statements/select.y"
27337:     { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
27338:     break;
27339: 
27340:   case 996:
27341: #line 2618 "third_party/libpg_query/grammar/statements/select.y"
27342:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
27343:     break;
27344: 
27345:   case 997:
27346: #line 2620 "third_party/libpg_query/grammar/statements/select.y"
27347:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
27348:     break;
27349: 
27350:   case 998:
27351: #line 2622 "third_party/libpg_query/grammar/statements/select.y"
27352:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
27353:     break;
27354: 
27355:   case 999:
27356: #line 2624 "third_party/libpg_query/grammar/statements/select.y"
27357:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
27358:     break;
27359: 
27360:   case 1000:
27361: #line 2626 "third_party/libpg_query/grammar/statements/select.y"
27362:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "//", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
27363:     break;
27364: 
27365:   case 1001:
27366: #line 2628 "third_party/libpg_query/grammar/statements/select.y"
27367:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
27368:     break;
27369: 
27370:   case 1002:
27371: #line 2630 "third_party/libpg_query/grammar/statements/select.y"
27372:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
27373:     break;
27374: 
27375:   case 1003:
27376: #line 2632 "third_party/libpg_query/grammar/statements/select.y"
27377:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "**", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
27378:     break;
27379: 
27380:   case 1004:
27381: #line 2634 "third_party/libpg_query/grammar/statements/select.y"
27382:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
27383:     break;
27384: 
27385:   case 1005:
27386: #line 2636 "third_party/libpg_query/grammar/statements/select.y"
27387:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
27388:     break;
27389: 
27390:   case 1006:
27391: #line 2638 "third_party/libpg_query/grammar/statements/select.y"
27392:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
27393:     break;
27394: 
27395:   case 1007:
27396: #line 2640 "third_party/libpg_query/grammar/statements/select.y"
27397:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
27398:     break;
27399: 
27400:   case 1008:
27401: #line 2642 "third_party/libpg_query/grammar/statements/select.y"
27402:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
27403:     break;
27404: 
27405:   case 1009:
27406: #line 2644 "third_party/libpg_query/grammar/statements/select.y"
27407:     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
27408:     break;
27409: 
27410:   case 1010:
27411: #line 2646 "third_party/libpg_query/grammar/statements/select.y"
27412:     { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
27413:     break;
27414: 
27415:   case 1011:
27416: #line 2648 "third_party/libpg_query/grammar/statements/select.y"
27417:     { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
27418:     break;
27419: 
27420:   case 1012:
27421: #line 2650 "third_party/libpg_query/grammar/statements/select.y"
27422:     { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
27423:     break;
27424: 
27425:   case 1013:
27426: #line 2652 "third_party/libpg_query/grammar/statements/select.y"
27427:     {
27428: 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
27429: 				;}
27430:     break;
27431: 
27432:   case 1014:
27433: #line 2656 "third_party/libpg_query/grammar/statements/select.y"
27434:     {
27435: 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
27436: 				;}
27437:     break;
27438: 
27439:   case 1015:
27440: #line 2660 "third_party/libpg_query/grammar/statements/select.y"
27441:     {
27442: 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
27443: 				;}
27444:     break;
27445: 
27446:   case 1016:
27447: #line 2664 "third_party/libpg_query/grammar/statements/select.y"
27448:     {
27449: 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
27450: 				;}
27451:     break;
27452: 
27453:   case 1018:
27454: #line 2679 "third_party/libpg_query/grammar/statements/select.y"
27455:     {
27456: 					if ((yyvsp[(2) - (2)].list))
27457: 					{
27458: 						PGAIndirection *n = makeNode(PGAIndirection);
27459: 						n->arg = (PGNode *) (yyvsp[(1) - (2)].node);
27460: 						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
27461: 						(yyval.node) = (PGNode *) n;
27462: 					}
27463: 					else
27464: 						(yyval.node) = (PGNode *) (yyvsp[(1) - (2)].node);
27465: 				;}
27466:     break;
27467: 
27468:   case 1019:
27469: #line 2692 "third_party/libpg_query/grammar/statements/select.y"
27470:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
27471:     break;
27472: 
27473:   case 1020:
27474: #line 2693 "third_party/libpg_query/grammar/statements/select.y"
27475:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
27476:     break;
27477: 
27478:   case 1021:
27479: #line 2695 "third_party/libpg_query/grammar/statements/select.y"
27480:     {
27481: 					PGSubLink *n = makeNode(PGSubLink);
27482: 					n->subLinkType = PG_EXPR_SUBLINK;
27483: 					n->subLinkId = 0;
27484: 					n->testexpr = NULL;
27485: 					n->operName = NIL;
27486: 					n->subselect = (yyvsp[(1) - (1)].node);
27487: 					n->location = (yylsp[(1) - (1)]);
27488: 					(yyval.node) = (PGNode *)n;
27489: 				;}
27490:     break;
27491: 
27492:   case 1022:
27493: #line 2706 "third_party/libpg_query/grammar/statements/select.y"
27494:     {
27495: 					/*
27496: 					 * Because the select_with_parens nonterminal is designed
27497: 					 * to "eat" as many levels of parens as possible, the
27498: 					 * '(' a_expr ')' opt_indirection production above will
27499: 					 * fail to match a sub-SELECT with indirection decoration;
27500: 					 * the sub-SELECT won't be regarded as an a_expr as long
27501: 					 * as there are parens around it.  To support applying
27502: 					 * subscripting or field selection to a sub-SELECT result,
27503: 					 * we need this redundant-looking production.
27504: 					 */
27505: 					PGSubLink *n = makeNode(PGSubLink);
27506: 					PGAIndirection *a = makeNode(PGAIndirection);
27507: 					n->subLinkType = PG_EXPR_SUBLINK;
27508: 					n->subLinkId = 0;
27509: 					n->testexpr = NULL;
27510: 					n->operName = NIL;
27511: 					n->subselect = (yyvsp[(1) - (2)].node);
27512: 					n->location = (yylsp[(1) - (2)]);
27513: 					a->arg = (PGNode *)n;
27514: 					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
27515: 					(yyval.node) = (PGNode *)a;
27516: 				;}
27517:     break;
27518: 
27519:   case 1023:
27520: #line 2730 "third_party/libpg_query/grammar/statements/select.y"
27521:     {
27522: 					PGSubLink *n = makeNode(PGSubLink);
27523: 					n->subLinkType = PG_EXISTS_SUBLINK;
27524: 					n->subLinkId = 0;
27525: 					n->testexpr = NULL;
27526: 					n->operName = NIL;
27527: 					n->subselect = (yyvsp[(2) - (2)].node);
27528: 					n->location = (yylsp[(1) - (2)]);
27529: 					(yyval.node) = (PGNode *)n;
27530: 				;}
27531:     break;
27532: 
27533:   case 1024:
27534: #line 2741 "third_party/libpg_query/grammar/statements/select.y"
27535:     {
27536: 				  PGGroupingFunc *g = makeNode(PGGroupingFunc);
27537: 				  g->args = (yyvsp[(3) - (4)].list);
27538: 				  g->location = (yylsp[(1) - (4)]);
27539: 				  (yyval.node) = (PGNode *)g;
27540: 			  ;}
27541:     break;
27542: 
27543:   case 1025:
27544: #line 2751 "third_party/libpg_query/grammar/statements/select.y"
27545:     {
27546: 					(yyval.node) = (yyvsp[(2) - (3)].node);
27547: 				;}
27548:     break;
27549: 
27550:   case 1026:
27551: #line 2755 "third_party/libpg_query/grammar/statements/select.y"
27552:     {
27553: 					(yyval.node) = (yyvsp[(1) - (1)].node);
27554: 				;}
27555:     break;
27556: 
27557:   case 1027:
27558: #line 2758 "third_party/libpg_query/grammar/statements/select.y"
27559:     {
27560: 				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
27561: 				(yyval.node) = (PGNode *) n;
27562: 			;}
27563:     break;
27564: 
27565:   case 1028:
27566: #line 2766 "third_party/libpg_query/grammar/statements/select.y"
27567:     {
27568: 					(yyval.node) = makeParamRef(0, (yylsp[(1) - (1)]));
27569: 				;}
27570:     break;
27571: 
27572:   case 1029:
27573: #line 2770 "third_party/libpg_query/grammar/statements/select.y"
27574:     {
27575: 					PGParamRef *p = makeNode(PGParamRef);
27576: 					p->number = (yyvsp[(1) - (1)].ival);
27577: 					p->location = (yylsp[(1) - (1)]);
27578: 					(yyval.node) = (PGNode *) p;
27579: 				;}
27580:     break;
27581: 
27582:   case 1030:
27583: #line 2777 "third_party/libpg_query/grammar/statements/select.y"
27584:     {
27585: 					(yyval.node) = (yyvsp[(1) - (1)].node);
27586: 				;}
27587:     break;
27588: 
27589:   case 1031:
27590: #line 2781 "third_party/libpg_query/grammar/statements/select.y"
27591:     {
27592: 					(yyval.node) = (yyvsp[(1) - (1)].node);
27593: 				;}
27594:     break;
27595: 
27596:   case 1032:
27597: #line 2785 "third_party/libpg_query/grammar/statements/select.y"
27598:     {
27599: 					(yyval.node) = (yyvsp[(1) - (1)].node);
27600: 				;}
27601:     break;
27602: 
27603:   case 1033:
27604: #line 2789 "third_party/libpg_query/grammar/statements/select.y"
27605:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
27606:     break;
27607: 
27608:   case 1034:
27609: #line 2790 "third_party/libpg_query/grammar/statements/select.y"
27610:     {
27611:                 (yyval.node) = (yyvsp[(1) - (1)].node);
27612: 			;}
27613:     break;
27614: 
27615:   case 1035:
27616: #line 2793 "third_party/libpg_query/grammar/statements/select.y"
27617:     {
27618: 				(yyval.node) = (yyvsp[(1) - (1)].node);
27619: 			;}
27620:     break;
27621: 
27622:   case 1036:
27623: #line 2797 "third_party/libpg_query/grammar/statements/select.y"
27624:     {
27625: 					PGSubLink *n = makeNode(PGSubLink);
27626: 					n->subLinkType = PG_ARRAY_SUBLINK;
27627: 					n->subLinkId = 0;
27628: 					n->testexpr = NULL;
27629: 					n->operName = NULL;
27630: 					n->subselect = (yyvsp[(2) - (2)].node);
27631: 					n->location = (yylsp[(2) - (2)]);
27632: 					(yyval.node) = (PGNode *)n;
27633: 				;}
27634:     break;
27635: 
27636:   case 1037:
27637: #line 2807 "third_party/libpg_query/grammar/statements/select.y"
27638:     {
27639: 				PGList *func_name = list_make1(makeString("construct_array"));
27640: 				PGFuncCall *n = makeFuncCall(func_name, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
27641: 				(yyval.node) = (PGNode *) n;
27642: 			;}
27643:     break;
27644: 
27645:   case 1038:
27646: #line 2813 "third_party/libpg_query/grammar/statements/select.y"
27647:     {
27648: 					PGPositionalReference *n = makeNode(PGPositionalReference);
27649: 					n->position = (yyvsp[(2) - (2)].ival);
27650: 					n->location = (yylsp[(1) - (2)]);
27651: 					(yyval.node) = (PGNode *) n;
27652: 				;}
27653:     break;
27654: 
27655:   case 1039:
27656: #line 2820 "third_party/libpg_query/grammar/statements/select.y"
27657:     {
27658: 					(yyval.node) = makeNamedParamRef((yyvsp[(2) - (2)].str), (yylsp[(1) - (2)]));
27659: 				;}
27660:     break;
27661: 
27662:   case 1040:
27663: #line 2825 "third_party/libpg_query/grammar/statements/select.y"
27664:     {
27665:                 PGFuncCall *n = makeFuncCall(SystemFuncName("list_value"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
27666:                 (yyval.node) = (PGNode *) n;
27667:             ;}
27668:     break;
27669: 
27670:   case 1041:
27671: #line 2832 "third_party/libpg_query/grammar/statements/select.y"
27672:     {
27673: 					PGFuncCall *f = makeFuncCall(SystemFuncName("struct_pack"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
27674: 					(yyval.node) = (PGNode *) f;
27675: 				;}
27676:     break;
27677: 
27678:   case 1042:
27679: #line 2839 "third_party/libpg_query/grammar/statements/select.y"
27680:     {
27681:                     PGList *key_list = NULL;
27682:                     PGList *value_list = NULL;
27683:                     PGListCell *lc;
27684:                     PGList *entry_list = (yyvsp[(3) - (4)].list);
27685:                     foreach(lc, entry_list)
27686:                     {
27687:                         PGList *l = (PGList *) lc->data.ptr_value;
27688:                         key_list = lappend(key_list, (PGNode *) l->head->data.ptr_value);
27689:                         value_list = lappend(value_list, (PGNode *) l->tail->data.ptr_value);
27690:                     }
27691:                     PGNode *keys   = (PGNode *) makeFuncCall(SystemFuncName("list_value"), key_list, (yylsp[(3) - (4)]));
27692:                     PGNode *values = (PGNode *) makeFuncCall(SystemFuncName("list_value"), value_list, (yylsp[(3) - (4)]));
27693:                     PGFuncCall *f = makeFuncCall(SystemFuncName("map"), list_make2(keys, values), (yylsp[(3) - (4)]));
27694:                     (yyval.node) = (PGNode *) f;
27695:                 ;}
27696:     break;
27697: 
27698:   case 1043:
27699: #line 2859 "third_party/libpg_query/grammar/statements/select.y"
27700:     {
27701: 					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
27702: 				;}
27703:     break;
27704: 
27705:   case 1044:
27706: #line 2863 "third_party/libpg_query/grammar/statements/select.y"
27707:     {
27708: 					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(3) - (6)].list), (yylsp[(1) - (6)]));
27709: 					n->agg_order = (yyvsp[(4) - (6)].list);
27710: 					n->agg_ignore_nulls = (yyvsp[(5) - (6)].ignorenulls);
27711: 					(yyval.node) = (PGNode *)n;
27712: 				;}
27713:     break;
27714: 
27715:   case 1045:
27716: #line 2870 "third_party/libpg_query/grammar/statements/select.y"
27717:     {
27718: 					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), list_make1((yyvsp[(4) - (7)].node)), (yylsp[(1) - (7)]));
27719: 					n->func_variadic = true;
27720: 					n->agg_order = (yyvsp[(5) - (7)].list);
27721: 					n->agg_ignore_nulls = (yyvsp[(6) - (7)].ignorenulls);
27722: 					(yyval.node) = (PGNode *)n;
27723: 				;}
27724:     break;
27725: 
27726:   case 1046:
27727: #line 2878 "third_party/libpg_query/grammar/statements/select.y"
27728:     {
27729: 					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (9)].list), lappend((yyvsp[(3) - (9)].list), (yyvsp[(6) - (9)].node)), (yylsp[(1) - (9)]));
27730: 					n->func_variadic = true;
27731: 					n->agg_order = (yyvsp[(7) - (9)].list);
27732: 					n->agg_ignore_nulls = (yyvsp[(8) - (9)].ignorenulls);
27733: 					(yyval.node) = (PGNode *)n;
27734: 				;}
27735:     break;
27736: 
27737:   case 1047:
27738: #line 2886 "third_party/libpg_query/grammar/statements/select.y"
27739:     {
27740: 					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
27741: 					n->agg_order = (yyvsp[(5) - (7)].list);
27742: 					n->agg_ignore_nulls = (yyvsp[(6) - (7)].ignorenulls);
27743: 					/* Ideally we'd mark the PGFuncCall node to indicate
27744: 					 * "must be an aggregate", but there's no provision
27745: 					 * for that in PGFuncCall at the moment.
27746: 					 */
27747: 					(yyval.node) = (PGNode *)n;
27748: 				;}
27749:     break;
27750: 
27751:   case 1048:
27752: #line 2897 "third_party/libpg_query/grammar/statements/select.y"
27753:     {
27754: 					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
27755: 					n->agg_order = (yyvsp[(5) - (7)].list);
27756: 					n->agg_ignore_nulls = (yyvsp[(6) - (7)].ignorenulls);
27757: 					n->agg_distinct = true;
27758: 					(yyval.node) = (PGNode *)n;
27759: 				;}
27760:     break;
27761: 
27762:   case 1049:
27763: #line 2917 "third_party/libpg_query/grammar/statements/select.y"
27764:     {
27765: 					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (5)].node);
27766: 					/*
27767: 					 * The order clause for WITHIN GROUP and the one for
27768: 					 * plain-aggregate ORDER BY share a field, so we have to
27769: 					 * check here that at most one is present.  We also check
27770: 					 * for DISTINCT and VARIADIC here to give a better error
27771: 					 * location.  Other consistency checks are deferred to
27772: 					 * parse analysis.
27773: 					 */
27774: 					if ((yyvsp[(2) - (5)].list) != NIL)
27775: 					{
27776: 						if (n->agg_order != NIL)
27777: 							ereport(ERROR,
27778: 									(errcode(PG_ERRCODE_SYNTAX_ERROR),
27779: 									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
27780: 									 parser_errposition((yylsp[(2) - (5)]))));
27781: 						if (n->agg_distinct)
27782: 							ereport(ERROR,
27783: 									(errcode(PG_ERRCODE_SYNTAX_ERROR),
27784: 									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
27785: 									 parser_errposition((yylsp[(2) - (5)]))));
27786: 						if (n->func_variadic)
27787: 							ereport(ERROR,
27788: 									(errcode(PG_ERRCODE_SYNTAX_ERROR),
27789: 									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
27790: 									 parser_errposition((yylsp[(2) - (5)]))));
27791: 						n->agg_order = (yyvsp[(2) - (5)].list);
27792: 						n->agg_within_group = true;
27793: 					}
27794: 					n->agg_filter = (yyvsp[(3) - (5)].node);
27795: 					n->export_state = (yyvsp[(4) - (5)].boolean);
27796: 					n->over = (yyvsp[(5) - (5)].windef);
27797: 					(yyval.node) = (PGNode *) n;
27798: 				;}
27799:     break;
27800: 
27801:   case 1050:
27802: #line 2953 "third_party/libpg_query/grammar/statements/select.y"
27803:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
27804:     break;
27805: 
27806:   case 1051:
27807: #line 2963 "third_party/libpg_query/grammar/statements/select.y"
27808:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
27809:     break;
27810: 
27811:   case 1052:
27812: #line 2964 "third_party/libpg_query/grammar/statements/select.y"
27813:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
27814:     break;
27815: 
27816:   case 1053:
27817: #line 2972 "third_party/libpg_query/grammar/statements/select.y"
27818:     {
27819: 					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
27820: 											   list_make1((yyvsp[(4) - (5)].node)),
27821: 											   (yylsp[(1) - (5)]));
27822: 				;}
27823:     break;
27824: 
27825:   case 1054:
27826: #line 2978 "third_party/libpg_query/grammar/statements/select.y"
27827:     { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 0, (yylsp[(1) - (6)])); ;}
27828:     break;
27829: 
27830:   case 1055:
27831: #line 2980 "third_party/libpg_query/grammar/statements/select.y"
27832:     { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 1, (yylsp[(1) - (6)])); ;}
27833:     break;
27834: 
27835:   case 1056:
27836: #line 2982 "third_party/libpg_query/grammar/statements/select.y"
27837:     {
27838: 					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
27839: 				;}
27840:     break;
27841: 
27842:   case 1057:
27843: #line 2986 "third_party/libpg_query/grammar/statements/select.y"
27844:     {
27845: 					/* overlay(A PLACING B FROM C FOR D) is converted to
27846: 					 * overlay(A, B, C, D)
27847: 					 * overlay(A PLACING B FROM C) is converted to
27848: 					 * overlay(A, B, C)
27849: 					 */
27850: 					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
27851: 				;}
27852:     break;
27853: 
27854:   case 1058:
27855: #line 2995 "third_party/libpg_query/grammar/statements/select.y"
27856:     {
27857: 					/* position(A in B) is converted to position_inverse(A, B) */
27858: 					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("__internal_position_operator"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
27859: 				;}
27860:     break;
27861: 
27862:   case 1059:
27863: #line 3000 "third_party/libpg_query/grammar/statements/select.y"
27864:     {
27865: 					/* substring(A from B for C) is converted to
27866: 					 * substring(A, B, C) - thomas 2000-11-28
27867: 					 */
27868: 					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
27869: 				;}
27870:     break;
27871: 
27872:   case 1060:
27873: #line 3007 "third_party/libpg_query/grammar/statements/select.y"
27874:     {
27875: 					/* TREAT(expr AS target) converts expr of a particular type to target,
27876: 					 * which is defined to be a subtype of the original expression.
27877: 					 * In SQL99, this is intended for use with structured UDTs,
27878: 					 * but let's make this a generally useful form allowing stronger
27879: 					 * coercions than are handled by implicit casting.
27880: 					 *
27881: 					 * Convert SystemTypeName() to SystemFuncName() even though
27882: 					 * at the moment they result in the same thing.
27883: 					 */
27884: 					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
27885: 												list_make1((yyvsp[(3) - (6)].node)),
27886: 												(yylsp[(1) - (6)]));
27887: 				;}
27888:     break;
27889: 
27890:   case 1061:
27891: #line 3022 "third_party/libpg_query/grammar/statements/select.y"
27892:     {
27893: 					/* various trim expressions are defined in SQL
27894: 					 * - thomas 1997-07-19
27895: 					 */
27896: 					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
27897: 				;}
27898:     break;
27899: 
27900:   case 1062:
27901: #line 3029 "third_party/libpg_query/grammar/statements/select.y"
27902:     {
27903: 					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
27904: 				;}
27905:     break;
27906: 
27907:   case 1063:
27908: #line 3033 "third_party/libpg_query/grammar/statements/select.y"
27909:     {
27910: 					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
27911: 				;}
27912:     break;
27913: 
27914:   case 1064:
27915: #line 3037 "third_party/libpg_query/grammar/statements/select.y"
27916:     {
27917: 					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
27918: 				;}
27919:     break;
27920: 
27921:   case 1065:
27922: #line 3041 "third_party/libpg_query/grammar/statements/select.y"
27923:     {
27924: 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
27925: 				;}
27926:     break;
27927: 
27928:   case 1066:
27929: #line 3045 "third_party/libpg_query/grammar/statements/select.y"
27930:     {
27931: 					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
27932: 					c->args = (yyvsp[(3) - (4)].list);
27933: 					c->location = (yylsp[(1) - (4)]);
27934: 					(yyval.node) = (PGNode *)c;
27935: 				;}
27936:     break;
27937: 
27938:   case 1067:
27939: #line 3055 "third_party/libpg_query/grammar/statements/select.y"
27940:     {
27941: 			PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
27942: 			(yyval.node) = (PGNode *) n;
27943: 		;}
27944:     break;
27945: 
27946:   case 1068:
27947: #line 3063 "third_party/libpg_query/grammar/statements/select.y"
27948:     {
27949: 					PGLambdaFunction *lambda = makeNode(PGLambdaFunction);
27950: 					lambda->lhs = (yyvsp[(4) - (7)].node);
27951: 					lambda->rhs = (yyvsp[(2) - (7)].node);
27952: 					lambda->location = (yylsp[(1) - (7)]);
27953: 					PGFuncCall *n = makeFuncCall(SystemFuncName("list_apply"), list_make2((yyvsp[(6) - (7)].node), lambda), (yylsp[(1) - (7)]));
27954: 					(yyval.node) = (PGNode *) n;
27955: 				;}
27956:     break;
27957: 
27958:   case 1069:
27959: #line 3072 "third_party/libpg_query/grammar/statements/select.y"
27960:     {
27961: 					PGLambdaFunction *lambda = makeNode(PGLambdaFunction);
27962: 					lambda->lhs = (yyvsp[(4) - (9)].node);
27963: 					lambda->rhs = (yyvsp[(2) - (9)].node);
27964: 					lambda->location = (yylsp[(1) - (9)]);
27965: 
27966: 					PGLambdaFunction *lambda_filter = makeNode(PGLambdaFunction);
27967: 					lambda_filter->lhs = (yyvsp[(4) - (9)].node);
27968: 					lambda_filter->rhs = (yyvsp[(8) - (9)].node);
27969: 					lambda_filter->location = (yylsp[(8) - (9)]);
27970: 					PGFuncCall *filter = makeFuncCall(SystemFuncName("list_filter"), list_make2((yyvsp[(6) - (9)].node), lambda_filter), (yylsp[(1) - (9)]));
27971: 					PGFuncCall *n = makeFuncCall(SystemFuncName("list_apply"), list_make2(filter, lambda), (yylsp[(1) - (9)]));
27972: 					(yyval.node) = (PGNode *) n;
27973: 				;}
27974:     break;
27975: 
27976:   case 1070:
27977: #line 3093 "third_party/libpg_query/grammar/statements/select.y"
27978:     { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
27979:     break;
27980: 
27981:   case 1071:
27982: #line 3094 "third_party/libpg_query/grammar/statements/select.y"
27983:     { (yyval.list) = NIL; ;}
27984:     break;
27985: 
27986:   case 1072:
27987: #line 3098 "third_party/libpg_query/grammar/statements/select.y"
27988:     { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
27989:     break;
27990: 
27991:   case 1073:
27992: #line 3099 "third_party/libpg_query/grammar/statements/select.y"
27993:     { (yyval.node) = (yyvsp[(3) - (4)].node); ;}
27994:     break;
27995: 
27996:   case 1074:
27997: #line 3100 "third_party/libpg_query/grammar/statements/select.y"
27998:     { (yyval.node) = NULL; ;}
27999:     break;
28000: 
28001:   case 1075:
28002: #line 3104 "third_party/libpg_query/grammar/statements/select.y"
28003:     { (yyval.boolean) = true; ;}
28004:     break;
28005: 
28006:   case 1076:
28007: #line 3105 "third_party/libpg_query/grammar/statements/select.y"
28008:     { (yyval.boolean) = false; ;}
28009:     break;
28010: 
28011:   case 1077:
28012: #line 3112 "third_party/libpg_query/grammar/statements/select.y"
28013:     { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
28014:     break;
28015: 
28016:   case 1078:
28017: #line 3113 "third_party/libpg_query/grammar/statements/select.y"
28018:     { (yyval.list) = NIL; ;}
28019:     break;
28020: 
28021:   case 1079:
28022: #line 3117 "third_party/libpg_query/grammar/statements/select.y"
28023:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
28024:     break;
28025: 
28026:   case 1080:
28027: #line 3119 "third_party/libpg_query/grammar/statements/select.y"
28028:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
28029:     break;
28030: 
28031:   case 1081:
28032: #line 3124 "third_party/libpg_query/grammar/statements/select.y"
28033:     {
28034: 					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
28035: 					n->name = (yyvsp[(1) - (3)].str);
28036: 					(yyval.windef) = n;
28037: 				;}
28038:     break;
28039: 
28040:   case 1082:
28041: #line 3132 "third_party/libpg_query/grammar/statements/select.y"
28042:     { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
28043:     break;
28044: 
28045:   case 1083:
28046: #line 3134 "third_party/libpg_query/grammar/statements/select.y"
28047:     {
28048: 					PGWindowDef *n = makeNode(PGWindowDef);
28049: 					n->name = (yyvsp[(2) - (2)].str);
28050: 					n->refname = NULL;
28051: 					n->partitionClause = NIL;
28052: 					n->orderClause = NIL;
28053: 					n->frameOptions = FRAMEOPTION_DEFAULTS;
28054: 					n->startOffset = NULL;
28055: 					n->endOffset = NULL;
28056: 					n->location = (yylsp[(2) - (2)]);
28057: 					(yyval.windef) = n;
28058: 				;}
28059:     break;
28060: 
28061:   case 1084:
28062: #line 3147 "third_party/libpg_query/grammar/statements/select.y"
28063:     { (yyval.windef) = NULL; ;}
28064:     break;
28065: 
28066:   case 1085:
28067: #line 3152 "third_party/libpg_query/grammar/statements/select.y"
28068:     {
28069: 					PGWindowDef *n = makeNode(PGWindowDef);
28070: 					n->name = NULL;
28071: 					n->refname = (yyvsp[(2) - (6)].str);
28072: 					n->partitionClause = (yyvsp[(3) - (6)].list);
28073: 					n->orderClause = (yyvsp[(4) - (6)].list);
28074: 					/* copy relevant fields of opt_frame_clause */
28075: 					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
28076: 					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
28077: 					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
28078: 					n->location = (yylsp[(1) - (6)]);
28079: 					(yyval.windef) = n;
28080: 				;}
28081:     break;
28082: 
28083:   case 1086:
28084: #line 3177 "third_party/libpg_query/grammar/statements/select.y"
28085:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
28086:     break;
28087: 
28088:   case 1087:
28089: #line 3178 "third_party/libpg_query/grammar/statements/select.y"
28090:     { (yyval.str) = NULL; ;}
28091:     break;
28092: 
28093:   case 1088:
28094: #line 3181 "third_party/libpg_query/grammar/statements/select.y"
28095:     { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
28096:     break;
28097: 
28098:   case 1089:
28099: #line 3182 "third_party/libpg_query/grammar/statements/select.y"
28100:     { (yyval.list) = NIL; ;}
28101:     break;
28102: 
28103:   case 1090:
28104: #line 3191 "third_party/libpg_query/grammar/statements/select.y"
28105:     {
28106: 					PGWindowDef *n = (yyvsp[(2) - (3)].windef);
28107: 
28108: 					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
28109: 					n->frameOptions |= (yyvsp[(3) - (3)].ival);
28110: 					(yyval.windef) = n;
28111: 				;}
28112:     break;
28113: 
28114:   case 1091:
28115: #line 3199 "third_party/libpg_query/grammar/statements/select.y"
28116:     {
28117: 					PGWindowDef *n = (yyvsp[(2) - (3)].windef);
28118: 
28119: 					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
28120: 					n->frameOptions |= (yyvsp[(3) - (3)].ival);
28121: 					(yyval.windef) = n;
28122: 				;}
28123:     break;
28124: 
28125:   case 1092:
28126: #line 3207 "third_party/libpg_query/grammar/statements/select.y"
28127:     {
28128: 					PGWindowDef *n = (yyvsp[(2) - (3)].windef);
28129: 
28130: 					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_GROUPS;
28131: 					n->frameOptions |= (yyvsp[(3) - (3)].ival);
28132: 					(yyval.windef) = n;
28133: 				;}
28134:     break;
28135: 
28136:   case 1093:
28137: #line 3215 "third_party/libpg_query/grammar/statements/select.y"
28138:     {
28139: 					PGWindowDef *n = makeNode(PGWindowDef);
28140: 
28141: 					n->frameOptions = FRAMEOPTION_DEFAULTS;
28142: 					n->startOffset = NULL;
28143: 					n->endOffset = NULL;
28144: 					(yyval.windef) = n;
28145: 				;}
28146:     break;
28147: 
28148:   case 1094:
28149: #line 3226 "third_party/libpg_query/grammar/statements/select.y"
28150:     {
28151: 					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
28152: 
28153: 					/* reject invalid cases */
28154: 					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
28155: 						ereport(ERROR,
28156: 								(errcode(PG_ERRCODE_WINDOWING_ERROR),
28157: 								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
28158: 								 parser_errposition((yylsp[(1) - (1)]))));
28159: 					if (n->frameOptions & FRAMEOPTION_START_OFFSET_FOLLOWING)
28160: 						ereport(ERROR,
28161: 								(errcode(PG_ERRCODE_WINDOWING_ERROR),
28162: 								 errmsg("frame starting from following row cannot end with current row"),
28163: 								 parser_errposition((yylsp[(1) - (1)]))));
28164: 					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
28165: 					(yyval.windef) = n;
28166: 				;}
28167:     break;
28168: 
28169:   case 1095:
28170: #line 3244 "third_party/libpg_query/grammar/statements/select.y"
28171:     {
28172: 					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
28173: 					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
28174: 
28175: 					/* form merged options */
28176: 					int		frameOptions = n1->frameOptions;
28177: 					/* shift converts START_ options to END_ options */
28178: 					frameOptions |= n2->frameOptions << 1;
28179: 					frameOptions |= FRAMEOPTION_BETWEEN;
28180: 					/* reject invalid cases */
28181: 					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
28182: 						ereport(ERROR,
28183: 								(errcode(PG_ERRCODE_WINDOWING_ERROR),
28184: 								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
28185: 								 parser_errposition((yylsp[(2) - (4)]))));
28186: 					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
28187: 						ereport(ERROR,
28188: 								(errcode(PG_ERRCODE_WINDOWING_ERROR),
28189: 								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
28190: 								 parser_errposition((yylsp[(4) - (4)]))));
28191: 					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
28192: 						(frameOptions & FRAMEOPTION_END_OFFSET_PRECEDING))
28193: 						ereport(ERROR,
28194: 								(errcode(PG_ERRCODE_WINDOWING_ERROR),
28195: 								 errmsg("frame starting from current row cannot have preceding rows"),
28196: 								 parser_errposition((yylsp[(4) - (4)]))));
28197: 					if ((frameOptions & FRAMEOPTION_START_OFFSET_FOLLOWING) &&
28198: 						(frameOptions & (FRAMEOPTION_END_OFFSET_PRECEDING |
28199: 										 FRAMEOPTION_END_CURRENT_ROW)))
28200: 						ereport(ERROR,
28201: 								(errcode(PG_ERRCODE_WINDOWING_ERROR),
28202: 								 errmsg("frame starting from following row cannot have preceding rows"),
28203: 								 parser_errposition((yylsp[(4) - (4)]))));
28204: 					n1->frameOptions = frameOptions;
28205: 					n1->endOffset = n2->startOffset;
28206: 					(yyval.windef) = n1;
28207: 				;}
28208:     break;
28209: 
28210:   case 1096:
28211: #line 3290 "third_party/libpg_query/grammar/statements/select.y"
28212:     {
28213: 					PGWindowDef *n = makeNode(PGWindowDef);
28214: 
28215: 					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
28216: 					n->startOffset = NULL;
28217: 					n->endOffset = NULL;
28218: 					(yyval.windef) = n;
28219: 				;}
28220:     break;
28221: 
28222:   case 1097:
28223: #line 3299 "third_party/libpg_query/grammar/statements/select.y"
28224:     {
28225: 					PGWindowDef *n = makeNode(PGWindowDef);
28226: 
28227: 					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
28228: 					n->startOffset = NULL;
28229: 					n->endOffset = NULL;
28230: 					(yyval.windef) = n;
28231: 				;}
28232:     break;
28233: 
28234:   case 1098:
28235: #line 3308 "third_party/libpg_query/grammar/statements/select.y"
28236:     {
28237: 					PGWindowDef *n = makeNode(PGWindowDef);
28238: 
28239: 					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
28240: 					n->startOffset = NULL;
28241: 					n->endOffset = NULL;
28242: 					(yyval.windef) = n;
28243: 				;}
28244:     break;
28245: 
28246:   case 1099:
28247: #line 3317 "third_party/libpg_query/grammar/statements/select.y"
28248:     {
28249: 					PGWindowDef *n = makeNode(PGWindowDef);
28250: 
28251: 					n->frameOptions = FRAMEOPTION_START_OFFSET_PRECEDING;
28252: 					n->startOffset = (yyvsp[(1) - (2)].node);
28253: 					n->endOffset = NULL;
28254: 					(yyval.windef) = n;
28255: 				;}
28256:     break;
28257: 
28258:   case 1100:
28259: #line 3326 "third_party/libpg_query/grammar/statements/select.y"
28260:     {
28261: 					PGWindowDef *n = makeNode(PGWindowDef);
28262: 
28263: 					n->frameOptions = FRAMEOPTION_START_OFFSET_FOLLOWING;
28264: 					n->startOffset = (yyvsp[(1) - (2)].node);
28265: 					n->endOffset = NULL;
28266: 					(yyval.windef) = n;
28267: 				;}
28268:     break;
28269: 
28270:   case 1101:
28271: #line 3337 "third_party/libpg_query/grammar/statements/select.y"
28272:     { (yyval.ival) = FRAMEOPTION_EXCLUDE_CURRENT_ROW; ;}
28273:     break;
28274: 
28275:   case 1102:
28276: #line 3338 "third_party/libpg_query/grammar/statements/select.y"
28277:     { (yyval.ival) = FRAMEOPTION_EXCLUDE_GROUP; ;}
28278:     break;
28279: 
28280:   case 1103:
28281: #line 3339 "third_party/libpg_query/grammar/statements/select.y"
28282:     { (yyval.ival) = FRAMEOPTION_EXCLUDE_TIES; ;}
28283:     break;
28284: 
28285:   case 1104:
28286: #line 3340 "third_party/libpg_query/grammar/statements/select.y"
28287:     { (yyval.ival) = 0; ;}
28288:     break;
28289: 
28290:   case 1105:
28291: #line 3341 "third_party/libpg_query/grammar/statements/select.y"
28292:     { (yyval.ival) = 0; ;}
28293:     break;
28294: 
28295:   case 1106:
28296: #line 3355 "third_party/libpg_query/grammar/statements/select.y"
28297:     { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
28298:     break;
28299: 
28300:   case 1107:
28301: #line 3356 "third_party/libpg_query/grammar/statements/select.y"
28302:     { (yyval.list) = NIL; ;}
28303:     break;
28304: 
28305:   case 1108:
28306: #line 3359 "third_party/libpg_query/grammar/statements/select.y"
28307:     { (yyval.list) = (yyvsp[(1) - (1)].list);;}
28308:     break;
28309: 
28310:   case 1109:
28311: #line 3360 "third_party/libpg_query/grammar/statements/select.y"
28312:     { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
28313:     break;
28314: 
28315:   case 1110:
28316: #line 3364 "third_party/libpg_query/grammar/statements/select.y"
28317:     {
28318: 		PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
28319: 		na->name = (yyvsp[(1) - (3)].str);
28320: 		na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
28321: 		na->argnumber = -1;
28322: 		na->location = (yylsp[(1) - (3)]);
28323: 		(yyval.node) = (PGNode *) na;
28324: 	;}
28325:     break;
28326: 
28327:   case 1111:
28328: #line 3374 "third_party/libpg_query/grammar/statements/select.y"
28329:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
28330:     break;
28331: 
28332:   case 1112:
28333: #line 3375 "third_party/libpg_query/grammar/statements/select.y"
28334:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
28335:     break;
28336: 
28337:   case 1113:
28338: #line 3379 "third_party/libpg_query/grammar/statements/select.y"
28339:     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
28340:     break;
28341: 
28342:   case 1114:
28343: #line 3380 "third_party/libpg_query/grammar/statements/select.y"
28344:     { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
28345:     break;
28346: 
28347:   case 1115:
28348: #line 3385 "third_party/libpg_query/grammar/statements/select.y"
28349:     {
28350: 				(yyval.list) = list_make2((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node));
28351: 			;}
28352:     break;
28353: 
28354:   case 1116:
28355: #line 3391 "third_party/libpg_query/grammar/statements/select.y"
28356:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
28357:     break;
28358: 
28359:   case 1117:
28360: #line 3392 "third_party/libpg_query/grammar/statements/select.y"
28361:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
28362:     break;
28363: 
28364:   case 1118:
28365: #line 3397 "third_party/libpg_query/grammar/statements/select.y"
28366:     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
28367:     break;
28368: 
28369:   case 1119:
28370: #line 3398 "third_party/libpg_query/grammar/statements/select.y"
28371:     { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
28372:     break;
28373: 
28374:   case 1120:
28375: #line 3403 "third_party/libpg_query/grammar/statements/select.y"
28376:     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
28377:     break;
28378: 
28379:   case 1121:
28380: #line 3404 "third_party/libpg_query/grammar/statements/select.y"
28381:     { (yyval.list) = NULL; ;}
28382:     break;
28383: 
28384:   case 1122:
28385: #line 3407 "third_party/libpg_query/grammar/statements/select.y"
28386:     { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
28387:     break;
28388: 
28389:   case 1123:
28390: #line 3408 "third_party/libpg_query/grammar/statements/select.y"
28391:     { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
28392:     break;
28393: 
28394:   case 1124:
28395: #line 3409 "third_party/libpg_query/grammar/statements/select.y"
28396:     { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
28397:     break;
28398: 
28399:   case 1125:
28400: #line 3412 "third_party/libpg_query/grammar/statements/select.y"
28401:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
28402:     break;
28403: 
28404:   case 1126:
28405: #line 3413 "third_party/libpg_query/grammar/statements/select.y"
28406:     { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
28407:     break;
28408: 
28409:   case 1127:
28410: #line 3416 "third_party/libpg_query/grammar/statements/select.y"
28411:     { (yyval.conststr) = "+"; ;}
28412:     break;
28413: 
28414:   case 1128:
28415: #line 3417 "third_party/libpg_query/grammar/statements/select.y"
28416:     { (yyval.conststr) = "-"; ;}
28417:     break;
28418: 
28419:   case 1129:
28420: #line 3418 "third_party/libpg_query/grammar/statements/select.y"
28421:     { (yyval.conststr) = "*"; ;}
28422:     break;
28423: 
28424:   case 1130:
28425: #line 3419 "third_party/libpg_query/grammar/statements/select.y"
28426:     { (yyval.conststr) = "/"; ;}
28427:     break;
28428: 
28429:   case 1131:
28430: #line 3420 "third_party/libpg_query/grammar/statements/select.y"
28431:     { (yyval.conststr) = "//"; ;}
28432:     break;
28433: 
28434:   case 1132:
28435: #line 3421 "third_party/libpg_query/grammar/statements/select.y"
28436:     { (yyval.conststr) = "%"; ;}
28437:     break;
28438: 
28439:   case 1133:
28440: #line 3422 "third_party/libpg_query/grammar/statements/select.y"
28441:     { (yyval.conststr) = "^"; ;}
28442:     break;
28443: 
28444:   case 1134:
28445: #line 3423 "third_party/libpg_query/grammar/statements/select.y"
28446:     { (yyval.conststr) = "**"; ;}
28447:     break;
28448: 
28449:   case 1135:
28450: #line 3424 "third_party/libpg_query/grammar/statements/select.y"
28451:     { (yyval.conststr) = "<"; ;}
28452:     break;
28453: 
28454:   case 1136:
28455: #line 3425 "third_party/libpg_query/grammar/statements/select.y"
28456:     { (yyval.conststr) = ">"; ;}
28457:     break;
28458: 
28459:   case 1137:
28460: #line 3426 "third_party/libpg_query/grammar/statements/select.y"
28461:     { (yyval.conststr) = "="; ;}
28462:     break;
28463: 
28464:   case 1138:
28465: #line 3427 "third_party/libpg_query/grammar/statements/select.y"
28466:     { (yyval.conststr) = "<="; ;}
28467:     break;
28468: 
28469:   case 1139:
28470: #line 3428 "third_party/libpg_query/grammar/statements/select.y"
28471:     { (yyval.conststr) = ">="; ;}
28472:     break;
28473: 
28474:   case 1140:
28475: #line 3429 "third_party/libpg_query/grammar/statements/select.y"
28476:     { (yyval.conststr) = "<>"; ;}
28477:     break;
28478: 
28479:   case 1141:
28480: #line 3433 "third_party/libpg_query/grammar/statements/select.y"
28481:     { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
28482:     break;
28483: 
28484:   case 1142:
28485: #line 3435 "third_party/libpg_query/grammar/statements/select.y"
28486:     { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
28487:     break;
28488: 
28489:   case 1143:
28490: #line 3440 "third_party/libpg_query/grammar/statements/select.y"
28491:     { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
28492:     break;
28493: 
28494:   case 1144:
28495: #line 3442 "third_party/libpg_query/grammar/statements/select.y"
28496:     { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
28497:     break;
28498: 
28499:   case 1145:
28500: #line 3447 "third_party/libpg_query/grammar/statements/select.y"
28501:     { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
28502:     break;
28503: 
28504:   case 1146:
28505: #line 3449 "third_party/libpg_query/grammar/statements/select.y"
28506:     { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
28507:     break;
28508: 
28509:   case 1147:
28510: #line 3451 "third_party/libpg_query/grammar/statements/select.y"
28511:     { (yyval.list) = list_make1(makeString("~~")); ;}
28512:     break;
28513: 
28514:   case 1148:
28515: #line 3453 "third_party/libpg_query/grammar/statements/select.y"
28516:     { (yyval.list) = list_make1(makeString("!~~")); ;}
28517:     break;
28518: 
28519:   case 1149:
28520: #line 3455 "third_party/libpg_query/grammar/statements/select.y"
28521:     { (yyval.list) = list_make1(makeString("~~~")); ;}
28522:     break;
28523: 
28524:   case 1150:
28525: #line 3457 "third_party/libpg_query/grammar/statements/select.y"
28526:     { (yyval.list) = list_make1(makeString("!~~~")); ;}
28527:     break;
28528: 
28529:   case 1151:
28530: #line 3459 "third_party/libpg_query/grammar/statements/select.y"
28531:     { (yyval.list) = list_make1(makeString("~~*")); ;}
28532:     break;
28533: 
28534:   case 1152:
28535: #line 3461 "third_party/libpg_query/grammar/statements/select.y"
28536:     { (yyval.list) = list_make1(makeString("!~~*")); ;}
28537:     break;
28538: 
28539:   case 1153:
28540: #line 3475 "third_party/libpg_query/grammar/statements/select.y"
28541:     { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
28542:     break;
28543: 
28544:   case 1154:
28545: #line 3477 "third_party/libpg_query/grammar/statements/select.y"
28546:     { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
28547:     break;
28548: 
28549:   case 1155:
28550: #line 3482 "third_party/libpg_query/grammar/statements/select.y"
28551:     {
28552: 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
28553: 				;}
28554:     break;
28555: 
28556:   case 1156:
28557: #line 3486 "third_party/libpg_query/grammar/statements/select.y"
28558:     {
28559: 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
28560: 				;}
28561:     break;
28562: 
28563:   case 1157:
28564: #line 3493 "third_party/libpg_query/grammar/statements/select.y"
28565:     {
28566: 					(yyval.list) = (yyvsp[(1) - (1)].list);
28567: 				;}
28568:     break;
28569: 
28570:   case 1158:
28571: #line 3498 "third_party/libpg_query/grammar/statements/select.y"
28572:     {
28573: 					(yyval.list) = (yyvsp[(1) - (2)].list);
28574: 				;}
28575:     break;
28576: 
28577:   case 1159:
28578: #line 3504 "third_party/libpg_query/grammar/statements/select.y"
28579:     {
28580: 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
28581: 				;}
28582:     break;
28583: 
28584:   case 1160:
28585: #line 3508 "third_party/libpg_query/grammar/statements/select.y"
28586:     {
28587: 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
28588: 				;}
28589:     break;
28590: 
28591:   case 1161:
28592: #line 3515 "third_party/libpg_query/grammar/statements/select.y"
28593:     {
28594: 					(yyval.list) = (yyvsp[(1) - (1)].list);
28595: 				;}
28596:     break;
28597: 
28598:   case 1162:
28599: #line 3520 "third_party/libpg_query/grammar/statements/select.y"
28600:     {
28601: 					(yyval.list) = (yyvsp[(1) - (2)].list);
28602: 				;}
28603:     break;
28604: 
28605:   case 1163:
28606: #line 3527 "third_party/libpg_query/grammar/statements/select.y"
28607:     {
28608: 					(yyval.list) = (yyvsp[(1) - (1)].list);
28609: 				;}
28610:     break;
28611: 
28612:   case 1164:
28613: #line 3531 "third_party/libpg_query/grammar/statements/select.y"
28614:     {
28615: 					(yyval.list) = NULL;
28616: 				;}
28617:     break;
28618: 
28619:   case 1165:
28620: #line 3540 "third_party/libpg_query/grammar/statements/select.y"
28621:     {
28622: 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
28623: 				;}
28624:     break;
28625: 
28626:   case 1166:
28627: #line 3544 "third_party/libpg_query/grammar/statements/select.y"
28628:     {
28629: 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
28630: 				;}
28631:     break;
28632: 
28633:   case 1167:
28634: #line 3550 "third_party/libpg_query/grammar/statements/select.y"
28635:     {
28636: 					(yyval.node) = (yyvsp[(1) - (1)].node);
28637: 				;}
28638:     break;
28639: 
28640:   case 1168:
28641: #line 3554 "third_party/libpg_query/grammar/statements/select.y"
28642:     {
28643: 					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
28644: 					na->name = (yyvsp[(1) - (3)].str);
28645: 					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
28646: 					na->argnumber = -1;		/* until determined */
28647: 					na->location = (yylsp[(1) - (3)]);
28648: 					(yyval.node) = (PGNode *) na;
28649: 				;}
28650:     break;
28651: 
28652:   case 1169:
28653: #line 3563 "third_party/libpg_query/grammar/statements/select.y"
28654:     {
28655: 					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
28656: 					na->name = (yyvsp[(1) - (3)].str);
28657: 					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
28658: 					na->argnumber = -1;		/* until determined */
28659: 					na->location = (yylsp[(1) - (3)]);
28660: 					(yyval.node) = (PGNode *) na;
28661: 				;}
28662:     break;
28663: 
28664:   case 1170:
28665: #line 3573 "third_party/libpg_query/grammar/statements/select.y"
28666:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
28667:     break;
28668: 
28669:   case 1171:
28670: #line 3574 "third_party/libpg_query/grammar/statements/select.y"
28671:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
28672:     break;
28673: 
28674:   case 1172:
28675: #line 3579 "third_party/libpg_query/grammar/statements/select.y"
28676:     {
28677: 					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
28678: 				;}
28679:     break;
28680: 
28681:   case 1173:
28682: #line 3582 "third_party/libpg_query/grammar/statements/select.y"
28683:     { (yyval.list) = NIL; ;}
28684:     break;
28685: 
28686:   case 1174:
28687: #line 3589 "third_party/libpg_query/grammar/statements/select.y"
28688:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
28689:     break;
28690: 
28691:   case 1175:
28692: #line 3590 "third_party/libpg_query/grammar/statements/select.y"
28693:     { (yyval.str) = (char*) "year"; ;}
28694:     break;
28695: 
28696:   case 1176:
28697: #line 3591 "third_party/libpg_query/grammar/statements/select.y"
28698:     { (yyval.str) = (char*) "month"; ;}
28699:     break;
28700: 
28701:   case 1177:
28702: #line 3592 "third_party/libpg_query/grammar/statements/select.y"
28703:     { (yyval.str) = (char*) "day"; ;}
28704:     break;
28705: 
28706:   case 1178:
28707: #line 3593 "third_party/libpg_query/grammar/statements/select.y"
28708:     { (yyval.str) = (char*) "hour"; ;}
28709:     break;
28710: 
28711:   case 1179:
28712: #line 3594 "third_party/libpg_query/grammar/statements/select.y"
28713:     { (yyval.str) = (char*) "minute"; ;}
28714:     break;
28715: 
28716:   case 1180:
28717: #line 3595 "third_party/libpg_query/grammar/statements/select.y"
28718:     { (yyval.str) = (char*) "second"; ;}
28719:     break;
28720: 
28721:   case 1181:
28722: #line 3596 "third_party/libpg_query/grammar/statements/select.y"
28723:     { (yyval.str) = (char*) "millisecond"; ;}
28724:     break;
28725: 
28726:   case 1182:
28727: #line 3597 "third_party/libpg_query/grammar/statements/select.y"
28728:     { (yyval.str) = (char*) "microsecond"; ;}
28729:     break;
28730: 
28731:   case 1183:
28732: #line 3598 "third_party/libpg_query/grammar/statements/select.y"
28733:     { (yyval.str) = (char*) "week"; ;}
28734:     break;
28735: 
28736:   case 1184:
28737: #line 3599 "third_party/libpg_query/grammar/statements/select.y"
28738:     { (yyval.str) = (char*) "quarter"; ;}
28739:     break;
28740: 
28741:   case 1185:
28742: #line 3600 "third_party/libpg_query/grammar/statements/select.y"
28743:     { (yyval.str) = (char*) "decade"; ;}
28744:     break;
28745: 
28746:   case 1186:
28747: #line 3601 "third_party/libpg_query/grammar/statements/select.y"
28748:     { (yyval.str) = (char*) "century"; ;}
28749:     break;
28750: 
28751:   case 1187:
28752: #line 3602 "third_party/libpg_query/grammar/statements/select.y"
28753:     { (yyval.str) = (char*) "millennium"; ;}
28754:     break;
28755: 
28756:   case 1188:
28757: #line 3603 "third_party/libpg_query/grammar/statements/select.y"
28758:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
28759:     break;
28760: 
28761:   case 1189:
28762: #line 3614 "third_party/libpg_query/grammar/statements/select.y"
28763:     {
28764: 					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
28765: 				;}
28766:     break;
28767: 
28768:   case 1190:
28769: #line 3618 "third_party/libpg_query/grammar/statements/select.y"
28770:     {
28771: 					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
28772: 				;}
28773:     break;
28774: 
28775:   case 1191:
28776: #line 3625 "third_party/libpg_query/grammar/statements/select.y"
28777:     { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
28778:     break;
28779: 
28780:   case 1192:
28781: #line 3631 "third_party/libpg_query/grammar/statements/select.y"
28782:     { (yyval.list) = list_make2((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node)); ;}
28783:     break;
28784: 
28785:   case 1193:
28786: #line 3632 "third_party/libpg_query/grammar/statements/select.y"
28787:     { (yyval.list) = NIL; ;}
28788:     break;
28789: 
28790:   case 1194:
28791: #line 3649 "third_party/libpg_query/grammar/statements/select.y"
28792:     {
28793: 					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
28794: 				;}
28795:     break;
28796: 
28797:   case 1195:
28798: #line 3653 "third_party/libpg_query/grammar/statements/select.y"
28799:     {
28800: 					/* not legal per SQL99, but might as well allow it */
28801: 					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
28802: 				;}
28803:     break;
28804: 
28805:   case 1196:
28806: #line 3658 "third_party/libpg_query/grammar/statements/select.y"
28807:     {
28808: 					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
28809: 				;}
28810:     break;
28811: 
28812:   case 1197:
28813: #line 3662 "third_party/libpg_query/grammar/statements/select.y"
28814:     {
28815: 					/*
28816: 					 * Since there are no cases where this syntax allows
28817: 					 * a textual FOR value, we forcibly cast the argument
28818: 					 * to int4.  The possible matches in pg_proc are
28819: 					 * substring(text,int4) and substring(text,text),
28820: 					 * and we don't want the parser to choose the latter,
28821: 					 * which it is likely to do if the second argument
28822: 					 * is unknown or doesn't have an implicit cast to int4.
28823: 					 */
28824: 					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
28825: 									makeTypeCast((yyvsp[(2) - (2)].node),
28826: 												 SystemTypeName("int4"), 0, -1));
28827: 				;}
28828:     break;
28829: 
28830:   case 1198:
28831: #line 3677 "third_party/libpg_query/grammar/statements/select.y"
28832:     {
28833: 					(yyval.list) = (yyvsp[(1) - (1)].list);
28834: 				;}
28835:     break;
28836: 
28837:   case 1199:
28838: #line 3681 "third_party/libpg_query/grammar/statements/select.y"
28839:     { (yyval.list) = NIL; ;}
28840:     break;
28841: 
28842:   case 1200:
28843: #line 3685 "third_party/libpg_query/grammar/statements/select.y"
28844:     { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
28845:     break;
28846: 
28847:   case 1201:
28848: #line 3688 "third_party/libpg_query/grammar/statements/select.y"
28849:     { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
28850:     break;
28851: 
28852:   case 1202:
28853: #line 3691 "third_party/libpg_query/grammar/statements/select.y"
28854:     { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
28855:     break;
28856: 
28857:   case 1203:
28858: #line 3692 "third_party/libpg_query/grammar/statements/select.y"
28859:     { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
28860:     break;
28861: 
28862:   case 1204:
28863: #line 3693 "third_party/libpg_query/grammar/statements/select.y"
28864:     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
28865:     break;
28866: 
28867:   case 1205:
28868: #line 3697 "third_party/libpg_query/grammar/statements/select.y"
28869:     {
28870: 					PGSubLink *n = makeNode(PGSubLink);
28871: 					n->subselect = (yyvsp[(1) - (1)].node);
28872: 					/* other fields will be filled later */
28873: 					(yyval.node) = (PGNode *)n;
28874: 				;}
28875:     break;
28876: 
28877:   case 1206:
28878: #line 3703 "third_party/libpg_query/grammar/statements/select.y"
28879:     { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
28880:     break;
28881: 
28882:   case 1208:
28883: #line 3705 "third_party/libpg_query/grammar/statements/select.y"
28884:     { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].node); ;}
28885:     break;
28886: 
28887:   case 1209:
28888: #line 3716 "third_party/libpg_query/grammar/statements/select.y"
28889:     {
28890: 					PGCaseExpr *c = makeNode(PGCaseExpr);
28891: 					c->casetype = InvalidOid; /* not analyzed yet */
28892: 					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
28893: 					c->args = (yyvsp[(3) - (5)].list);
28894: 					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
28895: 					c->location = (yylsp[(1) - (5)]);
28896: 					(yyval.node) = (PGNode *)c;
28897: 				;}
28898:     break;
28899: 
28900:   case 1210:
28901: #line 3729 "third_party/libpg_query/grammar/statements/select.y"
28902:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
28903:     break;
28904: 
28905:   case 1211:
28906: #line 3730 "third_party/libpg_query/grammar/statements/select.y"
28907:     { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
28908:     break;
28909: 
28910:   case 1212:
28911: #line 3735 "third_party/libpg_query/grammar/statements/select.y"
28912:     {
28913: 					PGCaseWhen *w = makeNode(PGCaseWhen);
28914: 					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
28915: 					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
28916: 					w->location = (yylsp[(1) - (4)]);
28917: 					(yyval.node) = (PGNode *)w;
28918: 				;}
28919:     break;
28920: 
28921:   case 1213:
28922: #line 3745 "third_party/libpg_query/grammar/statements/select.y"
28923:     { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
28924:     break;
28925: 
28926:   case 1214:
28927: #line 3746 "third_party/libpg_query/grammar/statements/select.y"
28928:     { (yyval.node) = NULL; ;}
28929:     break;
28930: 
28931:   case 1215:
28932: #line 3749 "third_party/libpg_query/grammar/statements/select.y"
28933:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
28934:     break;
28935: 
28936:   case 1216:
28937: #line 3750 "third_party/libpg_query/grammar/statements/select.y"
28938:     { (yyval.node) = NULL; ;}
28939:     break;
28940: 
28941:   case 1217:
28942: #line 3754 "third_party/libpg_query/grammar/statements/select.y"
28943:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
28944:     break;
28945: 
28946:   case 1218:
28947: #line 3755 "third_party/libpg_query/grammar/statements/select.y"
28948:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
28949:     break;
28950: 
28951:   case 1219:
28952: #line 3759 "third_party/libpg_query/grammar/statements/select.y"
28953:     {
28954: 			(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
28955: 		;}
28956:     break;
28957: 
28958:   case 1220:
28959: #line 3765 "third_party/libpg_query/grammar/statements/select.y"
28960:     {
28961: 					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
28962: 				;}
28963:     break;
28964: 
28965:   case 1221:
28966: #line 3769 "third_party/libpg_query/grammar/statements/select.y"
28967:     {
28968: 					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
28969: 				;}
28970:     break;
28971: 
28972:   case 1222:
28973: #line 3776 "third_party/libpg_query/grammar/statements/select.y"
28974:     {
28975: 					PGAIndices *ai = makeNode(PGAIndices);
28976: 					ai->is_slice = false;
28977: 					ai->lidx = NULL;
28978: 					ai->uidx = (yyvsp[(2) - (3)].node);
28979: 					(yyval.node) = (PGNode *) ai;
28980: 				;}
28981:     break;
28982: 
28983:   case 1223:
28984: #line 3784 "third_party/libpg_query/grammar/statements/select.y"
28985:     {
28986: 					PGAIndices *ai = makeNode(PGAIndices);
28987: 					ai->is_slice = true;
28988: 					ai->lidx = (yyvsp[(2) - (5)].node);
28989: 					ai->uidx = (yyvsp[(4) - (5)].node);
28990: 					(yyval.node) = (PGNode *) ai;
28991: 				;}
28992:     break;
28993: 
28994:   case 1224:
28995: #line 3791 "third_party/libpg_query/grammar/statements/select.y"
28996:     {
28997: 				    	PGAIndices *ai = makeNode(PGAIndices);
28998: 				    	ai->is_slice = true;
28999: 				    	ai->lidx = (yyvsp[(2) - (7)].node);
29000: 				    	ai->uidx = (yyvsp[(4) - (7)].node);
29001: 				    	ai->step = (yyvsp[(6) - (7)].node);
29002: 				    	(yyval.node) = (PGNode *) ai;
29003: 				;}
29004:     break;
29005: 
29006:   case 1225:
29007: #line 3799 "third_party/libpg_query/grammar/statements/select.y"
29008:     {
29009: 					PGAIndices *ai = makeNode(PGAIndices);
29010: 					ai->is_slice = true;
29011: 					ai->lidx = (yyvsp[(2) - (7)].node);
29012: 					ai->step = (yyvsp[(6) - (7)].node);
29013: 					(yyval.node) = (PGNode *) ai;
29014: 				;}
29015:     break;
29016: 
29017:   case 1226:
29018: #line 3809 "third_party/libpg_query/grammar/statements/select.y"
29019:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
29020:     break;
29021: 
29022:   case 1227:
29023: #line 3810 "third_party/libpg_query/grammar/statements/select.y"
29024:     { (yyval.node) = NULL; ;}
29025:     break;
29026: 
29027:   case 1228:
29028: #line 3815 "third_party/libpg_query/grammar/statements/select.y"
29029:     { (yyval.list) = NIL; ;}
29030:     break;
29031: 
29032:   case 1229:
29033: #line 3816 "third_party/libpg_query/grammar/statements/select.y"
29034:     { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
29035:     break;
29036: 
29037:   case 1230:
29038: #line 3820 "third_party/libpg_query/grammar/statements/select.y"
29039:     { (yyval.list) = NULL; ;}
29040:     break;
29041: 
29042:   case 1231:
29043: #line 3821 "third_party/libpg_query/grammar/statements/select.y"
29044:     { (yyval.list) = list_make1(NULL); ;}
29045:     break;
29046: 
29047:   case 1232:
29048: #line 3822 "third_party/libpg_query/grammar/statements/select.y"
29049:     { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
29050:     break;
29051: 
29052:   case 1233:
29053: #line 3827 "third_party/libpg_query/grammar/statements/select.y"
29054:     {
29055: 					if ((yyvsp[(3) - (3)].list)) {
29056: 						PGFuncCall *n = makeFuncCall(list_make1(makeString((yyvsp[(2) - (3)].str))), (yyvsp[(3) - (3)].list)->head->data.ptr_value ? (yyvsp[(3) - (3)].list) : NULL, (yylsp[(2) - (3)]));
29057: 						(yyval.node) = (PGNode *) n;
29058: 					} else {
29059: 						(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (3)].str));
29060: 					}
29061: 				;}
29062:     break;
29063: 
29064:   case 1234:
29065: #line 3836 "third_party/libpg_query/grammar/statements/select.y"
29066:     {
29067: 					PGAIndices *ai = makeNode(PGAIndices);
29068: 					ai->is_slice = false;
29069: 					ai->lidx = NULL;
29070: 					ai->uidx = (yyvsp[(2) - (3)].node);
29071: 					(yyval.node) = (PGNode *) ai;
29072: 				;}
29073:     break;
29074: 
29075:   case 1235:
29076: #line 3844 "third_party/libpg_query/grammar/statements/select.y"
29077:     {
29078: 					PGAIndices *ai = makeNode(PGAIndices);
29079: 					ai->is_slice = true;
29080: 					ai->lidx = (yyvsp[(2) - (5)].node);
29081: 					ai->uidx = (yyvsp[(4) - (5)].node);
29082: 					(yyval.node) = (PGNode *) ai;
29083: 				;}
29084:     break;
29085: 
29086:   case 1236:
29087: #line 3851 "third_party/libpg_query/grammar/statements/select.y"
29088:     {
29089: 					PGAIndices *ai = makeNode(PGAIndices);
29090: 					ai->is_slice = true;
29091: 					ai->lidx = (yyvsp[(2) - (7)].node);
29092: 					ai->uidx = (yyvsp[(4) - (7)].node);
29093: 					ai->step = (yyvsp[(6) - (7)].node);
29094:                  			(yyval.node) = (PGNode *) ai;
29095:                 		;}
29096:     break;
29097: 
29098:   case 1237:
29099: #line 3860 "third_party/libpg_query/grammar/statements/select.y"
29100:     {
29101: 					PGAIndices *ai = makeNode(PGAIndices);
29102: 					ai->is_slice = true;
29103: 					ai->lidx = (yyvsp[(2) - (7)].node);
29104: 					ai->step = (yyvsp[(6) - (7)].node);
29105: 					(yyval.node) = (PGNode *) ai;
29106: 				;}
29107:     break;
29108: 
29109:   case 1238:
29110: #line 3875 "third_party/libpg_query/grammar/statements/select.y"
29111:     { (yyval.list) = NIL; ;}
29112:     break;
29113: 
29114:   case 1239:
29115: #line 3876 "third_party/libpg_query/grammar/statements/select.y"
29116:     { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
29117:     break;
29118: 
29119:   case 1242:
29120: #line 3892 "third_party/libpg_query/grammar/statements/select.y"
29121:     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
29122:     break;
29123: 
29124:   case 1243:
29125: #line 3893 "third_party/libpg_query/grammar/statements/select.y"
29126:     { (yyval.list) = NIL; ;}
29127:     break;
29128: 
29129:   case 1244:
29130: #line 3897 "third_party/libpg_query/grammar/statements/select.y"
29131:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
29132:     break;
29133: 
29134:   case 1245:
29135: #line 3898 "third_party/libpg_query/grammar/statements/select.y"
29136:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
29137:     break;
29138: 
29139:   case 1246:
29140: #line 3902 "third_party/libpg_query/grammar/statements/select.y"
29141:     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
29142:     break;
29143: 
29144:   case 1247:
29145: #line 3903 "third_party/libpg_query/grammar/statements/select.y"
29146:     { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
29147:     break;
29148: 
29149:   case 1248:
29150: #line 3907 "third_party/libpg_query/grammar/statements/select.y"
29151:     {
29152: 					(yyval.target) = makeNode(PGResTarget);
29153: 					(yyval.target)->name = (yyvsp[(3) - (3)].str);
29154: 					(yyval.target)->indirection = NIL;
29155: 					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
29156: 					(yyval.target)->location = (yylsp[(1) - (3)]);
29157: 				;}
29158:     break;
29159: 
29160:   case 1249:
29161: #line 3923 "third_party/libpg_query/grammar/statements/select.y"
29162:     {
29163: 					(yyval.target) = makeNode(PGResTarget);
29164: 					(yyval.target)->name = (yyvsp[(2) - (2)].str);
29165: 					(yyval.target)->indirection = NIL;
29166: 					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
29167: 					(yyval.target)->location = (yylsp[(1) - (2)]);
29168: 				;}
29169:     break;
29170: 
29171:   case 1250:
29172: #line 3931 "third_party/libpg_query/grammar/statements/select.y"
29173:     {
29174: 					(yyval.target) = makeNode(PGResTarget);
29175: 					(yyval.target)->name = NULL;
29176: 					(yyval.target)->indirection = NIL;
29177: 					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
29178: 					(yyval.target)->location = (yylsp[(1) - (1)]);
29179: 				;}
29180:     break;
29181: 
29182:   case 1251:
29183: #line 3940 "third_party/libpg_query/grammar/statements/select.y"
29184:     { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
29185:     break;
29186: 
29187:   case 1252:
29188: #line 3941 "third_party/libpg_query/grammar/statements/select.y"
29189:     { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
29190:     break;
29191: 
29192:   case 1253:
29193: #line 3944 "third_party/libpg_query/grammar/statements/select.y"
29194:     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
29195:     break;
29196: 
29197:   case 1254:
29198: #line 3945 "third_party/libpg_query/grammar/statements/select.y"
29199:     { (yyval.list) = NULL; ;}
29200:     break;
29201: 
29202:   case 1255:
29203: #line 3948 "third_party/libpg_query/grammar/statements/select.y"
29204:     { (yyval.list) = list_make2((yyvsp[(1) - (3)].node), makeString((yyvsp[(3) - (3)].str))); ;}
29205:     break;
29206: 
29207:   case 1256:
29208: #line 3952 "third_party/libpg_query/grammar/statements/select.y"
29209:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
29210:     break;
29211: 
29212:   case 1257:
29213: #line 3953 "third_party/libpg_query/grammar/statements/select.y"
29214:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
29215:     break;
29216: 
29217:   case 1258:
29218: #line 3957 "third_party/libpg_query/grammar/statements/select.y"
29219:     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
29220:     break;
29221: 
29222:   case 1259:
29223: #line 3958 "third_party/libpg_query/grammar/statements/select.y"
29224:     { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
29225:     break;
29226: 
29227:   case 1260:
29228: #line 3961 "third_party/libpg_query/grammar/statements/select.y"
29229:     { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
29230:     break;
29231: 
29232:   case 1261:
29233: #line 3962 "third_party/libpg_query/grammar/statements/select.y"
29234:     { (yyval.list) = list_make1((yyvsp[(2) - (2)].list)); ;}
29235:     break;
29236: 
29237:   case 1262:
29238: #line 3963 "third_party/libpg_query/grammar/statements/select.y"
29239:     { (yyval.list) = NULL; ;}
29240:     break;
29241: 
29242:   case 1263:
29243: #line 3973 "third_party/libpg_query/grammar/statements/select.y"
29244:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
29245:     break;
29246: 
29247:   case 1264:
29248: #line 3974 "third_party/libpg_query/grammar/statements/select.y"
29249:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
29250:     break;
29251: 
29252:   case 1265:
29253: #line 3979 "third_party/libpg_query/grammar/statements/select.y"
29254:     { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
29255:     break;
29256: 
29257:   case 1266:
29258: #line 3981 "third_party/libpg_query/grammar/statements/select.y"
29259:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
29260:     break;
29261: 
29262:   case 1267:
29263: #line 3986 "third_party/libpg_query/grammar/statements/select.y"
29264:     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
29265:     break;
29266: 
29267:   case 1268:
29268: #line 3987 "third_party/libpg_query/grammar/statements/select.y"
29269:     { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
29270:     break;
29271: 
29272:   case 1269:
29273: #line 3991 "third_party/libpg_query/grammar/statements/select.y"
29274:     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
29275:     break;
29276: 
29277:   case 1270:
29278: #line 3992 "third_party/libpg_query/grammar/statements/select.y"
29279:     { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
29280:     break;
29281: 
29282:   case 1271:
29283: #line 3995 "third_party/libpg_query/grammar/statements/select.y"
29284:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
29285:     break;
29286: 
29287:   case 1272:
29288: #line 4007 "third_party/libpg_query/grammar/statements/select.y"
29289:     { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
29290:     break;
29291: 
29292:   case 1273:
29293: #line 4010 "third_party/libpg_query/grammar/statements/select.y"
29294:     {
29295: 						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
29296: 											 yyscanner);
29297: 					;}
29298:     break;
29299: 
29300:   case 1274:
29301: #line 4021 "third_party/libpg_query/grammar/statements/select.y"
29302:     {
29303: 					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
29304: 				;}
29305:     break;
29306: 
29307:   case 1275:
29308: #line 4025 "third_party/libpg_query/grammar/statements/select.y"
29309:     {
29310: 					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
29311: 				;}
29312:     break;
29313: 
29314:   case 1276:
29315: #line 4029 "third_party/libpg_query/grammar/statements/select.y"
29316:     {
29317: 					if ((yyvsp[(2) - (2)].list))
29318: 					{
29319: 						PGAIndirection *n = makeNode(PGAIndirection);
29320: 						n->arg = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
29321: 						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
29322: 						(yyval.node) = (PGNode *) n;
29323: 					}
29324: 					else
29325: 						(yyval.node) = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
29326: 				;}
29327:     break;
29328: 
29329:   case 1277:
29330: #line 4041 "third_party/libpg_query/grammar/statements/select.y"
29331:     {
29332: 					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
29333: 				;}
29334:     break;
29335: 
29336:   case 1278:
29337: #line 4045 "third_party/libpg_query/grammar/statements/select.y"
29338:     {
29339: 					/* This is a bit constant per SQL99:
29340: 					 * Without Feature F511, "BIT data type",
29341: 					 * a <general literal> shall not be a
29342: 					 * <bit string literal> or a <hex string literal>.
29343: 					 */
29344: 					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
29345: 				;}
29346:     break;
29347: 
29348:   case 1279:
29349: #line 4054 "third_party/libpg_query/grammar/statements/select.y"
29350:     {
29351: 					/* generic type 'literal' syntax */
29352: 					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
29353: 					t->location = (yylsp[(1) - (2)]);
29354: 					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
29355: 				;}
29356:     break;
29357: 
29358:   case 1280:
29359: #line 4061 "third_party/libpg_query/grammar/statements/select.y"
29360:     {
29361: 					/* generic syntax with a type modifier */
29362: 					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (7)].list));
29363: 					PGListCell *lc;
29364: 
29365: 					/*
29366: 					 * We must use func_arg_list and opt_sort_clause in the
29367: 					 * production to avoid reduce/reduce conflicts, but we
29368: 					 * don't actually wish to allow PGNamedArgExpr in this
29369: 					 * context, ORDER BY, nor IGNORE NULLS.
29370: 					 */
29371: 					foreach(lc, (yyvsp[(3) - (7)].list))
29372: 					{
29373: 						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);
29374: 
29375: 						if (IsA(arg, PGNamedArgExpr))
29376: 							ereport(ERROR,
29377: 									(errcode(PG_ERRCODE_SYNTAX_ERROR),
29378: 									 errmsg("type modifier cannot have parameter name"),
29379: 									 parser_errposition(arg->location)));
29380: 					}
29381: 					if ((yyvsp[(4) - (7)].list) != NIL)
29382: 							ereport(ERROR,
29383: 									(errcode(PG_ERRCODE_SYNTAX_ERROR),
29384: 									 errmsg("type modifier cannot have ORDER BY"),
29385: 									 parser_errposition((yylsp[(4) - (7)]))));
29386: 					if ((yyvsp[(5) - (7)].ignorenulls) != false)
29387: 							ereport(ERROR,
29388: 									(errcode(PG_ERRCODE_SYNTAX_ERROR),
29389: 									 errmsg("type modifier cannot have IGNORE NULLS"),
29390: 									 parser_errposition((yylsp[(5) - (7)]))));
29391: 
29392: 
29393: 					t->typmods = (yyvsp[(3) - (7)].list);
29394: 					t->location = (yylsp[(1) - (7)]);
29395: 					(yyval.node) = makeStringConstCast((yyvsp[(7) - (7)].str), (yylsp[(7) - (7)]), t);
29396: 				;}
29397:     break;
29398: 
29399:   case 1281:
29400: #line 4099 "third_party/libpg_query/grammar/statements/select.y"
29401:     {
29402: 					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
29403: 				;}
29404:     break;
29405: 
29406:   case 1282:
29407: #line 4103 "third_party/libpg_query/grammar/statements/select.y"
29408:     {
29409: 					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
29410: 				;}
29411:     break;
29412: 
29413:   case 1283:
29414: #line 4107 "third_party/libpg_query/grammar/statements/select.y"
29415:     {
29416: 					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
29417: 				;}
29418:     break;
29419: 
29420:   case 1284:
29421: #line 4111 "third_party/libpg_query/grammar/statements/select.y"
29422:     {
29423: 					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
29424: 				;}
29425:     break;
29426: 
29427:   case 1285:
29428: #line 4115 "third_party/libpg_query/grammar/statements/select.y"
29429:     {
29430: 					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
29431: 				;}
29432:     break;
29433: 
29434:   case 1286:
29435: #line 4119 "third_party/libpg_query/grammar/statements/select.y"
29436:     {
29437: 					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
29438: 				;}
29439:     break;
29440: 
29441:   case 1287:
29442: #line 4123 "third_party/libpg_query/grammar/statements/select.y"
29443:     {
29444: 					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
29445: 				;}
29446:     break;
29447: 
29448:   case 1288:
29449: #line 4128 "third_party/libpg_query/grammar/statements/select.y"
29450:     { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
29451:     break;
29452: 
29453:   case 1289:
29454: #line 4145 "third_party/libpg_query/grammar/statements/select.y"
29455:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
29456:     break;
29457: 
29458:   case 1290:
29459: #line 4146 "third_party/libpg_query/grammar/statements/select.y"
29460:     { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
29461:     break;
29462: 
29463:   case 1291:
29464: #line 4147 "third_party/libpg_query/grammar/statements/select.y"
29465:     { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
29466:     break;
29467: 
29468:   case 1292:
29469: #line 4150 "third_party/libpg_query/grammar/statements/select.y"
29470:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
29471:     break;
29472: 
29473:   case 1293:
29474: #line 4151 "third_party/libpg_query/grammar/statements/select.y"
29475:     { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
29476:     break;
29477: 
29478:   case 1294:
29479: #line 4152 "third_party/libpg_query/grammar/statements/select.y"
29480:     { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
29481:     break;
29482: 
29483:   case 1295:
29484: #line 4155 "third_party/libpg_query/grammar/statements/select.y"
29485:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
29486:     break;
29487: 
29488:   case 1296:
29489: #line 4156 "third_party/libpg_query/grammar/statements/select.y"
29490:     { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
29491:     break;
29492: 
29493:   case 1297:
29494: #line 4157 "third_party/libpg_query/grammar/statements/select.y"
29495:     { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
29496:     break;
29497: 
29498:   case 1298:
29499: #line 4160 "third_party/libpg_query/grammar/statements/select.y"
29500:     { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
29501:     break;
29502: 
29503:   case 1299:
29504: #line 4161 "third_party/libpg_query/grammar/statements/select.y"
29505:     { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
29506:     break;
29507: 
29508:   case 1300:
29509: #line 4165 "third_party/libpg_query/grammar/statements/select.y"
29510:     { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
29511:     break;
29512: 
29513:   case 1301:
29514: #line 4167 "third_party/libpg_query/grammar/statements/select.y"
29515:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
29516:     break;
29517: 
29518:   case 1302:
29519: #line 4171 "third_party/libpg_query/grammar/statements/select.y"
29520:     { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
29521:     break;
29522: 
29523:   case 1303:
29524: #line 4172 "third_party/libpg_query/grammar/statements/select.y"
29525:     { (yyval.list) = NIL; ;}
29526:     break;
29527: 
29528:   case 1305:
29529: #line 4179 "third_party/libpg_query/grammar/statements/select.y"
29530:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
29531:     break;
29532: 
29533:   case 1306:
29534: #line 4180 "third_party/libpg_query/grammar/statements/select.y"
29535:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
29536:     break;
29537: 
29538:   case 1307:
29539: #line 8 "third_party/libpg_query/grammar/statements/prepare.y"
29540:     {
29541: 					PGPrepareStmt *n = makeNode(PGPrepareStmt);
29542: 					n->name = (yyvsp[(2) - (5)].str);
29543: 					n->argtypes = (yyvsp[(3) - (5)].list);
29544: 					n->query = (yyvsp[(5) - (5)].node);
29545: 					(yyval.node) = (PGNode *) n;
29546: 				;}
29547:     break;
29548: 
29549:   case 1308:
29550: #line 18 "third_party/libpg_query/grammar/statements/prepare.y"
29551:     { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
29552:     break;
29553: 
29554:   case 1309:
29555: #line 19 "third_party/libpg_query/grammar/statements/prepare.y"
29556:     { (yyval.list) = NIL; ;}
29557:     break;
29558: 
29559:   case 1316:
29560: #line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
29561:     {
29562: 					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
29563: 					if ((yyvsp[(3) - (4)].range)->catalogname) {
29564: 						ereport(ERROR,
29565: 								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
29566: 								 errmsg("CREATE SCHEMA too many dots: expected \"catalog.schema\" or \"schema\""),
29567: 								 parser_errposition((yylsp[(3) - (4)]))));
29568: 					}
29569: 					if ((yyvsp[(3) - (4)].range)->schemaname) {
29570: 						n->catalogname = (yyvsp[(3) - (4)].range)->schemaname;
29571: 						n->schemaname = (yyvsp[(3) - (4)].range)->relname;
29572: 					} else {
29573: 						n->schemaname = (yyvsp[(3) - (4)].range)->relname;
29574: 					}
29575: 					n->schemaElts = (yyvsp[(4) - (4)].list);
29576: 					n->onconflict = PG_ERROR_ON_CONFLICT;
29577: 					(yyval.node) = (PGNode *)n;
29578: 				;}
29579:     break;
29580: 
29581:   case 1317:
29582: #line 27 "third_party/libpg_query/grammar/statements/create_schema.y"
29583:     {
29584: 					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
29585: 					if ((yyvsp[(6) - (7)].range)->catalogname) {
29586: 						ereport(ERROR,
29587: 								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
29588: 								 errmsg("CREATE SCHEMA too many dots: expected \"catalog.schema\" or \"schema\""),
29589: 								 parser_errposition((yylsp[(6) - (7)]))));
29590: 					}
29591: 					if ((yyvsp[(6) - (7)].range)->schemaname) {
29592: 						n->catalogname = (yyvsp[(6) - (7)].range)->schemaname;
29593: 						n->schemaname = (yyvsp[(6) - (7)].range)->relname;
29594: 					} else {
29595: 						n->schemaname = (yyvsp[(6) - (7)].range)->relname;
29596: 					}
29597: 					if ((yyvsp[(7) - (7)].list) != NIL)
29598: 						ereport(ERROR,
29599: 								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
29600: 								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
29601: 								 parser_errposition((yylsp[(7) - (7)]))));
29602: 					n->schemaElts = (yyvsp[(7) - (7)].list);
29603: 					n->onconflict = PG_IGNORE_ON_CONFLICT;
29604: 					(yyval.node) = (PGNode *)n;
29605: 				;}
29606:     break;
29607: 
29608:   case 1318:
29609: #line 51 "third_party/libpg_query/grammar/statements/create_schema.y"
29610:     {
29611: 					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
29612: 					if ((yyvsp[(5) - (6)].range)->catalogname) {
29613: 						ereport(ERROR,
29614: 								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
29615: 								 errmsg("CREATE SCHEMA too many dots: expected \"catalog.schema\" or \"schema\""),
29616: 								 parser_errposition((yylsp[(5) - (6)]))));
29617: 					}
29618: 					if ((yyvsp[(5) - (6)].range)->schemaname) {
29619: 						n->catalogname = (yyvsp[(5) - (6)].range)->schemaname;
29620: 						n->schemaname = (yyvsp[(5) - (6)].range)->relname;
29621: 					} else {
29622: 						n->schemaname = (yyvsp[(5) - (6)].range)->relname;
29623: 					}
29624: 					n->schemaElts = (yyvsp[(6) - (6)].list);
29625: 					n->onconflict = PG_REPLACE_ON_CONFLICT;
29626: 					(yyval.node) = (PGNode *)n;
29627: 				;}
29628:     break;
29629: 
29630:   case 1319:
29631: #line 74 "third_party/libpg_query/grammar/statements/create_schema.y"
29632:     {
29633: 					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
29634: 						(yyloc) = (yylsp[(2) - (2)]);
29635: 					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
29636: 				;}
29637:     break;
29638: 
29639:   case 1320:
29640: #line 80 "third_party/libpg_query/grammar/statements/create_schema.y"
29641:     { (yyval.list) = NIL; ;}
29642:     break;
29643: 
29644:   case 1325:
29645: #line 11 "third_party/libpg_query/grammar/statements/index.y"
29646:     {
29647: 					PGIndexStmt *n = makeNode(PGIndexStmt);
29648: 					n->unique = (yyvsp[(2) - (13)].boolean);
29649: 					n->concurrent = (yyvsp[(4) - (13)].boolean);
29650: 					n->idxname = (yyvsp[(5) - (13)].str);
29651: 					n->relation = (yyvsp[(7) - (13)].range);
29652: 					n->accessMethod = (yyvsp[(8) - (13)].str);
29653: 					n->indexParams = (yyvsp[(10) - (13)].list);
29654: 					n->options = (yyvsp[(12) - (13)].list);
29655: 					n->whereClause = (yyvsp[(13) - (13)].node);
29656: 					n->excludeOpNames = NIL;
29657: 					n->idxcomment = NULL;
29658: 					n->indexOid = InvalidOid;
29659: 					n->oldNode = InvalidOid;
29660: 					n->primary = false;
29661: 					n->isconstraint = false;
29662: 					n->deferrable = false;
29663: 					n->initdeferred = false;
29664: 					n->transformed = false;
29665: 					n->onconflict = PG_ERROR_ON_CONFLICT;
29666: 					(yyval.node) = (PGNode *)n;
29667: 				;}
29668:     break;
29669: 
29670:   case 1326:
29671: #line 36 "third_party/libpg_query/grammar/statements/index.y"
29672:     {
29673: 					PGIndexStmt *n = makeNode(PGIndexStmt);
29674: 					n->unique = (yyvsp[(2) - (16)].boolean);
29675: 					n->concurrent = (yyvsp[(4) - (16)].boolean);
29676: 					n->idxname = (yyvsp[(8) - (16)].str);
29677: 					n->relation = (yyvsp[(10) - (16)].range);
29678: 					n->accessMethod = (yyvsp[(11) - (16)].str);
29679: 					n->indexParams = (yyvsp[(13) - (16)].list);
29680: 					n->options = (yyvsp[(15) - (16)].list);
29681: 					n->whereClause = (yyvsp[(16) - (16)].node);
29682: 					n->excludeOpNames = NIL;
29683: 					n->idxcomment = NULL;
29684: 					n->indexOid = InvalidOid;
29685: 					n->oldNode = InvalidOid;
29686: 					n->primary = false;
29687: 					n->isconstraint = false;
29688: 					n->deferrable = false;
29689: 					n->initdeferred = false;
29690: 					n->transformed = false;
29691: 					n->onconflict = PG_IGNORE_ON_CONFLICT;
29692: 					(yyval.node) = (PGNode *)n;
29693: 				;}
29694:     break;
29695: 
29696:   case 1327:
29697: #line 62 "third_party/libpg_query/grammar/statements/index.y"
29698:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
29699:     break;
29700: 
29701:   case 1328:
29702: #line 66 "third_party/libpg_query/grammar/statements/index.y"
29703:     { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
29704:     break;
29705: 
29706:   case 1329:
29707: #line 67 "third_party/libpg_query/grammar/statements/index.y"
29708:     { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
29709:     break;
29710: 
29711:   case 1330:
29712: #line 72 "third_party/libpg_query/grammar/statements/index.y"
29713:     { (yyval.boolean) = true; ;}
29714:     break;
29715: 
29716:   case 1331:
29717: #line 73 "third_party/libpg_query/grammar/statements/index.y"
29718:     { (yyval.boolean) = false; ;}
29719:     break;
29720: 
29721:   case 1332:
29722: #line 78 "third_party/libpg_query/grammar/statements/index.y"
29723:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
29724:     break;
29725: 
29726:   case 1333:
29727: #line 79 "third_party/libpg_query/grammar/statements/index.y"
29728:     { (yyval.str) = NULL; ;}
29729:     break;
29730: 
29731:   case 1334:
29732: #line 83 "third_party/libpg_query/grammar/statements/index.y"
29733:     { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
29734:     break;
29735: 
29736:   case 1335:
29737: #line 84 "third_party/libpg_query/grammar/statements/index.y"
29738:     { (yyval.list) = NIL; ;}
29739:     break;
29740: 
29741:   case 1336:
29742: #line 89 "third_party/libpg_query/grammar/statements/index.y"
29743:     { (yyval.boolean) = true; ;}
29744:     break;
29745: 
29746:   case 1337:
29747: #line 90 "third_party/libpg_query/grammar/statements/index.y"
29748:     { (yyval.boolean) = false; ;}
29749:     break;
29750: 
29751:   case 1338:
29752: #line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
29753:     {
29754: 					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
29755: 					n->objectType = PG_OBJECT_TABLE;
29756: 					n->relation = (yyvsp[(3) - (6)].range);
29757: 					n->newschema = (yyvsp[(6) - (6)].str);
29758: 					n->missing_ok = false;
29759: 					(yyval.node) = (PGNode *)n;
29760: 				;}
29761:     break;
29762: 
29763:   case 1339:
29764: #line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
29765:     {
29766: 					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
29767: 					n->objectType = PG_OBJECT_TABLE;
29768: 					n->relation = (yyvsp[(5) - (8)].range);
29769: 					n->newschema = (yyvsp[(8) - (8)].str);
29770: 					n->missing_ok = true;
29771: 					(yyval.node) = (PGNode *)n;
29772: 				;}
29773:     break;
29774: 
29775:   case 1340:
29776: #line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
29777:     {
29778: 					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
29779: 					n->objectType = PG_OBJECT_SEQUENCE;
29780: 					n->relation = (yyvsp[(3) - (6)].range);
29781: 					n->newschema = (yyvsp[(6) - (6)].str);
29782: 					n->missing_ok = false;
29783: 					(yyval.node) = (PGNode *)n;
29784: 				;}
29785:     break;
29786: 
29787:   case 1341:
29788: #line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
29789:     {
29790: 					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
29791: 					n->objectType = PG_OBJECT_SEQUENCE;
29792: 					n->relation = (yyvsp[(5) - (8)].range);
29793: 					n->newschema = (yyvsp[(8) - (8)].str);
29794: 					n->missing_ok = true;
29795: 					(yyval.node) = (PGNode *)n;
29796: 				;}
29797:     break;
29798: 
29799:   case 1342:
29800: #line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
29801:     {
29802: 					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
29803: 					n->objectType = PG_OBJECT_VIEW;
29804: 					n->relation = (yyvsp[(3) - (6)].range);
29805: 					n->newschema = (yyvsp[(6) - (6)].str);
29806: 					n->missing_ok = false;
29807: 					(yyval.node) = (PGNode *)n;
29808: 				;}
29809:     break;
29810: 
29811:   case 1343:
29812: #line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
29813:     {
29814: 					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
29815: 					n->objectType = PG_OBJECT_VIEW;
29816: 					n->relation = (yyvsp[(5) - (8)].range);
29817: 					n->newschema = (yyvsp[(8) - (8)].str);
29818: 					n->missing_ok = true;
29819: 					(yyval.node) = (PGNode *)n;
29820: 				;}
29821:     break;
29822: 
29823:   case 1344:
29824: #line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
29825:     {
29826: 					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
29827: 					n->force = true;
29828: 					n->name = (yyvsp[(3) - (3)].str);
29829: 					(yyval.node) = (PGNode *)n;
29830: 				;}
29831:     break;
29832: 
29833:   case 1345:
29834: #line 13 "third_party/libpg_query/grammar/statements/checkpoint.y"
29835:     {
29836: 					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
29837: 					n->force = false;
29838: 					n->name = (yyvsp[(2) - (2)].str);
29839: 					(yyval.node) = (PGNode *)n;
29840: 				;}
29841:     break;
29842: 
29843:   case 1346:
29844: #line 22 "third_party/libpg_query/grammar/statements/checkpoint.y"
29845:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
29846:     break;
29847: 
29848:   case 1347:
29849: #line 23 "third_party/libpg_query/grammar/statements/checkpoint.y"
29850:     { (yyval.str) = NULL; ;}
29851:     break;
29852: 
29853:   case 1348:
29854: #line 8 "third_party/libpg_query/grammar/statements/comment_on.y"
29855:     {
29856: 					PGCommentOnStmt *n = makeNode(PGCommentOnStmt);
29857: 					n->object_type = (yyvsp[(3) - (6)].objtype);
29858: 					n->name = (yyvsp[(4) - (6)].range);
29859: 					n->value = (yyvsp[(6) - (6)].node);
29860: 					(yyval.node) = (PGNode *)n;
29861: 				;}
29862:     break;
29863: 
29864:   case 1349:
29865: #line 16 "third_party/libpg_query/grammar/statements/comment_on.y"
29866:     {
29867:                     PGCommentOnStmt *n = makeNode(PGCommentOnStmt);
29868:                     n->object_type = PG_OBJECT_COLUMN;
29869:                     n->column_expr = (yyvsp[(4) - (6)].node);
29870:                     n->value = (yyvsp[(6) - (6)].node);
29871:                     (yyval.node) = (PGNode *)n;
29872:                 ;}
29873:     break;
29874: 
29875:   case 1350:
29876: #line 26 "third_party/libpg_query/grammar/statements/comment_on.y"
29877:     { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
29878:     break;
29879: 
29880:   case 1351:
29881: #line 27 "third_party/libpg_query/grammar/statements/comment_on.y"
29882:     { (yyval.node) = makeNullAConst((yylsp[(1) - (1)])); ;}
29883:     break;
29884: 
29885:   case 1352:
29886: #line 30 "third_party/libpg_query/grammar/statements/comment_on.y"
29887:     { (yyval.objtype) = PG_OBJECT_TABLE; ;}
29888:     break;
29889: 
29890:   case 1353:
29891: #line 31 "third_party/libpg_query/grammar/statements/comment_on.y"
29892:     { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
29893:     break;
29894: 
29895:   case 1354:
29896: #line 32 "third_party/libpg_query/grammar/statements/comment_on.y"
29897:     { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
29898:     break;
29899: 
29900:   case 1355:
29901: #line 33 "third_party/libpg_query/grammar/statements/comment_on.y"
29902:     { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
29903:     break;
29904: 
29905:   case 1356:
29906: #line 34 "third_party/libpg_query/grammar/statements/comment_on.y"
29907:     { (yyval.objtype) = PG_OBJECT_TABLE_MACRO; ;}
29908:     break;
29909: 
29910:   case 1357:
29911: #line 35 "third_party/libpg_query/grammar/statements/comment_on.y"
29912:     { (yyval.objtype) = PG_OBJECT_VIEW; ;}
29913:     break;
29914: 
29915:   case 1358:
29916: #line 36 "third_party/libpg_query/grammar/statements/comment_on.y"
29917:     { (yyval.objtype) = PG_OBJECT_DATABASE; ;}
29918:     break;
29919: 
29920:   case 1359:
29921: #line 37 "third_party/libpg_query/grammar/statements/comment_on.y"
29922:     { (yyval.objtype) = PG_OBJECT_INDEX; ;}
29923:     break;
29924: 
29925:   case 1360:
29926: #line 38 "third_party/libpg_query/grammar/statements/comment_on.y"
29927:     { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
29928:     break;
29929: 
29930:   case 1361:
29931: #line 39 "third_party/libpg_query/grammar/statements/comment_on.y"
29932:     { (yyval.objtype) = PG_OBJECT_TYPE; ;}
29933:     break;
29934: 
29935:   case 1362:
29936: #line 8 "third_party/libpg_query/grammar/statements/export.y"
29937:     {
29938: 					PGExportStmt *n = makeNode(PGExportStmt);
29939: 					n->database = NULL;
29940: 					n->filename = (yyvsp[(3) - (4)].str);
29941: 					n->options = NIL;
29942: 					if ((yyvsp[(4) - (4)].list)) {
29943: 						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
29944: 					}
29945: 					(yyval.node) = (PGNode *)n;
29946: 				;}
29947:     break;
29948: 
29949:   case 1363:
29950: #line 20 "third_party/libpg_query/grammar/statements/export.y"
29951:     {
29952: 					PGExportStmt *n = makeNode(PGExportStmt);
29953: 					n->database = (yyvsp[(3) - (6)].str);
29954: 					n->filename = (yyvsp[(5) - (6)].str);
29955: 					n->options = NIL;
29956: 					if ((yyvsp[(6) - (6)].list)) {
29957: 						n->options = list_concat(n->options, (yyvsp[(6) - (6)].list));
29958: 					}
29959: 					(yyval.node) = (PGNode *)n;
29960: 				;}
29961:     break;
29962: 
29963:   case 1364:
29964: #line 34 "third_party/libpg_query/grammar/statements/export.y"
29965:     {
29966: 					PGImportStmt *n = makeNode(PGImportStmt);
29967: 					n->filename = (yyvsp[(3) - (3)].str);
29968: 					(yyval.node) = (PGNode *)n;
29969: 				;}
29970:     break;
29971: 
29972:   case 1365:
29973: #line 10 "third_party/libpg_query/grammar/statements/explain.y"
29974:     {
29975: 					PGExplainStmt *n = makeNode(PGExplainStmt);
29976: 					n->query = (yyvsp[(2) - (2)].node);
29977: 					n->options = NIL;
29978: 					(yyval.node) = (PGNode *) n;
29979: 				;}
29980:     break;
29981: 
29982:   case 1366:
29983: #line 17 "third_party/libpg_query/grammar/statements/explain.y"
29984:     {
29985: 					PGExplainStmt *n = makeNode(PGExplainStmt);
29986: 					n->query = (yyvsp[(4) - (4)].node);
29987: 					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
29988: 					if ((yyvsp[(3) - (4)].boolean))
29989: 						n->options = lappend(n->options,
29990: 											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
29991: 					(yyval.node) = (PGNode *) n;
29992: 				;}
29993:     break;
29994: 
29995:   case 1367:
29996: #line 27 "third_party/libpg_query/grammar/statements/explain.y"
29997:     {
29998: 					PGExplainStmt *n = makeNode(PGExplainStmt);
29999: 					n->query = (yyvsp[(3) - (3)].node);
30000: 					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
30001: 					(yyval.node) = (PGNode *) n;
30002: 				;}
30003:     break;
30004: 
30005:   case 1368:
30006: #line 34 "third_party/libpg_query/grammar/statements/explain.y"
30007:     {
30008: 					PGExplainStmt *n = makeNode(PGExplainStmt);
30009: 					n->query = (yyvsp[(5) - (5)].node);
30010: 					n->options = (yyvsp[(3) - (5)].list);
30011: 					(yyval.node) = (PGNode *) n;
30012: 				;}
30013:     break;
30014: 
30015:   case 1369:
30016: #line 44 "third_party/libpg_query/grammar/statements/explain.y"
30017:     { (yyval.boolean) = true; ;}
30018:     break;
30019: 
30020:   case 1370:
30021: #line 45 "third_party/libpg_query/grammar/statements/explain.y"
30022:     { (yyval.boolean) = false; ;}
30023:     break;
30024: 
30025:   case 1371:
30026: #line 50 "third_party/libpg_query/grammar/statements/explain.y"
30027:     { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
30028:     break;
30029: 
30030:   case 1372:
30031: #line 51 "third_party/libpg_query/grammar/statements/explain.y"
30032:     { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
30033:     break;
30034: 
30035:   case 1373:
30036: #line 52 "third_party/libpg_query/grammar/statements/explain.y"
30037:     { (yyval.node) = NULL; ;}
30038:     break;
30039: 
30040:   case 1405:
30041: #line 91 "third_party/libpg_query/grammar/statements/explain.y"
30042:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
30043:     break;
30044: 
30045:   case 1406:
30046: #line 92 "third_party/libpg_query/grammar/statements/explain.y"
30047:     { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
30048:     break;
30049: 
30050:   case 1407:
30051: #line 93 "third_party/libpg_query/grammar/statements/explain.y"
30052:     { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
30053:     break;
30054: 
30055:   case 1408:
30056: #line 98 "third_party/libpg_query/grammar/statements/explain.y"
30057:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
30058:     break;
30059: 
30060:   case 1409:
30061: #line 99 "third_party/libpg_query/grammar/statements/explain.y"
30062:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
30063:     break;
30064: 
30065:   case 1410:
30066: #line 105 "third_party/libpg_query/grammar/statements/explain.y"
30067:     {
30068: 					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
30069: 				;}
30070:     break;
30071: 
30072:   case 1411:
30073: #line 109 "third_party/libpg_query/grammar/statements/explain.y"
30074:     {
30075: 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
30076: 				;}
30077:     break;
30078: 
30079:   case 1412:
30080: #line 116 "third_party/libpg_query/grammar/statements/explain.y"
30081:     {;}
30082:     break;
30083: 
30084:   case 1413:
30085: #line 117 "third_party/libpg_query/grammar/statements/explain.y"
30086:     {;}
30087:     break;
30088: 
30089:   case 1414:
30090: #line 122 "third_party/libpg_query/grammar/statements/explain.y"
30091:     { (yyval.str) = (char*) "true"; ;}
30092:     break;
30093: 
30094:   case 1415:
30095: #line 123 "third_party/libpg_query/grammar/statements/explain.y"
30096:     { (yyval.str) = (char*) "false"; ;}
30097:     break;
30098: 
30099:   case 1416:
30100: #line 124 "third_party/libpg_query/grammar/statements/explain.y"
30101:     { (yyval.str) = (char*) "on"; ;}
30102:     break;
30103: 
30104:   case 1417:
30105: #line 130 "third_party/libpg_query/grammar/statements/explain.y"
30106:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
30107:     break;
30108: 
30109:   case 1418:
30110: #line 136 "third_party/libpg_query/grammar/statements/explain.y"
30111:     {
30112: 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
30113: 				;}
30114:     break;
30115: 
30116:   case 1419:
30117: #line 143 "third_party/libpg_query/grammar/statements/explain.y"
30118:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
30119:     break;
30120: 
30121:   case 1420:
30122: #line 144 "third_party/libpg_query/grammar/statements/explain.y"
30123:     { (yyval.str) = (char*) "analyze"; ;}
30124:     break;
30125: 
30126:   case 1421:
30127: #line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
30128:     {
30129: 					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
30130: 					n->scope = VAR_SET_SCOPE_DEFAULT;
30131: 					(yyval.node) = (PGNode *) n;
30132: 				;}
30133:     break;
30134: 
30135:   case 1422:
30136: #line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
30137:     {
30138: 					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
30139: 					n->scope = VAR_SET_SCOPE_LOCAL;
30140: 					(yyval.node) = (PGNode *) n;
30141: 				;}
30142:     break;
30143: 
30144:   case 1423:
30145: #line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
30146:     {
30147: 					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
30148: 					n->scope = VAR_SET_SCOPE_SESSION;
30149: 					(yyval.node) = (PGNode *) n;
30150: 				;}
30151:     break;
30152: 
30153:   case 1424:
30154: #line 29 "third_party/libpg_query/grammar/statements/variable_set.y"
30155:     {
30156: 					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
30157: 					n->scope = VAR_SET_SCOPE_GLOBAL;
30158: 					(yyval.node) = (PGNode *) n;
30159: 				;}
30160:     break;
30161: 
30162:   case 1425:
30163: #line 35 "third_party/libpg_query/grammar/statements/variable_set.y"
30164:     {
30165: 					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
30166: 					n->scope = VAR_SET_SCOPE_VARIABLE;
30167: 					(yyval.node) = (PGNode *) n;
30168: 				;}
30169:     break;
30170: 
30171:   case 1426:
30172: #line 44 "third_party/libpg_query/grammar/statements/variable_set.y"
30173:     {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
30174:     break;
30175: 
30176:   case 1427:
30177: #line 46 "third_party/libpg_query/grammar/statements/variable_set.y"
30178:     {
30179: 					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
30180: 					n->kind = VAR_SET_CURRENT;
30181: 					n->name = (yyvsp[(1) - (3)].str);
30182: 					(yyval.vsetstmt) = n;
30183: 				;}
30184:     break;
30185: 
30186:   case 1428:
30187: #line 54 "third_party/libpg_query/grammar/statements/variable_set.y"
30188:     {
30189: 					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
30190: 					n->kind = VAR_SET_VALUE;
30191: 					n->name = (char*) "timezone";
30192: 					if ((yyvsp[(3) - (3)].node) != NULL)
30193: 						n->args = list_make1((yyvsp[(3) - (3)].node));
30194: 					else
30195: 						n->kind = VAR_SET_DEFAULT;
30196: 					(yyval.vsetstmt) = n;
30197: 				;}
30198:     break;
30199: 
30200:   case 1429:
30201: #line 65 "third_party/libpg_query/grammar/statements/variable_set.y"
30202:     {
30203: 					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
30204: 					n->kind = VAR_SET_VALUE;
30205: 					n->name = (char*) "search_path";
30206: 					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
30207: 					(yyval.vsetstmt) = n;
30208: 				;}
30209:     break;
30210: 
30211:   case 1430:
30212: #line 77 "third_party/libpg_query/grammar/statements/variable_set.y"
30213:     {
30214: 					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
30215: 					n->kind = VAR_SET_VALUE;
30216: 					n->name = (yyvsp[(1) - (3)].str);
30217: 					n->args = (yyvsp[(3) - (3)].list);
30218: 					(yyval.vsetstmt) = n;
30219: 				;}
30220:     break;
30221: 
30222:   case 1431:
30223: #line 85 "third_party/libpg_query/grammar/statements/variable_set.y"
30224:     {
30225: 					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
30226: 					n->kind = VAR_SET_VALUE;
30227: 					n->name = (yyvsp[(1) - (3)].str);
30228: 					n->args = (yyvsp[(3) - (3)].list);
30229: 					(yyval.vsetstmt) = n;
30230: 				;}
30231:     break;
30232: 
30233:   case 1432:
30234: #line 96 "third_party/libpg_query/grammar/statements/variable_set.y"
30235:     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
30236:     break;
30237: 
30238:   case 1433:
30239: #line 102 "third_party/libpg_query/grammar/statements/variable_set.y"
30240:     {
30241: 					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
30242: 				;}
30243:     break;
30244: 
30245:   case 1434:
30246: #line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
30247:     {
30248: 					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
30249: 				;}
30250:     break;
30251: 
30252:   case 1435:
30253: #line 110 "third_party/libpg_query/grammar/statements/variable_set.y"
30254:     {
30255: 					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
30256: 					if ((yyvsp[(3) - (3)].list) != NIL)
30257: 					{
30258: 						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
30259: 						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
30260: 							ereport(ERROR,
30261: 									(errcode(PG_ERRCODE_SYNTAX_ERROR),
30262: 									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
30263: 									 parser_errposition((yylsp[(3) - (3)]))));
30264: 					}
30265: 					t->typmods = (yyvsp[(3) - (3)].list);
30266: 					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
30267: 				;}
30268:     break;
30269: 
30270:   case 1436:
30271: #line 125 "third_party/libpg_query/grammar/statements/variable_set.y"
30272:     {
30273: 					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
30274: 					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
30275: 											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
30276: 					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
30277: 				;}
30278:     break;
30279: 
30280:   case 1437:
30281: #line 131 "third_party/libpg_query/grammar/statements/variable_set.y"
30282:     { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
30283:     break;
30284: 
30285:   case 1438:
30286: #line 132 "third_party/libpg_query/grammar/statements/variable_set.y"
30287:     { (yyval.node) = NULL; ;}
30288:     break;
30289: 
30290:   case 1439:
30291: #line 133 "third_party/libpg_query/grammar/statements/variable_set.y"
30292:     { (yyval.node) = NULL; ;}
30293:     break;
30294: 
30295:   case 1440:
30296: #line 137 "third_party/libpg_query/grammar/statements/variable_set.y"
30297:     { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
30298:     break;
30299: 
30300:   case 1441:
30301: #line 138 "third_party/libpg_query/grammar/statements/variable_set.y"
30302:     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
30303:     break;
30304: 
30305:   case 1442:
30306: #line 8 "third_party/libpg_query/grammar/statements/load.y"
30307:     {
30308: 					PGLoadStmt *n = makeNode(PGLoadStmt);
30309: 					n->filename = (yyvsp[(2) - (2)].str);
30310: 					n->repository = NULL;
30311: 					n->repo_is_alias = false;
30312: 					n->version = NULL;
30313: 					n->load_type = PG_LOAD_TYPE_LOAD;
30314: 					(yyval.node) = (PGNode *)n;
30315: 				;}
30316:     break;
30317: 
30318:   case 1443:
30319: #line 17 "third_party/libpg_query/grammar/statements/load.y"
30320:     {
30321:                     PGLoadStmt *n = makeNode(PGLoadStmt);
30322:                     n->filename = (yyvsp[(3) - (4)].str);
30323:                     n->repository = NULL;
30324:                     n->repo_is_alias = false;
30325:                     n->version = (yyvsp[(4) - (4)].str);
30326:                     n->load_type = (yyvsp[(1) - (4)].loadinstalltype);
30327:                     (yyval.node) = (PGNode *)n;
30328: 				;}
30329:     break;
30330: 
30331:   case 1444:
30332: #line 26 "third_party/libpg_query/grammar/statements/load.y"
30333:     {
30334:                     PGLoadStmt *n = makeNode(PGLoadStmt);
30335:                     n->repository = (yyvsp[(5) - (6)].str);
30336:                     n->repo_is_alias = true;
30337:                     n->filename = (yyvsp[(3) - (6)].str);
30338:                     n->version = (yyvsp[(6) - (6)].str);
30339:                     n->load_type = (yyvsp[(1) - (6)].loadinstalltype);
30340:                     (yyval.node) = (PGNode *)n;
30341: 				;}
30342:     break;
30343: 
30344:   case 1445:
30345: #line 35 "third_party/libpg_query/grammar/statements/load.y"
30346:     {
30347:                     PGLoadStmt *n = makeNode(PGLoadStmt);
30348:                     n->filename = (yyvsp[(3) - (6)].str);
30349:                     n->repository = (yyvsp[(5) - (6)].str);
30350:                     n->repo_is_alias = false;
30351:                     n->version = (yyvsp[(6) - (6)].str);
30352:                     n->load_type = (yyvsp[(1) - (6)].loadinstalltype);
30353:                     (yyval.node) = (PGNode *)n;
30354: 				;}
30355:     break;
30356: 
30357:   case 1446:
30358: #line 46 "third_party/libpg_query/grammar/statements/load.y"
30359:     { (yyval.loadinstalltype) = PG_LOAD_TYPE_INSTALL; ;}
30360:     break;
30361: 
30362:   case 1447:
30363: #line 47 "third_party/libpg_query/grammar/statements/load.y"
30364:     { (yyval.loadinstalltype) = PG_LOAD_TYPE_FORCE_INSTALL; ;}
30365:     break;
30366: 
30367:   case 1448:
30368: #line 49 "third_party/libpg_query/grammar/statements/load.y"
30369:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
30370:     break;
30371: 
30372:   case 1449:
30373: #line 50 "third_party/libpg_query/grammar/statements/load.y"
30374:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
30375:     break;
30376: 
30377:   case 1450:
30378: #line 53 "third_party/libpg_query/grammar/statements/load.y"
30379:     { (yyval.str) = NULL; ;}
30380:     break;
30381: 
30382:   case 1451:
30383: #line 54 "third_party/libpg_query/grammar/statements/load.y"
30384:     { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
30385:     break;
30386: 
30387:   case 1452:
30388: #line 55 "third_party/libpg_query/grammar/statements/load.y"
30389:     { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
30390:     break;
30391: 
30392:   case 1453:
30393: #line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
30394:     {
30395: 					PGVacuumStmt *n = makeNode(PGVacuumStmt);
30396: 					n->options = PG_VACOPT_VACUUM;
30397: 					if ((yyvsp[(2) - (4)].boolean))
30398: 						n->options |= PG_VACOPT_FULL;
30399: 					if ((yyvsp[(3) - (4)].boolean))
30400: 						n->options |= PG_VACOPT_FREEZE;
30401: 					if ((yyvsp[(4) - (4)].boolean))
30402: 						n->options |= PG_VACOPT_VERBOSE;
30403: 					n->relation = NULL;
30404: 					n->va_cols = NIL;
30405: 					(yyval.node) = (PGNode *)n;
30406: 				;}
30407:     break;
30408: 
30409:   case 1454:
30410: #line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
30411:     {
30412: 					PGVacuumStmt *n = makeNode(PGVacuumStmt);
30413: 					n->options = PG_VACOPT_VACUUM;
30414: 					if ((yyvsp[(2) - (6)].boolean))
30415: 						n->options |= PG_VACOPT_FULL;
30416: 					if ((yyvsp[(3) - (6)].boolean))
30417: 						n->options |= PG_VACOPT_FREEZE;
30418: 					if ((yyvsp[(4) - (6)].boolean))
30419: 						n->options |= PG_VACOPT_VERBOSE;
30420: 					n->relation = (yyvsp[(5) - (6)].range);
30421: 					n->va_cols = (yyvsp[(6) - (6)].list);
30422: 					(yyval.node) = (PGNode *)n;
30423: 				;}
30424:     break;
30425: 
30426:   case 1455:
30427: #line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
30428:     {
30429: 					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
30430: 					n->options |= PG_VACOPT_VACUUM;
30431: 					if ((yyvsp[(2) - (5)].boolean))
30432: 						n->options |= PG_VACOPT_FULL;
30433: 					if ((yyvsp[(3) - (5)].boolean))
30434: 						n->options |= PG_VACOPT_FREEZE;
30435: 					if ((yyvsp[(4) - (5)].boolean))
30436: 						n->options |= PG_VACOPT_VERBOSE;
30437: 					(yyval.node) = (PGNode *)n;
30438: 				;}
30439:     break;
30440: 
30441:   case 1456:
30442: #line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
30443:     {
30444: 					PGVacuumStmt *n = makeNode(PGVacuumStmt);
30445: 					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
30446: 					n->relation = NULL;
30447: 					n->va_cols = NIL;
30448: 					(yyval.node) = (PGNode *) n;
30449: 				;}
30450:     break;
30451: 
30452:   case 1457:
30453: #line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
30454:     {
30455: 					PGVacuumStmt *n = makeNode(PGVacuumStmt);
30456: 					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
30457: 					n->relation = (yyvsp[(5) - (6)].range);
30458: 					n->va_cols = (yyvsp[(6) - (6)].list);
30459: 					if (n->va_cols != NIL)	/* implies analyze */
30460: 						n->options |= PG_VACOPT_ANALYZE;
30461: 					(yyval.node) = (PGNode *) n;
30462: 				;}
30463:     break;
30464: 
30465:   case 1458:
30466: #line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
30467:     { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
30468:     break;
30469: 
30470:   case 1459:
30471: #line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
30472:     { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
30473:     break;
30474: 
30475:   case 1460:
30476: #line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
30477:     { (yyval.ival) = PG_VACOPT_FREEZE; ;}
30478:     break;
30479: 
30480:   case 1461:
30481: #line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
30482:     { (yyval.ival) = PG_VACOPT_FULL; ;}
30483:     break;
30484: 
30485:   case 1462:
30486: #line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
30487:     {
30488: 					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
30489: 						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
30490: 					else
30491: 						ereport(ERROR,
30492: 								(errcode(PG_ERRCODE_SYNTAX_ERROR),
30493: 							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
30494: 									 parser_errposition((yylsp[(1) - (1)]))));
30495: 				;}
30496:     break;
30497: 
30498:   case 1463:
30499: #line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
30500:     { (yyval.boolean) = true; ;}
30501:     break;
30502: 
30503:   case 1464:
30504: #line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
30505:     { (yyval.boolean) = false; ;}
30506:     break;
30507: 
30508:   case 1465:
30509: #line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
30510:     { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
30511:     break;
30512: 
30513:   case 1466:
30514: #line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
30515:     { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
30516:     break;
30517: 
30518:   case 1467:
30519: #line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
30520:     { (yyval.boolean) = true; ;}
30521:     break;
30522: 
30523:   case 1468:
30524: #line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
30525:     { (yyval.boolean) = false; ;}
30526:     break;
30527: 
30528:   case 1469:
30529: #line 9 "third_party/libpg_query/grammar/statements/delete.y"
30530:     {
30531: 					PGDeleteStmt *n = makeNode(PGDeleteStmt);
30532: 					n->relation = (yyvsp[(4) - (7)].range);
30533: 					n->usingClause = (yyvsp[(5) - (7)].list);
30534: 					n->whereClause = (yyvsp[(6) - (7)].node);
30535: 					n->returningList = (yyvsp[(7) - (7)].list);
30536: 					n->withClause = (yyvsp[(1) - (7)].with);
30537: 					(yyval.node) = (PGNode *)n;
30538: 				;}
30539:     break;
30540: 
30541:   case 1470:
30542: #line 19 "third_party/libpg_query/grammar/statements/delete.y"
30543:     {
30544: 					PGDeleteStmt *n = makeNode(PGDeleteStmt);
30545: 					n->relation = (yyvsp[(3) - (3)].range);
30546: 					n->usingClause = NULL;
30547: 					n->whereClause = NULL;
30548: 					n->returningList = NULL;
30549: 					n->withClause = NULL;
30550: 					(yyval.node) = (PGNode *)n;
30551: 			    ;}
30552:     break;
30553: 
30554:   case 1471:
30555: #line 32 "third_party/libpg_query/grammar/statements/delete.y"
30556:     {
30557: 					(yyval.range) = (yyvsp[(1) - (1)].range);
30558: 				;}
30559:     break;
30560: 
30561:   case 1472:
30562: #line 36 "third_party/libpg_query/grammar/statements/delete.y"
30563:     {
30564: 					PGAlias *alias = makeNode(PGAlias);
30565: 					alias->aliasname = (yyvsp[(2) - (2)].str);
30566: 					(yyvsp[(1) - (2)].range)->alias = alias;
30567: 					(yyval.range) = (yyvsp[(1) - (2)].range);
30568: 				;}
30569:     break;
30570: 
30571:   case 1473:
30572: #line 43 "third_party/libpg_query/grammar/statements/delete.y"
30573:     {
30574: 					PGAlias *alias = makeNode(PGAlias);
30575: 					alias->aliasname = (yyvsp[(3) - (3)].str);
30576: 					(yyvsp[(1) - (3)].range)->alias = alias;
30577: 					(yyval.range) = (yyvsp[(1) - (3)].range);
30578: 				;}
30579:     break;
30580: 
30581:   case 1474:
30582: #line 53 "third_party/libpg_query/grammar/statements/delete.y"
30583:     { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
30584:     break;
30585: 
30586:   case 1475:
30587: #line 54 "third_party/libpg_query/grammar/statements/delete.y"
30588:     { (yyval.node) = NULL; ;}
30589:     break;
30590: 
30591:   case 1476:
30592: #line 60 "third_party/libpg_query/grammar/statements/delete.y"
30593:     { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
30594:     break;
30595: 
30596:   case 1477:
30597: #line 61 "third_party/libpg_query/grammar/statements/delete.y"
30598:     { (yyval.list) = NIL; ;}
30599:     break;
30600: 
30601:   case 1478:
30602: #line 10 "third_party/libpg_query/grammar/statements/analyze.y"
30603:     {
30604: 					PGVacuumStmt *n = makeNode(PGVacuumStmt);
30605: 					n->options = PG_VACOPT_ANALYZE;
30606: 					if ((yyvsp[(2) - (2)].boolean))
30607: 						n->options |= PG_VACOPT_VERBOSE;
30608: 					n->relation = NULL;
30609: 					n->va_cols = NIL;
30610: 					(yyval.node) = (PGNode *)n;
30611: 				;}
30612:     break;
30613: 
30614:   case 1479:
30615: #line 20 "third_party/libpg_query/grammar/statements/analyze.y"
30616:     {
30617: 					PGVacuumStmt *n = makeNode(PGVacuumStmt);
30618: 					n->options = PG_VACOPT_ANALYZE;
30619: 					if ((yyvsp[(2) - (4)].boolean))
30620: 						n->options |= PG_VACOPT_VERBOSE;
30621: 					n->relation = (yyvsp[(3) - (4)].range);
30622: 					n->va_cols = (yyvsp[(4) - (4)].list);
30623: 					(yyval.node) = (PGNode *)n;
30624: 				;}
30625:     break;
30626: 
30627:   case 1480:
30628: #line 8 "third_party/libpg_query/grammar/statements/attach.y"
30629:     {
30630: 					PGAttachStmt *n = makeNode(PGAttachStmt);
30631: 					n->path = (yyvsp[(3) - (5)].str);
30632: 					n->name = (yyvsp[(4) - (5)].str);
30633: 					n->options = (yyvsp[(5) - (5)].list);
30634: 					n->onconflict = PG_ERROR_ON_CONFLICT;
30635: 					(yyval.node) = (PGNode *)n;
30636: 				;}
30637:     break;
30638: 
30639:   case 1481:
30640: #line 17 "third_party/libpg_query/grammar/statements/attach.y"
30641:     {
30642: 					PGAttachStmt *n = makeNode(PGAttachStmt);
30643: 					n->path = (yyvsp[(6) - (8)].str);
30644: 					n->name = (yyvsp[(7) - (8)].str);
30645: 					n->options = (yyvsp[(8) - (8)].list);
30646: 					n->onconflict = PG_IGNORE_ON_CONFLICT;
30647: 					(yyval.node) = (PGNode *)n;
30648: 				;}
30649:     break;
30650: 
30651:   case 1482:
30652: #line 29 "third_party/libpg_query/grammar/statements/attach.y"
30653:     {
30654: 					PGDetachStmt *n = makeNode(PGDetachStmt);
30655: 					n->missing_ok = false;
30656: 					n->db_name = (yyvsp[(2) - (2)].str);
30657: 					(yyval.node) = (PGNode *)n;
30658: 				;}
30659:     break;
30660: 
30661:   case 1483:
30662: #line 36 "third_party/libpg_query/grammar/statements/attach.y"
30663:     {
30664: 					PGDetachStmt *n = makeNode(PGDetachStmt);
30665: 					n->missing_ok = false;
30666: 					n->db_name = (yyvsp[(3) - (3)].str);
30667: 					(yyval.node) = (PGNode *)n;
30668: 				;}
30669:     break;
30670: 
30671:   case 1484:
30672: #line 43 "third_party/libpg_query/grammar/statements/attach.y"
30673:     {
30674: 					PGDetachStmt *n = makeNode(PGDetachStmt);
30675: 					n->missing_ok = true;
30676: 					n->db_name = (yyvsp[(5) - (5)].str);
30677: 					(yyval.node) = (PGNode *)n;
30678: 				;}
30679:     break;
30680: 
30681:   case 1485:
30682: #line 51 "third_party/libpg_query/grammar/statements/attach.y"
30683:     {;}
30684:     break;
30685: 
30686:   case 1486:
30687: #line 52 "third_party/libpg_query/grammar/statements/attach.y"
30688:     {;}
30689:     break;
30690: 
30691:   case 1487:
30692: #line 56 "third_party/libpg_query/grammar/statements/attach.y"
30693:     { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
30694:     break;
30695: 
30696:   case 1488:
30697: #line 57 "third_party/libpg_query/grammar/statements/attach.y"
30698:     { (yyval.str) = NULL; ;}
30699:     break;
30700: 
30701:   case 1489:
30702: #line 3 "third_party/libpg_query/grammar/statements/variable_reset.y"
30703:     {
30704: 				(yyvsp[(2) - (2)].vsetstmt)->scope = VAR_SET_SCOPE_DEFAULT;
30705: 				(yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt);
30706: 			;}
30707:     break;
30708: 
30709:   case 1490:
30710: #line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
30711:     {
30712: 					(yyvsp[(3) - (3)].vsetstmt)->scope = VAR_SET_SCOPE_LOCAL;
30713: 					(yyval.node) = (PGNode *) (yyvsp[(3) - (3)].vsetstmt);
30714: 				;}
30715:     break;
30716: 
30717:   case 1491:
30718: #line 13 "third_party/libpg_query/grammar/statements/variable_reset.y"
30719:     {
30720: 					(yyvsp[(3) - (3)].vsetstmt)->scope = VAR_SET_SCOPE_SESSION;
30721: 					(yyval.node) = (PGNode *) (yyvsp[(3) - (3)].vsetstmt);
30722: 				;}
30723:     break;
30724: 
30725:   case 1492:
30726: #line 18 "third_party/libpg_query/grammar/statements/variable_reset.y"
30727:     {
30728: 					(yyvsp[(3) - (3)].vsetstmt)->scope = VAR_SET_SCOPE_GLOBAL;
30729: 					(yyval.node) = (PGNode *) (yyvsp[(3) - (3)].vsetstmt);
30730: 				;}
30731:     break;
30732: 
30733:   case 1493:
30734: #line 23 "third_party/libpg_query/grammar/statements/variable_reset.y"
30735:     {
30736: 					(yyvsp[(3) - (3)].vsetstmt)->scope = VAR_SET_SCOPE_VARIABLE;
30737: 					(yyval.node) = (PGNode *) (yyvsp[(3) - (3)].vsetstmt);
30738: 				;}
30739:     break;
30740: 
30741:   case 1494:
30742: #line 32 "third_party/libpg_query/grammar/statements/variable_reset.y"
30743:     {
30744: 					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
30745: 					n->kind = VAR_RESET;
30746: 					n->name = (yyvsp[(1) - (1)].str);
30747: 					(yyval.vsetstmt) = n;
30748: 				;}
30749:     break;
30750: 
30751:   case 1495:
30752: #line 39 "third_party/libpg_query/grammar/statements/variable_reset.y"
30753:     {
30754: 					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
30755: 					n->kind = VAR_RESET_ALL;
30756: 					(yyval.vsetstmt) = n;
30757: 				;}
30758:     break;
30759: 
30760:   case 1496:
30761: #line 48 "third_party/libpg_query/grammar/statements/variable_reset.y"
30762:     { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
30763:     break;
30764: 
30765:   case 1497:
30766: #line 50 "third_party/libpg_query/grammar/statements/variable_reset.y"
30767:     {
30768: 					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
30769: 					n->kind = VAR_RESET;
30770: 					n->name = (char*) "timezone";
30771: 					(yyval.vsetstmt) = n;
30772: 				;}
30773:     break;
30774: 
30775:   case 1498:
30776: #line 57 "third_party/libpg_query/grammar/statements/variable_reset.y"
30777:     {
30778: 					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
30779: 					n->kind = VAR_RESET;
30780: 					n->name = (char*) "transaction_isolation";
30781: 					(yyval.vsetstmt) = n;
30782: 				;}
30783:     break;
30784: 
30785:   case 1499:
30786: #line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
30787:     {
30788: 				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
30789: 				n->stmt = (yyvsp[(2) - (2)].node);
30790: 				n->name = (char*) "select";
30791: 				n->is_summary = 0;
30792: 				(yyval.node) = (PGNode *) n;
30793: 			;}
30794:     break;
30795: 
30796:   case 1500:
30797: #line 10 "third_party/libpg_query/grammar/statements/variable_show.y"
30798:     {
30799: 				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
30800: 				n->stmt = (yyvsp[(2) - (2)].node);
30801: 				n->name = (char*) "select";
30802: 				n->is_summary = 1;
30803: 				(yyval.node) = (PGNode *) n;
30804: 			;}
30805:     break;
30806: 
30807:   case 1501:
30808: #line 18 "third_party/libpg_query/grammar/statements/variable_show.y"
30809:     {
30810: 				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
30811: 				n->name = (yyvsp[(2) - (2)].str);
30812: 				n->is_summary = 1;
30813: 				(yyval.node) = (PGNode *) n;
30814: 			;}
30815:     break;
30816: 
30817:   case 1502:
30818: #line 25 "third_party/libpg_query/grammar/statements/variable_show.y"
30819:     {
30820: 				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
30821: 				n->name = (yyvsp[(2) - (2)].str);
30822: 				n->is_summary = 0;
30823: 				(yyval.node) = (PGNode *) n;
30824: 			;}
30825:     break;
30826: 
30827:   case 1503:
30828: #line 32 "third_party/libpg_query/grammar/statements/variable_show.y"
30829:     {
30830: 				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
30831: 				n->name = (char*) "timezone";
30832: 				n->is_summary = 0;
30833: 				(yyval.node) = (PGNode *) n;
30834: 			;}
30835:     break;
30836: 
30837:   case 1504:
30838: #line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
30839:     {
30840: 				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
30841: 				n->name = (char*) "transaction_isolation";
30842: 				n->is_summary = 0;
30843: 				(yyval.node) = (PGNode *) n;
30844: 			;}
30845:     break;
30846: 
30847:   case 1505:
30848: #line 46 "third_party/libpg_query/grammar/statements/variable_show.y"
30849:     {
30850: 				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
30851: 				n->name = (char*) "__show_tables_expanded";
30852: 				n->is_summary = 0;
30853: 				(yyval.node) = (PGNode *) n;
30854: 			;}
30855:     break;
30856: 
30857:   case 1506:
30858: #line 53 "third_party/libpg_query/grammar/statements/variable_show.y"
30859:     {
30860: 				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
30861: 				n->name = (char*) "__show_tables_expanded";
30862: 				n->is_summary = 0;
30863: 				(yyval.node) = (PGNode *) n;
30864: 			;}
30865:     break;
30866: 
30867:   case 1513:
30868: #line 67 "third_party/libpg_query/grammar/statements/variable_show.y"
30869:     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
30870:     break;
30871: 
30872:   case 1514:
30873: #line 69 "third_party/libpg_query/grammar/statements/variable_show.y"
30874:     { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
30875:     break;
30876: 
30877:   case 1515:
30878: #line 72 "third_party/libpg_query/grammar/statements/variable_show.y"
30879:     { (yyval.str) = psprintf("\"%s\"", (yyvsp[(1) - (1)].str)); ;}
30880:     break;
30881: 
30882:   case 1516:
30883: #line 74 "third_party/libpg_query/grammar/statements/variable_show.y"
30884:     { (yyval.str) = psprintf("%s.\"%s\"", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
30885:     break;
30886: 
30887:   case 1517:
30888: #line 7 "third_party/libpg_query/grammar/statements/call.y"
30889:     {
30890: 					PGCallStmt *n = makeNode(PGCallStmt);
30891: 					n->func = (yyvsp[(2) - (2)].node);
30892: 					(yyval.node) = (PGNode *) n;
30893: 				;}
30894:     break;
30895: 
30896:   case 1518:
30897: #line 10 "third_party/libpg_query/grammar/statements/view.y"
30898:     {
30899: 					PGViewStmt *n = makeNode(PGViewStmt);
30900: 					n->view = (yyvsp[(4) - (9)].range);
30901: 					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
30902: 					n->aliases = (yyvsp[(5) - (9)].list);
30903: 					n->query = (yyvsp[(8) - (9)].node);
30904: 					n->onconflict = PG_ERROR_ON_CONFLICT;
30905: 					n->options = (yyvsp[(6) - (9)].list);
30906: 					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
30907: 					(yyval.node) = (PGNode *) n;
30908: 				;}
30909:     break;
30910: 
30911:   case 1519:
30912: #line 23 "third_party/libpg_query/grammar/statements/view.y"
30913:     {
30914: 					PGViewStmt *n = makeNode(PGViewStmt);
30915: 					n->view = (yyvsp[(7) - (12)].range);
30916: 					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
30917: 					n->aliases = (yyvsp[(8) - (12)].list);
30918: 					n->query = (yyvsp[(11) - (12)].node);
30919: 					n->onconflict = PG_IGNORE_ON_CONFLICT;
30920: 					n->options = (yyvsp[(9) - (12)].list);
30921: 					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
30922: 					(yyval.node) = (PGNode *) n;
30923: 				;}
30924:     break;
30925: 
30926:   case 1520:
30927: #line 36 "third_party/libpg_query/grammar/statements/view.y"
30928:     {
30929: 					PGViewStmt *n = makeNode(PGViewStmt);
30930: 					n->view = (yyvsp[(6) - (11)].range);
30931: 					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
30932: 					n->aliases = (yyvsp[(7) - (11)].list);
30933: 					n->query = (yyvsp[(10) - (11)].node);
30934: 					n->onconflict = PG_REPLACE_ON_CONFLICT;
30935: 					n->options = (yyvsp[(8) - (11)].list);
30936: 					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
30937: 					(yyval.node) = (PGNode *) n;
30938: 				;}
30939:     break;
30940: 
30941:   case 1521:
30942: #line 49 "third_party/libpg_query/grammar/statements/view.y"
30943:     {
30944: 					PGViewStmt *n = makeNode(PGViewStmt);
30945: 					n->view = (yyvsp[(5) - (12)].range);
30946: 					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
30947: 					n->aliases = (yyvsp[(7) - (12)].list);
30948: 					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
30949: 					n->onconflict = PG_ERROR_ON_CONFLICT;
30950: 					n->options = (yyvsp[(9) - (12)].list);
30951: 					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
30952: 					if (n->withCheckOption != PG_NO_CHECK_OPTION)
30953: 						ereport(ERROR,
30954: 								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
30955: 								 errmsg("WITH CHECK OPTION not supported on recursive views"),
30956: 								 parser_errposition((yylsp[(12) - (12)]))));
30957: 					(yyval.node) = (PGNode *) n;
30958: 				;}
30959:     break;
30960: 
30961:   case 1522:
30962: #line 67 "third_party/libpg_query/grammar/statements/view.y"
30963:     {
30964: 					PGViewStmt *n = makeNode(PGViewStmt);
30965: 					n->view = (yyvsp[(7) - (14)].range);
30966: 					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
30967: 					n->aliases = (yyvsp[(9) - (14)].list);
30968: 					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
30969: 					n->onconflict = PG_REPLACE_ON_CONFLICT;
30970: 					n->options = (yyvsp[(11) - (14)].list);
30971: 					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
30972: 					if (n->withCheckOption != PG_NO_CHECK_OPTION)
30973: 						ereport(ERROR,
30974: 								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
30975: 								 errmsg("WITH CHECK OPTION not supported on recursive views"),
30976: 								 parser_errposition((yylsp[(14) - (14)]))));
30977: 					(yyval.node) = (PGNode *) n;
30978: 				;}
30979:     break;
30980: 
30981:   case 1523:
30982: #line 87 "third_party/libpg_query/grammar/statements/view.y"
30983:     { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
30984:     break;
30985: 
30986:   case 1524:
30987: #line 88 "third_party/libpg_query/grammar/statements/view.y"
30988:     { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
30989:     break;
30990: 
30991:   case 1525:
30992: #line 89 "third_party/libpg_query/grammar/statements/view.y"
30993:     { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
30994:     break;
30995: 
30996:   case 1526:
30997: #line 90 "third_party/libpg_query/grammar/statements/view.y"
30998:     { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
30999:     break;
31000: 
31001:   case 1527:
31002: #line 12 "third_party/libpg_query/grammar/statements/create_as.y"
31003:     {
31004: 					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
31005: 					ctas->query = (yyvsp[(6) - (7)].node);
31006: 					ctas->into = (yyvsp[(4) - (7)].into);
31007: 					ctas->relkind = PG_OBJECT_TABLE;
31008: 					ctas->is_select_into = false;
31009: 					ctas->onconflict = PG_ERROR_ON_CONFLICT;
31010: 					/* cram additional flags into the PGIntoClause */
31011: 					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
31012: 					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
31013: 					(yyval.node) = (PGNode *) ctas;
31014: 				;}
31015:     break;
31016: 
31017:   case 1528:
31018: #line 25 "third_party/libpg_query/grammar/statements/create_as.y"
31019:     {
31020: 					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
31021: 					ctas->query = (yyvsp[(9) - (10)].node);
31022: 					ctas->into = (yyvsp[(7) - (10)].into);
31023: 					ctas->relkind = PG_OBJECT_TABLE;
31024: 					ctas->is_select_into = false;
31025: 					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
31026: 					/* cram additional flags into the PGIntoClause */
31027: 					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
31028: 					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
31029: 					(yyval.node) = (PGNode *) ctas;
31030: 				;}
31031:     break;
31032: 
31033:   case 1529:
31034: #line 38 "third_party/libpg_query/grammar/statements/create_as.y"
31035:     {
31036: 					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
31037: 					ctas->query = (yyvsp[(8) - (9)].node);
31038: 					ctas->into = (yyvsp[(6) - (9)].into);
31039: 					ctas->relkind = PG_OBJECT_TABLE;
31040: 					ctas->is_select_into = false;
31041: 					ctas->onconflict = PG_REPLACE_ON_CONFLICT;
31042: 					/* cram additional flags into the PGIntoClause */
31043: 					(yyvsp[(6) - (9)].into)->rel->relpersistence = (yyvsp[(4) - (9)].ival);
31044: 					(yyvsp[(6) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
31045: 					(yyval.node) = (PGNode *) ctas;
31046: 				;}
31047:     break;
31048: 
31049:   case 1530:
31050: #line 54 "third_party/libpg_query/grammar/statements/create_as.y"
31051:     { (yyval.boolean) = true; ;}
31052:     break;
31053: 
31054:   case 1531:
31055: #line 55 "third_party/libpg_query/grammar/statements/create_as.y"
31056:     { (yyval.boolean) = false; ;}
31057:     break;
31058: 
31059:   case 1532:
31060: #line 56 "third_party/libpg_query/grammar/statements/create_as.y"
31061:     { (yyval.boolean) = true; ;}
31062:     break;
31063: 
31064:   case 1533:
31065: #line 62 "third_party/libpg_query/grammar/statements/create_as.y"
31066:     {
31067: 					(yyval.into) = makeNode(PGIntoClause);
31068: 					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
31069: 					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
31070: 					(yyval.into)->options = (yyvsp[(3) - (4)].list);
31071: 					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
31072: 					(yyval.into)->viewQuery = NULL;
31073: 					(yyval.into)->skipData = false;		/* might get changed later */
31074: 				;}
31075:     break;
31076: 
31077: 
31078: /* Line 1267 of yacc.c.  */
31079: #line 31080 "third_party/libpg_query/grammar/grammar_out.cpp"
31080:       default: break;
31081:     }
31082:   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
31083: 
31084:   YYPOPSTACK (yylen);
31085:   yylen = 0;
31086:   YY_STACK_PRINT (yyss, yyssp);
31087: 
31088:   *++yyvsp = yyval;
31089:   *++yylsp = yyloc;
31090: 
31091:   /* Now `shift' the result of the reduction.  Determine what state
31092:      that goes to, based on the state we popped back to and the rule
31093:      number reduced by.  */
31094: 
31095:   yyn = yyr1[yyn];
31096: 
31097:   yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
31098:   if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
31099:     yystate = yytable[yystate];
31100:   else
31101:     yystate = yydefgoto[yyn - YYNTOKENS];
31102: 
31103:   goto yynewstate;
31104: 
31105: 
31106: /*------------------------------------.
31107: | yyerrlab -- here on detecting error |
31108: `------------------------------------*/
31109: yyerrlab:
31110:   /* If not already recovering from an error, report this error.  */
31111:   if (!yyerrstatus)
31112:     {
31113:       ++yynerrs;
31114: #if ! YYERROR_VERBOSE
31115:       yyerror (&yylloc, yyscanner, YY_("syntax error"));
31116: #else
31117:       {
31118: 	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
31119: 	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
31120: 	  {
31121: 	    YYSIZE_T yyalloc = 2 * yysize;
31122: 	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
31123: 	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
31124: 	    if (yymsg != yymsgbuf)
31125: 	      YYSTACK_FREE (yymsg);
31126: 	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
31127: 	    if (yymsg)
31128: 	      yymsg_alloc = yyalloc;
31129: 	    else
31130: 	      {
31131: 		yymsg = yymsgbuf;
31132: 		yymsg_alloc = sizeof yymsgbuf;
31133: 	      }
31134: 	  }
31135: 
31136: 	if (0 < yysize && yysize <= yymsg_alloc)
31137: 	  {
31138: 	    (void) yysyntax_error (yymsg, yystate, yychar);
31139: 	    yyerror (&yylloc, yyscanner, yymsg);
31140: 	  }
31141: 	else
31142: 	  {
31143: 	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
31144: 	    if (yysize != 0)
31145: 	      goto yyexhaustedlab;
31146: 	  }
31147:       }
31148: #endif
31149:     }
31150: 
31151:   yyerror_range[0] = yylloc;
31152: 
31153:   if (yyerrstatus == 3)
31154:     {
31155:       /* If just tried and failed to reuse look-ahead token after an
31156: 	 error, discard it.  */
31157: 
31158:       if (yychar <= YYEOF)
31159: 	{
31160: 	  /* Return failure if at end of input.  */
31161: 	  if (yychar == YYEOF)
31162: 	    YYABORT;
31163: 	}
31164:       else
31165: 	{
31166: 	  yydestruct ("Error: discarding",
31167: 		      yytoken, &yylval, &yylloc, yyscanner);
31168: 	  yychar = YYEMPTY;
31169: 	}
31170:     }
31171: 
31172:   /* Else will try to reuse look-ahead token after shifting the error
31173:      token.  */
31174:   goto yyerrlab1;
31175: 
31176: 
31177: /*---------------------------------------------------.
31178: | yyerrorlab -- error raised explicitly by YYERROR.  |
31179: `---------------------------------------------------*/
31180: yyerrorlab:
31181: 
31182:   /* Pacify compilers like GCC when the user code never invokes
31183:      YYERROR and the label yyerrorlab therefore never appears in user
31184:      code.  */
31185:   if (/*CONSTCOND*/ 0)
31186:      goto yyerrorlab;
31187: 
31188:   yyerror_range[0] = yylsp[1-yylen];
31189:   /* Do not reclaim the symbols of the rule which action triggered
31190:      this YYERROR.  */
31191:   YYPOPSTACK (yylen);
31192:   yylen = 0;
31193:   YY_STACK_PRINT (yyss, yyssp);
31194:   yystate = *yyssp;
31195:   goto yyerrlab1;
31196: 
31197: 
31198: /*-------------------------------------------------------------.
31199: | yyerrlab1 -- common code for both syntax error and YYERROR.  |
31200: `-------------------------------------------------------------*/
31201: yyerrlab1:
31202:   yyerrstatus = 3;	/* Each real token shifted decrements this.  */
31203: 
31204:   for (;;)
31205:     {
31206:       yyn = yypact[yystate];
31207:       if (yyn != YYPACT_NINF)
31208: 	{
31209: 	  yyn += YYTERROR;
31210: 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
31211: 	    {
31212: 	      yyn = yytable[yyn];
31213: 	      if (0 < yyn)
31214: 		break;
31215: 	    }
31216: 	}
31217: 
31218:       /* Pop the current state because it cannot handle the error token.  */
31219:       if (yyssp == yyss)
31220: 	YYABORT;
31221: 
31222:       yyerror_range[0] = *yylsp;
31223:       yydestruct ("Error: popping",
31224: 		  yystos[yystate], yyvsp, yylsp, yyscanner);
31225:       YYPOPSTACK (1);
31226:       yystate = *yyssp;
31227:       YY_STACK_PRINT (yyss, yyssp);
31228:     }
31229: 
31230:   if (yyn == YYFINAL)
31231:     YYACCEPT;
31232: 
31233:   *++yyvsp = yylval;
31234: 
31235:   yyerror_range[1] = yylloc;
31236:   /* Using YYLLOC is tempting, but would change the location of
31237:      the look-ahead.  YYLOC is available though.  */
31238:   YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
31239:   *++yylsp = yyloc;
31240: 
31241:   /* Shift the error token.  */
31242:   YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);
31243: 
31244:   yystate = yyn;
31245:   goto yynewstate;
31246: 
31247: 
31248: /*-------------------------------------.
31249: | yyacceptlab -- YYACCEPT comes here.  |
31250: `-------------------------------------*/
31251: yyacceptlab:
31252:   yyresult = 0;
31253:   goto yyreturn;
31254: 
31255: /*-----------------------------------.
31256: | yyabortlab -- YYABORT comes here.  |
31257: `-----------------------------------*/
31258: yyabortlab:
31259:   yyresult = 1;
31260:   goto yyreturn;
31261: 
31262: #ifndef yyoverflow
31263: /*-------------------------------------------------.
31264: | yyexhaustedlab -- memory exhaustion comes here.  |
31265: `-------------------------------------------------*/
31266: yyexhaustedlab:
31267:   yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
31268:   yyresult = 2;
31269:   /* Fall through.  */
31270: #endif
31271: 
31272: yyreturn:
31273:   if (yychar != YYEOF && yychar != YYEMPTY)
31274:      yydestruct ("Cleanup: discarding lookahead",
31275: 		 yytoken, &yylval, &yylloc, yyscanner);
31276:   /* Do not reclaim the symbols of the rule which action triggered
31277:      this YYABORT or YYACCEPT.  */
31278:   YYPOPSTACK (yylen);
31279:   YY_STACK_PRINT (yyss, yyssp);
31280:   while (yyssp != yyss)
31281:     {
31282:       yydestruct ("Cleanup: popping",
31283: 		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
31284:       YYPOPSTACK (1);
31285:     }
31286: #ifndef yyoverflow
31287:   if (yyss != yyssa)
31288:     YYSTACK_FREE (yyss);
31289: #endif
31290: #if YYERROR_VERBOSE
31291:   if (yymsg != yymsgbuf)
31292:     YYSTACK_FREE (yymsg);
31293: #endif
31294:   /* Make sure YYID is used.  */
31295:   return YYID (yyresult);
31296: }
31297: 
31298: 
31299: #line 83 "third_party/libpg_query/grammar/statements/create_as.y"
31300: 
31301: 
31302: #line 1 "third_party/libpg_query/grammar/grammar.cpp"
31303: /*
31304:  * The signature of this function is required by bison.  However, we
31305:  * ignore the passed yylloc and instead use the last token position
31306:  * available from the scanner.
31307:  */
31308: static void
31309: base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
31310: {
31311: 	parser_yyerror(msg);
31312: }
31313: 
31314: static PGRawStmt *
31315: makeRawStmt(PGNode *stmt, int stmt_location)
31316: {
31317: 	PGRawStmt    *rs = makeNode(PGRawStmt);
31318: 
31319: 	rs->stmt = stmt;
31320: 	rs->stmt_location = stmt_location;
31321: 	rs->stmt_len = 0;			/* might get changed later */
31322: 	return rs;
31323: }
31324: 
31325: /* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
31326: static void
31327: updateRawStmtEnd(PGRawStmt *rs, int end_location)
31328: {
31329: 	/*
31330: 	 * If we already set the length, don't change it.  This is for situations
31331: 	 * like "select foo ;; select bar" where the same statement will be last
31332: 	 * in the string for more than one semicolon.
31333: 	 */
31334: 	if (rs->stmt_len > 0)
31335: 		return;
31336: 
31337: 	/* OK, update length of PGRawStmt */
31338: 	rs->stmt_len = end_location - rs->stmt_location;
31339: }
31340: 
31341: static PGNode *
31342: makeColumnRef(char *colname, PGList *indirection,
31343: 			  int location, core_yyscan_t yyscanner)
31344: {
31345: 	/*
31346: 	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
31347: 	 * is any subscripting in the specified indirection list.  However,
31348: 	 * any field selection at the start of the indirection list must be
31349: 	 * transposed into the "fields" part of the PGColumnRef node.
31350: 	 */
31351: 	PGColumnRef  *c = makeNode(PGColumnRef);
31352: 	int		nfields = 0;
31353: 	PGListCell *l;
31354: 
31355: 	c->location = location;
31356: 	foreach(l, indirection)
31357: 	{
31358: 		if (IsA(lfirst(l), PGAIndices))
31359: 		{
31360: 			PGAIndirection *i = makeNode(PGAIndirection);
31361: 
31362: 			if (nfields == 0)
31363: 			{
31364: 				/* easy case - all indirection goes to PGAIndirection */
31365: 				c->fields = list_make1(makeString(colname));
31366: 				i->indirection = check_indirection(indirection, yyscanner);
31367: 			}
31368: 			else
31369: 			{
31370: 				/* got to split the list in two */
31371: 				i->indirection = check_indirection(list_copy_tail(indirection,
31372: 																  nfields),
31373: 												   yyscanner);
31374: 				indirection = list_truncate(indirection, nfields);
31375: 				c->fields = lcons(makeString(colname), indirection);
31376: 			}
31377: 			i->arg = (PGNode *) c;
31378: 			return (PGNode *) i;
31379: 		}
31380: 		else if (IsA(lfirst(l), PGAStar))
31381: 		{
31382: 			/* We only allow '*' at the end of a PGColumnRef */
31383: 			if (lnext(l) != NULL)
31384: 				parser_yyerror("improper use of \"*\"");
31385: 		}
31386: 		nfields++;
31387: 	}
31388: 	/* No subscripting, so all indirection gets added to field list */
31389: 	c->fields = lcons(makeString(colname), indirection);
31390: 	return (PGNode *) c;
31391: }
31392: 
31393: static PGNode *
31394: makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location)
31395: {
31396: 	PGTypeCast *n = makeNode(PGTypeCast);
31397: 	n->arg = arg;
31398: 	n->typeName = tpname;
31399: 	n->tryCast = trycast;
31400: 	n->location = location;
31401: 	return (PGNode *) n;
31402: }
31403: 
31404: static PGNode *
31405: makeStringConst(char *str, int location)
31406: {
31407: 	PGAConst *n = makeNode(PGAConst);
31408: 
31409: 	n->val.type = T_PGString;
31410: 	n->val.val.str = str;
31411: 	n->location = location;
31412: 
31413: 	return (PGNode *)n;
31414: }
31415: 
31416: static PGNode *
31417: makeStringConstCast(char *str, int location, PGTypeName *tpname)
31418: {
31419: 	PGNode *s = makeStringConst(str, location);
31420: 
31421: 	return makeTypeCast(s, tpname, 0, -1);
31422: }
31423: 
31424: static PGNode *
31425: makeIntervalNode(char *str, int location, PGList *typmods) {
31426: 	PGIntervalConstant *n = makeNode(PGIntervalConstant);
31427: 
31428: 	n->val_type = T_PGString;
31429: 	n->sval = str;
31430: 	n->location = location;
31431: 	n->typmods = typmods;
31432: 
31433: 	return (PGNode *)n;
31434: 
31435: }
31436: 
31437: static PGNode *
31438: makeIntervalNode(int val, int location, PGList *typmods) {
31439: 	PGIntervalConstant *n = makeNode(PGIntervalConstant);
31440: 
31441: 	n->val_type = T_PGInteger;
31442: 	n->ival = val;
31443: 	n->location = location;
31444: 	n->typmods = typmods;
31445: 
31446: 	return (PGNode *)n;
31447: }
31448: 
31449: static PGNode *
31450: makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
31451: 	PGIntervalConstant *n = makeNode(PGIntervalConstant);
31452: 
31453: 	n->val_type = T_PGAExpr;
31454: 	n->eval = arg;
31455: 	n->location = location;
31456: 	n->typmods = typmods;
31457: 
31458: 	return (PGNode *)n;
31459: }
31460: 
31461: static PGNode *
31462: makeSampleSize(PGValue *sample_size, bool is_percentage) {
31463: 	PGSampleSize *n = makeNode(PGSampleSize);
31464: 
31465: 	n->sample_size = *sample_size;
31466: 	n->is_percentage = is_percentage;
31467: 
31468: 	return (PGNode *)n;
31469: }
31470: 
31471: static PGNode *
31472: makeSampleOptions(PGNode *sample_size, char *method, int *seed, int location) {
31473: 	PGSampleOptions *n = makeNode(PGSampleOptions);
31474: 
31475: 	n->sample_size = sample_size;
31476: 	n->method = method;
31477: 	if (seed) {
31478: 		n->has_seed = true;
31479: 		n->seed = *seed;
31480: 	}
31481: 	n->location = location;
31482: 
31483: 	return (PGNode *)n;
31484: }
31485: 
31486: /* makeLimitPercent()
31487:  * Make limit percent node
31488:  */
31489: static PGNode *
31490: makeLimitPercent(PGNode *limit_percent) {
31491: 	PGLimitPercent *n = makeNode(PGLimitPercent);
31492: 
31493: 	n->limit_percent = limit_percent;
31494: 
31495: 	return (PGNode *)n;
31496: }
31497: 
31498: static PGNode *
31499: makeIntConst(int val, int location)
31500: {
31501: 	PGAConst *n = makeNode(PGAConst);
31502: 
31503: 	n->val.type = T_PGInteger;
31504: 	n->val.val.ival = val;
31505: 	n->location = location;
31506: 
31507: 	return (PGNode *)n;
31508: }
31509: 
31510: static PGNode *
31511: makeFloatConst(char *str, int location)
31512: {
31513: 	PGAConst *n = makeNode(PGAConst);
31514: 
31515: 	n->val.type = T_PGFloat;
31516: 	n->val.val.str = str;
31517: 	n->location = location;
31518: 
31519: 	return (PGNode *)n;
31520: }
31521: 
31522: static PGNode *
31523: makeBitStringConst(char *str, int location)
31524: {
31525: 	PGAConst *n = makeNode(PGAConst);
31526: 
31527: 	n->val.type = T_PGBitString;
31528: 	n->val.val.str = str;
31529: 	n->location = location;
31530: 
31531: 	return (PGNode *)n;
31532: }
31533: 
31534: static PGNode *
31535: makeNullAConst(int location)
31536: {
31537: 	PGAConst *n = makeNode(PGAConst);
31538: 
31539: 	n->val.type = T_PGNull;
31540: 	n->location = location;
31541: 
31542: 	return (PGNode *)n;
31543: }
31544: 
31545: static PGNode *
31546: makeAConst(PGValue *v, int location)
31547: {
31548: 	PGNode *n;
31549: 
31550: 	switch (v->type)
31551: 	{
31552: 		case T_PGFloat:
31553: 			n = makeFloatConst(v->val.str, location);
31554: 			break;
31555: 
31556: 		case T_PGInteger:
31557: 			n = makeIntConst(v->val.ival, location);
31558: 			break;
31559: 
31560: 		case T_PGString:
31561: 		default:
31562: 			n = makeStringConst(v->val.str, location);
31563: 			break;
31564: 	}
31565: 
31566: 	return n;
31567: }
31568: 
31569: /* makeBoolAConst()
31570:  * Create an PGAConst string node and put it inside a boolean cast.
31571:  */
31572: static PGNode *
31573: makeBoolAConst(bool state, int location)
31574: {
31575: 	PGAConst *n = makeNode(PGAConst);
31576: 
31577: 	n->val.type = T_PGString;
31578: 	n->val.val.str = (state ? (char*) "t" : (char*) "f");
31579: 	n->location = location;
31580: 
31581: 	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), 0, -1);
31582: }
31583: 
31584: /* check_qualified_name --- check the result of qualified_name production
31585:  *
31586:  * It's easiest to let the grammar production for qualified_name allow
31587:  * subscripts and '*', which we then must reject here.
31588:  */
31589: static void
31590: check_qualified_name(PGList *names, core_yyscan_t yyscanner)
31591: {
31592: 	PGListCell   *i;
31593: 
31594: 	foreach(i, names)
31595: 	{
31596: 		if (!IsA(lfirst(i), PGString))
31597: 			parser_yyerror("syntax error");
31598: 	}
31599: }
31600: 
31601: /* check_func_name --- check the result of func_name production
31602:  *
31603:  * It's easiest to let the grammar production for func_name allow subscripts
31604:  * and '*', which we then must reject here.
31605:  */
31606: static PGList *
31607: check_func_name(PGList *names, core_yyscan_t yyscanner)
31608: {
31609: 	PGListCell   *i;
31610: 
31611: 	foreach(i, names)
31612: 	{
31613: 		if (!IsA(lfirst(i), PGString))
31614: 			parser_yyerror("syntax error");
31615: 	}
31616: 	return names;
31617: }
31618: 
31619: /* check_indirection --- check the result of indirection production
31620:  *
31621:  * We only allow '*' at the end of the list, but it's hard to enforce that
31622:  * in the grammar, so do it here.
31623:  */
31624: static PGList *
31625: check_indirection(PGList *indirection, core_yyscan_t yyscanner)
31626: {
31627: 	PGListCell *l;
31628: 
31629: 	foreach(l, indirection)
31630: 	{
31631: 		if (IsA(lfirst(l), PGAStar))
31632: 		{
31633: 			if (lnext(l) != NULL)
31634: 				parser_yyerror("improper use of \"*\"");
31635: 		}
31636: 	}
31637: 	return indirection;
31638: }
31639: 
31640: /* makeParamRef
31641:  * Creates a new PGParamRef node
31642:  */
31643: static PGNode* makeParamRef(int number, int location)
31644: {
31645: 	PGParamRef *p = makeNode(PGParamRef);
31646: 	p->number = number;
31647: 	p->location = location;
31648: 	p->name = NULL;
31649: 	return (PGNode *) p;
31650: }
31651: 
31652: /* makeNamedParamRef
31653:  * Creates a new PGParamRef node
31654:  */
31655: static PGNode* makeNamedParamRef(char *name, int location)
31656: {
31657: 	PGParamRef *p = (PGParamRef *)makeParamRef(0, location);
31658: 	p->name = name;
31659: 	return (PGNode *) p;
31660: }
31661: 
31662: 
31663: /* insertSelectOptions()
31664:  * Insert ORDER BY, etc into an already-constructed SelectStmt.
31665:  *
31666:  * This routine is just to avoid duplicating code in PGSelectStmt productions.
31667:  */
31668: static void
31669: insertSelectOptions(PGSelectStmt *stmt,
31670: 					PGList *sortClause, PGList *lockingClause,
31671: 					PGNode *limitOffset, PGNode *limitCount,
31672: 					PGWithClause *withClause,
31673: 					core_yyscan_t yyscanner)
31674: {
31675: 	if (stmt->type != T_PGSelectStmt) {
31676: 		ereport(ERROR,
31677: 				(errcode(PG_ERRCODE_SYNTAX_ERROR),
31678: 						errmsg("DESCRIBE/SHOW/SUMMARIZE with CTE/ORDER BY/... not allowed - wrap the statement in a subquery instead"),
31679: 						parser_errposition(exprLocation((PGNode *) stmt))));
31680: 	}
31681: 	Assert(IsA(stmt, PGSelectStmt));
31682: 
31683: 	/*
31684: 	 * Tests here are to reject constructs like
31685: 	 *	(SELECT foo ORDER BY bar) ORDER BY baz
31686: 	 */
31687: 	if (sortClause)
31688: 	{
31689: 		if (stmt->sortClause)
31690: 			ereport(ERROR,
31691: 					(errcode(PG_ERRCODE_SYNTAX_ERROR),
31692: 					 errmsg("multiple ORDER BY clauses not allowed"),
31693: 					 parser_errposition(exprLocation((PGNode *) sortClause))));
31694: 		stmt->sortClause = sortClause;
31695: 	}
31696: 	/* We can handle multiple locking clauses, though */
31697: 	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
31698: 	if (limitOffset)
31699: 	{
31700: 		if (stmt->limitOffset)
31701: 			ereport(ERROR,
31702: 					(errcode(PG_ERRCODE_SYNTAX_ERROR),
31703: 					 errmsg("multiple OFFSET clauses not allowed"),
31704: 					 parser_errposition(exprLocation(limitOffset))));
31705: 		stmt->limitOffset = limitOffset;
31706: 	}
31707: 	if (limitCount)
31708: 	{
31709: 		if (stmt->limitCount)
31710: 			ereport(ERROR,
31711: 					(errcode(PG_ERRCODE_SYNTAX_ERROR),
31712: 					 errmsg("multiple LIMIT clauses not allowed"),
31713: 					 parser_errposition(exprLocation(limitCount))));
31714: 		stmt->limitCount = limitCount;
31715: 	}
31716: 	if (withClause)
31717: 	{
31718: 		if (stmt->withClause)
31719: 			ereport(ERROR,
31720: 					(errcode(PG_ERRCODE_SYNTAX_ERROR),
31721: 					 errmsg("multiple WITH clauses not allowed"),
31722: 					 parser_errposition(exprLocation((PGNode *) withClause))));
31723: 		stmt->withClause = withClause;
31724: 	}
31725: }
31726: 
31727: static PGNode *
31728: makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
31729: {
31730: 	PGSelectStmt *n = makeNode(PGSelectStmt);
31731: 
31732: 	n->op = op;
31733: 	n->all = all;
31734: 	n->larg = larg;
31735: 	n->rarg = rarg;
31736: 	return (PGNode *) n;
31737: }
31738: 
31739: /* SystemFuncName()
31740:  * Build a properly-qualified reference to a built-in function.
31741:  */
31742: PGList *
31743: SystemFuncName(const char *name)
31744: {
31745: 	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
31746: }
31747: 
31748: /* SystemTypeName()
31749:  * Build a properly-qualified reference to a built-in type.
31750:  *
31751:  * typmod is defaulted, but may be changed afterwards by caller.
31752:  * Likewise for the location.
31753:  */
31754: PGTypeName *
31755: SystemTypeName(const char *name)
31756: {
31757: 	return makeTypeNameFromNameList(list_make1(makeString(name)));
31758: }
31759: 
31760: /* doNegate()
31761:  * Handle negation of a numeric constant.
31762:  *
31763:  * Formerly, we did this here because the optimizer couldn't cope with
31764:  * indexquals that looked like "var = -4" --- it wants "var = const"
31765:  * and a unary minus operator applied to a constant didn't qualify.
31766:  * As of Postgres 7.0, that problem doesn't exist anymore because there
31767:  * is a constant-subexpression simplifier in the optimizer.  However,
31768:  * there's still a good reason for doing this here, which is that we can
31769:  * postpone committing to a particular internal representation for simple
31770:  * negative constants.	It's better to leave "-123.456" in string form
31771:  * until we know what the desired type is.
31772:  */
31773: static PGNode *
31774: doNegate(PGNode *n, int location)
31775: {
31776: 	if (IsA(n, PGAConst))
31777: 	{
31778: 		PGAConst *con = (PGAConst *)n;
31779: 
31780: 		/* report the constant's location as that of the '-' sign */
31781: 		con->location = location;
31782: 
31783: 		if (con->val.type == T_PGInteger)
31784: 		{
31785: 			con->val.val.ival = -con->val.val.ival;
31786: 			return n;
31787: 		}
31788: 		if (con->val.type == T_PGFloat)
31789: 		{
31790: 			doNegateFloat(&con->val);
31791: 			return n;
31792: 		}
31793: 	}
31794: 
31795: 	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
31796: }
31797: 
31798: static void
31799: doNegateFloat(PGValue *v)
31800: {
31801: 	char   *oldval = v->val.str;
31802: 
31803: 	Assert(IsA(v, PGFloat));
31804: 	if (*oldval == '+')
31805: 		oldval++;
31806: 	if (*oldval == '-')
31807: 		v->val.str = oldval+1;	/* just strip the '-' */
31808: 	else
31809: 		v->val.str = psprintf("-%s", oldval);
31810: }
31811: 
31812: static PGNode *
31813: makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
31814: {
31815: 	PGNode	   *lexp = lexpr;
31816: 
31817: 	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
31818: 	while (IsA(lexp, PGAExpr) &&
31819: 		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
31820: 		lexp = ((PGAExpr *) lexp)->lexpr;
31821: 	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
31822: 	if (IsA(lexp, PGBoolExpr))
31823: 	{
31824: 		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;
31825: 
31826: 		if (blexpr->boolop == PG_AND_EXPR)
31827: 		{
31828: 			blexpr->args = lappend(blexpr->args, rexpr);
31829: 			return (PGNode *) blexpr;
31830: 		}
31831: 	}
31832: 	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
31833: }
31834: 
31835: static PGNode *
31836: makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
31837: {
31838: 	PGNode	   *lexp = lexpr;
31839: 
31840: 	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
31841: 	while (IsA(lexp, PGAExpr) &&
31842: 		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
31843: 		lexp = ((PGAExpr *) lexp)->lexpr;
31844: 	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
31845: 	if (IsA(lexp, PGBoolExpr))
31846: 	{
31847: 		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;
31848: 
31849: 		if (blexpr->boolop == PG_OR_EXPR)
31850: 		{
31851: 			blexpr->args = lappend(blexpr->args, rexpr);
31852: 			return (PGNode *) blexpr;
31853: 		}
31854: 	}
31855: 	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
31856: }
31857: 
31858: static PGNode *
31859: makeNotExpr(PGNode *expr, int location)
31860: {
31861: 	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
31862: }
31863: 
31864: /* Separate PGConstraint nodes from COLLATE clauses in a */
31865: static void
31866: SplitColQualList(PGList *qualList,
31867: 				 PGList **constraintList, PGCollateClause **collClause,
31868: 				 core_yyscan_t yyscanner)
31869: {
31870: 	PGListCell   *cell;
31871: 	PGListCell   *prev;
31872: 	PGListCell   *next;
31873: 
31874: 	*collClause = NULL;
31875: 	prev = NULL;
31876: 	for (cell = list_head(qualList); cell; cell = next)
31877: 	{
31878: 		PGNode   *n = (PGNode *) lfirst(cell);
31879: 
31880: 		next = lnext(cell);
31881: 		if (IsA(n, PGConstraint))
31882: 		{
31883: 			/* keep it in list */
31884: 			prev = cell;
31885: 			continue;
31886: 		}
31887: 		if (IsA(n, PGCollateClause))
31888: 		{
31889: 			PGCollateClause *c = (PGCollateClause *) n;
31890: 
31891: 			if (*collClause)
31892: 				ereport(ERROR,
31893: 						(errcode(PG_ERRCODE_SYNTAX_ERROR),
31894: 						 errmsg("multiple COLLATE clauses not allowed"),
31895: 						 parser_errposition(c->location)));
31896: 			*collClause = c;
31897: 		}
31898: 		else
31899: 			elog(ERROR, "unexpected node type %d", (int) n->type);
31900: 		/* remove non-Constraint nodes from qualList */
31901: 		qualList = list_delete_cell(qualList, cell, prev);
31902: 	}
31903: 	*constraintList = qualList;
31904: }
31905: 
31906: /*
31907:  * Process result of ConstraintAttributeSpec, and set appropriate bool flags
31908:  * in the output command node.  Pass NULL for any flags the particular
31909:  * command doesn't support.
31910:  */
31911: static void
31912: processCASbits(int cas_bits, int location, const char *constrType,
31913: 			   bool *deferrable, bool *initdeferred, bool *not_valid,
31914: 			   bool *no_inherit, core_yyscan_t yyscanner)
31915: {
31916: 	/* defaults */
31917: 	if (deferrable)
31918: 		*deferrable = false;
31919: 	if (initdeferred)
31920: 		*initdeferred = false;
31921: 	if (not_valid)
31922: 		*not_valid = false;
31923: 
31924: 	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
31925: 	{
31926: 		if (deferrable)
31927: 			*deferrable = true;
31928: 		else
31929: 			ereport(ERROR,
31930: 					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
31931: 					 /* translator: %s is CHECK, UNIQUE, or similar */
31932: 					 errmsg("%s constraints cannot be marked DEFERRABLE",
31933: 							constrType),
31934: 					 parser_errposition(location)));
31935: 	}
31936: 
31937: 	if (cas_bits & CAS_INITIALLY_DEFERRED)
31938: 	{
31939: 		if (initdeferred)
31940: 			*initdeferred = true;
31941: 		else
31942: 			ereport(ERROR,
31943: 					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
31944: 					 /* translator: %s is CHECK, UNIQUE, or similar */
31945: 					 errmsg("%s constraints cannot be marked DEFERRABLE",
31946: 							constrType),
31947: 					 parser_errposition(location)));
31948: 	}
31949: 
31950: 	if (cas_bits & CAS_NOT_VALID)
31951: 	{
31952: 		if (not_valid)
31953: 			*not_valid = true;
31954: 		else
31955: 			ereport(ERROR,
31956: 					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
31957: 					 /* translator: %s is CHECK, UNIQUE, or similar */
31958: 					 errmsg("%s constraints cannot be marked NOT VALID",
31959: 							constrType),
31960: 					 parser_errposition(location)));
31961: 	}
31962: 
31963: 	if (cas_bits & CAS_NO_INHERIT)
31964: 	{
31965: 		if (no_inherit)
31966: 			*no_inherit = true;
31967: 		else
31968: 			ereport(ERROR,
31969: 					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
31970: 					 /* translator: %s is CHECK, UNIQUE, or similar */
31971: 					 errmsg("%s constraints cannot be marked NO INHERIT",
31972: 							constrType),
31973: 					 parser_errposition(location)));
31974: 	}
31975: }
31976: 
31977: /*----------
31978:  * Recursive view transformation
31979:  *
31980:  * Convert
31981:  *
31982:  *     CREATE RECURSIVE VIEW relname (aliases) AS query
31983:  *
31984:  * to
31985:  *
31986:  *     CREATE VIEW relname (aliases) AS
31987:  *         WITH RECURSIVE relname (aliases) AS (query)
31988:  *         SELECT aliases FROM relname
31989:  *
31990:  * Actually, just the WITH ... part, which is then inserted into the original
31991:  * view as the query.
31992:  * ----------
31993:  */
31994: static PGNode *
31995: makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
31996: {
31997: 	PGSelectStmt *s = makeNode(PGSelectStmt);
31998: 	PGWithClause *w = makeNode(PGWithClause);
31999: 	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
32000: 	PGList	   *tl = NIL;
32001: 	PGListCell   *lc;
32002: 
32003: 	/* create common table expression */
32004: 	cte->ctename = relname;
32005: 	cte->aliascolnames = aliases;
32006: 	cte->ctequery = query;
32007: 	cte->location = -1;
32008: 
32009: 	/* create WITH clause and attach CTE */
32010: 	w->recursive = true;
32011: 	w->ctes = list_make1(cte);
32012: 	w->location = -1;
32013: 
32014: 	/* create target list for the new SELECT from the alias list of the
32015: 	 * recursive view specification */
32016: 	foreach (lc, aliases)
32017: 	{
32018: 		PGResTarget *rt = makeNode(PGResTarget);
32019: 
32020: 		rt->name = NULL;
32021: 		rt->indirection = NIL;
32022: 		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
32023: 		rt->location = -1;
32024: 
32025: 		tl = lappend(tl, rt);
32026: 	}
32027: 
32028: 	/* create new SELECT combining WITH clause, target list, and fake FROM
32029: 	 * clause */
32030: 	s->withClause = w;
32031: 	s->targetList = tl;
32032: 	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));
32033: 
32034: 	return (PGNode *) s;
32035: }
32036: 
32037: /* parser_init()
32038:  * Initialize to parse one query string
32039:  */
32040: void
32041: parser_init(base_yy_extra_type *yyext)
32042: {
32043: 	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
32044: }
32045: 
32046: #undef yyparse
32047: #undef yylex
32048: #undef yyerror
32049: #undef yylval
32050: #undef yychar
32051: #undef yydebug
32052: #undef yynerrs
32053: #undef yylloc
32054: 
32055: } // namespace duckdb_libpgquery
32056: 
[end of third_party/libpg_query/src_backend_parser_gram.cpp]
</code>
Here is an example of a patch file. It consists of changes to the code base. It specifies the file names, the line numbers of each change, and the removed and added lines. A single patch file can contain changes to multiple files.
<patch>
--- a/file.cpp
+++ b/file.cpp
@@ -3,35 +3,44 @@
 #include <cstdlib>
 
 int euclidean(int a, int b) {
-    while (b) {
-        int temp = b;
-        b = a % b;
-        a = temp;
+    if (b == 0) {
+        return a;
     }
-    return a;
+    return euclidean(b, a % b);
 }
 
 std::vector<std::pair<int, int>> bresenham(int x0, int y0, int x1, int y1) {
     std::vector<std::pair<int, int>> points;
     int dx = abs(x1 - x0);
     int dy = abs(y1 - y0);
+    int x = x0, y = y0;
     int sx = (x0 < x1) ? 1 : -1;
     int sy = (y0 < y1) ? 1 : -1;
-    int err = dx - dy;
 
-    while (true) {
-        points.emplace_back(x0, y0);
-        if (x0 == x1 && y0 == y1) break;
-        int e2 = 2 * err;
-        if (e2 > -dy) {
+    if (dx > dy) {
+        int err = dx / 2;
+        while (x != x1) {
+            points.emplace_back(x, y);
             err -= dy;
-            x0 += sx;
+            if (err < 0) {
+                y += sy;
+                err += dx;
+            }
+            x += sx;
         }
-        if (e2 < dx) {
-            err += dx;
-            y0 += sy;
+    } else {
+        int err = dy / 2;
+        while (y != y1) {
+            points.emplace_back(x, y);
+            err -= dx;
+            if (err < 0) {
+                x += sx;
+                err += dy;
+            }
+            y += sy;
         }
     }
 
+    points.emplace_back(x, y);
     return points;
 }

</patch>

I need you to solve the provided issue by generating a single patch file that I can apply directly to this repository using git apply.
Please respond with a single patch file in the format shown above.
Make sure to only include the patch file contents so that the contents of your output can be copied into a patch file and applied directly

Respond below: