{
  "repo": "duckdb/duckdb",
  "pull_number": 634,
  "instance_id": "duckdb__duckdb-634",
  "issue_numbers": [
    "633"
  ],
  "base_commit": "0c760c40819aa716fb4430dbf12b2f73d28994fc",
  "patch": "diff --git a/.travis.yml b/.travis.yml\nindex 8f75f905d8d9..92e8e3afa33b 100644\n--- a/.travis.yml\n+++ b/.travis.yml\n@@ -355,35 +355,35 @@ matrix:\n         - $SCMD /duckdb/build/test/unittest \"~[copy]~[file_system]~[.]\"\n \n \n-    - os: linux\n-      dist: bionic\n-      name: OpenBSD VM\n-      if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\\d+\\.\\d+\\.\\d+$/\n-      sudo: true\n-\n-      install:\n-        - wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -\n-        - echo -e \"\\ndeb [arch=amd64] https://download.virtualbox.org/virtualbox/debian bionic contrib\\n\" | sudo tee -a /etc/apt/sources.list\n-        - sudo apt-get update > /dev/null\n-        - sudo apt-get install -y linux-headers-$(uname -r) virtualbox-5.2 rsync\n-        - wget -q \"https://homepages.cwi.nl/~hannes/86Cv27lf5353lJR/OpenBSD.ova\"\n-        - VBoxManage import OpenBSD.ova\n-        - rm OpenBSD.ova\n-        - VBoxManage modifyvm \"OpenBSD\" --usb off --usbehci off --usbxhci off --cpus 2 --hwvirtex on --memory 6114\n-        - VBoxManage startvm \"OpenBSD\" --type headless\n-        - echo -e \"-----BEGIN OPENSSH PRIVATE KEY-----\\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn\\nNhAAAAAwEAAQAAAQEA0I/POwsFY/l5DGvybl1amd9pqzP5ADPQGWupcNuKbSYq+sD4g5Jr\\nqZ0vG9sULeYlZZFHzdbUqzdbK9rMZZOUwUwHbxViS2UlhCo0onB9bbzm6kQ2gSBaXxa8SC\\nwllEdHq6c/kK50MZKVwqpBrxIJtGN08pNauhMPNMdniQZD5slkKrneTgGYnm30xNtkHStB\\nY/btURWNlVd8Qedx8gSEV5628cAeKJAPOn4nrCYvy7uMWBOYqrqZii38uxdrhnZKKKENcA\\ndUuFRdmFDK/0d+/0PeUYUacZm3HRU5F21440u51OdBMzBYe9AaQXQGrwKwY+YxlczlVh8g\\n9XMWYBzJ3wAAA9B959FqfefRagAAAAdzc2gtcnNhAAABAQDQj887CwVj+XkMa/JuXVqZ32\\nmrM/kAM9AZa6lw24ptJir6wPiDkmupnS8b2xQt5iVlkUfN1tSrN1sr2sxlk5TBTAdvFWJL\\nZSWEKjSicH1tvObqRDaBIFpfFrxILCWUR0erpz+QrnQxkpXCqkGvEgm0Y3Tyk1q6Ew80x2\\neJBkPmyWQqud5OAZiebfTE22QdK0Fj9u1RFY2VV3xB53HyBIRXnrbxwB4okA86fiesJi/L\\nu4xYE5iqupmKLfy7F2uGdkoooQ1wB1S4VF2YUMr/R37/Q95RhRpxmbcdFTkXbXjjS7nU50\\nEzMFh70BpBdAavArBj5jGVzOVWHyD1cxZgHMnfAAAAAwEAAQAAAQB6iVPfQ81p/MRDKRUq\\nBM1bhKkH/qQ4mziUBu5psYN2N6ue4kvgueFpqUFpY2FKymKEd0QxyxvucLqvXIEk2P3YR/\\nxCJtU2qPnO2iFMozz+gbNGRsejPEf8gFYlLVLy+KJCVySAtA7upUo6MmAfJUDwbFLkxvDS\\nTKptfw70seqpJ/CdUXqrd/YAfwqGO0ZgQC59MDTGS1rXViRbTEMOxbWg9TMmvWb36vJG8i\\nvSGimXL0gvhB7himZzK0z9tl8r3gHIHpiKy+67tzXyDdzXxpTJ7krBIwVgMgHwZpSy++c6\\n9e6ag9LH217gWSDX4C0tAnHhjc5QqlCBwZVe/n2Kyg3pAAAAgQC1zeKHT3XLt9NfBVjhfq\\nS3lMByGNCR90RS1vZe+wYVuChFCs7ztraWgMX9n7m3HvaGj+lqDPBD6mkoaYFCqKVr5GcH\\nq1fij2sZeEpymhOUjX/aWGr9kdnxkvpSzYt33OU7hQIv34ViSXuyiEVb/SYXxqmwaYhCbW\\noAlXqS57U3ZAAAAIEA58ImmEbbHDbA+mUZ1xugtb2heIQyVm+B1FtWtOY3B7LKgfgP5kaw\\nhhVAlOfpxSyn/aNWdokE6JsFU/Vs/eiEXmn253ofF0J2kQuVD8+0m+yUMkbDYbfyc9FPsR\\n1OS4cqjM8ET77EvLiqIHXO8aWr4eCOJxjDJLC0xVKOicgk/JUAAACBAOZghEZOuUgLjB1K\\nQ0kMX+CTNvyKB44eY24kbp22KI4hsEw4BwyqPvCyRZsx7EBGXdGO0giVc41T6WJxwLVCbW\\nmG1AC03KQ/lPXf/lzuwT4/N52hw+s4EmHlcPfoPyRFtbZuUyJqlhL4txWZdI31Ot0jxiQK\\nxePoxUuMva2261ujAAAAFWhhbm5lc0BoZXJiZXJ0Mi5sb2NhbAECAwQF\\n-----END OPENSSH PRIVATE KEY-----\\n\" > id_rsa_openbsd\n-        - chmod 400 id_rsa_openbsd\n-        - export SSHFLAGS=\"-o LogLevel=ERROR -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i id_rsa_openbsd\"\n-        - export SCMD=\"ssh $SSHFLAGS -p 2222 root@localhost\"\n-        - sleep 60\n-        - while ! $SCMD ls ; do sleep 30 ; done\n-        - $SCMD pkg_add gmake rsync-3.1.3\n-\n-      script:\n-        - python scripts/amalgamation.py > /dev/null\n-        - rsync -a -e \"ssh $SSHFLAGS -p 2222\" --exclude=.git --exclude=build --exclude=third_party/sqllogictest .  root@localhost:/home/duckdb\n-        - travis_wait 30 $SCMD 'rm -rf /home/duckdb/build && mkdir -p /home/duckdb/build && cd /home/duckdb/build && cmake -DCMAKE_BUILD_TYPE=Debug -DAMALGAMATION_BUILD=1 .. && gmake -j2'\n-        - $SCMD /home/duckdb/build/test/unittest \"~[copy]~[sqlitelogic]~[sqlserver]~[parquet]~[.]\"\n+    # - os: linux\n+    #   dist: bionic\n+    #   name: OpenBSD VM\n+    #   if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\\d+\\.\\d+\\.\\d+$/\n+    #   sudo: true\n+\n+    #   install:\n+    #     - wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -\n+    #     - echo -e \"\\ndeb [arch=amd64] https://download.virtualbox.org/virtualbox/debian bionic contrib\\n\" | sudo tee -a /etc/apt/sources.list\n+    #     - sudo apt-get update > /dev/null\n+    #     - sudo apt-get install -y linux-headers-$(uname -r) virtualbox-5.2 rsync\n+    #     - wget -q \"https://homepages.cwi.nl/~hannes/86Cv27lf5353lJR/OpenBSD.ova\"\n+    #     - VBoxManage import OpenBSD.ova\n+    #     - rm OpenBSD.ova\n+    #     - VBoxManage modifyvm \"OpenBSD\" --usb off --usbehci off --usbxhci off --cpus 2 --hwvirtex on --memory 6114\n+    #     - VBoxManage startvm \"OpenBSD\" --type headless\n+    #     - echo -e \"-----BEGIN OPENSSH PRIVATE KEY-----\\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn\\nNhAAAAAwEAAQAAAQEA0I/POwsFY/l5DGvybl1amd9pqzP5ADPQGWupcNuKbSYq+sD4g5Jr\\nqZ0vG9sULeYlZZFHzdbUqzdbK9rMZZOUwUwHbxViS2UlhCo0onB9bbzm6kQ2gSBaXxa8SC\\nwllEdHq6c/kK50MZKVwqpBrxIJtGN08pNauhMPNMdniQZD5slkKrneTgGYnm30xNtkHStB\\nY/btURWNlVd8Qedx8gSEV5628cAeKJAPOn4nrCYvy7uMWBOYqrqZii38uxdrhnZKKKENcA\\ndUuFRdmFDK/0d+/0PeUYUacZm3HRU5F21440u51OdBMzBYe9AaQXQGrwKwY+YxlczlVh8g\\n9XMWYBzJ3wAAA9B959FqfefRagAAAAdzc2gtcnNhAAABAQDQj887CwVj+XkMa/JuXVqZ32\\nmrM/kAM9AZa6lw24ptJir6wPiDkmupnS8b2xQt5iVlkUfN1tSrN1sr2sxlk5TBTAdvFWJL\\nZSWEKjSicH1tvObqRDaBIFpfFrxILCWUR0erpz+QrnQxkpXCqkGvEgm0Y3Tyk1q6Ew80x2\\neJBkPmyWQqud5OAZiebfTE22QdK0Fj9u1RFY2VV3xB53HyBIRXnrbxwB4okA86fiesJi/L\\nu4xYE5iqupmKLfy7F2uGdkoooQ1wB1S4VF2YUMr/R37/Q95RhRpxmbcdFTkXbXjjS7nU50\\nEzMFh70BpBdAavArBj5jGVzOVWHyD1cxZgHMnfAAAAAwEAAQAAAQB6iVPfQ81p/MRDKRUq\\nBM1bhKkH/qQ4mziUBu5psYN2N6ue4kvgueFpqUFpY2FKymKEd0QxyxvucLqvXIEk2P3YR/\\nxCJtU2qPnO2iFMozz+gbNGRsejPEf8gFYlLVLy+KJCVySAtA7upUo6MmAfJUDwbFLkxvDS\\nTKptfw70seqpJ/CdUXqrd/YAfwqGO0ZgQC59MDTGS1rXViRbTEMOxbWg9TMmvWb36vJG8i\\nvSGimXL0gvhB7himZzK0z9tl8r3gHIHpiKy+67tzXyDdzXxpTJ7krBIwVgMgHwZpSy++c6\\n9e6ag9LH217gWSDX4C0tAnHhjc5QqlCBwZVe/n2Kyg3pAAAAgQC1zeKHT3XLt9NfBVjhfq\\nS3lMByGNCR90RS1vZe+wYVuChFCs7ztraWgMX9n7m3HvaGj+lqDPBD6mkoaYFCqKVr5GcH\\nq1fij2sZeEpymhOUjX/aWGr9kdnxkvpSzYt33OU7hQIv34ViSXuyiEVb/SYXxqmwaYhCbW\\noAlXqS57U3ZAAAAIEA58ImmEbbHDbA+mUZ1xugtb2heIQyVm+B1FtWtOY3B7LKgfgP5kaw\\nhhVAlOfpxSyn/aNWdokE6JsFU/Vs/eiEXmn253ofF0J2kQuVD8+0m+yUMkbDYbfyc9FPsR\\n1OS4cqjM8ET77EvLiqIHXO8aWr4eCOJxjDJLC0xVKOicgk/JUAAACBAOZghEZOuUgLjB1K\\nQ0kMX+CTNvyKB44eY24kbp22KI4hsEw4BwyqPvCyRZsx7EBGXdGO0giVc41T6WJxwLVCbW\\nmG1AC03KQ/lPXf/lzuwT4/N52hw+s4EmHlcPfoPyRFtbZuUyJqlhL4txWZdI31Ot0jxiQK\\nxePoxUuMva2261ujAAAAFWhhbm5lc0BoZXJiZXJ0Mi5sb2NhbAECAwQF\\n-----END OPENSSH PRIVATE KEY-----\\n\" > id_rsa_openbsd\n+    #     - chmod 400 id_rsa_openbsd\n+    #     - export SSHFLAGS=\"-o LogLevel=ERROR -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i id_rsa_openbsd\"\n+    #     - export SCMD=\"ssh $SSHFLAGS -p 2222 root@localhost\"\n+    #     - sleep 60\n+    #     - while ! $SCMD ls ; do sleep 30 ; done\n+    #     - $SCMD pkg_add gmake rsync-3.1.3\n+\n+    #   script:\n+    #     - python scripts/amalgamation.py > /dev/null\n+    #     - rsync -a -e \"ssh $SSHFLAGS -p 2222\" --exclude=.git --exclude=build --exclude=third_party/sqllogictest .  root@localhost:/home/duckdb\n+    #     - travis_wait 30 $SCMD 'rm -rf /home/duckdb/build && mkdir -p /home/duckdb/build && cd /home/duckdb/build && cmake -DCMAKE_BUILD_TYPE=Debug -DAMALGAMATION_BUILD=1 .. && gmake -j2'\n+    #     - $SCMD /home/duckdb/build/test/unittest \"~[copy]~[sqlitelogic]~[sqlserver]~[parquet]~[.]\"\n \n \n # APIs: REST, r / python packages\ndiff --git a/src/function/scalar/string/left_right.cpp b/src/function/scalar/string/left_right.cpp\nindex a037f574f064..5ac2731245b1 100644\n--- a/src/function/scalar/string/left_right.cpp\n+++ b/src/function/scalar/string/left_right.cpp\n@@ -26,7 +26,7 @@ static void left_function(DataChunk &args, ExpressionState &state, Vector &resul\n \tidx_t current_len = 0;\n \tunique_ptr<char[]> output;\n \n-\tBinaryExecutor::Execute<string_t, int64_t, string_t>(\n+\tBinaryExecutor::Execute<string_t, int64_t, string_t, true>(\n \t    str_vec, pos_vec, result, args.size(),\n \t    [&](string_t str, int64_t pos) { return left_scalar_function(result, str, pos, output, current_len); });\n }\n@@ -56,7 +56,7 @@ static void right_function(DataChunk &args, ExpressionState &state, Vector &resu\n \tidx_t current_len = 0;\n \tunique_ptr<char[]> output;\n \n-\tBinaryExecutor::Execute<string_t, int64_t, string_t>(\n+\tBinaryExecutor::Execute<string_t, int64_t, string_t, true>(\n \t    str_vec, pos_vec, result, args.size(),\n \t    [&](string_t str, int64_t pos) { return right_scalar_function(result, str, pos, output, current_len); });\n }\n",
  "test_patch": "diff --git a/test/rigger/test_rigger.cpp b/test/rigger/test_rigger.cpp\nindex 18f1be727a28..f34e5471e963 100644\n--- a/test/rigger/test_rigger.cpp\n+++ b/test/rigger/test_rigger.cpp\n@@ -729,4 +729,18 @@ TEST_CASE(\"Tests found by Rigger\", \"[rigger]\") {\n \t\tREQUIRE_NO_FAIL(con.Query(\"CREATE TABLE t0(c0 INT);\"));\n \t\tREQUIRE_NO_FAIL(con.Query(\"ALTER TABLE t0 ALTER c0 TYPE VARCHAR USING ''; \"));\n \t}\n+\tSECTION(\"629\") {\n+\t\t// ALTER TYPE with USING results in an assertion failure \"types.size() > 0\"\n+\t\tREQUIRE_NO_FAIL(con.Query(\"CREATE TABLE t0(c0 INT);\"));\n+\t\tREQUIRE_NO_FAIL(con.Query(\"ALTER TABLE t0 ALTER c0 TYPE VARCHAR USING ''; \"));\n+\t}\n+\tSECTION(\"633\") {\n+\t\t// Query using LEFT() results in a segmentation fault\n+\t\tREQUIRE_NO_FAIL(con.Query(\"CREATE TABLE t0(c0 BOOL);\"));\n+\t\tREQUIRE_NO_FAIL(con.Query(\"INSERT INTO t0(c0) VALUES (NULL);\"));\n+\t\tresult = con.Query(\"SELECT LEFT(t0.c0, -1) FROM t0;\");\n+\t\tREQUIRE(CHECK_COLUMN(result, 0, {Value()}));\n+\t\tresult = con.Query(\"SELECT RIGHT(t0.c0, -1) FROM t0;\");\n+\t\tREQUIRE(CHECK_COLUMN(result, 0, {Value()}));\n+\t}\n }\n",
  "problem_statement": "Query using LEFT() results in a segmentation fault\nConsider the following statements:\r\n\r\n```sql\r\nCREATE TABLE t0(c0 BOOL);\r\nINSERT INTO t0(c0) VALUES (NULL);\r\nSELECT * FROM t0 WHERE LEFT(t0.c0, -1); -- Segmentation fault\r\n```\r\nThe `SELECT` results in a segmentation fault in some executions. To reproduce this, I have to repeatedly execute all three statements without dropping the table in between for about 10 times. The statements also trigger a ASan error:\r\n```\r\n==13696==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5648f4cf9bbc bp 0x7fff0033acf0 sp 0x7fff0033abc0 T0)\r\n==13696==The signal is caused by a READ memory access.\r\n==13696==Hint: address points to the zero page.\r\n    #0 0x5648f4cf9bbb in long duckdb::LengthFun::Length<duckdb::string_t, long>(duckdb::string_t) /src/include/duckdb/function/scalar/string_functions.hpp:53\r\n    #1 0x5648f4cd3245 in left_scalar_function /src/function/scalar/string/left_right.cpp:17\r\n    #2 0x5648f4cd3554 in operator() /src/function/scalar/string/left_right.cpp:31\r\n    #3 0x5648f4cf289a in Operation<duckdb::left_function(duckdb::DataChunk&, duckdb::ExpressionState&, duckdb::Vector&)::<lambda(duckdb::string_t, int64_t)>, bool, duckdb::string_t, long int, duckdb::string_t> /src/include/duckdb/common/vector_operations/binary_executor.hpp:41\r\n    #4 0x5648f4cf2b9e in ExecuteFlatLoop<duckdb::string_t, long int, duckdb::string_t, duckdb::BinaryLambdaWrapper, bool, duckdb::left_function(duckdb::DataChunk&, duckdb::ExpressionState&, duckdb::Vector&)::<lambda(duckdb::string_t, int64_t)>, false, false, true> /src/include/duckdb/common/vector_operations/binary_executor.hpp:70\r\n    #5 0x5648f4ce8663 in ExecuteFlat<duckdb::string_t, long int, duckdb::string_t, duckdb::BinaryLambdaWrapper, bool, duckdb::left_function(duckdb::DataChunk&, duckdb::ExpressionState&, duckdb::Vector&)::<lambda(duckdb::string_t, int64_t)>, false, false, true> /src/include/duckdb/common/vector_operations/binary_executor.hpp:116\r\n    #6 0x5648f4ce0ef0 in ExecuteSwitch<duckdb::string_t, long int, duckdb::string_t, duckdb::BinaryLambdaWrapper, bool, duckdb::left_function(duckdb::DataChunk&, duckdb::ExpressionState&, duckdb::Vector&)::<lambda(duckdb::string_t, int64_t)>, false> /src/include/duckdb/common/vector_operations/binary_executor.hpp:170\r\n    #7 0x5648f4cdbb12 in Execute<duckdb::string_t, long int, duckdb::string_t> /src/include/duckdb/common/vector_operations/binary_executor.hpp:188\r\n    #8 0x5648f4cd3836 in left_function /src/function/scalar/string/left_right.cpp:29\r\n    #9 0x5648f499d03f in duckdb::ExpressionExecutor::Execute(duckdb::BoundFunctionExpression&, duckdb::ExpressionState*, duckdb::SelectionVector const*, unsigned long, duckdb::Vector&) /src/execution/expression_executor/execute_function.cpp:45\r\n    #10 0x5648f44aaccc in duckdb::ExpressionExecutor::Execute(duckdb::Expression&, duckdb::ExpressionState*, duckdb::SelectionVector const*, unsigned long, duckdb::Vector&) /src/execution/expression_executor.cpp:146\r\n    #11 0x5648f4999a61 in duckdb::ExpressionExecutor::Execute(duckdb::BoundCastExpression&, duckdb::ExpressionState*, duckdb::SelectionVector const*, unsigned long, duckdb::Vector&) /src/execution/expression_executor/execute_cast.cpp:21\r\n    #12 0x5648f44aabd8 in duckdb::ExpressionExecutor::Execute(duckdb::Expression&, duckdb::ExpressionState*, duckdb::SelectionVector const*, unsigned long, duckdb::Vector&) /src/execution/expression_executor.cpp:134\r\n    #13 0x5648f44ab23c in duckdb::ExpressionExecutor::DefaultSelect(duckdb::Expression&, duckdb::ExpressionState*, duckdb::SelectionVector const*, unsigned long, duckdb::SelectionVector*, duckdb::SelectionVector*) /src/execution/expression_executor.cpp:227\r\n    #14 0x5648f44ab0f3 in duckdb::ExpressionExecutor::Select(duckdb::Expression&, duckdb::ExpressionState*, duckdb::SelectionVector const*, unsigned long, duckdb::SelectionVector*, duckdb::SelectionVector*) /src/execution/expression_executor.cpp:175\r\n    #15 0x5648f44a9d10 in duckdb::ExpressionExecutor::SelectExpression(duckdb::DataChunk&, duckdb::SelectionVector&) /src/execution/expression_executor.cpp:60\r\n    #16 0x5648f4d581a1 in duckdb::PhysicalFilter::GetChunkInternal(duckdb::ClientContext&, duckdb::DataChunk&, duckdb::PhysicalOperatorState*) /src/execution/operator/filter/physical_filter.cpp:44\r\n    #17 0x5648f44b587b in duckdb::PhysicalOperator::GetChunk(duckdb::ClientContext&, duckdb::DataChunk&, duckdb::PhysicalOperatorState*) /src/execution/physical_operator.cpp:45\r\n    #18 0x5648f4d9b904 in duckdb::PhysicalProjection::GetChunkInternal(duckdb::ClientContext&, duckdb::DataChunk&, duckdb::PhysicalOperatorState*) /src/execution/operator/projection/physical_projection.cpp:22\r\n    #19 0x5648f44b587b in duckdb::PhysicalOperator::GetChunk(duckdb::ClientContext&, duckdb::DataChunk&, duckdb::PhysicalOperatorState*) /src/execution/physical_operator.cpp:45\r\n    #20 0x5648f4d58fa6 in duckdb::PhysicalExecute::GetChunkInternal(duckdb::ClientContext&, duckdb::DataChunk&, duckdb::PhysicalOperatorState*) /src/execution/operator/helper/physical_execute.cpp:8\r\n    #21 0x5648f44b587b in duckdb::PhysicalOperator::GetChunk(duckdb::ClientContext&, duckdb::DataChunk&, duckdb::PhysicalOperatorState*) /src/execution/physical_operator.cpp:45\r\n    #22 0x5648f45034fd in duckdb::ClientContext::FetchInternal() /src/main/client_context.cpp:153\r\n    #23 0x5648f4504d98 in duckdb::ClientContext::ExecutePreparedStatement(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, duckdb::PreparedStatementData&, std::vector<duckdb::Value, std::allocator<duckdb::Value> >, bool) /src/main/client_context.cpp:232\r\n    #24 0x5648f4507751 in duckdb::ClientContext::RunStatementInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<duckdb::SQLStatement, std::default_delete<duckdb::SQLStatement> >, bool) /src/main/client_context.cpp:340\r\n    #25 0x5648f45080d7 in duckdb::ClientContext::RunStatement(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<duckdb::SQLStatement, std::default_delete<duckdb::SQLStatement> >, bool) /src/main/client_context.cpp:367\r\n    #26 0x5648f4506b49 in duckdb::ClientContext::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<duckdb::Value, std::allocator<duckdb::Value> >&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) /src/main/client_context.cpp:311\r\n    #27 0x5648f452042b in duckdb::PreparedStatement::Execute(std::vector<duckdb::Value, std::allocator<duckdb::Value> >&, bool) /src/main/prepared_statement.cpp:37\r\n    #28 0x5648f41cd810 in sqlite3_step /tools/sqlite3_api_wrapper/sqlite3_api_wrapper.cpp:195\r\n    #29 0x5648f41a71d7 in exec_prepared_stmt /tools/shell/shell.c:9899\r\n    #30 0x5648f41a8fb7 in shell_exec /tools/shell/shell.c:10187\r\n    #31 0x5648f41c239d in runOneSqlLine /tools/shell/shell.c:15047\r\n    #32 0x5648f41c2cd7 in process_input /tools/shell/shell.c:15149\r\n    #33 0x5648f41c53e4 in main /tools/shell/shell.c:15817\r\n    #34 0x7f25cb1feb6a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26b6a)\r\n    #35 0x5648f41827c9 in _start (/build/debug/duckdb_cli+0x92d7c9)\r\n```\r\nI found this based on commit dd173f20ab614ad89a45902bdb19d5357b51058e.\n",
  "hints_text": "",
  "created_at": "2020-05-06T21:05:54Z"
}