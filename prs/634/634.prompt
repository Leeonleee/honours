You will be provided with a partial code base and an issue statement explaining a problem to resolve.
In your output, give nothing but the code (no markdown) so that your output can be copy pasted and run immediately with no changes

<issue>
Query using LEFT() results in a segmentation fault
Consider the following statements:

```sql
CREATE TABLE t0(c0 BOOL);
INSERT INTO t0(c0) VALUES (NULL);
SELECT * FROM t0 WHERE LEFT(t0.c0, -1); -- Segmentation fault
```
The `SELECT` results in a segmentation fault in some executions. To reproduce this, I have to repeatedly execute all three statements without dropping the table in between for about 10 times. The statements also trigger a ASan error:
```
==13696==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5648f4cf9bbc bp 0x7fff0033acf0 sp 0x7fff0033abc0 T0)
==13696==The signal is caused by a READ memory access.
==13696==Hint: address points to the zero page.
    #0 0x5648f4cf9bbb in long duckdb::LengthFun::Length<duckdb::string_t, long>(duckdb::string_t) /src/include/duckdb/function/scalar/string_functions.hpp:53
    #1 0x5648f4cd3245 in left_scalar_function /src/function/scalar/string/left_right.cpp:17
    #2 0x5648f4cd3554 in operator() /src/function/scalar/string/left_right.cpp:31
    #3 0x5648f4cf289a in Operation<duckdb::left_function(duckdb::DataChunk&, duckdb::ExpressionState&, duckdb::Vector&)::<lambda(duckdb::string_t, int64_t)>, bool, duckdb::string_t, long int, duckdb::string_t> /src/include/duckdb/common/vector_operations/binary_executor.hpp:41
    #4 0x5648f4cf2b9e in ExecuteFlatLoop<duckdb::string_t, long int, duckdb::string_t, duckdb::BinaryLambdaWrapper, bool, duckdb::left_function(duckdb::DataChunk&, duckdb::ExpressionState&, duckdb::Vector&)::<lambda(duckdb::string_t, int64_t)>, false, false, true> /src/include/duckdb/common/vector_operations/binary_executor.hpp:70
    #5 0x5648f4ce8663 in ExecuteFlat<duckdb::string_t, long int, duckdb::string_t, duckdb::BinaryLambdaWrapper, bool, duckdb::left_function(duckdb::DataChunk&, duckdb::ExpressionState&, duckdb::Vector&)::<lambda(duckdb::string_t, int64_t)>, false, false, true> /src/include/duckdb/common/vector_operations/binary_executor.hpp:116
    #6 0x5648f4ce0ef0 in ExecuteSwitch<duckdb::string_t, long int, duckdb::string_t, duckdb::BinaryLambdaWrapper, bool, duckdb::left_function(duckdb::DataChunk&, duckdb::ExpressionState&, duckdb::Vector&)::<lambda(duckdb::string_t, int64_t)>, false> /src/include/duckdb/common/vector_operations/binary_executor.hpp:170
    #7 0x5648f4cdbb12 in Execute<duckdb::string_t, long int, duckdb::string_t> /src/include/duckdb/common/vector_operations/binary_executor.hpp:188
    #8 0x5648f4cd3836 in left_function /src/function/scalar/string/left_right.cpp:29
    #9 0x5648f499d03f in duckdb::ExpressionExecutor::Execute(duckdb::BoundFunctionExpression&, duckdb::ExpressionState*, duckdb::SelectionVector const*, unsigned long, duckdb::Vector&) /src/execution/expression_executor/execute_function.cpp:45
    #10 0x5648f44aaccc in duckdb::ExpressionExecutor::Execute(duckdb::Expression&, duckdb::ExpressionState*, duckdb::SelectionVector const*, unsigned long, duckdb::Vector&) /src/execution/expression_executor.cpp:146
    #11 0x5648f4999a61 in duckdb::ExpressionExecutor::Execute(duckdb::BoundCastExpression&, duckdb::ExpressionState*, duckdb::SelectionVector const*, unsigned long, duckdb::Vector&) /src/execution/expression_executor/execute_cast.cpp:21
    #12 0x5648f44aabd8 in duckdb::ExpressionExecutor::Execute(duckdb::Expression&, duckdb::ExpressionState*, duckdb::SelectionVector const*, unsigned long, duckdb::Vector&) /src/execution/expression_executor.cpp:134
    #13 0x5648f44ab23c in duckdb::ExpressionExecutor::DefaultSelect(duckdb::Expression&, duckdb::ExpressionState*, duckdb::SelectionVector const*, unsigned long, duckdb::SelectionVector*, duckdb::SelectionVector*) /src/execution/expression_executor.cpp:227
    #14 0x5648f44ab0f3 in duckdb::ExpressionExecutor::Select(duckdb::Expression&, duckdb::ExpressionState*, duckdb::SelectionVector const*, unsigned long, duckdb::SelectionVector*, duckdb::SelectionVector*) /src/execution/expression_executor.cpp:175
    #15 0x5648f44a9d10 in duckdb::ExpressionExecutor::SelectExpression(duckdb::DataChunk&, duckdb::SelectionVector&) /src/execution/expression_executor.cpp:60
    #16 0x5648f4d581a1 in duckdb::PhysicalFilter::GetChunkInternal(duckdb::ClientContext&, duckdb::DataChunk&, duckdb::PhysicalOperatorState*) /src/execution/operator/filter/physical_filter.cpp:44
    #17 0x5648f44b587b in duckdb::PhysicalOperator::GetChunk(duckdb::ClientContext&, duckdb::DataChunk&, duckdb::PhysicalOperatorState*) /src/execution/physical_operator.cpp:45
    #18 0x5648f4d9b904 in duckdb::PhysicalProjection::GetChunkInternal(duckdb::ClientContext&, duckdb::DataChunk&, duckdb::PhysicalOperatorState*) /src/execution/operator/projection/physical_projection.cpp:22
    #19 0x5648f44b587b in duckdb::PhysicalOperator::GetChunk(duckdb::ClientContext&, duckdb::DataChunk&, duckdb::PhysicalOperatorState*) /src/execution/physical_operator.cpp:45
    #20 0x5648f4d58fa6 in duckdb::PhysicalExecute::GetChunkInternal(duckdb::ClientContext&, duckdb::DataChunk&, duckdb::PhysicalOperatorState*) /src/execution/operator/helper/physical_execute.cpp:8
    #21 0x5648f44b587b in duckdb::PhysicalOperator::GetChunk(duckdb::ClientContext&, duckdb::DataChunk&, duckdb::PhysicalOperatorState*) /src/execution/physical_operator.cpp:45
    #22 0x5648f45034fd in duckdb::ClientContext::FetchInternal() /src/main/client_context.cpp:153
    #23 0x5648f4504d98 in duckdb::ClientContext::ExecutePreparedStatement(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, duckdb::PreparedStatementData&, std::vector<duckdb::Value, std::allocator<duckdb::Value> >, bool) /src/main/client_context.cpp:232
    #24 0x5648f4507751 in duckdb::ClientContext::RunStatementInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<duckdb::SQLStatement, std::default_delete<duckdb::SQLStatement> >, bool) /src/main/client_context.cpp:340
    #25 0x5648f45080d7 in duckdb::ClientContext::RunStatement(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<duckdb::SQLStatement, std::default_delete<duckdb::SQLStatement> >, bool) /src/main/client_context.cpp:367
    #26 0x5648f4506b49 in duckdb::ClientContext::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<duckdb::Value, std::allocator<duckdb::Value> >&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) /src/main/client_context.cpp:311
    #27 0x5648f452042b in duckdb::PreparedStatement::Execute(std::vector<duckdb::Value, std::allocator<duckdb::Value> >&, bool) /src/main/prepared_statement.cpp:37
    #28 0x5648f41cd810 in sqlite3_step /tools/sqlite3_api_wrapper/sqlite3_api_wrapper.cpp:195
    #29 0x5648f41a71d7 in exec_prepared_stmt /tools/shell/shell.c:9899
    #30 0x5648f41a8fb7 in shell_exec /tools/shell/shell.c:10187
    #31 0x5648f41c239d in runOneSqlLine /tools/shell/shell.c:15047
    #32 0x5648f41c2cd7 in process_input /tools/shell/shell.c:15149
    #33 0x5648f41c53e4 in main /tools/shell/shell.c:15817
    #34 0x7f25cb1feb6a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x26b6a)
    #35 0x5648f41827c9 in _start (/build/debug/duckdb_cli+0x92d7c9)
```
I found this based on commit dd173f20ab614ad89a45902bdb19d5357b51058e.

</issue>
<code>
[start of README.md]
1: <img align="left" src="logo/duckdb-logo.png" height="120">
2: 
3: # DuckDB, the SQLite for Analytics
4: [![Travis](https://api.travis-ci.org/cwida/duckdb.svg?branch=master)](https://travis-ci.org/cwida/duckdb)
5: [![CodeFactor](https://www.codefactor.io/repository/github/cwida/duckdb/badge)](https://www.codefactor.io/repository/github/cwida/duckdb)
6: [![Coverage Status](https://coveralls.io/repos/github/cwida/duckdb/badge.svg?branch=master)](https://coveralls.io/github/cwida/duckdb?branch=master)
7: 
8: <br>
9: 
10: 
11: # Requirements
12: DuckDB requires [CMake](https://cmake.org) to be installed and a `C++11` compliant compiler. GCC 4.9 and newer, Clang 3.9 and newer and VisualStudio 2017 are tested on each revision.
13: 
14: ## Compiling
15: Run `make` in the root directory to compile the sources. For development, use `make debug` to build a non-optimized debug version. You may run `make unit` and `make allunit` to verify that your version works properly after making changes.
16: 
17: # Usage
18: A command line utility based on `sqlite3` can be found in either `build/release/duckdb_cli` (release, the default) or `build/debug/duckdb_cli` (debug).
19: 
20: # Embedding
21: As DuckDB is an embedded database, there is no database server to launch or client to connect to a running server. However, the database server can be embedded directly into an application using the C or C++ bindings. The main build process creates the shared library `build/release/src/libduckdb.[so|dylib|dll]` that can be linked against. A static library is built as well.
22: 
23: For examples on how to embed DuckDB into your application, see the [examples](https://github.com/cwida/duckdb/tree/master/examples) folder.
24: 
25: ## Benchmarks
26: After compiling, benchmarks can be executed from the root directory by executing `./build/release/benchmark/benchmark_runner`.
27: 
28: ## Standing on the Shoulders of Giants
29: DuckDB is implemented in C++ 11, should compile with GCC and clang, uses CMake to build and [Catch2](https://github.com/catchorg/Catch2) for testing. DuckDB uses some components from various Open-Source databases and draws inspiration from scientific publications. Here is an overview:
30: 
31: * Parser: We use the PostgreSQL parser that was [repackaged as a stand-alone library](https://github.com/lfittl/libpg_query). The translation to our own parse tree is inspired by [Peloton](https://pelotondb.io).
32: * Shell: We have adapted the [SQLite shell](https://sqlite.org/cli.html) to work with DuckDB.
33: * Tests: We use the [SQL Logic Tests from SQLite](https://www.sqlite.org/sqllogictest/doc/trunk/about.wiki) to test DuckDB.
34: * Query fuzzing: We use [SQLsmith](https://github.com/anse1/sqlsmith) to generate random queries for additional testing.
35: * Date Math: We use the date math component from [MonetDB](https://www.monetdb.org).
36: * SQL Window Functions: DuckDB's window functions implementation uses Segment Tree Aggregation as described in the paper "Efficient Processing of Window Functions in Analytical SQL Queries" by Viktor Leis, Kan Kundhikanjana, Alfons Kemper and Thomas Neumann.
37: * Execution engine: The vectorized execution engine is inspired by the paper "MonetDB/X100: Hyper-Pipelining Query Execution" by Peter Boncz, Marcin Zukowski and Niels Nes.
38: * Optimizer: DuckDB's optimizer draws inspiration from the papers "Dynamic programming strikes back" by Guido Moerkotte and Thomas Neumman as well as "Unnesting Arbitrary Queries" by Thomas Neumann and Alfons Kemper.
39: * Concurrency control: Our MVCC implementation is inspired by the paper "Fast Serializable Multi-Version Concurrency Control for Main-Memory Database Systems" by Thomas Neumann, Tobias Mühlbauer and Alfons Kemper.
40: * Regular Expression: DuckDB uses Google's [RE2](https://github.com/google/re2) regular expression engine.
41: 
42: ## Other pages
43: * [Continuous Benchmarking (CB™)](https://www.duckdb.org/benchmarks/index.html), runs TPC-H, TPC-DS and some microbenchmarks on every commit
[end of README.md]
[start of .travis.yml]
1: language: cpp
2: script: make unit
3: dist: trusty
4: 
5: before_install:
6:   - eval "${MATRIX_EVAL}"
7: 
8: env:
9:   global:
10:     - CIBW_BUILD='cp37-* cp27-*'
11:     - CIBW_TEST_REQUIRES='pytest'
12:     - CIBW_BEFORE_BUILD='pip install "numpy>=1.16" && pip install "pandas>=0.24" && pip install "pytest>=4.3" && pip install "cmake==3.13.3" && pip install "pybind11>=2.4"'
13:     - CIBW_TEST_COMMAND='python -m pytest {project}/tests'
14: 
15: 
16: matrix:
17:   include:
18: 
19:     - os: linux
20:       dist: bionic
21:       name: GCC 9
22:       python: 3.7
23: 
24:       addons:
25:         apt:
26:           sources:
27:             - sourceline: 'ppa:ubuntu-toolchain-r/test'
28:             - sourceline: 'ppa:deadsnakes/ppa'
29:           packages:
30:             - g++-9 python3.7
31:       env:
32:         - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
33:       before_install:
34:         - eval "${MATRIX_EVAL}"
35:         - pip install --user boto3
36:       script:
37:         - mkdir -p build/release
38:         - (cd build/release && cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_ICU_EXTENSION=1 -DJDBC_DRIVER=1 ../.. && cmake --build .)
39:         - build/release/test/unittest "*"
40:         - python3.7 tools/shell/shell-test.py build/release/duckdb_cli
41:         - (cd examples/embedded-c; make)
42:         - (cd examples/embedded-c++; make)
43:         - (cd examples/programmatic-querying; make)
44:         - java -cp build/release/tools/jdbc/DuckDBJ.jar nl.cwi.da.duckdb.test.TestDuckDBJDBC
45:         - build/release/extension/icu/test/icu_test
46: 
47:       after_success:
48:         - python tools/upload-s3.py lib-linux-amd64 build/release/src/libduckdb*.so build/release/src/libduckdb*.a build/release/duckdb_cli build/release/tools/jdbc/DuckDBJ.jar
49: 
50:     - os: osx
51:       name: Xcode 11.3
52: 
53:       osx_image: xcode11.3
54: 
55:       before_install:
56:         - curl https://bootstrap.pypa.io/get-pip.py -o /tmp/get-pip.py
57:         - python3 /tmp/get-pip.py
58:         - python3 -m pip install --user boto3
59: 
60:       script:
61:         - (mkdir -p build/release && cd build/release && cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_ICU_EXTENSION=1 -DJDBC_DRIVER=1 ../.. && cmake --build .)
62:         - build/release/test/unittest
63:         - python3 tools/shell/shell-test.py build/release/duckdb_cli
64:         - java -cp build/release/tools/jdbc/DuckDBJ.jar nl.cwi.da.duckdb.test.TestDuckDBJDBC
65:         - build/release/extension/icu/test/icu_test
66: 
67:       after_success:
68:         - python3 tools/upload-s3.py lib-osx build/release/src/libduckdb.dylib build/release/src/libduckdb_static.a build/release/duckdb_cli build/release/tools/jdbc/DuckDBJ.jar
69: 
70: 
71:     - os: windows
72:       name: VS 2017
73:       filter_secrets: false
74: 
75:       language: c
76: 
77:       before_script:
78:         - choco install python3 --version 3.7.3 -y --params "/InstallDir:C:\Python37-x64"
79:         - choco install jdk8 --version 8.0.211 -y --force
80: 
81:       script:
82:         - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_GENERATOR_PLATFORM=x64 -DJDBC_DRIVER=1 -DBUILD_ICU_EXTENSION=1
83:         - cmake --build . --target duckdb --config Release
84:         - cmake --build . --target unittest --config Release
85:         - cmake --build . --target shell --config Release
86:         - cmake --build . --target jdbc --config Release
87:         - cmake --build . --target icu_test --config Release
88:         - test/Release/unittest.exe
89:         - C:/Python37-x64/python.exe tools/shell/shell-test.py Release/duckdb_cli.exe
90:         - C:/Program\ Files/Java/jdk1.8.0_211/bin/java -cp tools/jdbc/DuckDBJ.jar nl.cwi.da.duckdb.test.TestDuckDBJDBC
91:         - extension/icu/test/Release/icu_test.exe
92: 
93:       after_success:
94:         - C:/Python37-x64/python.exe tools/upload-s3.py lib-windows-amd64 src/Release/duckdb.dll Release/duckdb_cli.exe tools/jdbc/DuckDBJ.jar
95: 
96: 
97: # checks: debug mode (with sanitizers), coveralls, valgrind, vector sizes
98: 
99:     - os: linux
100:       dist: xenial
101:       name: GCC 9 Debug
102: 
103:       addons:
104:         apt:
105:           sources:
106:             - ubuntu-toolchain-r-test
107:           packages:
108:             - g++-9
109:       env:
110:         - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
111:         - TREAT_WARNINGS_AS_ERRORS=1
112: 
113:     - os: osx
114:       name: Xcode 11.3 Debug
115:       if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
116: 
117:       osx_image: xcode11.3
118: 
119: 
120:     - os: linux
121:       dist: xenial
122:       name: Code Coverage
123:       if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
124: 
125:       addons:
126:         apt:
127:           sources:
128:             - ubuntu-toolchain-r-test
129: 
130:       before_install:
131:         - pip install --user cpp-coveralls
132: 
133:       script:
134:         - mkdir -p build/coverage
135:         - (cd build/coverage && cmake -E env CXXFLAGS="--coverage" cmake -DCMAKE_BUILD_TYPE=Debug ../.. && make)
136:         - build/coverage/test/unittest
137: 
138:       after_success:
139:         - coveralls -b build/coverage -E '.*CMakeCXXCompilerId.cpp' --exclude tools --exclude benchmark --exclude examples --exclude third_party --exclude test --exclude src/common/enums --exclude src/parser/transform/helpers/nodetype_to_string.cpp --exclude build/coverage/third_party/libpg_query/grammar --gcov-options '\-lp'
140: 
141: 
142:     - os: linux
143:       dist: bionic
144:       name: Valgrind
145:       if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
146: 
147:       addons:
148:         apt:
149:           sources:
150:             - ubuntu-toolchain-r-test
151:           packages:
152:             - valgrind
153: 
154:       script:
155:         - mkdir -p build/debug
156:         - (cd build/debug && cmake -DCMAKE_BUILD_TYPE=Debug -DENABLE_SANITIZER=FALSE ../.. && cmake --build .)
157:         - valgrind ./build/debug/test/unittest -s "Test TPC-H SF0.01"
158: 
159: 
160:     - os: linux
161:       dist: bionic
162:       name: GCC 9 (Vector Sizes)
163:       if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
164: 
165:       python: 3.7
166: 
167:       addons:
168:         apt:
169:           sources:
170:             - ubuntu-toolchain-r-test
171:       script:
172:         - python3 scripts/test_vector_sizes.py
173: 
174: 
175: # old compilers
176: 
177:     - os: linux
178:       name: Clang 6
179:       if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
180:       dist: xenial
181:       addons:
182:         apt:
183:           sources:
184:             - ubuntu-toolchain-r-test
185:           packages:
186:             - clang-6.0
187:       env:
188:         - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
189:         - TREAT_WARNINGS_AS_ERRORS=1
190:         - DISABLE_UNITY=1
191: 
192: 
193:     - os: linux
194:       name: GCC 4.9
195:       if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
196:       addons:
197:          apt:
198:           sources:
199:             - ubuntu-toolchain-r-test
200:           packages:
201:             - g++-4.9 binutils-2.26
202:       env:
203:          - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
204: 
205: 
206: # amalgamations
207: 
208:     - os: linux
209:       dist: xenial
210:       name: GCC 9 (Amalgamation)
211:       if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
212: 
213:       addons:
214:         apt:
215:           sources:
216:             - ubuntu-toolchain-r-test
217:           packages:
218:             - g++-9
219:       env:
220:         - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
221:       before_install:
222:         - eval "${MATRIX_EVAL}"
223:       script:
224:         - python scripts/amalgamation.py
225:         - mkdir -p build/release
226:         - (cd build/release && cmake -DAMALGAMATION_BUILD=1 -DCMAKE_BUILD_TYPE=Release ../.. && cmake --build .)
227:         - build/release/test/unittest "*"
228: 
229:       after_success:
230:         - (cd src/amalgamation; zip ../../build/duckdb.zip duckdb.*)
231:         - python tools/upload-s3.py src-amalgamation build/duckdb.zip
232: 
233: 
234:     - os: osx
235:       name: Xcode 11.3 (Amalgamation)
236:       if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
237: 
238:       osx_image: xcode11.3
239:       script:
240:         - python3 scripts/amalgamation.py
241:         - (mkdir -p build/release && cd build/release && cmake -DAMALGAMATION_BUILD=1 -DCMAKE_BUILD_TYPE=Release ../.. && cmake --build .)
242:         - build/release/test/unittest
243: 
244: 
245:     - os: windows
246:       name: VS 2017 (Amalgamation)
247:       if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
248: 
249:       filter_secrets: false
250:       language: c
251:       before_script:
252:         - choco install python3 --version 3.7.3 -y --params "/InstallDir:C:\Python37-x64"
253:       script:
254:         - C:/Python37-x64/python.exe scripts/amalgamation.py
255:         - cmake -DAMALGAMATION_BUILD=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_GENERATOR_PLATFORM=x64
256:         - cmake --build . --target duckdb --config Release
257:         - cmake --build . --target unittest --config Release
258:         - test/Release/unittest.exe
259: 
260: 
261: # weird platforms: 32 bit linux & windows, arm, solaris, openbsd
262: 
263: 
264:     - os: linux
265:       dist: xenial
266:       name: GCC 9 32 Bit
267:       if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
268: 
269:       addons:
270:         apt:
271:           sources:
272:             - ubuntu-toolchain-r-test
273:           packages:
274:             - g++-9 libc6-dev-i386 g++-9-multilib gcc-9-multilib gcc-multilib g++-multilib lib32readline6-dev lib32readline6
275: 
276:       env:
277:         - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
278:       before_install:
279:         - eval "${MATRIX_EVAL}"
280:         - pip install --user boto3
281:       script:
282:         - mkdir -p build/release
283:         - (cd build/release && cmake -DFORCE_32_BIT=1 -DCMAKE_BUILD_TYPE=Release ../.. && cmake --build .)
284:         - build/release/test/unittest "*"
285: 
286:       after_success:
287:         - python tools/upload-s3.py lib-linux-i386 build/release/src/libduckdb*.so build/release/src/libduckdb*.a build/release/duckdb_cli
288: 
289: 
290:     - os: windows
291:       name: VS 2017 32 Bit
292:       if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
293: 
294:       filter_secrets: false
295: 
296:       language: c
297: 
298:       before_script:
299:         - choco install python3 --version 3.7.3 -y --params "/InstallDir:C:\Python37-x64"
300:         - choco install curl -y --force
301: 
302:       script:
303:         - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_GENERATOR_PLATFORM=Win32
304:         - cmake --build . --target duckdb --config Release
305:         - cmake --build . --target unittest --config Release
306:         - cmake --build . --target shell --config Release
307:         - test/Release/unittest.exe
308:         - C:/Python37-x64/python.exe tools/shell/shell-test.py Release/duckdb_cli.exe
309: 
310:       after_success:
311:         - C:/Python37-x64/python.exe tools/upload-s3.py lib-windows-i386 src/Release/duckdb.dll Release/duckdb_cli.exe
312: 
313: 
314:     - os: linux
315:       dist: xenial
316:       name: GCC 5 (ARM64)
317:       if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
318: 
319:       arch: arm64
320: 
321:       script:
322:         - mkdir -p build/debug
323:         - (cd build/debug && cmake -DEXPLICIT_EXCEPTIONS=TRUE -DCMAKE_BUILD_TYPE=Debug ../.. && cmake --build .)
324:         - build/debug/test/unittest -s "[tpch]"
325: 
326: 
327:     - os: linux
328:       dist: bionic
329:       name: Solaris VM
330:       if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
331:       sudo: true
332: 
333:       install:
334:         - wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
335:         - echo -e "\ndeb [arch=amd64] https://download.virtualbox.org/virtualbox/debian bionic contrib\n" | sudo tee -a /etc/apt/sources.list
336:         - sudo apt-get update > /dev/null
337:         - sudo apt-get install -y linux-headers-$(uname -r) virtualbox-5.2 rsync
338:         - wget -q "https://homepages.cwi.nl/~hannes/86Cv27lf5353lJR/Solaris10_1-13-2.ova"
339:         - VBoxManage import Solaris10_1-13-2.ova
340:         - rm Solaris10_1-13-2.ova
341:         - VBoxManage modifyvm "Solaris10_1-13" --usb off --usbehci off --usbxhci off --cpus 2 --hwvirtex on --memory 6114
342:         - VBoxManage startvm "Solaris10_1-13" --type headless
343:         - echo -e "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAQEArPN99L/D9jXUwtFjoAzhnzA5a7t/YJiSrcTm+hKSxPp/nklfu1Km\ntDbMBOrXsAqLRcMz5JZoF8G1jebXOO3u2LRB+INFsxqDV76TZjUC1y4SAX17h5UvstT3sn\naPPt+TzwX3PmF8ooN+L8hDIZpvty6m+7b09QRFx4l7+j30MgO+kjwNHUyocn7qokoyH2p4\nfzvtoWePNyL191O9GNg6LmjneG25nN/NBoFYc/Zu+XfDY3gMECNurGHVV3W4ZNpoqjpZWU\nFx4eG0tShBZ+pvuFPy669+H8b5laNEjPGYclInW8unW6T9nuaoQjc/metBwaODgkOsAR0u\nddRxR8nIUwAAA9C2NMXdtjTF3QAAAAdzc2gtcnNhAAABAQCs8330v8P2NdTC0WOgDOGfMD\nlru39gmJKtxOb6EpLE+n+eSV+7Uqa0NswE6tewCotFwzPklmgXwbWN5tc47e7YtEH4g0Wz\nGoNXvpNmNQLXLhIBfXuHlS+y1Peydo8+35PPBfc+YXyig34vyEMhmm+3Lqb7tvT1BEXHiX\nv6PfQyA76SPA0dTKhyfuqiSjIfanh/O+2hZ483IvX3U70Y2DouaOd4bbmc380GgVhz9m75\nd8NjeAwQI26sYdVXdbhk2miqOllZQXHh4bS1KEFn6m+4U/Lrr34fxvmVo0SM8ZhyUidby6\ndbpP2e5qhCNz+Z60HBo4OCQ6wBHS511HFHychTAAAAAwEAAQAAAQEAl3IwnZ0+z96bjG0m\nvAQLngXwgjIRfFieOKPvTpPtCagBEG5X8gSSDcTeKoAqlvDkvBYO3uAGDqeFf9jgJe3T9N\ncD3cW1xvw0fyVWlW1eK2cgRUXIYhV1SzfKHvBKx1eoauRieLGNHhHe8aB/iHFf2hx0BH9V\nSSiQogX2Fk8iAphr9qLuR+M0eMtsZmq9nNpk0iXiohw7b3xNb1QrewoeiXiSI4xANdbkmx\n7R2Jnm132toa+ofPZWbpRptYyzv5TWRhEob4GQSknEvS7NEep3cxnv71d1wQvCfhkMKLXH\nKrIck4X46fLa+65OV8Bq37x91kRagOl4VFBZBT61Y9+DoQAAAIEAltUA8Zx5ETlUOXdGCQ\n+ftbCLZlmlPGGabFdg/EKM+M96Q3sj7L2lIP0Htt5w/HmM3Hz9uLk/d/m20zPq8xkltwCo\nF4R80K5HA38Q26fPRpJzDhch+k7AYuQwjziPSH1uzP3BdQo74KVuyvaTk+9VoeeFslF13P\njflhvUmCyquNkAAACBANtkmGdXwaMHrFKAibQreQuQD9CBRFRDRYNWOP4nPOp7YyCY4xbf\n02kHfFUmf7UqvY36v+jTC4RJ1mJH9KVlqJOB/JLhb6Wrv3xuddcxbwaMwb6dGgsZM+iB7G\nqBlcHlrxnWi6bXXK9WpQWaLNYdE4MKgRvKTSq20glezRWDijznAAAAgQDJzyCedgs5ibpb\nhvtNy5TGXPyX2lI9qoMDV2LSJZhp5TPL/mZqITUrehs0siM9IQ4DqhL4DgKBkYOLI/W6mW\nCXkQVFkGGLovzFUMM/wpK1Ua20k+0XakblI11yK3fjd0XJ0K5FyQ1YzG9XXZ8EuZo/2p2A\n8Y/K54JYuMflOJVftQAAABZoYW5uZXNAZGFrYXIuZGEuY3dpLm5sAQID\n-----END OPENSSH PRIVATE KEY-----\n" > id_rsa_solaris
344:         - chmod 400 id_rsa_solaris
345:         - export SSHFLAGS="-o LogLevel=ERROR -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i id_rsa_solaris"
346:         - export SCMD="ssh $SSHFLAGS -p 2222 root@localhost"
347:         - sleep 60
348:         - while ! $SCMD ls ; do sleep 30 ; done
349:         - $SCMD 'bash -c "echo 'nameserver 8.8.8.8' > /etc/resolv.conf"'
350: 
351:       script:
352:         - python scripts/amalgamation.py > /dev/null
353:         - rsync -a -e "ssh $SSHFLAGS -p 2222" --exclude=.git --exclude=build --exclude=third_party/sqllogictest --exclude=third_party/imdb .  root@localhost:/duckdb
354:         - travis_wait 30 $SCMD 'rm -rf /duckdb/build && mkdir -p /duckdb/build && cd /duckdb/build && export PATH=/opt/csw/bin/:$PATH CXX=g++ CC=gcc  && cmake -DCMAKE_AR=/opt/csw/bin/gar -DCMAKE_BUILD_TYPE=Debug -DAMALGAMATION_BUILD=1 .. && gmake -j2'
355:         - $SCMD /duckdb/build/test/unittest "~[copy]~[file_system]~[.]"
356: 
357: 
358:     - os: linux
359:       dist: bionic
360:       name: OpenBSD VM
361:       if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
362:       sudo: true
363: 
364:       install:
365:         - wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
366:         - echo -e "\ndeb [arch=amd64] https://download.virtualbox.org/virtualbox/debian bionic contrib\n" | sudo tee -a /etc/apt/sources.list
367:         - sudo apt-get update > /dev/null
368:         - sudo apt-get install -y linux-headers-$(uname -r) virtualbox-5.2 rsync
369:         - wget -q "https://homepages.cwi.nl/~hannes/86Cv27lf5353lJR/OpenBSD.ova"
370:         - VBoxManage import OpenBSD.ova
371:         - rm OpenBSD.ova
372:         - VBoxManage modifyvm "OpenBSD" --usb off --usbehci off --usbxhci off --cpus 2 --hwvirtex on --memory 6114
373:         - VBoxManage startvm "OpenBSD" --type headless
374:         - echo -e "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAQEA0I/POwsFY/l5DGvybl1amd9pqzP5ADPQGWupcNuKbSYq+sD4g5Jr\nqZ0vG9sULeYlZZFHzdbUqzdbK9rMZZOUwUwHbxViS2UlhCo0onB9bbzm6kQ2gSBaXxa8SC\nwllEdHq6c/kK50MZKVwqpBrxIJtGN08pNauhMPNMdniQZD5slkKrneTgGYnm30xNtkHStB\nY/btURWNlVd8Qedx8gSEV5628cAeKJAPOn4nrCYvy7uMWBOYqrqZii38uxdrhnZKKKENcA\ndUuFRdmFDK/0d+/0PeUYUacZm3HRU5F21440u51OdBMzBYe9AaQXQGrwKwY+YxlczlVh8g\n9XMWYBzJ3wAAA9B959FqfefRagAAAAdzc2gtcnNhAAABAQDQj887CwVj+XkMa/JuXVqZ32\nmrM/kAM9AZa6lw24ptJir6wPiDkmupnS8b2xQt5iVlkUfN1tSrN1sr2sxlk5TBTAdvFWJL\nZSWEKjSicH1tvObqRDaBIFpfFrxILCWUR0erpz+QrnQxkpXCqkGvEgm0Y3Tyk1q6Ew80x2\neJBkPmyWQqud5OAZiebfTE22QdK0Fj9u1RFY2VV3xB53HyBIRXnrbxwB4okA86fiesJi/L\nu4xYE5iqupmKLfy7F2uGdkoooQ1wB1S4VF2YUMr/R37/Q95RhRpxmbcdFTkXbXjjS7nU50\nEzMFh70BpBdAavArBj5jGVzOVWHyD1cxZgHMnfAAAAAwEAAQAAAQB6iVPfQ81p/MRDKRUq\nBM1bhKkH/qQ4mziUBu5psYN2N6ue4kvgueFpqUFpY2FKymKEd0QxyxvucLqvXIEk2P3YR/\nxCJtU2qPnO2iFMozz+gbNGRsejPEf8gFYlLVLy+KJCVySAtA7upUo6MmAfJUDwbFLkxvDS\nTKptfw70seqpJ/CdUXqrd/YAfwqGO0ZgQC59MDTGS1rXViRbTEMOxbWg9TMmvWb36vJG8i\nvSGimXL0gvhB7himZzK0z9tl8r3gHIHpiKy+67tzXyDdzXxpTJ7krBIwVgMgHwZpSy++c6\n9e6ag9LH217gWSDX4C0tAnHhjc5QqlCBwZVe/n2Kyg3pAAAAgQC1zeKHT3XLt9NfBVjhfq\nS3lMByGNCR90RS1vZe+wYVuChFCs7ztraWgMX9n7m3HvaGj+lqDPBD6mkoaYFCqKVr5GcH\nq1fij2sZeEpymhOUjX/aWGr9kdnxkvpSzYt33OU7hQIv34ViSXuyiEVb/SYXxqmwaYhCbW\noAlXqS57U3ZAAAAIEA58ImmEbbHDbA+mUZ1xugtb2heIQyVm+B1FtWtOY3B7LKgfgP5kaw\nhhVAlOfpxSyn/aNWdokE6JsFU/Vs/eiEXmn253ofF0J2kQuVD8+0m+yUMkbDYbfyc9FPsR\n1OS4cqjM8ET77EvLiqIHXO8aWr4eCOJxjDJLC0xVKOicgk/JUAAACBAOZghEZOuUgLjB1K\nQ0kMX+CTNvyKB44eY24kbp22KI4hsEw4BwyqPvCyRZsx7EBGXdGO0giVc41T6WJxwLVCbW\nmG1AC03KQ/lPXf/lzuwT4/N52hw+s4EmHlcPfoPyRFtbZuUyJqlhL4txWZdI31Ot0jxiQK\nxePoxUuMva2261ujAAAAFWhhbm5lc0BoZXJiZXJ0Mi5sb2NhbAECAwQF\n-----END OPENSSH PRIVATE KEY-----\n" > id_rsa_openbsd
375:         - chmod 400 id_rsa_openbsd
376:         - export SSHFLAGS="-o LogLevel=ERROR -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i id_rsa_openbsd"
377:         - export SCMD="ssh $SSHFLAGS -p 2222 root@localhost"
378:         - sleep 60
379:         - while ! $SCMD ls ; do sleep 30 ; done
380:         - $SCMD pkg_add gmake rsync-3.1.3
381: 
382:       script:
383:         - python scripts/amalgamation.py > /dev/null
384:         - rsync -a -e "ssh $SSHFLAGS -p 2222" --exclude=.git --exclude=build --exclude=third_party/sqllogictest .  root@localhost:/home/duckdb
385:         - travis_wait 30 $SCMD 'rm -rf /home/duckdb/build && mkdir -p /home/duckdb/build && cd /home/duckdb/build && cmake -DCMAKE_BUILD_TYPE=Debug -DAMALGAMATION_BUILD=1 .. && gmake -j2'
386:         - $SCMD /home/duckdb/build/test/unittest "~[copy]~[sqlitelogic]~[sqlserver]~[parquet]~[.]"
387: 
388: 
389: # APIs: REST, r / python packages
390: 
391: 
392:     - os: linux
393:       dist: xenial
394:       name: REST Server
395:       if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
396: 
397:       before_install:
398:         - pip install --user boto3
399: 
400:       script:
401:         - cd tools/rest
402:         - python3 test_the_rest.py
403: 
404:       # after_success:
405:       #   - python tools/upload-s3.py lib-linux-amd64 build/release/src/libduckdb*.so build/release/src/libduckdb*.a
406: 
407: 
408:     - os: linux
409:       dist: xenial
410:       name: JDBC Compliance
411:       if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
412: 
413:       env:
414:         - JAVA_HOME='/usr/lib/jvm/java-8-openjdk-amd64'
415: 
416:       before_install:
417:         - sudo apt-get update > /dev/null
418:         - sudo apt-get install -y openjdk-8-jdk openjdk-8-jre
419: 
420:       script:
421:         - mkdir -p build/release
422:         - (cd build/release && cmake -DCMAKE_BUILD_TYPE=Release -DJDBC_DRIVER=1 ../.. && cmake --build .)
423:         - java -cp build/release/tools/jdbc/DuckDBJ.jar nl.cwi.da.duckdb.test.TestDuckDBJDBC
424:         - git clone https://github.com/cwida/jdbccts.git
425:         - (cd jdbccts && make DUCKDB_JAR=../build/release/tools/jdbc/DuckDBJ.jar test)
426: 
427:     - os: linux
428:       name: R Package
429: 
430:       dist: xenial
431:       language: r
432:       r: devel
433: 
434:       before_install:
435:         - pip install --user boto3
436:         - cd tools/rpkg
437:         - R -f dependencies.R
438: 
439:       install:
440:         - ./configure
441:         - R CMD build .
442:         - R CMD INSTALL duckdb_*.tar.gz
443: 
444:       script:
445:         - (cd tests && R -f testthat.R)
446:         - R -f ../../examples/R/dbi.R
447:         - R -f ../../examples/R/dplyr.R
448: 
449:       after_success:
450:         - R -e "tools::write_PACKAGES(dir = '.', type = 'source')"
451:         - python ../upload-s3.py rstats/src/contrib duckdb_*.tar.gz PACKAGES*
452:         - python ../upload-s3.py rstats duckdb_*.tar.gz
453: 
454: 
455:     - os: osx
456:       osx_image: xcode11.3
457:       name: R Package
458:       if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
459: 
460:       language: r
461:       #r: devel
462: 
463:       before_install:
464:         - curl https://bootstrap.pypa.io/get-pip.py -o /tmp/get-pip.py
465:         - python3 /tmp/get-pip.py
466:         - python3 -m pip install --user boto3
467:         - cd tools/rpkg
468:         - R -f dependencies.R
469: 
470:       install:
471:         - ./configure
472:         - R CMD build .
473:         - R CMD INSTALL --build duckdb_*.tar.gz
474:         - R CMD INSTALL duckdb_*.tgz
475: 
476:       script:
477:         - (cd tests && R -f testthat.R)
478: 
479:       after_success:
480:         - R -e "tools::write_PACKAGES(dir = '.', type = 'mac.binary')"
481:         - python3 ../upload-s3.py rstats/bin/macosx/el-capitan/contrib/3.6 duckdb_*.tgz PACKAGES*
482:         - python3 ../upload-s3.py rstats duckdb_*.tgz
483: 
484: 
485:     - os: windows
486:       name: R Package
487:       filter_secrets: false
488:       if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
489: 
490:       language: cpp
491: 
492:       before_script:
493:         - choco install r.project -y --version 3.6.0
494:         - wget "https://github.com/hannesmuehleisen/choco-rtools/raw/master/rtools.3.5.0.nupkg"
495:         - choco install rtools -s rtools.3.5.0.nupkg -f -y
496:         - choco install python3 --version 3.7.3 -y --params "/InstallDir:C:\Python37-x64"
497:         - choco install curl -y --force
498: 
499:       script:
500:         - export "PATH=/c/Rtools/bin:$PATH"
501:         - cd tools/rpkg
502:         - C:/Program\ Files/R/R-3.6.0/bin/R.exe -f dependencies.R
503:         - sh configure
504:         - C:/Program\ Files/R/R-3.6.0/bin/R.exe CMD build .
505:         - C:/Program\ Files/R/R-3.6.0/bin/R.exe CMD INSTALL --build --no-multiarch duckdb_*.tar.gz
506:         - C:/Program\ Files/R/R-3.6.0/bin/R.exe CMD INSTALL duckdb_*.zip
507:         - (cd tests; C:/Program\ Files/R/R-3.6.0/bin/R.exe -f testthat.R)
508: 
509:       after_success:
510:         - C:/Python37-x64/python.exe ../upload-s3.py rstats duckdb_*.zip
511:         - C:/Program\ Files/R/R-3.6.0/bin/R.exe -e "tools::write_PACKAGES(dir = '.', type = 'win.binary')"
512:         - C:/Python37-x64/python.exe ../upload-s3.py rstats/bin/windows/contrib/3.6 duckdb_*.zip PACKAGES*
513: 
514: 
515:     - os: linux
516:       name: Python 3 Package
517: 
518:       dist: xenial
519:       language: python
520:       cache: pip
521:       env:
522:         - CIBW_BUILD='cp37-*'
523:       python: 3.7
524: 
525:       script:
526:         - pip install cibuildwheel==0.10.2 boto3
527:         - cd tools/pythonpkg
528:         - python setup.py sdist
529:         - mkdir duckdb_tarball && tar xvf dist/duckdb-*.tar.gz --strip-components=1 -C duckdb_tarball
530:         - cibuildwheel --output-dir wheelhouse duckdb_tarball
531:         - cd ../..
532:       after_success:
533:         python tools/upload-s3.py python tools/pythonpkg/wheelhouse/*.whl tools/pythonpkg/dist/duckdb-*.tar.gz
534: 
535:     - os: linux
536:       name: Python 2 Package
537:       if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
538: 
539:       dist: xenial
540:       language: python
541:       cache: pip
542:       env:
543:         - CIBW_BUILD='cp27-*'
544:       python: 2.7
545: 
546:       script:
547:         - pip install boto3 numpy pandas pytest
548:         - cd tools/pythonpkg
549:         - python setup.py install
550:         - python -m pytest tests
551:         - python setup.py sdist
552:         - mkdir duckdb_tarball && tar xvf dist/duckdb-*.tar.gz --strip-components=1 -C duckdb_tarball
553:       after_success:
554:         python tools/upload-s3.py python tools/pythonpkg/dist/duckdb-*.tar.gz
555: 
556: 
557:     - os: osx
558:       name: Python Package
559:       if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
560: 
561:       language: generic
562:       osx_image: xcode11.3
563: 
564:       before_install:
565:         - curl https://bootstrap.pypa.io/get-pip.py -o /tmp/get-pip.py
566:         - python3 /tmp/get-pip.py
567:         - python3 -m pip install cibuildwheel==0.10.2 boto3
568: 
569:       script:
570:         - cd tools/pythonpkg
571:         - python3 setup.py sdist
572:         - mkdir duckdb_tarball && tar xvf dist/duckdb-*.tar.gz --strip-components=1 -C duckdb_tarball
573:         - cibuildwheel --output-dir wheelhouse duckdb_tarball
574:         - cd ../..
575: 
576:       after_success:
577:         python3 tools/upload-s3.py python tools/pythonpkg/wheelhouse/*.whl
578: 
579: 
580:     - os: windows
581:       name: Python Package
582:       if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
583: 
584:       language: cpp
585:       filter_secrets: false
586:       # no python 27 because no C++11 support in its windows toolchain
587:       env:
588:         - CIBW_BUILD='cp37-*'
589: 
590:       before_install:
591:         - choco install python3 --version 3.7.3 --sidebyside -y --forcex86 --force --params "/InstallDir:C:\Python37"
592:         - choco install python3 --version 3.7.3 --sidebyside -y --force --params "/InstallDir:C:\Python37-x64"
593:         - choco install python3 --version 3.6.8 --sidebyside -y --force --params "/InstallDir:C:\Python36-x64"
594:         - choco install python3 --version 3.6.8 --sidebyside -y --forcex86 --force --params "/InstallDir:C:\Python36"
595:         - choco install python2 --version 2.7.16 --sidebyside -y --forcex86 --force --params "/InstallDir:C:\Python27"
596:         - choco install python2 --version 2.7.16 --sidebyside -y --force --params "/InstallDir:C:\Python27-x64"
597:         - choco install curl -y --force
598:         - C:/Python37-x64/python.exe -m pip install --upgrade pip
599:         - C:/Python37-x64/python.exe -m pip install "cibuildwheel==0.10.2"
600:         - C:/Python37-x64/python.exe -m pip install "numpy>=1.16" "pandas>=0.24" "pytest>=4.3" "pybind11>=2.4"
601: 
602:       script:
603:         - cd tools/pythonpkg
604:         - C:/Python37-x64/python.exe  setup.py sdist
605:         - mkdir duckdb_tarball && tar xvf dist/duckdb-*.tar.gz --strip-components=1 -C duckdb_tarball
606:         - C:/Python37-x64/python.exe -m cibuildwheel --platform windows --output-dir wheelhouse duckdb_tarball
607:         - cd ../..
608: 
609:       after_success:
610:         C:/Python37-x64/python.exe tools/upload-s3.py python tools/pythonpkg/wheelhouse/*.whl
611: 
[end of .travis.yml]
[start of src/function/scalar/string/left_right.cpp]
1: #include "duckdb/function/scalar/string_functions.hpp"
2: #include "duckdb/common/vector_operations/vector_operations.hpp"
3: 
4: #include <ctype.h>
5: #include <algorithm>
6: 
7: using namespace std;
8: 
9: namespace duckdb {
10: 
11: static string_t left_scalar_function(Vector &result, const string_t str, int64_t pos, unique_ptr<char[]> &output,
12:                                      idx_t &current_len) {
13: 	if (pos >= 0) {
14: 		return SubstringFun::substring_scalar_function(result, str, 1, pos, output, current_len);
15: 	}
16: 
17: 	int64_t num_characters = LengthFun::Length<string_t, int64_t>(str);
18: 	pos = std::max(int64_t(0), num_characters + pos);
19: 	return SubstringFun::substring_scalar_function(result, str, 1, pos, output, current_len);
20: }
21: 
22: static void left_function(DataChunk &args, ExpressionState &state, Vector &result) {
23: 	assert(args.column_count() == 2 && args.data[0].type == TypeId::VARCHAR && args.data[1].type == TypeId::INT64);
24: 	auto &str_vec = args.data[0];
25: 	auto &pos_vec = args.data[1];
26: 	idx_t current_len = 0;
27: 	unique_ptr<char[]> output;
28: 
29: 	BinaryExecutor::Execute<string_t, int64_t, string_t>(
30: 	    str_vec, pos_vec, result, args.size(),
31: 	    [&](string_t str, int64_t pos) { return left_scalar_function(result, str, pos, output, current_len); });
32: }
33: 
34: void LeftFun::RegisterFunction(BuiltinFunctions &set) {
35: 	set.AddFunction(ScalarFunction("left", {SQLType::VARCHAR, SQLType::BIGINT}, SQLType::VARCHAR, left_function));
36: }
37: 
38: static string_t right_scalar_function(Vector &result, const string_t str, int64_t pos, unique_ptr<char[]> &output,
39:                                       idx_t &current_len) {
40: 	int64_t num_characters = LengthFun::Length<string_t, int64_t>(str);
41: 	if (pos >= 0) {
42: 		int64_t len = std::min(num_characters, pos);
43: 		int64_t start = num_characters - len + 1;
44: 		return SubstringFun::substring_scalar_function(result, str, start, len, output, current_len);
45: 	}
46: 
47: 	int64_t len = num_characters - std::min(num_characters, -pos);
48: 	int64_t start = num_characters - len + 1;
49: 	return SubstringFun::substring_scalar_function(result, str, start, len, output, current_len);
50: }
51: 
52: static void right_function(DataChunk &args, ExpressionState &state, Vector &result) {
53: 	assert(args.column_count() == 2 && args.data[0].type == TypeId::VARCHAR && args.data[1].type == TypeId::INT64);
54: 	auto &str_vec = args.data[0];
55: 	auto &pos_vec = args.data[1];
56: 	idx_t current_len = 0;
57: 	unique_ptr<char[]> output;
58: 
59: 	BinaryExecutor::Execute<string_t, int64_t, string_t>(
60: 	    str_vec, pos_vec, result, args.size(),
61: 	    [&](string_t str, int64_t pos) { return right_scalar_function(result, str, pos, output, current_len); });
62: }
63: 
64: void RightFun::RegisterFunction(BuiltinFunctions &set) {
65: 	set.AddFunction(ScalarFunction("right", {SQLType::VARCHAR, SQLType::BIGINT}, SQLType::VARCHAR, right_function));
66: }
67: 
68: } // namespace duckdb
[end of src/function/scalar/string/left_right.cpp]
</code>
Here is an example of a patch file. It consists of changes to the code base. It specifies the file names, the line numbers of each change, and the removed and added lines. A single patch file can contain changes to multiple files.
<patch>
--- a/file.cpp
+++ b/file.cpp
@@ -3,35 +3,44 @@
 #include <cstdlib>
 
 int euclidean(int a, int b) {
-    while (b) {
-        int temp = b;
-        b = a % b;
-        a = temp;
+    if (b == 0) {
+        return a;
     }
-    return a;
+    return euclidean(b, a % b);
 }
 
 std::vector<std::pair<int, int>> bresenham(int x0, int y0, int x1, int y1) {
     std::vector<std::pair<int, int>> points;
     int dx = abs(x1 - x0);
     int dy = abs(y1 - y0);
+    int x = x0, y = y0;
     int sx = (x0 < x1) ? 1 : -1;
     int sy = (y0 < y1) ? 1 : -1;
-    int err = dx - dy;
 
-    while (true) {
-        points.emplace_back(x0, y0);
-        if (x0 == x1 && y0 == y1) break;
-        int e2 = 2 * err;
-        if (e2 > -dy) {
+    if (dx > dy) {
+        int err = dx / 2;
+        while (x != x1) {
+            points.emplace_back(x, y);
             err -= dy;
-            x0 += sx;
+            if (err < 0) {
+                y += sy;
+                err += dx;
+            }
+            x += sx;
         }
-        if (e2 < dx) {
-            err += dx;
-            y0 += sy;
+    } else {
+        int err = dy / 2;
+        while (y != y1) {
+            points.emplace_back(x, y);
+            err -= dx;
+            if (err < 0) {
+                x += sx;
+                err += dy;
+            }
+            y += sy;
         }
     }
 
+    points.emplace_back(x, y);
     return points;
 }

</patch>

I need you to solve the provided issue by generating a single patch file that I can apply directly to this repository using git apply.
Please respond with a single patch file in the format shown above.
Make sure to only include the patch file contents so that the contents of your output can be copied into a patch file and applied directly

Respond below: