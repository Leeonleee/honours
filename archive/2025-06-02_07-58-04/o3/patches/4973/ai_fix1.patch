--- a/src/function/scalar/date/date_diff.cpp
+++ b/src/function/scalar/date/date_diff.cpp
@@
 	struct DayOperator {
 		template <class TA, class TB, class TR>
 		static inline TR Operation(TA startdate, TB enddate) {
-			return Date::EpochDays(enddate) - Date::EpochDays(startdate);
+			// Use 64-bit arithmetic when computing the difference in epoch days to
+			// avoid overflow in scenarios where the two dates are thousands or even
+			// millions of years apart. Performing the subtraction directly on the
+			// 32-bit integers returned by Date::EpochDays can trigger undefined
+			// behaviour (and thus UBSAN errors) when the intermediate result exceeds
+			// the 32-bit range. Casting both operands to int64_t guarantees that the
+			// calculation is carried out safely, after which the result is cast to
+			// the desired return type.
+			const int64_t end_epoch_days = Date::EpochDays(enddate);
+			const int64_t start_epoch_days = Date::EpochDays(startdate);
+			return static_cast<TR>(end_epoch_days - start_epoch_days);
 		}
 	};
 
 	struct DecadeOperator {
 		template <class TA, class TB, class TR>
