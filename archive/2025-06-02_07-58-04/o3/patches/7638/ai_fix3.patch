--- a/src/parser/transform/expression/transform_function.cpp
+++ b/src/parser/transform/expression/transform_function.cpp
@@
 			auto unordered = make_uniq<FunctionExpression>(catalog, schema, lowercase_name.c_str(), std::move(children),
 			                                               std::move(filter_expr), std::move(order_bys),
 			                                               root.agg_distinct, false, root.export_state);
 			lowercase_name = "list_sort";
+			// The DISTINCT modifier (and any other aggregate-specific modifiers) should apply
+			// to the inner LIST aggregate, not to the outer LIST_SORT scalar function.
+			// Clear the DISTINCT flag so that the outer scalar function is not treated as an aggregate.
+			root.agg_distinct = false;
 			order_bys.reset();   // NOLINT
 			filter_expr.reset(); // NOLINT
 			children.clear();    // NOLINT
 			children.emplace_back(std::move(unordered));
 			children.emplace_back(std::move(sense));
@@

