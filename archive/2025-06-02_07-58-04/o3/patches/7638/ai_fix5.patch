<patch>
*** Begin Patch
*** Update File: src/parser/transform/expression/transform_function.cpp
@@
 			auto unordered = make_uniq<FunctionExpression>(catalog, schema, lowercase_name.c_str(), std::move(children),
 			                                               std::move(filter_expr), std::move(order_bys),
 			                                               root.agg_distinct, false, root.export_state);
 			lowercase_name = "list_sort";
 			order_bys.reset();   // NOLINT
 			filter_expr.reset(); // NOLINT
 			children.clear();    // NOLINT
 			children.emplace_back(std::move(unordered));
 			children.emplace_back(std::move(sense));
 			children.emplace_back(std::move(nulls));
+			// The DISTINCT keyword is only relevant for the inner list aggregate. If we keep it set on the
+			// outer scalar list_sort wrapper it will later be rejected because DISTINCT is only allowed on
+			// aggregates. Clear the flag to avoid the erroneous rejection.
+			root.agg_distinct = false;
 		}
 	}
*** End Patch

*** End Patch