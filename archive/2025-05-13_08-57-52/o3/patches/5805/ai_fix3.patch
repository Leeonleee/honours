--- a/src/common/types/vector.cpp
+++ b/src/common/types/vector.cpp
@@ -1670,6 +1670,9 @@ vector<idx_t> ListVector::Search(Vector &list, const Value &key, idx_t row) {
 		TemplatedSearchInMap<double>(list, key, offsets, key.IsNull(), entry.offset, entry.length);
 		break;
 	case PhysicalType::VARCHAR:
 		SearchStringInMap(list, StringValue::Get(key), offsets, key.IsNull(), entry.offset, entry.length);
 		break;
+	case PhysicalType::INTERVAL:
+		TemplatedSearchInMap<interval_t>(list, key, offsets, key.IsNull(), entry.offset, entry.length);
+		break;
 	default:
 		throw InvalidTypeException(list.GetType().id(), "Invalid type for List Vector Search");
 	}
 	return offsets;
 }