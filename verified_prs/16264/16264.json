{
  "repo": "duckdb/duckdb",
  "pull_number": 16264,
  "instance_id": "duckdb__duckdb-16264",
  "issue_numbers": [
    "16260",
    "16260"
  ],
  "base_commit": "2b873268957ce115b6314ca72ca31e0f4ebf6fa6",
  "patch": "diff --git a/src/function/scalar/generic/getvariable.cpp b/src/function/scalar/generic/getvariable.cpp\nindex 14d32954d1cf..0181c07523bc 100644\n--- a/src/function/scalar/generic/getvariable.cpp\n+++ b/src/function/scalar/generic/getvariable.cpp\n@@ -24,12 +24,12 @@ struct GetVariableBindData : FunctionData {\n \n static unique_ptr<FunctionData> GetVariableBind(ClientContext &context, ScalarFunction &function,\n                                                 vector<unique_ptr<Expression>> &arguments) {\n+\tif (arguments[0]->HasParameter() || arguments[0]->return_type.id() == LogicalTypeId::UNKNOWN) {\n+\t\tthrow ParameterNotResolvedException();\n+\t}\n \tif (!arguments[0]->IsFoldable()) {\n \t\tthrow NotImplementedException(\"getvariable requires a constant input\");\n \t}\n-\tif (arguments[0]->HasParameter()) {\n-\t\tthrow ParameterNotResolvedException();\n-\t}\n \tValue value;\n \tauto variable_name = ExpressionExecutor::EvaluateScalar(context, *arguments[0]);\n \tif (!variable_name.IsNull()) {\n",
  "test_patch": "diff --git a/test/sql/variables/test_variables.test b/test/sql/variables/test_variables.test\nindex ad3c15d43f57..b67d81686222 100644\n--- a/test/sql/variables/test_variables.test\n+++ b/test/sql/variables/test_variables.test\n@@ -13,6 +13,22 @@ SELECT GETVARIABLE('animal')\n ----\n duck\n \n+statement ok\n+PREPARE v1 AS SELECT GETVARIABLE($1);\n+\n+query I\n+EXECUTE v1('animal');\n+----\n+duck\n+\n+statement ok\n+CREATE MACRO _(x) AS getvariable(x);\n+\n+query I\n+SELECT _('animal')\n+----\n+duck\n+\n # overwriting\n statement ok\n SET VARIABLE animal='bird'\n",
  "problem_statement": "Changed behaviour of getvariable\n### What happens?\n\nwith duckdb versions prior to version 1.1.3, i would run this command for ease of use:\n`CREATE MACRO _(x) AS getvariable(x);`\nso that i didn't have to write it each time,\nbut now on duckdb 1.2.0 i get back this error:\n`Not implemented Error: getvariable requires a constant input`\n\n1. is this expected?\n2. is there a way to rename it, and in general, to rename functions such as `getvariable` ?\n\n\n\n### To Reproduce\n\nfor reproducing, try this command on duckdb 1.1.3 and duckdb 1.2.0:\n`CREATE MACRO _(x) AS getvariable(x);`\n\n### OS:\n\nany\n\n### DuckDB Version:\n\n1.2.0\n\n### DuckDB Client:\n\nany \n\n### Hardware:\n\n_No response_\n\n### Full Name:\n\nMassimiliano Pizzotti\n\n### Affiliation:\n\nEssilorLuxottica\n\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\n\nI have tested with a stable release\n\n### Did you include all relevant data sets for reproducing the issue?\n\nYes\n\n### Did you include all code required to reproduce the issue?\n\n- [x] Yes, I have\n\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\n\n- [x] Yes, I have\nChanged behaviour of getvariable\n### What happens?\n\nwith duckdb versions prior to version 1.1.3, i would run this command for ease of use:\n`CREATE MACRO _(x) AS getvariable(x);`\nso that i didn't have to write it each time,\nbut now on duckdb 1.2.0 i get back this error:\n`Not implemented Error: getvariable requires a constant input`\n\n1. is this expected?\n2. is there a way to rename it, and in general, to rename functions such as `getvariable` ?\n\n\n\n### To Reproduce\n\nfor reproducing, try this command on duckdb 1.1.3 and duckdb 1.2.0:\n`CREATE MACRO _(x) AS getvariable(x);`\n\n### OS:\n\nany\n\n### DuckDB Version:\n\n1.2.0\n\n### DuckDB Client:\n\nany \n\n### Hardware:\n\n_No response_\n\n### Full Name:\n\nMassimiliano Pizzotti\n\n### Affiliation:\n\nEssilorLuxottica\n\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\n\nI have tested with a stable release\n\n### Did you include all relevant data sets for reproducing the issue?\n\nYes\n\n### Did you include all code required to reproduce the issue?\n\n- [x] Yes, I have\n\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\n\n- [x] Yes, I have\n",
  "hints_text": "That's interesting, that requirement has been on `getvariable` since its inception (<https://github.com/duckdb/duckdb/pull/13084>)\n\nI assume there has been a behavior change in macros causing this to not be a constant parameter anymore?\nThat's interesting, that requirement has been on `getvariable` since its inception (<https://github.com/duckdb/duckdb/pull/13084>)\n\nI assume there has been a behavior change in macros causing this to not be a constant parameter anymore?",
  "created_at": "2025-02-17T13:12:59Z",
  "modified_files": [
    "src/function/scalar/generic/getvariable.cpp"
  ],
  "modified_test_files": [
    "test/sql/variables/test_variables.test"
  ]
}