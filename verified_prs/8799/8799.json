{
  "repo": "duckdb/duckdb",
  "pull_number": 8799,
  "instance_id": "duckdb__duckdb-8799",
  "issue_numbers": [
    "8797",
    "8797"
  ],
  "base_commit": "20d5027e0bc993073086eb436efd5df2fb1a8866",
  "patch": "diff --git a/src/function/cast/vector_cast_helpers.cpp b/src/function/cast/vector_cast_helpers.cpp\nindex bfb6360528a6..3b160e5f3376 100644\n--- a/src/function/cast/vector_cast_helpers.cpp\n+++ b/src/function/cast/vector_cast_helpers.cpp\n@@ -98,6 +98,9 @@ struct SplitStringListOperation {\n \t\t\tchild_start++;\n \t\t\treturn;\n \t\t}\n+\t\tif (start_pos > pos) {\n+\t\t\tpos = start_pos;\n+\t\t}\n \t\tchild_data[child_start] = StringVector::AddString(child, buf + start_pos, pos - start_pos);\n \t\tchild_start++;\n \t}\n@@ -109,6 +112,7 @@ static bool SplitStringListInternal(const string_t &input, OP &state) {\n \tidx_t len = input.GetSize();\n \tidx_t lvl = 1;\n \tidx_t pos = 0;\n+\tbool seen_value = false;\n \n \tSkipWhitespace(buf, pos, len);\n \tif (pos == len || buf[pos] != '[') {\n@@ -132,9 +136,10 @@ static bool SplitStringListInternal(const string_t &input, OP &state) {\n \t\t\twhile (StringUtil::CharacterIsSpace(buf[pos - trailing_whitespace - 1])) {\n \t\t\t\ttrailing_whitespace++;\n \t\t\t}\n-\t\t\tif (!(buf[pos] == ']' && start_pos == pos)) {\n+\t\t\tif (buf[pos] != ']' || start_pos != pos || seen_value) {\n \t\t\t\tstate.HandleValue(buf, start_pos, pos - trailing_whitespace);\n-\t\t\t} // else the list is empty\n+\t\t\t\tseen_value = true;\n+\t\t\t}\n \t\t\tif (buf[pos] == ']') {\n \t\t\t\tlvl--;\n \t\t\t\tbreak;\n",
  "test_patch": "diff --git a/test/sql/cast/string_to_list_cast.test b/test/sql/cast/string_to_list_cast.test\nindex 72f23622cde1..329fba782162 100644\n--- a/test/sql/cast/string_to_list_cast.test\n+++ b/test/sql/cast/string_to_list_cast.test\n@@ -33,6 +33,48 @@ SELECT '[Cast like this]':: VARCHAR[];\n ----\n [Cast like this]\n \n+# Issue 8797\n+query I\n+select UNNEST('[NULL, , NULL]'::varchar[]);\n+----\n+NULL\n+(empty)\n+NULL\n+\n+query I\n+select UNNEST('[NULL,, NULL]'::varchar[]);\n+----\n+NULL\n+(empty)\n+NULL\n+\n+query I\n+select UNNEST('[NULL,   , NULL]'::varchar[]);\n+----\n+NULL\n+(empty)\n+NULL\n+\n+query I\n+SELECT UNNEST('[NULL, NULL , ]'::varchar[]);\n+----\n+NULL\n+NULL\n+(empty)\n+\n+query I\n+SELECT UNNEST('[NULL, NULL ,]'::varchar[]);\n+----\n+NULL\n+NULL\n+(empty)\n+\n+query I\n+SELECT UNNEST('[NULL, NULL,]'::varchar[]);\n+----\n+NULL\n+NULL\n+(empty)\n \n #               Nested lists\n # ---------------------------------------------------\n",
  "problem_statement": "Segmentation fault when importing an exported database.\n### What happens?\n\nWhen importing exported database containing a `[null, '', null]` entry of type `text[]` (and others, but this is the smallest example), segmentation fault occurs.\n\n### To Reproduce\n\n```\r\no> begin;\r\no> create table foo(bar text[]);\r\no> insert into foo values ([null, '', null]);\r\no> export database 'foo';\r\no> rollback;\r\no> import database 'foo';\r\nSegmentation fault\r\n```\n\n### OS:\n\nUbuntu x64 in WSL on Windows 11\n\n### DuckDB Version:\n\n0.8.1 and main\n\n### DuckDB Client:\n\ncli and python\n\n### Full Name:\n\nM\u00edma Hlav\u00e1\u010dek\n\n### Affiliation:\n\nBlindspot.ai\n\n### Have you tried this on the latest `main` branch?\n\nI have tested with a main build\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] Yes, I have\nSegmentation fault when importing an exported database.\n### What happens?\n\nWhen importing exported database containing a `[null, '', null]` entry of type `text[]` (and others, but this is the smallest example), segmentation fault occurs.\n\n### To Reproduce\n\n```\r\no> begin;\r\no> create table foo(bar text[]);\r\no> insert into foo values ([null, '', null]);\r\no> export database 'foo';\r\no> rollback;\r\no> import database 'foo';\r\nSegmentation fault\r\n```\n\n### OS:\n\nUbuntu x64 in WSL on Windows 11\n\n### DuckDB Version:\n\n0.8.1 and main\n\n### DuckDB Client:\n\ncli and python\n\n### Full Name:\n\nM\u00edma Hlav\u00e1\u010dek\n\n### Affiliation:\n\nBlindspot.ai\n\n### Have you tried this on the latest `main` branch?\n\nI have tested with a main build\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] Yes, I have\n",
  "hints_text": "\n",
  "created_at": "2023-09-05T14:41:55Z",
  "modified_files": [
    "src/function/cast/vector_cast_helpers.cpp"
  ]
}