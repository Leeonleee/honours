{
  "repo": "duckdb/duckdb",
  "pull_number": 7638,
  "instance_id": "duckdb__duckdb-7638",
  "issue_numbers": [
    "7614"
  ],
  "base_commit": "faf428bcd389308029792504251575d47f525233",
  "patch": "diff --git a/src/parser/transform/expression/transform_function.cpp b/src/parser/transform/expression/transform_function.cpp\nindex b6803c9fcd8d..63e53880c54b 100644\n--- a/src/parser/transform/expression/transform_function.cpp\n+++ b/src/parser/transform/expression/transform_function.cpp\n@@ -309,6 +309,7 @@ unique_ptr<ParsedExpression> Transformer::TransformFuncCall(duckdb_libpgquery::P\n \t\t\torder_bys.reset();   // NOLINT\n \t\t\tfilter_expr.reset(); // NOLINT\n \t\t\tchildren.clear();    // NOLINT\n+\t\t\troot.agg_distinct = false;\n \t\t\tchildren.emplace_back(std::move(unordered));\n \t\t\tchildren.emplace_back(std::move(sense));\n \t\t\tchildren.emplace_back(std::move(nulls));\n",
  "test_patch": "diff --git a/test/sql/function/list/list_sort.test b/test/sql/function/list/list_sort.test\nindex 0db2590ad259..690fe3ff235c 100644\n--- a/test/sql/function/list/list_sort.test\n+++ b/test/sql/function/list/list_sort.test\n@@ -394,6 +394,58 @@ select k, v, map(k,v), map(k,v)[(array_sort(k,'DESC'))[1]] from (values ([1,2,3,\n ----\n [1, 2, 3, 4]\t[2, 3, 4, 5]\t{1=2, 2=3, 3=4, 4=5}\t[5]\n \n+# bug fixes test for #7614\n+\n+query II\n+select id, list(distinct foo order by foo) from (\n+  values (1, '10'), (1, '15'), (2, '10')\n+) v (id, foo)\n+group by all\n+order by id;\n+----\n+1\t[10, 15]\n+2\t[10]\n+\n+query II\n+select id, list(distinct foo order by foo) from (\n+  values (1, '10'), (1, '10'), (1, '15'), (2, '10')\n+) v (id, foo)\n+group by id\n+order by id;\n+----\n+1\t[10, 15]\n+2\t[10]\n+\n+query II\n+select id, list(foo order by foo) from (\n+  values (1, '10'), (1, '10'), (1, '15'), (2, '10')\n+) v (id, foo)\n+group by id\n+order by id;\n+----\n+1\t[10, 10, 15]\n+2\t[10]\n+\n+query II\n+select id, list(distinct foo) from (\n+  values (1, '10'), (1, '10'), (1, '15'), (2, '10')\n+) v (id, foo)\n+group by id\n+order by id;\n+----\n+1\t[10, 15]\n+2\t[10]\n+\n+query II\n+select id, list(distinct foo order by bar) from (\n+  values (1, '10', 2), (1, '15', 1), (2, '10', 1)\n+) v (id, foo, bar)\n+group by all\n+order by id;\n+----\n+1\t[15, 10]\n+2\t[10]\n+\n # bug fixes test for #5694\n \n require parquet\n",
  "problem_statement": "`list` aggregate function distinct order by combination breaking\n### What happens?\n\nThe `list` aggregate function throws an error when distinct and order by are combined:\r\n```\r\nInvalid Input Error: Function \"list_sort\" is a Scalar Function. \"DISTINCT\", \"FILTER\", and \"ORDER BY\" are only applicable to aggregate functions.\r\n```\r\n\r\nThis only seems to happen when the `order by` hits the same column as the `distinct`. See the bottom two examples below.\n\n### To Reproduce\n\n```sql\r\n-- WORKS\r\nselect id, list(distinct foo) from (\r\n  values (1, '10'), (1, '15'), (2, '10')\r\n) v (id, foo)\r\ngroup by all;\r\n```\r\n\r\n```sql\r\n-- WORKS\r\nselect id, list(foo order by foo) from (\r\n  values (1, '10'), (1, '15'), (2, '10')\r\n) v (id, foo)\r\ngroup by all;\r\n```\r\n\r\n```sql\r\n-- BREAKS\r\nselect id, list(distinct foo order by foo) from (\r\n  values (1, '10'), (1, '15'), (2, '10')\r\n) v (id, foo)\r\ngroup by all;\r\n```\r\n\r\n```sql\r\n-- WORKS\r\nselect id, list(distinct foo order by bar) from (\r\n  values (1, '10', 1), (1, '15', 2), (2, '10', 1)\r\n) v (id, foo, bar)\r\ngroup by all;\r\n```\n\n### OS:\n\nMac\n\n### DuckDB Version:\n\n0.8 (also master)\n\n### DuckDB Client:\n\nPython\n\n### Full Name:\n\nJames McNeill\n\n### Affiliation:\n\nConjura\n\n### Have you tried this on the latest `master` branch?\n\n- [X] I agree\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] I agree\n",
  "hints_text": "As usual, I'm happy to submit a PR rather than an issue if someone points me in the right direction!\nI will have a look at this, it might be related to #6741. :)\nThank you @taniabogatsch \ud83e\udd29, let me know if I can help at all",
  "created_at": "2023-05-23T09:38:51Z",
  "modified_files": [
    "src/parser/transform/expression/transform_function.cpp"
  ],
  "modified_test_files": [
    "test/sql/function/list/list_sort.test"
  ]
}