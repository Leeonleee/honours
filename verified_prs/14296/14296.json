{
  "repo": "duckdb/duckdb",
  "pull_number": 14296,
  "instance_id": "duckdb__duckdb-14296",
  "issue_numbers": [
    "14263"
  ],
  "base_commit": "8cec9b1537f900e7a644e7b466ea899cf1ca8f8f",
  "patch": "diff --git a/src/catalog/default/default_functions.cpp b/src/catalog/default/default_functions.cpp\nindex b4f7deca4be0..f7f4634b9932 100644\n--- a/src/catalog/default/default_functions.cpp\n+++ b/src/catalog/default/default_functions.cpp\n@@ -12,7 +12,7 @@ namespace duckdb {\n static const DefaultMacro internal_macros[] = {\n \t{DEFAULT_SCHEMA, \"current_role\", {nullptr}, {{nullptr, nullptr}}, \"'duckdb'\"},                       // user name of current execution context\n \t{DEFAULT_SCHEMA, \"current_user\", {nullptr}, {{nullptr, nullptr}}, \"'duckdb'\"},                       // user name of current execution context\n-\t{DEFAULT_SCHEMA, \"current_catalog\", {nullptr}, {{nullptr, nullptr}}, \"current_database()\"},          // name of current database (called \"catalog\" in the SQL standard)\n+\t{DEFAULT_SCHEMA, \"current_catalog\", {nullptr}, {{nullptr, nullptr}}, \"main.current_database()\"},          // name of current database (called \"catalog\" in the SQL standard)\n \t{DEFAULT_SCHEMA, \"user\", {nullptr}, {{nullptr, nullptr}}, \"current_user\"},                           // equivalent to current_user\n \t{DEFAULT_SCHEMA, \"session_user\", {nullptr}, {{nullptr, nullptr}}, \"'duckdb'\"},                       // session user name\n \t{\"pg_catalog\", \"inet_client_addr\", {nullptr}, {{nullptr, nullptr}}, \"NULL\"},                       // address of the remote connection\n@@ -27,10 +27,10 @@ static const DefaultMacro internal_macros[] = {\n \n \t{\"pg_catalog\", \"pg_typeof\", {\"expression\", nullptr}, {{nullptr, nullptr}}, \"lower(typeof(expression))\"},  // get the data type of any value\n \n-\t{\"pg_catalog\", \"current_database\", {nullptr}, {{nullptr, nullptr}}, \"current_database()\"},  \t    // name of current database (called \"catalog\" in the SQL standard)\n-\t{\"pg_catalog\", \"current_query\", {nullptr}, {{nullptr, nullptr}}, \"current_query()\"},  \t        // the currently executing query (NULL if not inside a plpgsql function)\n-\t{\"pg_catalog\", \"current_schema\", {nullptr}, {{nullptr, nullptr}}, \"current_schema()\"},  \t        // name of current schema\n-\t{\"pg_catalog\", \"current_schemas\", {\"include_implicit\"}, {{nullptr, nullptr}}, \"current_schemas(include_implicit)\"},  \t// names of schemas in search path\n+\t{\"pg_catalog\", \"current_database\", {nullptr}, {{nullptr, nullptr}}, \"main.current_database()\"},  \t    // name of current database (called \"catalog\" in the SQL standard)\n+\t{\"pg_catalog\", \"current_query\", {nullptr}, {{nullptr, nullptr}}, \"main.current_query()\"},  \t        // the currently executing query (NULL if not inside a plpgsql function)\n+\t{\"pg_catalog\", \"current_schema\", {nullptr}, {{nullptr, nullptr}}, \"main.current_schema()\"},  \t        // name of current schema\n+\t{\"pg_catalog\", \"current_schemas\", {\"include_implicit\"}, {{nullptr, nullptr}}, \"main.current_schemas(include_implicit)\"},  \t// names of schemas in search path\n \n \t// privilege functions\n \t{\"pg_catalog\", \"has_any_column_privilege\", {\"table\", \"privilege\", nullptr}, {{nullptr, nullptr}}, \"true\"},  //boolean  //does current user have privilege for any column of table\n",
  "test_patch": "diff --git a/test/sql/catalog/test_set_search_path.test b/test/sql/catalog/test_set_search_path.test\nindex 66a9ce7d3f8b..17ea585d5690 100644\n--- a/test/sql/catalog/test_set_search_path.test\n+++ b/test/sql/catalog/test_set_search_path.test\n@@ -234,3 +234,28 @@ SELECT i FROM test2_table;\n statement ok con2\n SELECT i FROM test2_table;\n \n+# Same system functions in pg and duckdb\n+\n+statement ok\n+SET search_path = pg_catalog;\n+\n+statement ok\n+SELECT current_database();\n+\n+statement ok\n+SELECT current_catalog();\n+\n+query I\n+SELECT current_schema();\n+----\n+pg_catalog\n+\n+query I\n+SELECT current_schemas(true);\n+----\n+[main, pg_catalog, main, main, pg_catalog]\n+\n+query I\n+SELECT current_query();\n+----\n+SELECT current_query();\n",
  "problem_statement": "Max expression depth limit exceeded on \"SHOW TABLES\"\n### What happens?\r\n\r\n```\r\n$ duckdb /tmp/test.duckdb\r\nv1.1.1 af39bd0dcf\r\nEnter \".help\" for usage hints.\r\nD SET search_path = pg_catalog;\r\nD SHOW TABLES;\r\nBinder Error: Max expression depth limit of 1000 exceeded. Use \"SET max_expression_depth TO x\" to increase the maximum expression depth.\r\n```\r\n\r\nHowever this works:\r\n\r\n```\r\n$ duckdb /tmp/test.duckdb\r\nv1.1.1 af39bd0dcf\r\nEnter \".help\" for usage hints.\r\nD SHOW TABLES;\r\nD SET search_path = pg_catalog;\r\nD SHOW TABLES;\r\nBinder Error: Max expression depth limit of 1000 exceeded. Use \"SET max_expression_depth TO x\" to increase the maximum expression depth.\r\n```\r\n\r\n\r\n\r\n### To Reproduce\r\n\r\n```sql\r\nSET search_path = pg_catalog;\r\n```\r\n```console\r\nSHOW TABLES;\r\nBinder Error: Max expression depth limit of 1000 exceeded. Use \"SET max_expression_depth TO x\" to increase the maximum expression depth.\r\n```\r\n\r\n### OS:\r\n\r\nUbuntu x86_64\r\n\r\n### DuckDB Version:\r\n\r\nv1.1.1 af39bd0dcf\r\n\r\n### DuckDB Client:\r\n\r\nCommand line tool (duckdb)\r\n\r\n### Hardware:\r\n\r\n_No response_\r\n\r\n### Full Name:\r\n\r\nPrashanth Ellina\r\n\r\n### Affiliation:\r\n\r\nNone\r\n\r\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\r\n\r\nI have tested with a stable release\r\n\r\n### Did you include all relevant data sets for reproducing the issue?\r\n\r\nNot applicable - the reproduction does not require a data set\r\n\r\n### Did you include all code required to reproduce the issue?\r\n\r\n- [X] Yes, I have\r\n\r\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\r\n\r\n- [X] Yes, I have\n",
  "hints_text": "",
  "created_at": "2024-10-09T14:14:37Z",
  "modified_files": [
    "src/catalog/default/default_functions.cpp"
  ],
  "modified_test_files": [
    "test/sql/catalog/test_set_search_path.test"
  ]
}