You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
`SELECT * SIMILAR TO <regexp> AS <name>` ignores `<name>`
### What happens?

The newly introduced `SELECT * SIMILAR TO <pattern>` syntax (and the related `LIKE` / `GLOB` versions) ignores subsequent `AS` clauses.

Ideally, it'd treat them just like `COLUMNS(<pattern>) AS <name>` including allowing for matching group references.

### To Reproduce

```sql
SELECT * SIMILAR TO 'number(\d+)' AS '\1'
FROM (SELECT 1 AS number1, 2 AS number2, 3 AS end)
```
and
```sql
SELECT * SIMILAR TO 'number(\d+)' AS test
FROM (SELECT 1 AS number1, 2 AS number2, 3 AS end)
```
both return columns `number1` and `number2`, completely ignoring the `AS` clause.

### OS:

Linux

### DuckDB Version:

1.1.4

### DuckDB Client:

Python

### Hardware:

i5, AMD64

### Full Name:

Soeren Wolfers

### Affiliation:

G-Research

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a nightly build

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
