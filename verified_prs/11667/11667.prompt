You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Named Function Parameters are Case Sensitive
### What happens?

`Unnest()` works with `resursive` but not with `RECURSIVE`.

But https://duckdb.org/docs/sql/keywords_and_identifiers states:
> [Case-Sensitivity of Identifiers](https://duckdb.org/docs/sql/keywords_and_identifiers#case-sensitivity-of-identifiers)
>
>Following the convention of the SQL standard, identifiers in DuckDB are case-insensitive.

### To Reproduce

```sql
-- works
SELECT CORR(Y,X) AS RESULTS 
FROM( SELECT UNNEST([{Y:1.0,X:5.0},(3.0,9.0),(4.0,7.0)], recursive=>true));
```
```sql
-- fails: Unsupported parameter "RECURSIVE" for unnest
SELECT CORR(Y,X) AS RESULTS 
FROM( SELECT UNNEST([{Y:1.0,X:5.0},(3.0,9.0),(4.0,7.0)], RECURSIVE=>true));
```

**Please note**: Both statement fail on 0.11-Snapshot and you need to test against 0.10.0 release for verification.

### OS:

Linux

### DuckDB Version:

0.10.1

### DuckDB Client:

Java

### Full Name:

Andreas Reichel

### Affiliation:

manticore-projects.com

### Have you tried this on the latest [nightly build](https://duckdb.org/docs/installation/?version=main)?

I have tested with a release build (and could not test with a nightly build)

### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?

- [X] Yes, I have
Named Function Parameters are Case Sensitive
### What happens?

`Unnest()` works with `resursive` but not with `RECURSIVE`.

But https://duckdb.org/docs/sql/keywords_and_identifiers states:
> [Case-Sensitivity of Identifiers](https://duckdb.org/docs/sql/keywords_and_identifiers#case-sensitivity-of-identifiers)
>
>Following the convention of the SQL standard, identifiers in DuckDB are case-insensitive.

### To Reproduce

```sql
-- works
SELECT CORR(Y,X) AS RESULTS 
FROM( SELECT UNNEST([{Y:1.0,X:5.0},(3.0,9.0),(4.0,7.0)], recursive=>true));
```
```sql
-- fails: Unsupported parameter "RECURSIVE" for unnest
SELECT CORR(Y,X) AS RESULTS 
FROM( SELECT UNNEST([{Y:1.0,X:5.0},(3.0,9.0),(4.0,7.0)], RECURSIVE=>true));
```

**Please note**: Both statement fail on 0.11-Snapshot and you need to test against 0.10.0 release for verification.

### OS:

Linux

### DuckDB Version:

0.10.1

### DuckDB Client:

Java

### Full Name:

Andreas Reichel

### Affiliation:

manticore-projects.com

### Have you tried this on the latest [nightly build](https://duckdb.org/docs/installation/?version=main)?

I have tested with a release build (and could not test with a nightly build)

### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?

- [X] Yes, I have
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
